'use strict';

var levels = {
  test: {
    'cells': [[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 2, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],
      [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]],
    'spawnPoints': [
      {
        'x': 1.5,
        'y': 21
      },
      {
        'x': 2.5,
        'y': 21
      },
      {
        'x': 3.5,
        'y': 21
      }
    ]
  }
};

var models = {
  player: {
    'metadata': {
      'version': 3,
      'generator': 'io_three',
      'vertices': 84,
      'uvs': 0,
      'faces': 160,
      'type': 'Geometry',
      'normals': 42
    },
    'vertices': [0, -0.075, 0, 0.180902, 0.063195, 0.131431, -0.069097, 0.063195, 0.212662, -0.223607, 0.063196, -0, -0.069097, 0.063195, -0.212662, 0.180902, 0.063195, -0.131431, 0.069097, 0.286805, 0.212662, -0.180902, 0.286805, 0.131431, -0.180902, 0.286805, -0.131431, 0.069097, 0.286805, -0.212662, 0.223607, 0.286804, -0, 0, 0.425, -0, -0.040614, -0.037664, 0.124999, 0.106331, -0.037664, 0.077253, 0.065717, 0.043566, 0.202253, 0.212662, 0.043566, -0, 0.106331, -0.037664, -0.077253, -0.131432, -0.037663, 0, -0.172047, 0.043566, 0.124999, -0.040614, -0.037664, -0.124999, -0.172047, 0.043566, -0.124999, 0.065717, 0.043566, -0.202253, 0.237764, 0.175, 0.077253, 0.237764, 0.175, -0.077253, 0, 0.175, 0.25, 0.146946, 0.175, 0.202254, -0.237764, 0.175, 0.077253, -0.146946, 0.175, 0.202254, -0.146946, 0.175, -0.202254, -0.237764, 0.175, -0.077253, 0.146946, 0.175, -0.202254, 0, 0.175, -0.25, 0.172047, 0.306434, 0.124999, -0.065717, 0.306434, 0.202253, -0.212662, 0.306434, -0, -0.065717, 0.306434, -0.202253, 0.172047, 0.306434, -0.124999, 0.040614, 0.387664, 0.124999, 0.131432, 0.387663, -0, -0.106331, 0.387664, 0.077253, -0.106331, 0.387664, -0.077253, 0.040614, 0.387664, -0.124999, 0, -0.425, 0, 0.180902, -0.286805, 0.131431, -0.069097, -0.286805, 0.212662, -0.223607, -0.286804, 0, -0.069097, -0.286805, -0.212662, 0.180902, -0.286805, -0.131431, 0.069097, -0.063195, 0.212662, -0.180902, -0.063195, 0.131431, -0.180902, -0.063195, -0.131431, 0.069097, -0.063195, -0.212662, 0.223607, -0.063196, 0, 0, 0.075, -0, -0.040614, -0.387664, 0.124999, 0.106331, -0.387664, 0.077253, 0.065717, -0.306434, 0.202253, 0.212662, -0.306434, 0, 0.106331, -0.387664, -0.077253, -0.131432, -0.387663, 0, -0.172047, -0.306434, 0.124999, -0.040614, -0.387664, -0.124999, -0.172047, -0.306434, -0.124999, 0.065717, -0.306434, -0.202253, 0.237764, -0.175, 0.077253, 0.237764, -0.175, -0.077253, 0, -0.175, 0.25, 0.146946, -0.175, 0.202254, -0.237764, -0.175, 0.077253, -0.146946, -0.175, 0.202254, -0.146946, -0.175, -0.202254, -0.237764, -0.175, -0.077253, 0.146946, -0.175, -0.202254, 0, -0.175, -0.25, 0.172047, -0.043566, 0.124999, -0.065717, -0.043566, 0.202253, -0.212662, -0.043566, 0, -0.065717, -0.043566, -0.202253, 0.172047, -0.043566, -0.124999, 0.040614, 0.037664, 0.124999, 0.131432, 0.037663, -0, -0.106331, 0.037664, 0.077253, -0.106331, 0.037664, -0.077253, 0.040614, 0.037664, -0.124999],
    'uvs': [],
    'name': 'Icosphere.001Geometry.1',
    'faces': [32, 0, 13, 12, 0, 1, 2, 32, 1, 13, 15, 3, 1, 4, 32, 0, 12, 17, 0, 2, 5, 32, 0, 17, 19, 0, 5, 6, 32, 0, 19, 16, 0, 6, 7, 32, 1, 15, 22, 3, 4, 8, 32, 2, 14, 24, 9, 10, 11, 32, 3, 18, 26, 12, 13, 14, 32, 4, 20, 28, 15, 16, 17, 32, 5, 21, 30, 18, 19, 20, 32, 1, 22, 25, 3, 8, 21, 32, 2, 24, 27, 9, 11, 22, 32, 3, 26, 29, 12, 14, 23, 32, 4, 28, 31, 15, 17, 24, 32, 5, 30, 23, 18, 20, 25, 32, 6, 32, 37, 26, 27, 28, 32, 7, 33, 39, 29, 30, 31, 32, 8, 34, 40, 32, 33, 34, 32, 9, 35, 41, 35, 36, 37, 32, 10, 36, 38, 38, 39, 40, 32, 38, 41, 11, 40, 37, 41, 32, 38, 36, 41, 40, 39, 37, 32, 36, 9, 41, 39, 35, 37, 32, 41, 40, 11, 37, 34, 41, 32, 41, 35, 40, 37, 36, 34, 32, 35, 8, 40, 36, 32, 34, 32, 40, 39, 11, 34, 31, 41, 32, 40, 34, 39, 34, 33, 31, 32, 34, 7, 39, 33, 29, 31, 32, 39, 37, 11, 31, 28, 41, 32, 39, 33, 37, 31, 30, 28, 32, 33, 6, 37, 30, 26, 28, 32, 37, 38, 11, 28, 40, 41, 32, 37, 32, 38, 28, 27, 40, 32, 32, 10, 38, 27, 38, 40, 32, 23, 36, 10, 25, 39, 38, 32, 23, 30, 36, 25, 20, 39, 32, 30, 9, 36, 20, 35, 39, 32, 31, 35, 9, 24, 36, 35, 32, 31, 28, 35, 24, 17, 36, 32, 28, 8, 35, 17, 32, 36, 32, 29, 34, 8, 23, 33, 32, 32, 29, 26, 34, 23, 14, 33, 32, 26, 7, 34, 14, 29, 33, 32, 27, 33, 7, 22, 30, 29, 32, 27, 24, 33, 22, 11, 30, 32, 24, 6, 33, 11, 26, 30, 32, 25, 32, 6, 21, 27, 26, 32, 25, 22, 32, 21, 8, 27, 32, 22, 10, 32, 8, 38, 27, 32, 30, 31, 9, 20, 24, 35, 32, 30, 21, 31, 20, 19, 24, 32, 21, 4, 31, 19, 15, 24, 32, 28, 29, 8, 17, 23, 32, 32, 28, 20, 29, 17, 16, 23, 32, 20, 3, 29, 16, 12, 23, 32, 26, 27, 7, 14, 22, 29, 32, 26, 18, 27, 14, 13, 22, 32, 18, 2, 27, 13, 9, 22, 32, 24, 25, 6, 11, 21, 26, 32, 24, 14, 25, 11, 10, 21, 32, 14, 1, 25, 10, 3, 21, 32, 22, 23, 10, 8, 25, 38, 32, 22, 15, 23, 8, 4, 25, 32, 15, 5, 23, 4, 18, 25, 32, 16, 21, 5, 7, 19, 18, 32, 16, 19, 21, 7, 6, 19, 32, 19, 4, 21, 6, 15, 19, 32, 19, 20, 4, 6, 16, 15, 32, 19, 17, 20, 6, 5, 16, 32, 17, 3, 20, 5, 12, 16, 32, 17, 18, 3, 5, 13, 12, 32, 17, 12, 18, 5, 2, 13, 32, 12, 2, 18, 2, 9, 13, 32, 15, 16, 5, 4, 7, 18, 32, 15, 13, 16, 4, 1, 7, 32, 13, 0, 16, 1, 0, 7, 32, 12, 14, 2, 2, 10, 9, 32, 12, 13, 14, 2, 1, 10, 32, 13, 1, 14, 1, 3, 10, 32, 42, 55, 54, 0, 1, 2, 32, 43, 55, 57, 3, 1, 4, 32, 42, 54, 59, 0, 2, 5, 32, 42, 59, 61, 0, 5, 6, 32, 42, 61, 58, 0, 6, 7, 32, 43, 57, 64, 3, 4, 8, 32, 44, 56, 66, 9, 10, 11, 32, 45, 60, 68, 12, 13, 14, 32, 46, 62, 70, 15, 16, 17, 32, 47, 63, 72, 18, 19, 20, 32, 43, 64, 67, 3, 8, 21, 32, 44, 66, 69, 9, 11, 22, 32, 45, 68, 71, 12, 14, 23, 32, 46, 70, 73, 15, 17, 24, 32, 47, 72, 65, 18, 20, 25, 32, 48, 74, 79, 26, 27, 28, 32, 49, 75, 81, 29, 30, 31, 32, 50, 76, 82, 32, 33, 34, 32, 51, 77, 83, 35, 36, 37, 32, 52, 78, 80, 38, 39, 40, 32, 80, 83, 53, 40, 37, 41, 32, 80, 78, 83, 40, 39, 37, 32, 78, 51, 83, 39, 35, 37, 32, 83, 82, 53, 37, 34, 41, 32, 83, 77, 82, 37, 36, 34, 32, 77, 50, 82, 36, 32, 34, 32, 82, 81, 53, 34, 31, 41, 32, 82, 76, 81, 34, 33, 31, 32, 76, 49, 81, 33, 29, 31, 32, 81, 79, 53, 31, 28, 41, 32, 81, 75, 79, 31, 30, 28, 32, 75, 48, 79, 30, 26, 28, 32, 79, 80, 53, 28, 40, 41, 32, 79, 74, 80, 28, 27, 40, 32, 74, 52, 80, 27, 38, 40, 32, 65, 78, 52, 25, 39, 38, 32, 65, 72, 78, 25, 20, 39, 32, 72, 51, 78, 20, 35, 39, 32, 73, 77, 51, 24, 36, 35, 32, 73, 70, 77, 24, 17, 36, 32, 70, 50, 77, 17, 32, 36, 32, 71, 76, 50, 23, 33, 32, 32, 71, 68, 76, 23, 14, 33, 32, 68, 49, 76, 14, 29, 33, 32, 69, 75, 49, 22, 30, 29, 32, 69, 66, 75, 22, 11, 30, 32, 66, 48, 75, 11, 26, 30, 32, 67, 74, 48, 21, 27, 26, 32, 67, 64, 74, 21, 8, 27, 32, 64, 52, 74, 8, 38, 27, 32, 72, 73, 51, 20, 24, 35, 32, 72, 63, 73, 20, 19, 24, 32, 63, 46, 73, 19, 15, 24, 32, 70, 71, 50, 17, 23, 32, 32, 70, 62, 71, 17, 16, 23, 32, 62, 45, 71, 16, 12, 23, 32, 68, 69, 49, 14, 22, 29, 32, 68, 60, 69, 14, 13, 22, 32, 60, 44, 69, 13, 9, 22, 32, 66, 67, 48, 11, 21, 26, 32, 66, 56, 67, 11, 10, 21, 32, 56, 43, 67, 10, 3, 21, 32, 64, 65, 52, 8, 25, 38, 32, 64, 57, 65, 8, 4, 25, 32, 57, 47, 65, 4, 18, 25, 32, 58, 63, 47, 7, 19, 18, 32, 58, 61, 63, 7, 6, 19, 32, 61, 46, 63, 6, 15, 19, 32, 61, 62, 46, 6, 16, 15, 32, 61, 59, 62, 6, 5, 16, 32, 59, 45, 62, 5, 12, 16, 32, 59, 60, 45, 5, 13, 12, 32, 59, 54, 60, 5, 2, 13, 32, 54, 44, 60, 2, 9, 13, 32, 57, 58, 47, 4, 7, 18, 32, 57, 55, 58, 4, 1, 7, 32, 55, 42, 58, 1, 0, 7, 32, 54, 56, 44, 2, 10, 9, 32, 54, 55, 56, 2, 1, 10, 32, 55, 43, 56, 1, 3, 10],
    'normals': [0, -1, 0, 0.425306, -0.850642, 0.309, -0.16245, -0.850642, 0.499985, 0.723594, -0.447188, 0.525712, 0.850642, -0.525712, 0, -0.525712, -0.850642, 0, -0.16245, -0.850642, -0.499985, 0.425306, -0.850642, -0.309, 0.951048, 0, 0.309, -0.276376, -0.447218, 0.850642, 0.262856, -0.525712, 0.808985, 0, 0, 1, -0.894406, -0.447188, 0, -0.688162, -0.525712, 0.499985, -0.951048, 0, 0.309, -0.276376, -0.447218, -0.850642, -0.688162, -0.525712, -0.499985, -0.587756, 0, -0.809015, 0.723594, -0.447188, -0.525712, 0.262856, -0.525712, -0.808985, 0.587756, 0, -0.809015, 0.587756, 0, 0.809015, -0.587756, 0, 0.809015, -0.951048, 0, -0.309, 0, 0, -1, 0.951048, 0, -0.309, 0.276376, 0.447218, 0.850642, 0.688162, 0.525712, 0.499985, 0.16245, 0.850642, 0.499985, -0.723594, 0.447188, 0.525712, -0.262856, 0.525712, 0.808985, -0.425306, 0.850642, 0.309, -0.723594, 0.447188, -0.525712, -0.850642, 0.525712, 0, -0.425306, 0.850642, -0.309, 0.276376, 0.447218, -0.850642, -0.262856, 0.525712, -0.808985, 0.16245, 0.850642, -0.499985, 0.894406, 0.447188, 0, 0.688162, 0.525712, -0.499985, 0.525712, 0.850642, 0, 0, 1, 0]
  },
  empty: {
    'metadata': {
      'version': 3,
      'generator': 'io_three',
      'vertices': 4,
      'uvs': 0,
      'faces': 1,
      'type': 'Geometry',
      'normals': 2
    },
    'vertices': [1, 0, 0, 0, 0, -0, 1, 1, 0, 0, 1, -0],
    'uvs': [],
    'name': 'CubeGeometry.4',
    'faces': [33, 1, 0, 2, 3, 0, 1, 1, 1],
    'normals': [0, 0, 0.999969, 0, 0, 1]
  },
  solid: {
    'metadata': {
      'version': 3,
      'generator': 'io_three',
      'vertices': 8,
      'uvs': 0,
      'faces': 6,
      'type': 'Geometry',
      'normals': 8
    },
    'vertices': [1, 0, 0, 1, 0, 1, -0, 0, 1, 0, 0, -0, 1, 1, 0, 1, 1, 1, -0, 1, 1, 0, 1, -0],
    'uvs': [],
    'name': 'CubeGeometry.2',
    'faces': [33, 0, 1, 2, 3, 0, 1, 2, 3, 33, 4, 7, 6, 5, 4, 5, 6, 7, 33, 0, 4, 5, 1, 0, 4, 7, 1, 33, 1, 5, 6, 2, 1, 7, 6, 2, 33, 2, 6, 7, 3, 2, 6, 5, 3, 33, 4, 0, 3, 7, 4, 0, 3, 5],
    'normals': [0.577349, -0.577349, -0.577349, 0.577349, -0.577349, 0.577349, -0.577349, -0.577349, 0.577349, -0.577349, -0.577349, -0.577349, 0.577349, 0.577349, -0.577349, -0.577349, 0.577349, -0.577349, -0.577349, 0.577349, 0.577349, 0.577349, 0.577349, 0.577349]
  }
};

module.exports = function () {
  var mesh = {};

  const createCube = function (color) {
    var geometry = new THREE.BoxGeometry(1, 1, 1),
      material = new THREE.MeshBasicMaterial({ color: color }),
      cube = new THREE.Mesh(geometry, material);
    return cube;
  };

  var Assets = function () {
    this.load = function (onloaded) {
      var loader = new THREE.JSONLoader();
      var loadMesh = function (name, mf, color) {
        var object = loader.parse(models[mf]);
        mesh[name] = new THREE.Mesh(object.geometry, color === undefined ?
          new THREE.MeshDepthMaterial() : new THREE.MeshBasicMaterial({ color: color }));
      };
      loadMesh('empty', 'empty');
      loadMesh('solid', 'solid');
      loadMesh('target', 'solid', 0xac4442);
      loadMesh('player', 'player', 0x0179d5);
      onloaded();
    };

    this.model = {
      cubeEmpty: function (n) {
        return mesh['empty'].clone();
      },

      cubeSolid: function () {
        return mesh['solid'].clone();
      },

      cubeTarget: function () {
        return mesh['target'].clone();
      },

      cubePlayer: function () {
        return mesh['player'].clone();
      }
    };

    this.level = {
      test: function () {
        return JSON.parse(JSON.stringify(levels.test));
      }
    };
  };

  return new Assets();
}();
