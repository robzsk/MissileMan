!function e(t,n,r){function i(o,s){if(!n[o]){if(!t[o]){var u="function"==typeof require&&require;if(!s&&u)return u(o,!0);if(a)return a(o,!0);var h=new Error("Cannot find module '"+o+"'");throw h.code="MODULE_NOT_FOUND",h}var c=n[o]={exports:{}};t[o][0].call(c.exports,function(e){var n=t[o][1][e];return i(n?n:e)},c,c.exports,e,t,n,r)}return n[o].exports}for(var a="function"==typeof require&&require,o=0;o<r.length;o++)i(r[o]);return i}({1:[function(e,t,n){!function(){"use strict";const t=e("underscore"),n=e("jquery"),r=e("./src/overlay"),i=e("./src/world"),a=e("./src/assets"),o=e("./src/engine/loop"),s=e("./src/replays");var u=new r,h=new i,c=function(){var e=a.level.test();h.clear(),s.init(e.spawnPoints),h.addBlocks(e.cells)},l=function(){t.each(s.getPlayers(),function(e,t){h.addPlayer(e,t===s.getCurrentPlayer())})},p=function(){o.reset(),s.reset(),l()},f=function(){o.reset(),s.reload(),s.setDemoMode(!0),c(),l(),u.fadeFromBlack(),u.showTitle()};h.on("world.player.killed",function(e){h.isComplete()&&s.save(),s.next(),setTimeout(function(){h.isComplete()?f():(u.fadeFromBlack(),o.reset(),c(),l())},20)}),u.on("title.playbutton.click",function(){s.setDemoMode(!1),u.hideTitle(),u.fadeFromBlack(),c(),p()}),n(document).ready(function(){a.load(f)}),o.on("loop.update",function(e,t){u.update(e),h.update(e,t)}),o.on("loop.render",function(e){h.render(e)})}()},{"./src/assets":12,"./src/engine/loop":16,"./src/overlay":21,"./src/replays":23,"./src/world":26,jquery:8,underscore:11}],2:[function(e,t,n){function r(e,t){return 1-3*t+3*e}function i(e,t){return 3*t-6*e}function a(e){return 3*e}function o(e,t,n){return((r(t,n)*e+i(t,n))*e+a(t))*e}function s(e,t,n){return 3*r(t,n)*e*e+2*i(t,n)*e+a(t)}function u(e,t,n,r,i){var a,s,u=0;do s=t+(n-t)/2,a=o(s,r,i)-e,a>0?n=s:t=s;while(Math.abs(a)>f&&++u<d);return s}function h(e,t,n,r){for(var i=0;l>i;++i){var a=s(t,n,r);if(0===a)return t;var u=o(t,n,r)-e;t-=u/a}return t}function c(e,t,n,r){if(4===arguments.length)return new c([e,t,n,r]);if(!(this instanceof c))return new c(e);if(!e||4!==e.length)throw new Error("BezierEasing: points must contains 4 values");for(var i=0;4>i;++i)if("number"!=typeof e[i]||isNaN(e[i])||!isFinite(e[i]))throw new Error("BezierEasing: points should be integers.");if(e[0]<0||e[0]>1||e[2]<0||e[2]>1)throw new Error("BezierEasing x values must be in [0, 1] range.");this._str="BezierEasing("+e+")",this._css="cubic-bezier("+e+")",this._p=e,this._mSampleValues=v?new Float32Array(m):new Array(m),this._precomputed=!1,this.get=this.get.bind(this)}var l=4,p=.001,f=1e-7,d=10,m=11,g=1/(m-1),v="function"==typeof Float32Array;c.prototype={get:function(e){var t=this._p[0],n=this._p[1],r=this._p[2],i=this._p[3];return this._precomputed||this._precompute(),t===n&&r===i?e:0===e?0:1===e?1:o(this._getTForX(e),n,i)},getPoints:function(){return this._p},toString:function(){return this._str},toCSS:function(){return this._css},_precompute:function(){var e=this._p[0],t=this._p[1],n=this._p[2],r=this._p[3];this._precomputed=!0,(e!==t||n!==r)&&this._calcSampleValues()},_calcSampleValues:function(){for(var e=this._p[0],t=this._p[2],n=0;m>n;++n)this._mSampleValues[n]=o(n*g,e,t)},_getTForX:function(e){for(var t=this._p[0],n=this._p[2],r=this._mSampleValues,i=0,a=1,o=m-1;a!==o&&r[a]<=e;++a)i+=g;--a;var c=(e-r[a])/(r[a+1]-r[a]),l=i+c*g,f=s(l,t,n);return f>=p?h(e,l,t,n):0===f?l:u(e,i,i+g,t,n)}},c.css={ease:c.ease=c(.25,.1,.25,1),linear:c.linear=c(0,0,1,1),"ease-in":c.easeIn=c(.42,0,1,1),"ease-out":c.easeOut=c(0,0,.58,1),"ease-in-out":c.easeInOut=c(.42,0,.58,1)},t.exports=c},{}],3:[function(e,t,n){function r(){this._events=this._events||{},this._maxListeners=this._maxListeners||void 0}function i(e){return"function"==typeof e}function a(e){return"number"==typeof e}function o(e){return"object"==typeof e&&null!==e}function s(e){return void 0===e}t.exports=r,r.EventEmitter=r,r.prototype._events=void 0,r.prototype._maxListeners=void 0,r.defaultMaxListeners=10,r.prototype.setMaxListeners=function(e){if(!a(e)||0>e||isNaN(e))throw TypeError("n must be a positive number");return this._maxListeners=e,this},r.prototype.emit=function(e){var t,n,r,a,u,h;if(this._events||(this._events={}),"error"===e&&(!this._events.error||o(this._events.error)&&!this._events.error.length)){if(t=arguments[1],t instanceof Error)throw t;throw TypeError('Uncaught, unspecified "error" event.')}if(n=this._events[e],s(n))return!1;if(i(n))switch(arguments.length){case 1:n.call(this);break;case 2:n.call(this,arguments[1]);break;case 3:n.call(this,arguments[1],arguments[2]);break;default:for(r=arguments.length,a=new Array(r-1),u=1;r>u;u++)a[u-1]=arguments[u];n.apply(this,a)}else if(o(n)){for(r=arguments.length,a=new Array(r-1),u=1;r>u;u++)a[u-1]=arguments[u];for(h=n.slice(),r=h.length,u=0;r>u;u++)h[u].apply(this,a)}return!0},r.prototype.addListener=function(e,t){var n;if(!i(t))throw TypeError("listener must be a function");if(this._events||(this._events={}),this._events.newListener&&this.emit("newListener",e,i(t.listener)?t.listener:t),this._events[e]?o(this._events[e])?this._events[e].push(t):this._events[e]=[this._events[e],t]:this._events[e]=t,o(this._events[e])&&!this._events[e].warned){var n;n=s(this._maxListeners)?r.defaultMaxListeners:this._maxListeners,n&&n>0&&this._events[e].length>n&&(this._events[e].warned=!0,console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.",this._events[e].length),"function"==typeof console.trace&&console.trace())}return this},r.prototype.on=r.prototype.addListener,r.prototype.once=function(e,t){function n(){this.removeListener(e,n),r||(r=!0,t.apply(this,arguments))}if(!i(t))throw TypeError("listener must be a function");var r=!1;return n.listener=t,this.on(e,n),this},r.prototype.removeListener=function(e,t){var n,r,a,s;if(!i(t))throw TypeError("listener must be a function");if(!this._events||!this._events[e])return this;if(n=this._events[e],a=n.length,r=-1,n===t||i(n.listener)&&n.listener===t)delete this._events[e],this._events.removeListener&&this.emit("removeListener",e,t);else if(o(n)){for(s=a;s-->0;)if(n[s]===t||n[s].listener&&n[s].listener===t){r=s;break}if(0>r)return this;1===n.length?(n.length=0,delete this._events[e]):n.splice(r,1),this._events.removeListener&&this.emit("removeListener",e,t)}return this},r.prototype.removeAllListeners=function(e){var t,n;if(!this._events)return this;if(!this._events.removeListener)return 0===arguments.length?this._events={}:this._events[e]&&delete this._events[e],this;if(0===arguments.length){for(t in this._events)"removeListener"!==t&&this.removeAllListeners(t);return this.removeAllListeners("removeListener"),this._events={},this}if(n=this._events[e],i(n))this.removeListener(e,n);else for(;n.length;)this.removeListener(e,n[n.length-1]);return delete this._events[e],this},r.prototype.listeners=function(e){var t;return t=this._events&&this._events[e]?i(this._events[e])?[this._events[e]]:this._events[e].slice():[]},r.listenerCount=function(e,t){var n;return n=e._events&&e._events[t]?i(e._events[t])?1:e._events[t].length:0}},{}],4:[function(e,t,n){"function"==typeof Object.create?t.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:t.exports=function(e,t){e.super_=t;var n=function(){};n.prototype=t.prototype,e.prototype=new n,e.prototype.constructor=e}},{}],5:[function(e,t,n){function r(){c=!1,s.length?h=s.concat(h):l=-1,h.length&&i()}function i(){if(!c){var e=setTimeout(r);c=!0;for(var t=h.length;t;){for(s=h,h=[];++l<t;)s&&s[l].run();l=-1,t=h.length}s=null,c=!1,clearTimeout(e)}}function a(e,t){this.fun=e,this.array=t}function o(){}var s,u=t.exports={},h=[],c=!1,l=-1;u.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];h.push(new a(e,t)),1!==h.length||c||setTimeout(i,0)},a.prototype.run=function(){this.fun.apply(null,this.array)},u.title="browser",u.browser=!0,u.env={},u.argv=[],u.version="",u.versions={},u.on=o,u.addListener=o,u.once=o,u.off=o,u.removeListener=o,u.removeAllListeners=o,u.emit=o,u.binding=function(e){throw new Error("process.binding is not supported")},u.cwd=function(){return"/"},u.chdir=function(e){throw new Error("process.chdir is not supported")},u.umask=function(){return 0}},{}],6:[function(e,t,n){t.exports=function(e){return e&&"object"==typeof e&&"function"==typeof e.copy&&"function"==typeof e.fill&&"function"==typeof e.readUInt8}},{}],7:[function(e,t,n){(function(t,r){function i(e,t){var r={seen:[],stylize:o};return arguments.length>=3&&(r.depth=arguments[2]),arguments.length>=4&&(r.colors=arguments[3]),m(t)?r.showHidden=t:t&&n._extend(r,t),w(r.showHidden)&&(r.showHidden=!1),w(r.depth)&&(r.depth=2),w(r.colors)&&(r.colors=!1),w(r.customInspect)&&(r.customInspect=!0),r.colors&&(r.stylize=a),u(r,e,r.depth)}function a(e,t){var n=i.styles[t];return n?"["+i.colors[n][0]+"m"+e+"["+i.colors[n][1]+"m":e}function o(e,t){return e}function s(e){var t={};return e.forEach(function(e,n){t[e]=!0}),t}function u(e,t,r){if(e.customInspect&&t&&E(t.inspect)&&t.inspect!==n.inspect&&(!t.constructor||t.constructor.prototype!==t)){var i=t.inspect(r,e);return b(i)||(i=u(e,i,r)),i}var a=h(e,t);if(a)return a;var o=Object.keys(t),m=s(o);if(e.showHidden&&(o=Object.getOwnPropertyNames(t)),T(t)&&(o.indexOf("message")>=0||o.indexOf("description")>=0))return c(t);if(0===o.length){if(E(t)){var g=t.name?": "+t.name:"";return e.stylize("[Function"+g+"]","special")}if(M(t))return e.stylize(RegExp.prototype.toString.call(t),"regexp");if(_(t))return e.stylize(Date.prototype.toString.call(t),"date");if(T(t))return c(t)}var v="",y=!1,x=["{","}"];if(d(t)&&(y=!0,x=["[","]"]),E(t)){var w=t.name?": "+t.name:"";v=" [Function"+w+"]"}if(M(t)&&(v=" "+RegExp.prototype.toString.call(t)),_(t)&&(v=" "+Date.prototype.toUTCString.call(t)),T(t)&&(v=" "+c(t)),0===o.length&&(!y||0==t.length))return x[0]+v+x[1];if(0>r)return M(t)?e.stylize(RegExp.prototype.toString.call(t),"regexp"):e.stylize("[Object]","special");e.seen.push(t);var S;return S=y?l(e,t,r,m,o):o.map(function(n){return p(e,t,r,m,n,y)}),e.seen.pop(),f(S,v,x)}function h(e,t){if(w(t))return e.stylize("undefined","undefined");if(b(t)){var n="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(n,"string")}return y(t)?e.stylize(""+t,"number"):m(t)?e.stylize(""+t,"boolean"):g(t)?e.stylize("null","null"):void 0}function c(e){return"["+Error.prototype.toString.call(e)+"]"}function l(e,t,n,r,i){for(var a=[],o=0,s=t.length;s>o;++o)k(t,String(o))?a.push(p(e,t,n,r,String(o),!0)):a.push("");return i.forEach(function(i){i.match(/^\d+$/)||a.push(p(e,t,n,r,i,!0))}),a}function p(e,t,n,r,i,a){var o,s,h;if(h=Object.getOwnPropertyDescriptor(t,i)||{value:t[i]},h.get?s=h.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):h.set&&(s=e.stylize("[Setter]","special")),k(r,i)||(o="["+i+"]"),s||(e.seen.indexOf(h.value)<0?(s=g(n)?u(e,h.value,null):u(e,h.value,n-1),s.indexOf("\n")>-1&&(s=a?s.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+s.split("\n").map(function(e){return"   "+e}).join("\n"))):s=e.stylize("[Circular]","special")),w(o)){if(a&&i.match(/^\d+$/))return s;o=JSON.stringify(""+i),o.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(o=o.substr(1,o.length-2),o=e.stylize(o,"name")):(o=o.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),o=e.stylize(o,"string"))}return o+": "+s}function f(e,t,n){var r=0,i=e.reduce(function(e,t){return r++,t.indexOf("\n")>=0&&r++,e+t.replace(/\u001b\[\d\d?m/g,"").length+1},0);return i>60?n[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+n[1]:n[0]+t+" "+e.join(", ")+" "+n[1]}function d(e){return Array.isArray(e)}function m(e){return"boolean"==typeof e}function g(e){return null===e}function v(e){return null==e}function y(e){return"number"==typeof e}function b(e){return"string"==typeof e}function x(e){return"symbol"==typeof e}function w(e){return void 0===e}function M(e){return S(e)&&"[object RegExp]"===A(e)}function S(e){return"object"==typeof e&&null!==e}function _(e){return S(e)&&"[object Date]"===A(e)}function T(e){return S(e)&&("[object Error]"===A(e)||e instanceof Error)}function E(e){return"function"==typeof e}function C(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"==typeof e||"undefined"==typeof e}function A(e){return Object.prototype.toString.call(e)}function L(e){return 10>e?"0"+e.toString(10):e.toString(10)}function P(){var e=new Date,t=[L(e.getHours()),L(e.getMinutes()),L(e.getSeconds())].join(":");return[e.getDate(),O[e.getMonth()],t].join(" ")}function k(e,t){return Object.prototype.hasOwnProperty.call(e,t)}var D=/%[sdj%]/g;n.format=function(e){if(!b(e)){for(var t=[],n=0;n<arguments.length;n++)t.push(i(arguments[n]));return t.join(" ")}for(var n=1,r=arguments,a=r.length,o=String(e).replace(D,function(e){if("%%"===e)return"%";if(n>=a)return e;switch(e){case"%s":return String(r[n++]);case"%d":return Number(r[n++]);case"%j":try{return JSON.stringify(r[n++])}catch(t){return"[Circular]"}default:return e}}),s=r[n];a>n;s=r[++n])o+=g(s)||!S(s)?" "+s:" "+i(s);return o},n.deprecate=function(e,i){function a(){if(!o){if(t.throwDeprecation)throw new Error(i);t.traceDeprecation?console.trace(i):console.error(i),o=!0}return e.apply(this,arguments)}if(w(r.process))return function(){return n.deprecate(e,i).apply(this,arguments)};if(t.noDeprecation===!0)return e;var o=!1;return a};var R,F={};n.debuglog=function(e){if(w(R)&&(R=t.env.NODE_DEBUG||""),e=e.toUpperCase(),!F[e])if(new RegExp("\\b"+e+"\\b","i").test(R)){var r=t.pid;F[e]=function(){var t=n.format.apply(n,arguments);console.error("%s %d: %s",e,r,t)}}else F[e]=function(){};return F[e]},n.inspect=i,i.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},i.styles={special:"cyan",number:"yellow","boolean":"yellow",undefined:"grey","null":"bold",string:"green",date:"magenta",regexp:"red"},n.isArray=d,n.isBoolean=m,n.isNull=g,n.isNullOrUndefined=v,n.isNumber=y,n.isString=b,n.isSymbol=x,n.isUndefined=w,n.isRegExp=M,n.isObject=S,n.isDate=_,n.isError=T,n.isFunction=E,n.isPrimitive=C,n.isBuffer=e("./support/isBuffer");var O=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];n.log=function(){console.log("%s - %s",P(),n.format.apply(n,arguments))},n.inherits=e("inherits"),n._extend=function(e,t){if(!t||!S(t))return e;for(var n=Object.keys(t),r=n.length;r--;)e[n[r]]=t[n[r]];return e}}).call(this,e("_process"),"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{"./support/isBuffer":6,_process:5,inherits:4}],8:[function(e,t,n){!function(e,n){"object"==typeof t&&"object"==typeof t.exports?t.exports=e.document?n(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return n(e)}:n(e)}("undefined"!=typeof window?window:this,function(e,t){function n(e){var t="length"in e&&e.length,n=$.type(e);return"function"===n||$.isWindow(e)?!1:1===e.nodeType&&t?!0:"array"===n||0===t||"number"==typeof t&&t>0&&t-1 in e}function r(e,t,n){if($.isFunction(t))return $.grep(e,function(e,r){return!!t.call(e,r,e)!==n});if(t.nodeType)return $.grep(e,function(e){return e===t!==n});if("string"==typeof t){if(se.test(t))return $.filter(t,e,n);t=$.filter(t,e)}return $.grep(e,function(e){return X.call(t,e)>=0!==n})}function i(e,t){for(;(e=e[t])&&1!==e.nodeType;);return e}function a(e){var t=de[e]={};return $.each(e.match(fe)||[],function(e,n){t[n]=!0}),t}function o(){Z.removeEventListener("DOMContentLoaded",o,!1),e.removeEventListener("load",o,!1),$.ready()}function s(){Object.defineProperty(this.cache={},0,{get:function(){return{}}}),this.expando=$.expando+s.uid++}function u(e,t,n){var r;if(void 0===n&&1===e.nodeType)if(r="data-"+t.replace(xe,"-$1").toLowerCase(),n=e.getAttribute(r),"string"==typeof n){try{n="true"===n?!0:"false"===n?!1:"null"===n?null:+n+""===n?+n:be.test(n)?$.parseJSON(n):n}catch(i){}ye.set(e,t,n)}else n=void 0;return n}function h(){return!0}function c(){return!1}function l(){try{return Z.activeElement}catch(e){}}function p(e,t){return $.nodeName(e,"table")&&$.nodeName(11!==t.nodeType?t:t.firstChild,"tr")?e.getElementsByTagName("tbody")[0]||e.appendChild(e.ownerDocument.createElement("tbody")):e}function f(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function d(e){var t=Ve.exec(e.type);return t?e.type=t[1]:e.removeAttribute("type"),e}function m(e,t){for(var n=0,r=e.length;r>n;n++)ve.set(e[n],"globalEval",!t||ve.get(t[n],"globalEval"))}function g(e,t){var n,r,i,a,o,s,u,h;if(1===t.nodeType){if(ve.hasData(e)&&(a=ve.access(e),o=ve.set(t,a),h=a.events)){delete o.handle,o.events={};for(i in h)for(n=0,r=h[i].length;r>n;n++)$.event.add(t,i,h[i][n])}ye.hasData(e)&&(s=ye.access(e),u=$.extend({},s),ye.set(t,u))}}function v(e,t){var n=e.getElementsByTagName?e.getElementsByTagName(t||"*"):e.querySelectorAll?e.querySelectorAll(t||"*"):[];return void 0===t||t&&$.nodeName(e,t)?$.merge([e],n):n}function y(e,t){var n=t.nodeName.toLowerCase();"input"===n&&_e.test(e.type)?t.checked=e.checked:("input"===n||"textarea"===n)&&(t.defaultValue=e.defaultValue)}function b(t,n){var r,i=$(n.createElement(t)).appendTo(n.body),a=e.getDefaultComputedStyle&&(r=e.getDefaultComputedStyle(i[0]))?r.display:$.css(i[0],"display");return i.detach(),a}function x(e){var t=Z,n=Ge[e];return n||(n=b(e,t),"none"!==n&&n||(Ue=(Ue||$("<iframe frameborder='0' width='0' height='0'/>")).appendTo(t.documentElement),t=Ue[0].contentDocument,t.write(),t.close(),n=b(e,t),Ue.detach()),Ge[e]=n),n}function w(e,t,n){var r,i,a,o,s=e.style;return n=n||ze(e),n&&(o=n.getPropertyValue(t)||n[t]),n&&(""!==o||$.contains(e.ownerDocument,e)||(o=$.style(e,t)),je.test(o)&&Ie.test(t)&&(r=s.width,i=s.minWidth,a=s.maxWidth,s.minWidth=s.maxWidth=s.width=o,o=n.width,s.width=r,s.minWidth=i,s.maxWidth=a)),void 0!==o?o+"":o}function M(e,t){return{get:function(){return e()?void delete this.get:(this.get=t).apply(this,arguments)}}}function S(e,t){if(t in e)return t;for(var n=t[0].toUpperCase()+t.slice(1),r=t,i=Ke.length;i--;)if(t=Ke[i]+n,t in e)return t;return r}function _(e,t,n){var r=We.exec(t);return r?Math.max(0,r[1]-(n||0))+(r[2]||"px"):t}function T(e,t,n,r,i){for(var a=n===(r?"border":"content")?4:"width"===t?1:0,o=0;4>a;a+=2)"margin"===n&&(o+=$.css(e,n+Me[a],!0,i)),r?("content"===n&&(o-=$.css(e,"padding"+Me[a],!0,i)),"margin"!==n&&(o-=$.css(e,"border"+Me[a]+"Width",!0,i))):(o+=$.css(e,"padding"+Me[a],!0,i),"padding"!==n&&(o+=$.css(e,"border"+Me[a]+"Width",!0,i)));return o}function E(e,t,n){var r=!0,i="width"===t?e.offsetWidth:e.offsetHeight,a=ze(e),o="border-box"===$.css(e,"boxSizing",!1,a);if(0>=i||null==i){if(i=w(e,t,a),(0>i||null==i)&&(i=e.style[t]),je.test(i))return i;r=o&&(Q.boxSizingReliable()||i===e.style[t]),i=parseFloat(i)||0}return i+T(e,t,n||(o?"border":"content"),r,a)+"px"}function C(e,t){for(var n,r,i,a=[],o=0,s=e.length;s>o;o++)r=e[o],r.style&&(a[o]=ve.get(r,"olddisplay"),n=r.style.display,t?(a[o]||"none"!==n||(r.style.display=""),""===r.style.display&&Se(r)&&(a[o]=ve.access(r,"olddisplay",x(r.nodeName)))):(i=Se(r),"none"===n&&i||ve.set(r,"olddisplay",i?n:$.css(r,"display"))));for(o=0;s>o;o++)r=e[o],r.style&&(t&&"none"!==r.style.display&&""!==r.style.display||(r.style.display=t?a[o]||"":"none"));return e}function A(e,t,n,r,i){return new A.prototype.init(e,t,n,r,i)}function L(){return setTimeout(function(){Qe=void 0}),Qe=$.now()}function P(e,t){var n,r=0,i={height:e};for(t=t?1:0;4>r;r+=2-t)n=Me[r],i["margin"+n]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function k(e,t,n){for(var r,i=(nt[t]||[]).concat(nt["*"]),a=0,o=i.length;o>a;a++)if(r=i[a].call(n,t,e))return r}function D(e,t,n){var r,i,a,o,s,u,h,c,l=this,p={},f=e.style,d=e.nodeType&&Se(e),m=ve.get(e,"fxshow");n.queue||(s=$._queueHooks(e,"fx"),null==s.unqueued&&(s.unqueued=0,u=s.empty.fire,s.empty.fire=function(){s.unqueued||u()}),s.unqueued++,l.always(function(){l.always(function(){s.unqueued--,$.queue(e,"fx").length||s.empty.fire()})})),1===e.nodeType&&("height"in t||"width"in t)&&(n.overflow=[f.overflow,f.overflowX,f.overflowY],h=$.css(e,"display"),c="none"===h?ve.get(e,"olddisplay")||x(e.nodeName):h,"inline"===c&&"none"===$.css(e,"float")&&(f.display="inline-block")),n.overflow&&(f.overflow="hidden",l.always(function(){f.overflow=n.overflow[0],f.overflowX=n.overflow[1],f.overflowY=n.overflow[2]}));for(r in t)if(i=t[r],Je.exec(i)){if(delete t[r],a=a||"toggle"===i,i===(d?"hide":"show")){if("show"!==i||!m||void 0===m[r])continue;d=!0}p[r]=m&&m[r]||$.style(e,r)}else h=void 0;if($.isEmptyObject(p))"inline"===("none"===h?x(e.nodeName):h)&&(f.display=h);else{m?"hidden"in m&&(d=m.hidden):m=ve.access(e,"fxshow",{}),a&&(m.hidden=!d),d?$(e).show():l.done(function(){$(e).hide()}),l.done(function(){var t;ve.remove(e,"fxshow");for(t in p)$.style(e,t,p[t])});for(r in p)o=k(d?m[r]:0,r,l),r in m||(m[r]=o.start,d&&(o.end=o.start,o.start="width"===r||"height"===r?1:0))}}function R(e,t){var n,r,i,a,o;for(n in e)if(r=$.camelCase(n),i=t[r],a=e[n],$.isArray(a)&&(i=a[1],a=e[n]=a[0]),n!==r&&(e[r]=a,delete e[n]),o=$.cssHooks[r],o&&"expand"in o){a=o.expand(a),delete e[r];for(n in a)n in e||(e[n]=a[n],t[n]=i)}else t[r]=i}function F(e,t,n){var r,i,a=0,o=tt.length,s=$.Deferred().always(function(){delete u.elem}),u=function(){if(i)return!1;for(var t=Qe||L(),n=Math.max(0,h.startTime+h.duration-t),r=n/h.duration||0,a=1-r,o=0,u=h.tweens.length;u>o;o++)h.tweens[o].run(a);return s.notifyWith(e,[h,a,n]),1>a&&u?n:(s.resolveWith(e,[h]),!1)},h=s.promise({elem:e,props:$.extend({},t),opts:$.extend(!0,{specialEasing:{}},n),originalProperties:t,originalOptions:n,startTime:Qe||L(),duration:n.duration,tweens:[],createTween:function(t,n){var r=$.Tween(e,h.opts,t,n,h.opts.specialEasing[t]||h.opts.easing);return h.tweens.push(r),r},stop:function(t){var n=0,r=t?h.tweens.length:0;if(i)return this;for(i=!0;r>n;n++)h.tweens[n].run(1);return t?s.resolveWith(e,[h,t]):s.rejectWith(e,[h,t]),this}}),c=h.props;for(R(c,h.opts.specialEasing);o>a;a++)if(r=tt[a].call(h,e,c,h.opts))return r;return $.map(c,k,h),$.isFunction(h.opts.start)&&h.opts.start.call(e,h),$.fx.timer($.extend(u,{elem:e,anim:h,queue:h.opts.queue})),h.progress(h.opts.progress).done(h.opts.done,h.opts.complete).fail(h.opts.fail).always(h.opts.always)}function O(e){return function(t,n){"string"!=typeof t&&(n=t,t="*");var r,i=0,a=t.toLowerCase().match(fe)||[];if($.isFunction(n))for(;r=a[i++];)"+"===r[0]?(r=r.slice(1)||"*",(e[r]=e[r]||[]).unshift(n)):(e[r]=e[r]||[]).push(n)}}function V(e,t,n,r){function i(s){var u;return a[s]=!0,$.each(e[s]||[],function(e,s){var h=s(t,n,r);return"string"!=typeof h||o||a[h]?o?!(u=h):void 0:(t.dataTypes.unshift(h),i(h),!1)}),u}var a={},o=e===bt;return i(t.dataTypes[0])||!a["*"]&&i("*")}function N(e,t){var n,r,i=$.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&$.extend(!0,e,r),e}function B(e,t,n){for(var r,i,a,o,s=e.contents,u=e.dataTypes;"*"===u[0];)u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)a=u[0];else{for(i in n){if(!u[0]||e.converters[i+" "+u[0]]){a=i;break}o||(o=i)}a=a||o}return a?(a!==u[0]&&u.unshift(a),n[a]):void 0}function U(e,t,n,r){var i,a,o,s,u,h={},c=e.dataTypes.slice();if(c[1])for(o in e.converters)h[o.toLowerCase()]=e.converters[o];for(a=c.shift();a;)if(e.responseFields[a]&&(n[e.responseFields[a]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=a,a=c.shift())if("*"===a)a=u;else if("*"!==u&&u!==a){if(o=h[u+" "+a]||h["* "+a],!o)for(i in h)if(s=i.split(" "),s[1]===a&&(o=h[u+" "+s[0]]||h["* "+s[0]])){o===!0?o=h[i]:h[i]!==!0&&(a=s[0],c.unshift(s[1]));break}if(o!==!0)if(o&&e["throws"])t=o(t);else try{t=o(t)}catch(l){return{state:"parsererror",error:o?l:"No conversion from "+u+" to "+a}}}return{state:"success",data:t}}function G(e,t,n,r){var i;if($.isArray(t))$.each(t,function(t,i){n||_t.test(e)?r(e,i):G(e+"["+("object"==typeof i?t:"")+"]",i,n,r)});else if(n||"object"!==$.type(t))r(e,t);else for(i in t)G(e+"["+i+"]",t[i],n,r)}function I(e){return $.isWindow(e)?e:9===e.nodeType&&e.defaultView}var j=[],z=j.slice,H=j.concat,W=j.push,X=j.indexOf,q={},Y=q.toString,K=q.hasOwnProperty,Q={},Z=e.document,J="2.1.4",$=function(e,t){return new $.fn.init(e,t)},ee=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,te=/^-ms-/,ne=/-([\da-z])/gi,re=function(e,t){return t.toUpperCase()};$.fn=$.prototype={jquery:J,constructor:$,selector:"",length:0,toArray:function(){return z.call(this)},get:function(e){return null!=e?0>e?this[e+this.length]:this[e]:z.call(this)},pushStack:function(e){var t=$.merge(this.constructor(),e);return t.prevObject=this,t.context=this.context,t},each:function(e,t){return $.each(this,e,t)},map:function(e){return this.pushStack($.map(this,function(t,n){return e.call(t,n,t)}))},slice:function(){return this.pushStack(z.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(e){var t=this.length,n=+e+(0>e?t:0);return this.pushStack(n>=0&&t>n?[this[n]]:[])},end:function(){return this.prevObject||this.constructor(null)},push:W,sort:j.sort,splice:j.splice},$.extend=$.fn.extend=function(){var e,t,n,r,i,a,o=arguments[0]||{},s=1,u=arguments.length,h=!1;for("boolean"==typeof o&&(h=o,o=arguments[s]||{},s++),"object"==typeof o||$.isFunction(o)||(o={}),s===u&&(o=this,s--);u>s;s++)if(null!=(e=arguments[s]))for(t in e)n=o[t],r=e[t],o!==r&&(h&&r&&($.isPlainObject(r)||(i=$.isArray(r)))?(i?(i=!1,a=n&&$.isArray(n)?n:[]):a=n&&$.isPlainObject(n)?n:{},o[t]=$.extend(h,a,r)):void 0!==r&&(o[t]=r));return o},$.extend({expando:"jQuery"+(J+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isFunction:function(e){return"function"===$.type(e)},isArray:Array.isArray,isWindow:function(e){return null!=e&&e===e.window},isNumeric:function(e){return!$.isArray(e)&&e-parseFloat(e)+1>=0},isPlainObject:function(e){return"object"!==$.type(e)||e.nodeType||$.isWindow(e)?!1:e.constructor&&!K.call(e.constructor.prototype,"isPrototypeOf")?!1:!0},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},type:function(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?q[Y.call(e)]||"object":typeof e},globalEval:function(e){var t,n=eval;e=$.trim(e),e&&(1===e.indexOf("use strict")?(t=Z.createElement("script"),t.text=e,Z.head.appendChild(t).parentNode.removeChild(t)):n(e))},camelCase:function(e){return e.replace(te,"ms-").replace(ne,re)},nodeName:function(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()},each:function(e,t,r){var i,a=0,o=e.length,s=n(e);if(r){if(s)for(;o>a&&(i=t.apply(e[a],r),i!==!1);a++);else for(a in e)if(i=t.apply(e[a],r),i===!1)break}else if(s)for(;o>a&&(i=t.call(e[a],a,e[a]),i!==!1);a++);else for(a in e)if(i=t.call(e[a],a,e[a]),i===!1)break;return e},trim:function(e){return null==e?"":(e+"").replace(ee,"")},makeArray:function(e,t){var r=t||[];return null!=e&&(n(Object(e))?$.merge(r,"string"==typeof e?[e]:e):W.call(r,e)),r},inArray:function(e,t,n){return null==t?-1:X.call(t,e,n)},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;n>r;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r,i=[],a=0,o=e.length,s=!n;o>a;a++)r=!t(e[a],a),r!==s&&i.push(e[a]);return i},map:function(e,t,r){var i,a=0,o=e.length,s=n(e),u=[];if(s)for(;o>a;a++)i=t(e[a],a,r),null!=i&&u.push(i);else for(a in e)i=t(e[a],a,r),null!=i&&u.push(i);return H.apply([],u)},guid:1,proxy:function(e,t){var n,r,i;return"string"==typeof t&&(n=e[t],t=e,e=n),$.isFunction(e)?(r=z.call(arguments,2),i=function(){return e.apply(t||this,r.concat(z.call(arguments)))},i.guid=e.guid=e.guid||$.guid++,i):void 0},now:Date.now,support:Q}),$.each("Boolean Number String Function Array Date RegExp Object Error".split(" "),function(e,t){q["[object "+t+"]"]=t.toLowerCase()});var ie=function(e){function t(e,t,n,r){var i,a,o,s,u,h,l,f,d,m;if((t?t.ownerDocument||t:G)!==D&&k(t),t=t||D,n=n||[],s=t.nodeType,"string"!=typeof e||!e||1!==s&&9!==s&&11!==s)return n;if(!r&&F){if(11!==s&&(i=ye.exec(e)))if(o=i[1]){if(9===s){if(a=t.getElementById(o),!a||!a.parentNode)return n;if(a.id===o)return n.push(a),n}else if(t.ownerDocument&&(a=t.ownerDocument.getElementById(o))&&B(t,a)&&a.id===o)return n.push(a),n}else{if(i[2])return J.apply(n,t.getElementsByTagName(e)),n;if((o=i[3])&&w.getElementsByClassName)return J.apply(n,t.getElementsByClassName(o)),n}if(w.qsa&&(!O||!O.test(e))){if(f=l=U,d=t,m=1!==s&&e,1===s&&"object"!==t.nodeName.toLowerCase()){for(h=T(e),(l=t.getAttribute("id"))?f=l.replace(xe,"\\$&"):t.setAttribute("id",f),f="[id='"+f+"'] ",u=h.length;u--;)h[u]=f+p(h[u]);d=be.test(e)&&c(t.parentNode)||t,m=h.join(",")}if(m)try{return J.apply(n,d.querySelectorAll(m)),n}catch(g){}finally{l||t.removeAttribute("id")}}}return C(e.replace(ue,"$1"),t,n,r)}function n(){function e(n,r){return t.push(n+" ")>M.cacheLength&&delete e[t.shift()],e[n+" "]=r}var t=[];return e}function r(e){return e[U]=!0,e}function i(e){var t=D.createElement("div");try{return!!e(t)}catch(n){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function a(e,t){for(var n=e.split("|"),r=e.length;r--;)M.attrHandle[n[r]]=t}function o(e,t){var n=t&&e,r=n&&1===e.nodeType&&1===t.nodeType&&(~t.sourceIndex||q)-(~e.sourceIndex||q);if(r)return r;if(n)for(;n=n.nextSibling;)if(n===t)return-1;return e?1:-1}function s(e){return function(t){var n=t.nodeName.toLowerCase();return"input"===n&&t.type===e}}function u(e){return function(t){var n=t.nodeName.toLowerCase();return("input"===n||"button"===n)&&t.type===e}}function h(e){return r(function(t){return t=+t,r(function(n,r){for(var i,a=e([],n.length,t),o=a.length;o--;)n[i=a[o]]&&(n[i]=!(r[i]=n[i]))})})}function c(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function l(){}function p(e){for(var t=0,n=e.length,r="";n>t;t++)r+=e[t].value;return r}function f(e,t,n){var r=t.dir,i=n&&"parentNode"===r,a=j++;return t.first?function(t,n,a){for(;t=t[r];)if(1===t.nodeType||i)return e(t,n,a)}:function(t,n,o){var s,u,h=[I,a];if(o){for(;t=t[r];)if((1===t.nodeType||i)&&e(t,n,o))return!0}else for(;t=t[r];)if(1===t.nodeType||i){if(u=t[U]||(t[U]={}),(s=u[r])&&s[0]===I&&s[1]===a)return h[2]=s[2];if(u[r]=h,h[2]=e(t,n,o))return!0}}}function d(e){return e.length>1?function(t,n,r){for(var i=e.length;i--;)if(!e[i](t,n,r))return!1;return!0}:e[0]}function m(e,n,r){for(var i=0,a=n.length;a>i;i++)t(e,n[i],r);return r}function g(e,t,n,r,i){for(var a,o=[],s=0,u=e.length,h=null!=t;u>s;s++)(a=e[s])&&(!n||n(a,r,i))&&(o.push(a),h&&t.push(s));return o}function v(e,t,n,i,a,o){return i&&!i[U]&&(i=v(i)),a&&!a[U]&&(a=v(a,o)),r(function(r,o,s,u){var h,c,l,p=[],f=[],d=o.length,v=r||m(t||"*",s.nodeType?[s]:s,[]),y=!e||!r&&t?v:g(v,p,e,s,u),b=n?a||(r?e:d||i)?[]:o:y;if(n&&n(y,b,s,u),i)for(h=g(b,f),i(h,[],s,u),c=h.length;c--;)(l=h[c])&&(b[f[c]]=!(y[f[c]]=l));if(r){if(a||e){if(a){for(h=[],c=b.length;c--;)(l=b[c])&&h.push(y[c]=l);a(null,b=[],h,u)}for(c=b.length;c--;)(l=b[c])&&(h=a?ee(r,l):p[c])>-1&&(r[h]=!(o[h]=l))}}else b=g(b===o?b.splice(d,b.length):b),a?a(null,o,b,u):J.apply(o,b)})}function y(e){for(var t,n,r,i=e.length,a=M.relative[e[0].type],o=a||M.relative[" "],s=a?1:0,u=f(function(e){return e===t},o,!0),h=f(function(e){return ee(t,e)>-1},o,!0),c=[function(e,n,r){var i=!a&&(r||n!==A)||((t=n).nodeType?u(e,n,r):h(e,n,r));return t=null,i}];i>s;s++)if(n=M.relative[e[s].type])c=[f(d(c),n)];else{if(n=M.filter[e[s].type].apply(null,e[s].matches),n[U]){for(r=++s;i>r&&!M.relative[e[r].type];r++);return v(s>1&&d(c),s>1&&p(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(ue,"$1"),n,r>s&&y(e.slice(s,r)),i>r&&y(e=e.slice(r)),i>r&&p(e))}c.push(n)}return d(c)}function b(e,n){var i=n.length>0,a=e.length>0,o=function(r,o,s,u,h){var c,l,p,f=0,d="0",m=r&&[],v=[],y=A,b=r||a&&M.find.TAG("*",h),x=I+=null==y?1:Math.random()||.1,w=b.length;
for(h&&(A=o!==D&&o);d!==w&&null!=(c=b[d]);d++){if(a&&c){for(l=0;p=e[l++];)if(p(c,o,s)){u.push(c);break}h&&(I=x)}i&&((c=!p&&c)&&f--,r&&m.push(c))}if(f+=d,i&&d!==f){for(l=0;p=n[l++];)p(m,v,o,s);if(r){if(f>0)for(;d--;)m[d]||v[d]||(v[d]=Q.call(u));v=g(v)}J.apply(u,v),h&&!r&&v.length>0&&f+n.length>1&&t.uniqueSort(u)}return h&&(I=x,A=y),m};return i?r(o):o}var x,w,M,S,_,T,E,C,A,L,P,k,D,R,F,O,V,N,B,U="sizzle"+1*new Date,G=e.document,I=0,j=0,z=n(),H=n(),W=n(),X=function(e,t){return e===t&&(P=!0),0},q=1<<31,Y={}.hasOwnProperty,K=[],Q=K.pop,Z=K.push,J=K.push,$=K.slice,ee=function(e,t){for(var n=0,r=e.length;r>n;n++)if(e[n]===t)return n;return-1},te="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",ne="[\\x20\\t\\r\\n\\f]",re="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",ie=re.replace("w","w#"),ae="\\["+ne+"*("+re+")(?:"+ne+"*([*^$|!~]?=)"+ne+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ie+"))|)"+ne+"*\\]",oe=":("+re+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+ae+")*)|.*)\\)|)",se=new RegExp(ne+"+","g"),ue=new RegExp("^"+ne+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ne+"+$","g"),he=new RegExp("^"+ne+"*,"+ne+"*"),ce=new RegExp("^"+ne+"*([>+~]|"+ne+")"+ne+"*"),le=new RegExp("="+ne+"*([^\\]'\"]*?)"+ne+"*\\]","g"),pe=new RegExp(oe),fe=new RegExp("^"+ie+"$"),de={ID:new RegExp("^#("+re+")"),CLASS:new RegExp("^\\.("+re+")"),TAG:new RegExp("^("+re.replace("w","w*")+")"),ATTR:new RegExp("^"+ae),PSEUDO:new RegExp("^"+oe),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ne+"*(even|odd|(([+-]|)(\\d*)n|)"+ne+"*(?:([+-]|)"+ne+"*(\\d+)|))"+ne+"*\\)|)","i"),bool:new RegExp("^(?:"+te+")$","i"),needsContext:new RegExp("^"+ne+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ne+"*((?:-\\d)?\\d*)"+ne+"*\\)|)(?=[^-]|$)","i")},me=/^(?:input|select|textarea|button)$/i,ge=/^h\d$/i,ve=/^[^{]+\{\s*\[native \w/,ye=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,be=/[+~]/,xe=/'|\\/g,we=new RegExp("\\\\([\\da-f]{1,6}"+ne+"?|("+ne+")|.)","ig"),Me=function(e,t,n){var r="0x"+t-65536;return r!==r||n?t:0>r?String.fromCharCode(r+65536):String.fromCharCode(r>>10|55296,1023&r|56320)},Se=function(){k()};try{J.apply(K=$.call(G.childNodes),G.childNodes),K[G.childNodes.length].nodeType}catch(_e){J={apply:K.length?function(e,t){Z.apply(e,$.call(t))}:function(e,t){for(var n=e.length,r=0;e[n++]=t[r++];);e.length=n-1}}}w=t.support={},_=t.isXML=function(e){var t=e&&(e.ownerDocument||e).documentElement;return t?"HTML"!==t.nodeName:!1},k=t.setDocument=function(e){var t,n,r=e?e.ownerDocument||e:G;return r!==D&&9===r.nodeType&&r.documentElement?(D=r,R=r.documentElement,n=r.defaultView,n&&n!==n.top&&(n.addEventListener?n.addEventListener("unload",Se,!1):n.attachEvent&&n.attachEvent("onunload",Se)),F=!_(r),w.attributes=i(function(e){return e.className="i",!e.getAttribute("className")}),w.getElementsByTagName=i(function(e){return e.appendChild(r.createComment("")),!e.getElementsByTagName("*").length}),w.getElementsByClassName=ve.test(r.getElementsByClassName),w.getById=i(function(e){return R.appendChild(e).id=U,!r.getElementsByName||!r.getElementsByName(U).length}),w.getById?(M.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&F){var n=t.getElementById(e);return n&&n.parentNode?[n]:[]}},M.filter.ID=function(e){var t=e.replace(we,Me);return function(e){return e.getAttribute("id")===t}}):(delete M.find.ID,M.filter.ID=function(e){var t=e.replace(we,Me);return function(e){var n="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return n&&n.value===t}}),M.find.TAG=w.getElementsByTagName?function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):w.qsa?t.querySelectorAll(e):void 0}:function(e,t){var n,r=[],i=0,a=t.getElementsByTagName(e);if("*"===e){for(;n=a[i++];)1===n.nodeType&&r.push(n);return r}return a},M.find.CLASS=w.getElementsByClassName&&function(e,t){return F?t.getElementsByClassName(e):void 0},V=[],O=[],(w.qsa=ve.test(r.querySelectorAll))&&(i(function(e){R.appendChild(e).innerHTML="<a id='"+U+"'></a><select id='"+U+"-\f]' msallowcapture=''><option selected=''></option></select>",e.querySelectorAll("[msallowcapture^='']").length&&O.push("[*^$]="+ne+"*(?:''|\"\")"),e.querySelectorAll("[selected]").length||O.push("\\["+ne+"*(?:value|"+te+")"),e.querySelectorAll("[id~="+U+"-]").length||O.push("~="),e.querySelectorAll(":checked").length||O.push(":checked"),e.querySelectorAll("a#"+U+"+*").length||O.push(".#.+[+~]")}),i(function(e){var t=r.createElement("input");t.setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),e.querySelectorAll("[name=d]").length&&O.push("name"+ne+"*[*^$|!~]?="),e.querySelectorAll(":enabled").length||O.push(":enabled",":disabled"),e.querySelectorAll("*,:x"),O.push(",.*:")})),(w.matchesSelector=ve.test(N=R.matches||R.webkitMatchesSelector||R.mozMatchesSelector||R.oMatchesSelector||R.msMatchesSelector))&&i(function(e){w.disconnectedMatch=N.call(e,"div"),N.call(e,"[s!='']:x"),V.push("!=",oe)}),O=O.length&&new RegExp(O.join("|")),V=V.length&&new RegExp(V.join("|")),t=ve.test(R.compareDocumentPosition),B=t||ve.test(R.contains)?function(e,t){var n=9===e.nodeType?e.documentElement:e,r=t&&t.parentNode;return e===r||!(!r||1!==r.nodeType||!(n.contains?n.contains(r):e.compareDocumentPosition&&16&e.compareDocumentPosition(r)))}:function(e,t){if(t)for(;t=t.parentNode;)if(t===e)return!0;return!1},X=t?function(e,t){if(e===t)return P=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n?n:(n=(e.ownerDocument||e)===(t.ownerDocument||t)?e.compareDocumentPosition(t):1,1&n||!w.sortDetached&&t.compareDocumentPosition(e)===n?e===r||e.ownerDocument===G&&B(G,e)?-1:t===r||t.ownerDocument===G&&B(G,t)?1:L?ee(L,e)-ee(L,t):0:4&n?-1:1)}:function(e,t){if(e===t)return P=!0,0;var n,i=0,a=e.parentNode,s=t.parentNode,u=[e],h=[t];if(!a||!s)return e===r?-1:t===r?1:a?-1:s?1:L?ee(L,e)-ee(L,t):0;if(a===s)return o(e,t);for(n=e;n=n.parentNode;)u.unshift(n);for(n=t;n=n.parentNode;)h.unshift(n);for(;u[i]===h[i];)i++;return i?o(u[i],h[i]):u[i]===G?-1:h[i]===G?1:0},r):D},t.matches=function(e,n){return t(e,null,null,n)},t.matchesSelector=function(e,n){if((e.ownerDocument||e)!==D&&k(e),n=n.replace(le,"='$1']"),w.matchesSelector&&F&&(!V||!V.test(n))&&(!O||!O.test(n)))try{var r=N.call(e,n);if(r||w.disconnectedMatch||e.document&&11!==e.document.nodeType)return r}catch(i){}return t(n,D,null,[e]).length>0},t.contains=function(e,t){return(e.ownerDocument||e)!==D&&k(e),B(e,t)},t.attr=function(e,t){(e.ownerDocument||e)!==D&&k(e);var n=M.attrHandle[t.toLowerCase()],r=n&&Y.call(M.attrHandle,t.toLowerCase())?n(e,t,!F):void 0;return void 0!==r?r:w.attributes||!F?e.getAttribute(t):(r=e.getAttributeNode(t))&&r.specified?r.value:null},t.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},t.uniqueSort=function(e){var t,n=[],r=0,i=0;if(P=!w.detectDuplicates,L=!w.sortStable&&e.slice(0),e.sort(X),P){for(;t=e[i++];)t===e[i]&&(r=n.push(i));for(;r--;)e.splice(n[r],1)}return L=null,e},S=t.getText=function(e){var t,n="",r=0,i=e.nodeType;if(i){if(1===i||9===i||11===i){if("string"==typeof e.textContent)return e.textContent;for(e=e.firstChild;e;e=e.nextSibling)n+=S(e)}else if(3===i||4===i)return e.nodeValue}else for(;t=e[r++];)n+=S(t);return n},M=t.selectors={cacheLength:50,createPseudo:r,match:de,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(we,Me),e[3]=(e[3]||e[4]||e[5]||"").replace(we,Me),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||t.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&t.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return de.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&pe.test(n)&&(t=T(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(we,Me).toLowerCase();return"*"===e?function(){return!0}:function(e){return e.nodeName&&e.nodeName.toLowerCase()===t}},CLASS:function(e){var t=z[e+" "];return t||(t=new RegExp("(^|"+ne+")"+e+"("+ne+"|$)"))&&z(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(e,n,r){return function(i){var a=t.attr(i,e);return null==a?"!="===n:n?(a+="","="===n?a===r:"!="===n?a!==r:"^="===n?r&&0===a.indexOf(r):"*="===n?r&&a.indexOf(r)>-1:"$="===n?r&&a.slice(-r.length)===r:"~="===n?(" "+a.replace(se," ")+" ").indexOf(r)>-1:"|="===n?a===r||a.slice(0,r.length+1)===r+"-":!1):!0}},CHILD:function(e,t,n,r,i){var a="nth"!==e.slice(0,3),o="last"!==e.slice(-4),s="of-type"===t;return 1===r&&0===i?function(e){return!!e.parentNode}:function(t,n,u){var h,c,l,p,f,d,m=a!==o?"nextSibling":"previousSibling",g=t.parentNode,v=s&&t.nodeName.toLowerCase(),y=!u&&!s;if(g){if(a){for(;m;){for(l=t;l=l[m];)if(s?l.nodeName.toLowerCase()===v:1===l.nodeType)return!1;d=m="only"===e&&!d&&"nextSibling"}return!0}if(d=[o?g.firstChild:g.lastChild],o&&y){for(c=g[U]||(g[U]={}),h=c[e]||[],f=h[0]===I&&h[1],p=h[0]===I&&h[2],l=f&&g.childNodes[f];l=++f&&l&&l[m]||(p=f=0)||d.pop();)if(1===l.nodeType&&++p&&l===t){c[e]=[I,f,p];break}}else if(y&&(h=(t[U]||(t[U]={}))[e])&&h[0]===I)p=h[1];else for(;(l=++f&&l&&l[m]||(p=f=0)||d.pop())&&((s?l.nodeName.toLowerCase()!==v:1!==l.nodeType)||!++p||(y&&((l[U]||(l[U]={}))[e]=[I,p]),l!==t)););return p-=i,p===r||p%r===0&&p/r>=0}}},PSEUDO:function(e,n){var i,a=M.pseudos[e]||M.setFilters[e.toLowerCase()]||t.error("unsupported pseudo: "+e);return a[U]?a(n):a.length>1?(i=[e,e,"",n],M.setFilters.hasOwnProperty(e.toLowerCase())?r(function(e,t){for(var r,i=a(e,n),o=i.length;o--;)r=ee(e,i[o]),e[r]=!(t[r]=i[o])}):function(e){return a(e,0,i)}):a}},pseudos:{not:r(function(e){var t=[],n=[],i=E(e.replace(ue,"$1"));return i[U]?r(function(e,t,n,r){for(var a,o=i(e,null,r,[]),s=e.length;s--;)(a=o[s])&&(e[s]=!(t[s]=a))}):function(e,r,a){return t[0]=e,i(t,null,a,n),t[0]=null,!n.pop()}}),has:r(function(e){return function(n){return t(e,n).length>0}}),contains:r(function(e){return e=e.replace(we,Me),function(t){return(t.textContent||t.innerText||S(t)).indexOf(e)>-1}}),lang:r(function(e){return fe.test(e||"")||t.error("unsupported lang: "+e),e=e.replace(we,Me).toLowerCase(),function(t){var n;do if(n=F?t.lang:t.getAttribute("xml:lang")||t.getAttribute("lang"))return n=n.toLowerCase(),n===e||0===n.indexOf(e+"-");while((t=t.parentNode)&&1===t.nodeType);return!1}}),target:function(t){var n=e.location&&e.location.hash;return n&&n.slice(1)===t.id},root:function(e){return e===R},focus:function(e){return e===D.activeElement&&(!D.hasFocus||D.hasFocus())&&!!(e.type||e.href||~e.tabIndex)},enabled:function(e){return e.disabled===!1},disabled:function(e){return e.disabled===!0},checked:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&!!e.checked||"option"===t&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,e.selected===!0},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!M.pseudos.empty(e)},header:function(e){return ge.test(e.nodeName)},input:function(e){return me.test(e.nodeName)},button:function(e){var t=e.nodeName.toLowerCase();return"input"===t&&"button"===e.type||"button"===t},text:function(e){var t;return"input"===e.nodeName.toLowerCase()&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:h(function(){return[0]}),last:h(function(e,t){return[t-1]}),eq:h(function(e,t,n){return[0>n?n+t:n]}),even:h(function(e,t){for(var n=0;t>n;n+=2)e.push(n);return e}),odd:h(function(e,t){for(var n=1;t>n;n+=2)e.push(n);return e}),lt:h(function(e,t,n){for(var r=0>n?n+t:n;--r>=0;)e.push(r);return e}),gt:h(function(e,t,n){for(var r=0>n?n+t:n;++r<t;)e.push(r);return e})}},M.pseudos.nth=M.pseudos.eq;for(x in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})M.pseudos[x]=s(x);for(x in{submit:!0,reset:!0})M.pseudos[x]=u(x);return l.prototype=M.filters=M.pseudos,M.setFilters=new l,T=t.tokenize=function(e,n){var r,i,a,o,s,u,h,c=H[e+" "];if(c)return n?0:c.slice(0);for(s=e,u=[],h=M.preFilter;s;){(!r||(i=he.exec(s)))&&(i&&(s=s.slice(i[0].length)||s),u.push(a=[])),r=!1,(i=ce.exec(s))&&(r=i.shift(),a.push({value:r,type:i[0].replace(ue," ")}),s=s.slice(r.length));for(o in M.filter)!(i=de[o].exec(s))||h[o]&&!(i=h[o](i))||(r=i.shift(),a.push({value:r,type:o,matches:i}),s=s.slice(r.length));if(!r)break}return n?s.length:s?t.error(e):H(e,u).slice(0)},E=t.compile=function(e,t){var n,r=[],i=[],a=W[e+" "];if(!a){for(t||(t=T(e)),n=t.length;n--;)a=y(t[n]),a[U]?r.push(a):i.push(a);a=W(e,b(i,r)),a.selector=e}return a},C=t.select=function(e,t,n,r){var i,a,o,s,u,h="function"==typeof e&&e,l=!r&&T(e=h.selector||e);if(n=n||[],1===l.length){if(a=l[0]=l[0].slice(0),a.length>2&&"ID"===(o=a[0]).type&&w.getById&&9===t.nodeType&&F&&M.relative[a[1].type]){if(t=(M.find.ID(o.matches[0].replace(we,Me),t)||[])[0],!t)return n;h&&(t=t.parentNode),e=e.slice(a.shift().value.length)}for(i=de.needsContext.test(e)?0:a.length;i--&&(o=a[i],!M.relative[s=o.type]);)if((u=M.find[s])&&(r=u(o.matches[0].replace(we,Me),be.test(a[0].type)&&c(t.parentNode)||t))){if(a.splice(i,1),e=r.length&&p(a),!e)return J.apply(n,r),n;break}}return(h||E(e,l))(r,t,!F,n,be.test(e)&&c(t.parentNode)||t),n},w.sortStable=U.split("").sort(X).join("")===U,w.detectDuplicates=!!P,k(),w.sortDetached=i(function(e){return 1&e.compareDocumentPosition(D.createElement("div"))}),i(function(e){return e.innerHTML="<a href='#'></a>","#"===e.firstChild.getAttribute("href")})||a("type|href|height|width",function(e,t,n){return n?void 0:e.getAttribute(t,"type"===t.toLowerCase()?1:2)}),w.attributes&&i(function(e){return e.innerHTML="<input/>",e.firstChild.setAttribute("value",""),""===e.firstChild.getAttribute("value")})||a("value",function(e,t,n){return n||"input"!==e.nodeName.toLowerCase()?void 0:e.defaultValue}),i(function(e){return null==e.getAttribute("disabled")})||a(te,function(e,t,n){var r;return n?void 0:e[t]===!0?t.toLowerCase():(r=e.getAttributeNode(t))&&r.specified?r.value:null}),t}(e);$.find=ie,$.expr=ie.selectors,$.expr[":"]=$.expr.pseudos,$.unique=ie.uniqueSort,$.text=ie.getText,$.isXMLDoc=ie.isXML,$.contains=ie.contains;var ae=$.expr.match.needsContext,oe=/^<(\w+)\s*\/?>(?:<\/\1>|)$/,se=/^.[^:#\[\.,]*$/;$.filter=function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?$.find.matchesSelector(r,e)?[r]:[]:$.find.matches(e,$.grep(t,function(e){return 1===e.nodeType}))},$.fn.extend({find:function(e){var t,n=this.length,r=[],i=this;if("string"!=typeof e)return this.pushStack($(e).filter(function(){for(t=0;n>t;t++)if($.contains(i[t],this))return!0}));for(t=0;n>t;t++)$.find(e,i[t],r);return r=this.pushStack(n>1?$.unique(r):r),r.selector=this.selector?this.selector+" "+e:e,r},filter:function(e){return this.pushStack(r(this,e||[],!1))},not:function(e){return this.pushStack(r(this,e||[],!0))},is:function(e){return!!r(this,"string"==typeof e&&ae.test(e)?$(e):e||[],!1).length}});var ue,he=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,ce=$.fn.init=function(e,t){var n,r;if(!e)return this;if("string"==typeof e){if(n="<"===e[0]&&">"===e[e.length-1]&&e.length>=3?[null,e,null]:he.exec(e),!n||!n[1]&&t)return!t||t.jquery?(t||ue).find(e):this.constructor(t).find(e);if(n[1]){if(t=t instanceof $?t[0]:t,$.merge(this,$.parseHTML(n[1],t&&t.nodeType?t.ownerDocument||t:Z,!0)),oe.test(n[1])&&$.isPlainObject(t))for(n in t)$.isFunction(this[n])?this[n](t[n]):this.attr(n,t[n]);return this}return r=Z.getElementById(n[2]),r&&r.parentNode&&(this.length=1,this[0]=r),this.context=Z,this.selector=e,this}return e.nodeType?(this.context=this[0]=e,this.length=1,this):$.isFunction(e)?"undefined"!=typeof ue.ready?ue.ready(e):e($):(void 0!==e.selector&&(this.selector=e.selector,this.context=e.context),$.makeArray(e,this))};ce.prototype=$.fn,ue=$(Z);var le=/^(?:parents|prev(?:Until|All))/,pe={children:!0,contents:!0,next:!0,prev:!0};$.extend({dir:function(e,t,n){for(var r=[],i=void 0!==n;(e=e[t])&&9!==e.nodeType;)if(1===e.nodeType){if(i&&$(e).is(n))break;r.push(e)}return r},sibling:function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n}}),$.fn.extend({has:function(e){var t=$(e,this),n=t.length;return this.filter(function(){for(var e=0;n>e;e++)if($.contains(this,t[e]))return!0})},closest:function(e,t){for(var n,r=0,i=this.length,a=[],o=ae.test(e)||"string"!=typeof e?$(e,t||this.context):0;i>r;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(o?o.index(n)>-1:1===n.nodeType&&$.find.matchesSelector(n,e))){a.push(n);break}return this.pushStack(a.length>1?$.unique(a):a)},index:function(e){return e?"string"==typeof e?X.call($(e),this[0]):X.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack($.unique($.merge(this.get(),$(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),$.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return $.dir(e,"parentNode")},parentsUntil:function(e,t,n){return $.dir(e,"parentNode",n)},next:function(e){return i(e,"nextSibling")},prev:function(e){return i(e,"previousSibling")},nextAll:function(e){return $.dir(e,"nextSibling")},prevAll:function(e){return $.dir(e,"previousSibling")},nextUntil:function(e,t,n){return $.dir(e,"nextSibling",n)},prevUntil:function(e,t,n){return $.dir(e,"previousSibling",n)},siblings:function(e){return $.sibling((e.parentNode||{}).firstChild,e)},children:function(e){return $.sibling(e.firstChild)},contents:function(e){return e.contentDocument||$.merge([],e.childNodes)}},function(e,t){$.fn[e]=function(n,r){var i=$.map(this,t,n);return"Until"!==e.slice(-5)&&(r=n),r&&"string"==typeof r&&(i=$.filter(r,i)),this.length>1&&(pe[e]||$.unique(i),le.test(e)&&i.reverse()),this.pushStack(i)}});var fe=/\S+/g,de={};$.Callbacks=function(e){e="string"==typeof e?de[e]||a(e):$.extend({},e);var t,n,r,i,o,s,u=[],h=!e.once&&[],c=function(a){for(t=e.memory&&a,n=!0,s=i||0,i=0,o=u.length,r=!0;u&&o>s;s++)if(u[s].apply(a[0],a[1])===!1&&e.stopOnFalse){t=!1;break}r=!1,u&&(h?h.length&&c(h.shift()):t?u=[]:l.disable())},l={add:function(){if(u){var n=u.length;!function a(t){$.each(t,function(t,n){var r=$.type(n);"function"===r?e.unique&&l.has(n)||u.push(n):n&&n.length&&"string"!==r&&a(n)})}(arguments),r?o=u.length:t&&(i=n,c(t))}return this},remove:function(){return u&&$.each(arguments,function(e,t){for(var n;(n=$.inArray(t,u,n))>-1;)u.splice(n,1),r&&(o>=n&&o--,s>=n&&s--)}),this},has:function(e){return e?$.inArray(e,u)>-1:!(!u||!u.length)},empty:function(){return u=[],o=0,this},disable:function(){return u=h=t=void 0,this},disabled:function(){return!u},lock:function(){return h=void 0,t||l.disable(),this},locked:function(){return!h},fireWith:function(e,t){return!u||n&&!h||(t=t||[],t=[e,t.slice?t.slice():t],r?h.push(t):c(t)),this},fire:function(){return l.fireWith(this,arguments),this},fired:function(){return!!n}};return l},$.extend({Deferred:function(e){var t=[["resolve","done",$.Callbacks("once memory"),"resolved"],["reject","fail",$.Callbacks("once memory"),"rejected"],["notify","progress",$.Callbacks("memory")]],n="pending",r={state:function(){return n},always:function(){return i.done(arguments).fail(arguments),this},then:function(){var e=arguments;return $.Deferred(function(n){$.each(t,function(t,a){var o=$.isFunction(e[t])&&e[t];i[a[1]](function(){var e=o&&o.apply(this,arguments);e&&$.isFunction(e.promise)?e.promise().done(n.resolve).fail(n.reject).progress(n.notify):n[a[0]+"With"](this===r?n.promise():this,o?[e]:arguments)})}),e=null}).promise()},promise:function(e){return null!=e?$.extend(e,r):r}},i={};return r.pipe=r.then,$.each(t,function(e,a){var o=a[2],s=a[3];r[a[1]]=o.add,s&&o.add(function(){n=s},t[1^e][2].disable,t[2][2].lock),i[a[0]]=function(){return i[a[0]+"With"](this===i?r:this,arguments),this},i[a[0]+"With"]=o.fireWith}),r.promise(i),e&&e.call(i,i),i},when:function(e){var t,n,r,i=0,a=z.call(arguments),o=a.length,s=1!==o||e&&$.isFunction(e.promise)?o:0,u=1===s?e:$.Deferred(),h=function(e,n,r){return function(i){n[e]=this,r[e]=arguments.length>1?z.call(arguments):i,r===t?u.notifyWith(n,r):--s||u.resolveWith(n,r)}};if(o>1)for(t=new Array(o),n=new Array(o),r=new Array(o);o>i;i++)a[i]&&$.isFunction(a[i].promise)?a[i].promise().done(h(i,r,a)).fail(u.reject).progress(h(i,n,t)):--s;return s||u.resolveWith(r,a),u.promise()}});var me;$.fn.ready=function(e){return $.ready.promise().done(e),this},$.extend({isReady:!1,readyWait:1,holdReady:function(e){e?$.readyWait++:$.ready(!0)},ready:function(e){(e===!0?--$.readyWait:$.isReady)||($.isReady=!0,e!==!0&&--$.readyWait>0||(me.resolveWith(Z,[$]),$.fn.triggerHandler&&($(Z).triggerHandler("ready"),$(Z).off("ready"))))}}),$.ready.promise=function(t){return me||(me=$.Deferred(),"complete"===Z.readyState?setTimeout($.ready):(Z.addEventListener("DOMContentLoaded",o,!1),e.addEventListener("load",o,!1))),me.promise(t)},$.ready.promise();var ge=$.access=function(e,t,n,r,i,a,o){var s=0,u=e.length,h=null==n;if("object"===$.type(n)){i=!0;for(s in n)$.access(e,t,s,n[s],!0,a,o)}else if(void 0!==r&&(i=!0,$.isFunction(r)||(o=!0),h&&(o?(t.call(e,r),t=null):(h=t,t=function(e,t,n){return h.call($(e),n)})),t))for(;u>s;s++)t(e[s],n,o?r:r.call(e[s],s,t(e[s],n)));return i?e:h?t.call(e):u?t(e[0],n):a};$.acceptData=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType},s.uid=1,s.accepts=$.acceptData,s.prototype={key:function(e){if(!s.accepts(e))return 0;var t={},n=e[this.expando];if(!n){n=s.uid++;try{t[this.expando]={value:n},Object.defineProperties(e,t)}catch(r){t[this.expando]=n,$.extend(e,t)}}return this.cache[n]||(this.cache[n]={}),n},set:function(e,t,n){var r,i=this.key(e),a=this.cache[i];if("string"==typeof t)a[t]=n;else if($.isEmptyObject(a))$.extend(this.cache[i],t);else for(r in t)a[r]=t[r];return a},get:function(e,t){var n=this.cache[this.key(e)];return void 0===t?n:n[t]},access:function(e,t,n){var r;return void 0===t||t&&"string"==typeof t&&void 0===n?(r=this.get(e,t),void 0!==r?r:this.get(e,$.camelCase(t))):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r,i,a=this.key(e),o=this.cache[a];if(void 0===t)this.cache[a]={};else{$.isArray(t)?r=t.concat(t.map($.camelCase)):(i=$.camelCase(t),t in o?r=[t,i]:(r=i,r=r in o?[r]:r.match(fe)||[])),n=r.length;for(;n--;)delete o[r[n]]}},hasData:function(e){return!$.isEmptyObject(this.cache[e[this.expando]]||{})},discard:function(e){e[this.expando]&&delete this.cache[e[this.expando]]}};var ve=new s,ye=new s,be=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,xe=/([A-Z])/g;$.extend({hasData:function(e){return ye.hasData(e)||ve.hasData(e)},data:function(e,t,n){return ye.access(e,t,n)},removeData:function(e,t){ye.remove(e,t)},_data:function(e,t,n){return ve.access(e,t,n)},_removeData:function(e,t){ve.remove(e,t)}}),$.fn.extend({data:function(e,t){var n,r,i,a=this[0],o=a&&a.attributes;if(void 0===e){if(this.length&&(i=ye.get(a),1===a.nodeType&&!ve.get(a,"hasDataAttrs"))){for(n=o.length;n--;)o[n]&&(r=o[n].name,0===r.indexOf("data-")&&(r=$.camelCase(r.slice(5)),u(a,r,i[r])));ve.set(a,"hasDataAttrs",!0)}return i}return"object"==typeof e?this.each(function(){ye.set(this,e)}):ge(this,function(t){var n,r=$.camelCase(e);if(a&&void 0===t){if(n=ye.get(a,e),void 0!==n)return n;if(n=ye.get(a,r),void 0!==n)return n;if(n=u(a,r,void 0),void 0!==n)return n}else this.each(function(){var n=ye.get(this,r);ye.set(this,r,t),-1!==e.indexOf("-")&&void 0!==n&&ye.set(this,e,t)})},null,t,arguments.length>1,null,!0)},removeData:function(e){return this.each(function(){ye.remove(this,e)})}}),$.extend({queue:function(e,t,n){var r;return e?(t=(t||"fx")+"queue",r=ve.get(e,t),n&&(!r||$.isArray(n)?r=ve.access(e,t,$.makeArray(n)):r.push(n)),r||[]):void 0},dequeue:function(e,t){t=t||"fx";var n=$.queue(e,t),r=n.length,i=n.shift(),a=$._queueHooks(e,t),o=function(){$.dequeue(e,t)};"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete a.stop,i.call(e,o,a)),!r&&a&&a.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return ve.get(e,n)||ve.access(e,n,{empty:$.Callbacks("once memory").add(function(){ve.remove(e,[t+"queue",n])})})}}),$.fn.extend({queue:function(e,t){var n=2;return"string"!=typeof e&&(t=e,e="fx",n--),arguments.length<n?$.queue(this[0],e):void 0===t?this:this.each(function(){var n=$.queue(this,e,t);$._queueHooks(this,e),"fx"===e&&"inprogress"!==n[0]&&$.dequeue(this,e)})},dequeue:function(e){return this.each(function(){$.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,r=1,i=$.Deferred(),a=this,o=this.length,s=function(){--r||i.resolveWith(a,[a])};for("string"!=typeof e&&(t=e,e=void 0),e=e||"fx";o--;)n=ve.get(a[o],e+"queueHooks"),n&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var we=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Me=["Top","Right","Bottom","Left"],Se=function(e,t){return e=t||e,"none"===$.css(e,"display")||!$.contains(e.ownerDocument,e)},_e=/^(?:checkbox|radio)$/i;!function(){var e=Z.createDocumentFragment(),t=e.appendChild(Z.createElement("div")),n=Z.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),t.appendChild(n),Q.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",Q.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var Te="undefined";Q.focusinBubbles="onfocusin"in e;var Ee=/^key/,Ce=/^(?:mouse|pointer|contextmenu)|click/,Ae=/^(?:focusinfocus|focusoutblur)$/,Le=/^([^.]*)(?:\.(.+)|)$/;$.event={global:{},add:function(e,t,n,r,i){var a,o,s,u,h,c,l,p,f,d,m,g=ve.get(e);if(g)for(n.handler&&(a=n,n=a.handler,i=a.selector),n.guid||(n.guid=$.guid++),(u=g.events)||(u=g.events={}),(o=g.handle)||(o=g.handle=function(t){return typeof $!==Te&&$.event.triggered!==t.type?$.event.dispatch.apply(e,arguments):void 0}),t=(t||"").match(fe)||[""],h=t.length;h--;)s=Le.exec(t[h])||[],f=m=s[1],d=(s[2]||"").split(".").sort(),f&&(l=$.event.special[f]||{},f=(i?l.delegateType:l.bindType)||f,l=$.event.special[f]||{},c=$.extend({type:f,origType:m,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&$.expr.match.needsContext.test(i),namespace:d.join(".")},a),(p=u[f])||(p=u[f]=[],p.delegateCount=0,l.setup&&l.setup.call(e,r,d,o)!==!1||e.addEventListener&&e.addEventListener(f,o,!1)),l.add&&(l.add.call(e,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),$.event.global[f]=!0)},remove:function(e,t,n,r,i){var a,o,s,u,h,c,l,p,f,d,m,g=ve.hasData(e)&&ve.get(e);if(g&&(u=g.events)){for(t=(t||"").match(fe)||[""],h=t.length;h--;)if(s=Le.exec(t[h])||[],f=m=s[1],d=(s[2]||"").split(".").sort(),f){for(l=$.event.special[f]||{},f=(r?l.delegateType:l.bindType)||f,p=u[f]||[],s=s[2]&&new RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"),o=a=p.length;a--;)c=p[a],!i&&m!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&("**"!==r||!c.selector)||(p.splice(a,1),c.selector&&p.delegateCount--,l.remove&&l.remove.call(e,c));o&&!p.length&&(l.teardown&&l.teardown.call(e,d,g.handle)!==!1||$.removeEvent(e,f,g.handle),delete u[f])}else for(f in u)$.event.remove(e,f+t[h],n,r,!0);$.isEmptyObject(u)&&(delete g.handle,ve.remove(e,"events"))}},trigger:function(t,n,r,i){var a,o,s,u,h,c,l,p=[r||Z],f=K.call(t,"type")?t.type:t,d=K.call(t,"namespace")?t.namespace.split("."):[];if(o=s=r=r||Z,3!==r.nodeType&&8!==r.nodeType&&!Ae.test(f+$.event.triggered)&&(f.indexOf(".")>=0&&(d=f.split("."),f=d.shift(),d.sort()),h=f.indexOf(":")<0&&"on"+f,t=t[$.expando]?t:new $.Event(f,"object"==typeof t&&t),t.isTrigger=i?2:3,t.namespace=d.join("."),t.namespace_re=t.namespace?new RegExp("(^|\\.)"+d.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,t.result=void 0,t.target||(t.target=r),n=null==n?[t]:$.makeArray(n,[t]),l=$.event.special[f]||{},i||!l.trigger||l.trigger.apply(r,n)!==!1)){if(!i&&!l.noBubble&&!$.isWindow(r)){for(u=l.delegateType||f,Ae.test(u+f)||(o=o.parentNode);o;o=o.parentNode)p.push(o),s=o;s===(r.ownerDocument||Z)&&p.push(s.defaultView||s.parentWindow||e)}for(a=0;(o=p[a++])&&!t.isPropagationStopped();)t.type=a>1?u:l.bindType||f,c=(ve.get(o,"events")||{})[t.type]&&ve.get(o,"handle"),c&&c.apply(o,n),c=h&&o[h],c&&c.apply&&$.acceptData(o)&&(t.result=c.apply(o,n),t.result===!1&&t.preventDefault());return t.type=f,i||t.isDefaultPrevented()||l._default&&l._default.apply(p.pop(),n)!==!1||!$.acceptData(r)||h&&$.isFunction(r[f])&&!$.isWindow(r)&&(s=r[h],s&&(r[h]=null),$.event.triggered=f,r[f](),$.event.triggered=void 0,s&&(r[h]=s)),t.result}},dispatch:function(e){e=$.event.fix(e);var t,n,r,i,a,o=[],s=z.call(arguments),u=(ve.get(this,"events")||{})[e.type]||[],h=$.event.special[e.type]||{};if(s[0]=e,e.delegateTarget=this,!h.preDispatch||h.preDispatch.call(this,e)!==!1){for(o=$.event.handlers.call(this,e,u),t=0;(i=o[t++])&&!e.isPropagationStopped();)for(e.currentTarget=i.elem,n=0;(a=i.handlers[n++])&&!e.isImmediatePropagationStopped();)(!e.namespace_re||e.namespace_re.test(a.namespace))&&(e.handleObj=a,e.data=a.data,r=(($.event.special[a.origType]||{}).handle||a.handler).apply(i.elem,s),void 0!==r&&(e.result=r)===!1&&(e.preventDefault(),e.stopPropagation()));return h.postDispatch&&h.postDispatch.call(this,e),e.result}},handlers:function(e,t){var n,r,i,a,o=[],s=t.delegateCount,u=e.target;if(s&&u.nodeType&&(!e.button||"click"!==e.type))for(;u!==this;u=u.parentNode||this)if(u.disabled!==!0||"click"!==e.type){for(r=[],n=0;s>n;n++)a=t[n],i=a.selector+" ",void 0===r[i]&&(r[i]=a.needsContext?$(i,this).index(u)>=0:$.find(i,this,null,[u]).length),r[i]&&r.push(a);r.length&&o.push({elem:u,handlers:r})}return s<t.length&&o.push({elem:this,handlers:t.slice(s)}),o},props:"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(e,t){return null==e.which&&(e.which=null!=t.charCode?t.charCode:t.keyCode),e}},mouseHooks:{props:"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(e,t){var n,r,i,a=t.button;return null==e.pageX&&null!=t.clientX&&(n=e.target.ownerDocument||Z,r=n.documentElement,i=n.body,e.pageX=t.clientX+(r&&r.scrollLeft||i&&i.scrollLeft||0)-(r&&r.clientLeft||i&&i.clientLeft||0),e.pageY=t.clientY+(r&&r.scrollTop||i&&i.scrollTop||0)-(r&&r.clientTop||i&&i.clientTop||0)),e.which||void 0===a||(e.which=1&a?1:2&a?3:4&a?2:0),e}},fix:function(e){if(e[$.expando])return e;var t,n,r,i=e.type,a=e,o=this.fixHooks[i];for(o||(this.fixHooks[i]=o=Ce.test(i)?this.mouseHooks:Ee.test(i)?this.keyHooks:{}),r=o.props?this.props.concat(o.props):this.props,e=new $.Event(a),t=r.length;t--;)n=r[t],e[n]=a[n];return e.target||(e.target=Z),3===e.target.nodeType&&(e.target=e.target.parentNode),o.filter?o.filter(e,a):e},special:{load:{noBubble:!0},focus:{trigger:function(){return this!==l()&&this.focus?(this.focus(),!1):void 0},delegateType:"focusin"},blur:{trigger:function(){return this===l()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return"checkbox"===this.type&&this.click&&$.nodeName(this,"input")?(this.click(),!1):void 0},_default:function(e){return $.nodeName(e.target,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}},simulate:function(e,t,n,r){var i=$.extend(new $.Event,n,{type:e,isSimulated:!0,originalEvent:{}});r?$.event.trigger(i,null,t):$.event.dispatch.call(t,i),i.isDefaultPrevented()&&n.preventDefault()}},$.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n,!1)},$.Event=function(e,t){return this instanceof $.Event?(e&&e.type?(this.originalEvent=e,this.type=e.type,
this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&e.returnValue===!1?h:c):this.type=e,t&&$.extend(this,t),this.timeStamp=e&&e.timeStamp||$.now(),void(this[$.expando]=!0)):new $.Event(e,t)},$.Event.prototype={isDefaultPrevented:c,isPropagationStopped:c,isImmediatePropagationStopped:c,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=h,e&&e.preventDefault&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=h,e&&e.stopPropagation&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=h,e&&e.stopImmediatePropagation&&e.stopImmediatePropagation(),this.stopPropagation()}},$.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,t){$.event.special[e]={delegateType:t,bindType:t,handle:function(e){var n,r=this,i=e.relatedTarget,a=e.handleObj;return(!i||i!==r&&!$.contains(r,i))&&(e.type=a.origType,n=a.handler.apply(this,arguments),e.type=t),n}}}),Q.focusinBubbles||$.each({focus:"focusin",blur:"focusout"},function(e,t){var n=function(e){$.event.simulate(t,e.target,$.event.fix(e),!0)};$.event.special[t]={setup:function(){var r=this.ownerDocument||this,i=ve.access(r,t);i||r.addEventListener(e,n,!0),ve.access(r,t,(i||0)+1)},teardown:function(){var r=this.ownerDocument||this,i=ve.access(r,t)-1;i?ve.access(r,t,i):(r.removeEventListener(e,n,!0),ve.remove(r,t))}}}),$.fn.extend({on:function(e,t,n,r,i){var a,o;if("object"==typeof e){"string"!=typeof t&&(n=n||t,t=void 0);for(o in e)this.on(o,t,n,e[o],i);return this}if(null==n&&null==r?(r=t,n=t=void 0):null==r&&("string"==typeof t?(r=n,n=void 0):(r=n,n=t,t=void 0)),r===!1)r=c;else if(!r)return this;return 1===i&&(a=r,r=function(e){return $().off(e),a.apply(this,arguments)},r.guid=a.guid||(a.guid=$.guid++)),this.each(function(){$.event.add(this,e,r,n,t)})},one:function(e,t,n,r){return this.on(e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,$(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return(t===!1||"function"==typeof t)&&(n=t,t=void 0),n===!1&&(n=c),this.each(function(){$.event.remove(this,e,n,t)})},trigger:function(e,t){return this.each(function(){$.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];return n?$.event.trigger(e,t,n,!0):void 0}});var Pe=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi,ke=/<([\w:]+)/,De=/<|&#?\w+;/,Re=/<(?:script|style|link)/i,Fe=/checked\s*(?:[^=]|=\s*.checked.)/i,Oe=/^$|\/(?:java|ecma)script/i,Ve=/^true\/(.*)/,Ne=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,Be={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Be.optgroup=Be.option,Be.tbody=Be.tfoot=Be.colgroup=Be.caption=Be.thead,Be.th=Be.td,$.extend({clone:function(e,t,n){var r,i,a,o,s=e.cloneNode(!0),u=$.contains(e.ownerDocument,e);if(!(Q.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||$.isXMLDoc(e)))for(o=v(s),a=v(e),r=0,i=a.length;i>r;r++)y(a[r],o[r]);if(t)if(n)for(a=a||v(e),o=o||v(s),r=0,i=a.length;i>r;r++)g(a[r],o[r]);else g(e,s);return o=v(s,"script"),o.length>0&&m(o,!u&&v(e,"script")),s},buildFragment:function(e,t,n,r){for(var i,a,o,s,u,h,c=t.createDocumentFragment(),l=[],p=0,f=e.length;f>p;p++)if(i=e[p],i||0===i)if("object"===$.type(i))$.merge(l,i.nodeType?[i]:i);else if(De.test(i)){for(a=a||c.appendChild(t.createElement("div")),o=(ke.exec(i)||["",""])[1].toLowerCase(),s=Be[o]||Be._default,a.innerHTML=s[1]+i.replace(Pe,"<$1></$2>")+s[2],h=s[0];h--;)a=a.lastChild;$.merge(l,a.childNodes),a=c.firstChild,a.textContent=""}else l.push(t.createTextNode(i));for(c.textContent="",p=0;i=l[p++];)if((!r||-1===$.inArray(i,r))&&(u=$.contains(i.ownerDocument,i),a=v(c.appendChild(i),"script"),u&&m(a),n))for(h=0;i=a[h++];)Oe.test(i.type||"")&&n.push(i);return c},cleanData:function(e){for(var t,n,r,i,a=$.event.special,o=0;void 0!==(n=e[o]);o++){if($.acceptData(n)&&(i=n[ve.expando],i&&(t=ve.cache[i]))){if(t.events)for(r in t.events)a[r]?$.event.remove(n,r):$.removeEvent(n,r,t.handle);ve.cache[i]&&delete ve.cache[i]}delete ye.cache[n[ye.expando]]}}}),$.fn.extend({text:function(e){return ge(this,function(e){return void 0===e?$.text(this):this.empty().each(function(){(1===this.nodeType||11===this.nodeType||9===this.nodeType)&&(this.textContent=e)})},null,e,arguments.length)},append:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=p(this,e);t.appendChild(e)}})},prepend:function(){return this.domManip(arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=p(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return this.domManip(arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},remove:function(e,t){for(var n,r=e?$.filter(e,this):this,i=0;null!=(n=r[i]);i++)t||1!==n.nodeType||$.cleanData(v(n)),n.parentNode&&(t&&$.contains(n.ownerDocument,n)&&m(v(n,"script")),n.parentNode.removeChild(n));return this},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&($.cleanData(v(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null==e?!1:e,t=null==t?e:t,this.map(function(){return $.clone(this,e,t)})},html:function(e){return ge(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Re.test(e)&&!Be[(ke.exec(e)||["",""])[1].toLowerCase()]){e=e.replace(Pe,"<$1></$2>");try{for(;r>n;n++)t=this[n]||{},1===t.nodeType&&($.cleanData(v(t,!1)),t.innerHTML=e);t=0}catch(i){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var e=arguments[0];return this.domManip(arguments,function(t){e=this.parentNode,$.cleanData(v(this)),e&&e.replaceChild(t,this)}),e&&(e.length||e.nodeType)?this:this.remove()},detach:function(e){return this.remove(e,!0)},domManip:function(e,t){e=H.apply([],e);var n,r,i,a,o,s,u=0,h=this.length,c=this,l=h-1,p=e[0],m=$.isFunction(p);if(m||h>1&&"string"==typeof p&&!Q.checkClone&&Fe.test(p))return this.each(function(n){var r=c.eq(n);m&&(e[0]=p.call(this,n,r.html())),r.domManip(e,t)});if(h&&(n=$.buildFragment(e,this[0].ownerDocument,!1,this),r=n.firstChild,1===n.childNodes.length&&(n=r),r)){for(i=$.map(v(n,"script"),f),a=i.length;h>u;u++)o=n,u!==l&&(o=$.clone(o,!0,!0),a&&$.merge(i,v(o,"script"))),t.call(this[u],o,u);if(a)for(s=i[i.length-1].ownerDocument,$.map(i,d),u=0;a>u;u++)o=i[u],Oe.test(o.type||"")&&!ve.access(o,"globalEval")&&$.contains(s,o)&&(o.src?$._evalUrl&&$._evalUrl(o.src):$.globalEval(o.textContent.replace(Ne,"")))}return this}}),$.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,t){$.fn[e]=function(e){for(var n,r=[],i=$(e),a=i.length-1,o=0;a>=o;o++)n=o===a?this:this.clone(!0),$(i[o])[t](n),W.apply(r,n.get());return this.pushStack(r)}});var Ue,Ge={},Ie=/^margin/,je=new RegExp("^("+we+")(?!px)[a-z%]+$","i"),ze=function(t){return t.ownerDocument.defaultView.opener?t.ownerDocument.defaultView.getComputedStyle(t,null):e.getComputedStyle(t,null)};!function(){function t(){o.style.cssText="-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:block;margin-top:1%;top:1%;border:1px;padding:1px;width:4px;position:absolute",o.innerHTML="",i.appendChild(a);var t=e.getComputedStyle(o,null);n="1%"!==t.top,r="4px"===t.width,i.removeChild(a)}var n,r,i=Z.documentElement,a=Z.createElement("div"),o=Z.createElement("div");o.style&&(o.style.backgroundClip="content-box",o.cloneNode(!0).style.backgroundClip="",Q.clearCloneStyle="content-box"===o.style.backgroundClip,a.style.cssText="border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;position:absolute",a.appendChild(o),e.getComputedStyle&&$.extend(Q,{pixelPosition:function(){return t(),n},boxSizingReliable:function(){return null==r&&t(),r},reliableMarginRight:function(){var t,n=o.appendChild(Z.createElement("div"));return n.style.cssText=o.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",n.style.marginRight=n.style.width="0",o.style.width="1px",i.appendChild(a),t=!parseFloat(e.getComputedStyle(n,null).marginRight),i.removeChild(a),o.removeChild(n),t}}))}(),$.swap=function(e,t,n,r){var i,a,o={};for(a in t)o[a]=e.style[a],e.style[a]=t[a];i=n.apply(e,r||[]);for(a in t)e.style[a]=o[a];return i};var He=/^(none|table(?!-c[ea]).+)/,We=new RegExp("^("+we+")(.*)$","i"),Xe=new RegExp("^([+-])=("+we+")","i"),qe={position:"absolute",visibility:"hidden",display:"block"},Ye={letterSpacing:"0",fontWeight:"400"},Ke=["Webkit","O","Moz","ms"];$.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=w(e,"opacity");return""===n?"1":n}}}},cssNumber:{columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,a,o,s=$.camelCase(t),u=e.style;return t=$.cssProps[s]||($.cssProps[s]=S(u,s)),o=$.cssHooks[t]||$.cssHooks[s],void 0===n?o&&"get"in o&&void 0!==(i=o.get(e,!1,r))?i:u[t]:(a=typeof n,"string"===a&&(i=Xe.exec(n))&&(n=(i[1]+1)*i[2]+parseFloat($.css(e,t)),a="number"),null!=n&&n===n&&("number"!==a||$.cssNumber[s]||(n+="px"),Q.clearCloneStyle||""!==n||0!==t.indexOf("background")||(u[t]="inherit"),o&&"set"in o&&void 0===(n=o.set(e,n,r))||(u[t]=n)),void 0)}},css:function(e,t,n,r){var i,a,o,s=$.camelCase(t);return t=$.cssProps[s]||($.cssProps[s]=S(e.style,s)),o=$.cssHooks[t]||$.cssHooks[s],o&&"get"in o&&(i=o.get(e,!0,n)),void 0===i&&(i=w(e,t,r)),"normal"===i&&t in Ye&&(i=Ye[t]),""===n||n?(a=parseFloat(i),n===!0||$.isNumeric(a)?a||0:i):i}}),$.each(["height","width"],function(e,t){$.cssHooks[t]={get:function(e,n,r){return n?He.test($.css(e,"display"))&&0===e.offsetWidth?$.swap(e,qe,function(){return E(e,t,r)}):E(e,t,r):void 0},set:function(e,n,r){var i=r&&ze(e);return _(e,n,r?T(e,t,r,"border-box"===$.css(e,"boxSizing",!1,i),i):0)}}}),$.cssHooks.marginRight=M(Q.reliableMarginRight,function(e,t){return t?$.swap(e,{display:"inline-block"},w,[e,"marginRight"]):void 0}),$.each({margin:"",padding:"",border:"Width"},function(e,t){$.cssHooks[e+t]={expand:function(n){for(var r=0,i={},a="string"==typeof n?n.split(" "):[n];4>r;r++)i[e+Me[r]+t]=a[r]||a[r-2]||a[0];return i}},Ie.test(e)||($.cssHooks[e+t].set=_)}),$.fn.extend({css:function(e,t){return ge(this,function(e,t,n){var r,i,a={},o=0;if($.isArray(t)){for(r=ze(e),i=t.length;i>o;o++)a[t[o]]=$.css(e,t[o],!1,r);return a}return void 0!==n?$.style(e,t,n):$.css(e,t)},e,t,arguments.length>1)},show:function(){return C(this,!0)},hide:function(){return C(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){Se(this)?$(this).show():$(this).hide()})}}),$.Tween=A,A.prototype={constructor:A,init:function(e,t,n,r,i,a){this.elem=e,this.prop=n,this.easing=i||"swing",this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=a||($.cssNumber[n]?"":"px")},cur:function(){var e=A.propHooks[this.prop];return e&&e.get?e.get(this):A.propHooks._default.get(this)},run:function(e){var t,n=A.propHooks[this.prop];return this.options.duration?this.pos=t=$.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):A.propHooks._default.set(this),this}},A.prototype.init.prototype=A.prototype,A.propHooks={_default:{get:function(e){var t;return null==e.elem[e.prop]||e.elem.style&&null!=e.elem.style[e.prop]?(t=$.css(e.elem,e.prop,""),t&&"auto"!==t?t:0):e.elem[e.prop]},set:function(e){$.fx.step[e.prop]?$.fx.step[e.prop](e):e.elem.style&&(null!=e.elem.style[$.cssProps[e.prop]]||$.cssHooks[e.prop])?$.style(e.elem,e.prop,e.now+e.unit):e.elem[e.prop]=e.now}}},A.propHooks.scrollTop=A.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},$.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2}},$.fx=A.prototype.init,$.fx.step={};var Qe,Ze,Je=/^(?:toggle|show|hide)$/,$e=new RegExp("^(?:([+-])=|)("+we+")([a-z%]*)$","i"),et=/queueHooks$/,tt=[D],nt={"*":[function(e,t){var n=this.createTween(e,t),r=n.cur(),i=$e.exec(t),a=i&&i[3]||($.cssNumber[e]?"":"px"),o=($.cssNumber[e]||"px"!==a&&+r)&&$e.exec($.css(n.elem,e)),s=1,u=20;if(o&&o[3]!==a){a=a||o[3],i=i||[],o=+r||1;do s=s||".5",o/=s,$.style(n.elem,e,o+a);while(s!==(s=n.cur()/r)&&1!==s&&--u)}return i&&(o=n.start=+o||+r||0,n.unit=a,n.end=i[1]?o+(i[1]+1)*i[2]:+i[2]),n}]};$.Animation=$.extend(F,{tweener:function(e,t){$.isFunction(e)?(t=e,e=["*"]):e=e.split(" ");for(var n,r=0,i=e.length;i>r;r++)n=e[r],nt[n]=nt[n]||[],nt[n].unshift(t)},prefilter:function(e,t){t?tt.unshift(e):tt.push(e)}}),$.speed=function(e,t,n){var r=e&&"object"==typeof e?$.extend({},e):{complete:n||!n&&t||$.isFunction(e)&&e,duration:e,easing:n&&t||t&&!$.isFunction(t)&&t};return r.duration=$.fx.off?0:"number"==typeof r.duration?r.duration:r.duration in $.fx.speeds?$.fx.speeds[r.duration]:$.fx.speeds._default,(null==r.queue||r.queue===!0)&&(r.queue="fx"),r.old=r.complete,r.complete=function(){$.isFunction(r.old)&&r.old.call(this),r.queue&&$.dequeue(this,r.queue)},r},$.fn.extend({fadeTo:function(e,t,n,r){return this.filter(Se).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(e,t,n,r){var i=$.isEmptyObject(e),a=$.speed(t,n,r),o=function(){var t=F(this,$.extend({},e),a);(i||ve.get(this,"finish"))&&t.stop(!0)};return o.finish=o,i||a.queue===!1?this.each(o):this.queue(a.queue,o)},stop:function(e,t,n){var r=function(e){var t=e.stop;delete e.stop,t(n)};return"string"!=typeof e&&(n=t,t=e,e=void 0),t&&e!==!1&&this.queue(e||"fx",[]),this.each(function(){var t=!0,i=null!=e&&e+"queueHooks",a=$.timers,o=ve.get(this);if(i)o[i]&&o[i].stop&&r(o[i]);else for(i in o)o[i]&&o[i].stop&&et.test(i)&&r(o[i]);for(i=a.length;i--;)a[i].elem!==this||null!=e&&a[i].queue!==e||(a[i].anim.stop(n),t=!1,a.splice(i,1));(t||!n)&&$.dequeue(this,e)})},finish:function(e){return e!==!1&&(e=e||"fx"),this.each(function(){var t,n=ve.get(this),r=n[e+"queue"],i=n[e+"queueHooks"],a=$.timers,o=r?r.length:0;for(n.finish=!0,$.queue(this,e,[]),i&&i.stop&&i.stop.call(this,!0),t=a.length;t--;)a[t].elem===this&&a[t].queue===e&&(a[t].anim.stop(!0),a.splice(t,1));for(t=0;o>t;t++)r[t]&&r[t].finish&&r[t].finish.call(this);delete n.finish})}}),$.each(["toggle","show","hide"],function(e,t){var n=$.fn[t];$.fn[t]=function(e,r,i){return null==e||"boolean"==typeof e?n.apply(this,arguments):this.animate(P(t,!0),e,r,i)}}),$.each({slideDown:P("show"),slideUp:P("hide"),slideToggle:P("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,t){$.fn[e]=function(e,n,r){return this.animate(t,e,n,r)}}),$.timers=[],$.fx.tick=function(){var e,t=0,n=$.timers;for(Qe=$.now();t<n.length;t++)e=n[t],e()||n[t]!==e||n.splice(t--,1);n.length||$.fx.stop(),Qe=void 0},$.fx.timer=function(e){$.timers.push(e),e()?$.fx.start():$.timers.pop()},$.fx.interval=13,$.fx.start=function(){Ze||(Ze=setInterval($.fx.tick,$.fx.interval))},$.fx.stop=function(){clearInterval(Ze),Ze=null},$.fx.speeds={slow:600,fast:200,_default:400},$.fn.delay=function(e,t){return e=$.fx?$.fx.speeds[e]||e:e,t=t||"fx",this.queue(t,function(t,n){var r=setTimeout(t,e);n.stop=function(){clearTimeout(r)}})},function(){var e=Z.createElement("input"),t=Z.createElement("select"),n=t.appendChild(Z.createElement("option"));e.type="checkbox",Q.checkOn=""!==e.value,Q.optSelected=n.selected,t.disabled=!0,Q.optDisabled=!n.disabled,e=Z.createElement("input"),e.value="t",e.type="radio",Q.radioValue="t"===e.value}();var rt,it,at=$.expr.attrHandle;$.fn.extend({attr:function(e,t){return ge(this,$.attr,e,t,arguments.length>1)},removeAttr:function(e){return this.each(function(){$.removeAttr(this,e)})}}),$.extend({attr:function(e,t,n){var r,i,a=e.nodeType;if(e&&3!==a&&8!==a&&2!==a)return typeof e.getAttribute===Te?$.prop(e,t,n):(1===a&&$.isXMLDoc(e)||(t=t.toLowerCase(),r=$.attrHooks[t]||($.expr.match.bool.test(t)?it:rt)),void 0===n?r&&"get"in r&&null!==(i=r.get(e,t))?i:(i=$.find.attr(e,t),null==i?void 0:i):null!==n?r&&"set"in r&&void 0!==(i=r.set(e,n,t))?i:(e.setAttribute(t,n+""),n):void $.removeAttr(e,t))},removeAttr:function(e,t){var n,r,i=0,a=t&&t.match(fe);if(a&&1===e.nodeType)for(;n=a[i++];)r=$.propFix[n]||n,$.expr.match.bool.test(n)&&(e[r]=!1),e.removeAttribute(n)},attrHooks:{type:{set:function(e,t){if(!Q.radioValue&&"radio"===t&&$.nodeName(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}}}),it={set:function(e,t,n){return t===!1?$.removeAttr(e,n):e.setAttribute(n,n),n}},$.each($.expr.match.bool.source.match(/\w+/g),function(e,t){var n=at[t]||$.find.attr;at[t]=function(e,t,r){var i,a;return r||(a=at[t],at[t]=i,i=null!=n(e,t,r)?t.toLowerCase():null,at[t]=a),i}});var ot=/^(?:input|select|textarea|button)$/i;$.fn.extend({prop:function(e,t){return ge(this,$.prop,e,t,arguments.length>1)},removeProp:function(e){return this.each(function(){delete this[$.propFix[e]||e]})}}),$.extend({propFix:{"for":"htmlFor","class":"className"},prop:function(e,t,n){var r,i,a,o=e.nodeType;if(e&&3!==o&&8!==o&&2!==o)return a=1!==o||!$.isXMLDoc(e),a&&(t=$.propFix[t]||t,i=$.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&"get"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){return e.hasAttribute("tabindex")||ot.test(e.nodeName)||e.href?e.tabIndex:-1}}}}),Q.optSelected||($.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null}}),$.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){$.propFix[this.toLowerCase()]=this});var st=/[\t\r\n\f]/g;$.fn.extend({addClass:function(e){var t,n,r,i,a,o,s="string"==typeof e&&e,u=0,h=this.length;if($.isFunction(e))return this.each(function(t){$(this).addClass(e.call(this,t,this.className))});if(s)for(t=(e||"").match(fe)||[];h>u;u++)if(n=this[u],r=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(st," "):" ")){for(a=0;i=t[a++];)r.indexOf(" "+i+" ")<0&&(r+=i+" ");o=$.trim(r),n.className!==o&&(n.className=o)}return this},removeClass:function(e){var t,n,r,i,a,o,s=0===arguments.length||"string"==typeof e&&e,u=0,h=this.length;if($.isFunction(e))return this.each(function(t){$(this).removeClass(e.call(this,t,this.className))});if(s)for(t=(e||"").match(fe)||[];h>u;u++)if(n=this[u],r=1===n.nodeType&&(n.className?(" "+n.className+" ").replace(st," "):"")){for(a=0;i=t[a++];)for(;r.indexOf(" "+i+" ")>=0;)r=r.replace(" "+i+" "," ");o=e?$.trim(r):"",n.className!==o&&(n.className=o)}return this},toggleClass:function(e,t){var n=typeof e;return"boolean"==typeof t&&"string"===n?t?this.addClass(e):this.removeClass(e):$.isFunction(e)?this.each(function(n){$(this).toggleClass(e.call(this,n,this.className,t),t)}):this.each(function(){if("string"===n)for(var t,r=0,i=$(this),a=e.match(fe)||[];t=a[r++];)i.hasClass(t)?i.removeClass(t):i.addClass(t);else(n===Te||"boolean"===n)&&(this.className&&ve.set(this,"__className__",this.className),this.className=this.className||e===!1?"":ve.get(this,"__className__")||"")})},hasClass:function(e){for(var t=" "+e+" ",n=0,r=this.length;r>n;n++)if(1===this[n].nodeType&&(" "+this[n].className+" ").replace(st," ").indexOf(t)>=0)return!0;return!1}});var ut=/\r/g;$.fn.extend({val:function(e){var t,n,r,i=this[0];{if(arguments.length)return r=$.isFunction(e),this.each(function(n){var i;1===this.nodeType&&(i=r?e.call(this,n,$(this).val()):e,null==i?i="":"number"==typeof i?i+="":$.isArray(i)&&(i=$.map(i,function(e){return null==e?"":e+""})),t=$.valHooks[this.type]||$.valHooks[this.nodeName.toLowerCase()],t&&"set"in t&&void 0!==t.set(this,i,"value")||(this.value=i))});if(i)return t=$.valHooks[i.type]||$.valHooks[i.nodeName.toLowerCase()],t&&"get"in t&&void 0!==(n=t.get(i,"value"))?n:(n=i.value,"string"==typeof n?n.replace(ut,""):null==n?"":n)}}}),$.extend({valHooks:{option:{get:function(e){var t=$.find.attr(e,"value");return null!=t?t:$.trim($.text(e))}},select:{get:function(e){for(var t,n,r=e.options,i=e.selectedIndex,a="select-one"===e.type||0>i,o=a?null:[],s=a?i+1:r.length,u=0>i?s:a?i:0;s>u;u++)if(n=r[u],(n.selected||u===i)&&(Q.optDisabled?!n.disabled:null===n.getAttribute("disabled"))&&(!n.parentNode.disabled||!$.nodeName(n.parentNode,"optgroup"))){if(t=$(n).val(),a)return t;o.push(t)}return o},set:function(e,t){for(var n,r,i=e.options,a=$.makeArray(t),o=i.length;o--;)r=i[o],(r.selected=$.inArray(r.value,a)>=0)&&(n=!0);return n||(e.selectedIndex=-1),a}}}}),$.each(["radio","checkbox"],function(){$.valHooks[this]={set:function(e,t){return $.isArray(t)?e.checked=$.inArray($(e).val(),t)>=0:void 0}},Q.checkOn||($.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})}),$.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(e,t){$.fn[t]=function(e,n){return arguments.length>0?this.on(t,null,e,n):this.trigger(t)}}),$.fn.extend({hover:function(e,t){return this.mouseenter(e).mouseleave(t||e)},bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)}});var ht=$.now(),ct=/\?/;$.parseJSON=function(e){return JSON.parse(e+"")},$.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{n=new DOMParser,t=n.parseFromString(e,"text/xml")}catch(r){t=void 0}return(!t||t.getElementsByTagName("parsererror").length)&&$.error("Invalid XML: "+e),t};var lt=/#.*$/,pt=/([?&])_=[^&]*/,ft=/^(.*?):[ \t]*([^\r\n]*)$/gm,dt=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,mt=/^(?:GET|HEAD)$/,gt=/^\/\//,vt=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,yt={},bt={},xt="*/".concat("*"),wt=e.location.href,Mt=vt.exec(wt.toLowerCase())||[];$.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:wt,type:"GET",isLocal:dt.test(Mt[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":xt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/xml/,html:/html/,json:/json/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":$.parseJSON,"text xml":$.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?N(N(e,$.ajaxSettings),t):N($.ajaxSettings,e)},ajaxPrefilter:O(yt),ajaxTransport:O(bt),ajax:function(e,t){function n(e,t,n,o){var u,c,v,y,x,M=t;2!==b&&(b=2,s&&clearTimeout(s),r=void 0,a=o||"",w.readyState=e>0?4:0,u=e>=200&&300>e||304===e,n&&(y=B(l,w,n)),y=U(l,y,w,u),u?(l.ifModified&&(x=w.getResponseHeader("Last-Modified"),x&&($.lastModified[i]=x),x=w.getResponseHeader("etag"),x&&($.etag[i]=x)),204===e||"HEAD"===l.type?M="nocontent":304===e?M="notmodified":(M=y.state,c=y.data,v=y.error,u=!v)):(v=M,(e||!M)&&(M="error",0>e&&(e=0))),w.status=e,w.statusText=(t||M)+"",u?d.resolveWith(p,[c,M,w]):d.rejectWith(p,[w,M,v]),w.statusCode(g),g=void 0,h&&f.trigger(u?"ajaxSuccess":"ajaxError",[w,l,u?c:v]),m.fireWith(p,[w,M]),h&&(f.trigger("ajaxComplete",[w,l]),--$.active||$.event.trigger("ajaxStop")))}"object"==typeof e&&(t=e,e=void 0),t=t||{};var r,i,a,o,s,u,h,c,l=$.ajaxSetup({},t),p=l.context||l,f=l.context&&(p.nodeType||p.jquery)?$(p):$.event,d=$.Deferred(),m=$.Callbacks("once memory"),g=l.statusCode||{},v={},y={},b=0,x="canceled",w={readyState:0,getResponseHeader:function(e){var t;if(2===b){if(!o)for(o={};t=ft.exec(a);)o[t[1].toLowerCase()]=t[2];t=o[e.toLowerCase()]}return null==t?null:t},getAllResponseHeaders:function(){return 2===b?a:null},setRequestHeader:function(e,t){var n=e.toLowerCase();return b||(e=y[n]=y[n]||e,v[e]=t),this},overrideMimeType:function(e){return b||(l.mimeType=e),this},statusCode:function(e){var t;if(e)if(2>b)for(t in e)g[t]=[g[t],e[t]];else w.always(e[w.status]);return this},abort:function(e){var t=e||x;return r&&r.abort(t),n(0,t),this}};if(d.promise(w).complete=m.add,w.success=w.done,w.error=w.fail,l.url=((e||l.url||wt)+"").replace(lt,"").replace(gt,Mt[1]+"//"),l.type=t.method||t.type||l.method||l.type,l.dataTypes=$.trim(l.dataType||"*").toLowerCase().match(fe)||[""],null==l.crossDomain&&(u=vt.exec(l.url.toLowerCase()),l.crossDomain=!(!u||u[1]===Mt[1]&&u[2]===Mt[2]&&(u[3]||("http:"===u[1]?"80":"443"))===(Mt[3]||("http:"===Mt[1]?"80":"443")))),l.data&&l.processData&&"string"!=typeof l.data&&(l.data=$.param(l.data,l.traditional)),V(yt,l,t,w),2===b)return w;h=$.event&&l.global,h&&0===$.active++&&$.event.trigger("ajaxStart"),l.type=l.type.toUpperCase(),l.hasContent=!mt.test(l.type),i=l.url,l.hasContent||(l.data&&(i=l.url+=(ct.test(i)?"&":"?")+l.data,delete l.data),l.cache===!1&&(l.url=pt.test(i)?i.replace(pt,"$1_="+ht++):i+(ct.test(i)?"&":"?")+"_="+ht++)),l.ifModified&&($.lastModified[i]&&w.setRequestHeader("If-Modified-Since",$.lastModified[i]),$.etag[i]&&w.setRequestHeader("If-None-Match",$.etag[i])),(l.data&&l.hasContent&&l.contentType!==!1||t.contentType)&&w.setRequestHeader("Content-Type",l.contentType),w.setRequestHeader("Accept",l.dataTypes[0]&&l.accepts[l.dataTypes[0]]?l.accepts[l.dataTypes[0]]+("*"!==l.dataTypes[0]?", "+xt+"; q=0.01":""):l.accepts["*"]);for(c in l.headers)w.setRequestHeader(c,l.headers[c]);if(l.beforeSend&&(l.beforeSend.call(p,w,l)===!1||2===b))return w.abort();x="abort";for(c in{success:1,error:1,complete:1})w[c](l[c]);if(r=V(bt,l,t,w)){w.readyState=1,h&&f.trigger("ajaxSend",[w,l]),l.async&&l.timeout>0&&(s=setTimeout(function(){w.abort("timeout")},l.timeout));try{b=1,r.send(v,n)}catch(M){if(!(2>b))throw M;n(-1,M)}}else n(-1,"No Transport");return w},getJSON:function(e,t,n){return $.get(e,t,n,"json")},getScript:function(e,t){return $.get(e,void 0,t,"script")}}),$.each(["get","post"],function(e,t){$[t]=function(e,n,r,i){return $.isFunction(n)&&(i=i||r,r=n,n=void 0),$.ajax({url:e,type:t,dataType:i,data:n,success:r})}}),$._evalUrl=function(e){return $.ajax({url:e,type:"GET",dataType:"script",async:!1,global:!1,"throws":!0})},$.fn.extend({wrapAll:function(e){var t;return $.isFunction(e)?this.each(function(t){$(this).wrapAll(e.call(this,t))}):(this[0]&&(t=$(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){for(var e=this;e.firstElementChild;)e=e.firstElementChild;return e}).append(this)),this)},wrapInner:function(e){return $.isFunction(e)?this.each(function(t){$(this).wrapInner(e.call(this,t))}):this.each(function(){var t=$(this),n=t.contents();n.length?n.wrapAll(e):t.append(e)})},wrap:function(e){var t=$.isFunction(e);return this.each(function(n){$(this).wrapAll(t?e.call(this,n):e)})},unwrap:function(){return this.parent().each(function(){$.nodeName(this,"body")||$(this).replaceWith(this.childNodes)}).end()}}),$.expr.filters.hidden=function(e){return e.offsetWidth<=0&&e.offsetHeight<=0},$.expr.filters.visible=function(e){return!$.expr.filters.hidden(e)};var St=/%20/g,_t=/\[\]$/,Tt=/\r?\n/g,Et=/^(?:submit|button|image|reset|file)$/i,Ct=/^(?:input|select|textarea|keygen)/i;$.param=function(e,t){var n,r=[],i=function(e,t){t=$.isFunction(t)?t():null==t?"":t,r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(t)};if(void 0===t&&(t=$.ajaxSettings&&$.ajaxSettings.traditional),$.isArray(e)||e.jquery&&!$.isPlainObject(e))$.each(e,function(){i(this.name,this.value)});else for(n in e)G(n,e[n],t,i);return r.join("&").replace(St,"+")},$.fn.extend({serialize:function(){return $.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=$.prop(this,"elements");return e?$.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!$(this).is(":disabled")&&Ct.test(this.nodeName)&&!Et.test(e)&&(this.checked||!_e.test(e))}).map(function(e,t){var n=$(this).val();return null==n?null:$.isArray(n)?$.map(n,function(e){return{name:t.name,value:e.replace(Tt,"\r\n")}}):{name:t.name,value:n.replace(Tt,"\r\n")}}).get()}}),$.ajaxSettings.xhr=function(){try{return new XMLHttpRequest}catch(e){}};var At=0,Lt={},Pt={0:200,1223:204},kt=$.ajaxSettings.xhr();e.attachEvent&&e.attachEvent("onunload",function(){for(var e in Lt)Lt[e]()}),Q.cors=!!kt&&"withCredentials"in kt,Q.ajax=kt=!!kt,$.ajaxTransport(function(e){var t;return Q.cors||kt&&!e.crossDomain?{send:function(n,r){var i,a=e.xhr(),o=++At;if(a.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(i in e.xhrFields)a[i]=e.xhrFields[i];e.mimeType&&a.overrideMimeType&&a.overrideMimeType(e.mimeType),e.crossDomain||n["X-Requested-With"]||(n["X-Requested-With"]="XMLHttpRequest");for(i in n)a.setRequestHeader(i,n[i]);t=function(e){return function(){t&&(delete Lt[o],t=a.onload=a.onerror=null,"abort"===e?a.abort():"error"===e?r(a.status,a.statusText):r(Pt[a.status]||a.status,a.statusText,"string"==typeof a.responseText?{text:a.responseText}:void 0,a.getAllResponseHeaders()))}},a.onload=t(),a.onerror=t("error"),t=Lt[o]=t("abort");try{a.send(e.hasContent&&e.data||null)}catch(s){if(t)throw s}},abort:function(){t&&t()}}:void 0}),$.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/(?:java|ecma)script/},converters:{"text script":function(e){return $.globalEval(e),e}}}),$.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),$.ajaxTransport("script",function(e){if(e.crossDomain){var t,n;return{send:function(r,i){t=$("<script>").prop({async:!0,charset:e.scriptCharset,src:e.url}).on("load error",n=function(e){t.remove(),n=null,e&&i("error"===e.type?404:200,e.type)}),Z.head.appendChild(t[0])},abort:function(){n&&n()}}}});var Dt=[],Rt=/(=)\?(?=&|$)|\?\?/;$.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Dt.pop()||$.expando+"_"+ht++;return this[e]=!0,e}}),$.ajaxPrefilter("json jsonp",function(t,n,r){var i,a,o,s=t.jsonp!==!1&&(Rt.test(t.url)?"url":"string"==typeof t.data&&!(t.contentType||"").indexOf("application/x-www-form-urlencoded")&&Rt.test(t.data)&&"data");return s||"jsonp"===t.dataTypes[0]?(i=t.jsonpCallback=$.isFunction(t.jsonpCallback)?t.jsonpCallback():t.jsonpCallback,s?t[s]=t[s].replace(Rt,"$1"+i):t.jsonp!==!1&&(t.url+=(ct.test(t.url)?"&":"?")+t.jsonp+"="+i),t.converters["script json"]=function(){return o||$.error(i+" was not called"),o[0]},t.dataTypes[0]="json",a=e[i],e[i]=function(){o=arguments},r.always(function(){e[i]=a,t[i]&&(t.jsonpCallback=n.jsonpCallback,Dt.push(i)),o&&$.isFunction(a)&&a(o[0]),o=a=void 0}),"script"):void 0}),$.parseHTML=function(e,t,n){if(!e||"string"!=typeof e)return null;"boolean"==typeof t&&(n=t,t=!1),t=t||Z;var r=oe.exec(e),i=!n&&[];return r?[t.createElement(r[1])]:(r=$.buildFragment([e],t,i),i&&i.length&&$(i).remove(),$.merge([],r.childNodes))};var Ft=$.fn.load;$.fn.load=function(e,t,n){if("string"!=typeof e&&Ft)return Ft.apply(this,arguments);var r,i,a,o=this,s=e.indexOf(" ");return s>=0&&(r=$.trim(e.slice(s)),e=e.slice(0,s)),$.isFunction(t)?(n=t,t=void 0):t&&"object"==typeof t&&(i="POST"),o.length>0&&$.ajax({url:e,type:i,dataType:"html",data:t}).done(function(e){a=arguments,o.html(r?$("<div>").append($.parseHTML(e)).find(r):e);
}).complete(n&&function(e,t){o.each(n,a||[e.responseText,t,e])}),this},$.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){$.fn[t]=function(e){return this.on(t,e)}}),$.expr.filters.animated=function(e){return $.grep($.timers,function(t){return e===t.elem}).length};var Ot=e.document.documentElement;$.offset={setOffset:function(e,t,n){var r,i,a,o,s,u,h,c=$.css(e,"position"),l=$(e),p={};"static"===c&&(e.style.position="relative"),s=l.offset(),a=$.css(e,"top"),u=$.css(e,"left"),h=("absolute"===c||"fixed"===c)&&(a+u).indexOf("auto")>-1,h?(r=l.position(),o=r.top,i=r.left):(o=parseFloat(a)||0,i=parseFloat(u)||0),$.isFunction(t)&&(t=t.call(e,n,s)),null!=t.top&&(p.top=t.top-s.top+o),null!=t.left&&(p.left=t.left-s.left+i),"using"in t?t.using.call(e,p):l.css(p)}},$.fn.extend({offset:function(e){if(arguments.length)return void 0===e?this:this.each(function(t){$.offset.setOffset(this,e,t)});var t,n,r=this[0],i={top:0,left:0},a=r&&r.ownerDocument;if(a)return t=a.documentElement,$.contains(t,r)?(typeof r.getBoundingClientRect!==Te&&(i=r.getBoundingClientRect()),n=I(a),{top:i.top+n.pageYOffset-t.clientTop,left:i.left+n.pageXOffset-t.clientLeft}):i},position:function(){if(this[0]){var e,t,n=this[0],r={top:0,left:0};return"fixed"===$.css(n,"position")?t=n.getBoundingClientRect():(e=this.offsetParent(),t=this.offset(),$.nodeName(e[0],"html")||(r=e.offset()),r.top+=$.css(e[0],"borderTopWidth",!0),r.left+=$.css(e[0],"borderLeftWidth",!0)),{top:t.top-r.top-$.css(n,"marginTop",!0),left:t.left-r.left-$.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var e=this.offsetParent||Ot;e&&!$.nodeName(e,"html")&&"static"===$.css(e,"position");)e=e.offsetParent;return e||Ot})}}),$.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,n){var r="pageYOffset"===n;$.fn[t]=function(i){return ge(this,function(t,i,a){var o=I(t);return void 0===a?o?o[n]:t[i]:void(o?o.scrollTo(r?e.pageXOffset:a,r?a:e.pageYOffset):t[i]=a)},t,i,arguments.length,null)}}),$.each(["top","left"],function(e,t){$.cssHooks[t]=M(Q.pixelPosition,function(e,n){return n?(n=w(e,t),je.test(n)?$(e).position()[t]+"px":n):void 0})}),$.each({Height:"height",Width:"width"},function(e,t){$.each({padding:"inner"+e,content:t,"":"outer"+e},function(n,r){$.fn[r]=function(r,i){var a=arguments.length&&(n||"boolean"!=typeof r),o=n||(r===!0||i===!0?"margin":"border");return ge(this,function(t,n,r){var i;return $.isWindow(t)?t.document.documentElement["client"+e]:9===t.nodeType?(i=t.documentElement,Math.max(t.body["scroll"+e],i["scroll"+e],t.body["offset"+e],i["offset"+e],i["client"+e])):void 0===r?$.css(t,n,o):$.style(t,n,r,o)},t,a?r:void 0,a,null)}})}),$.fn.size=function(){return this.length},$.fn.andSelf=$.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return $});var Vt=e.jQuery,Nt=e.$;return $.noConflict=function(t){return e.$===$&&(e.$=Nt),t&&e.jQuery===$&&(e.jQuery=Vt),$},typeof t===Te&&(e.jQuery=e.$=$),$})},{}],9:[function(e,t,n){var r=function(){function e(e,t,n){var r=document.createElement(e);return r.id=t,r.style.cssText=n,r}function t(t,n,r){var i=e("div",t,"padding:0 0 3px 3px;text-align:left;background:"+r),a=e("div",t+"Text","font-family:Helvetica,Arial,sans-serif;font-size:9px;font-weight:bold;line-height:15px;color:"+n);a.innerHTML=t.toUpperCase(),i.appendChild(a);var o=e("div",t+"Graph","width:74px;height:30px;background:"+n);i.appendChild(o);for(var s=0;74>s;s++)o.appendChild(e("span","","width:1px;height:30px;float:left;opacity:0.9;background:"+r));return i}function n(e){for(var t=h.children,n=0;n<t.length;n++)t[n].style.display=n===e?"block":"none";u=e}function r(e,t){var n=e.appendChild(e.firstChild);n.style.height=Math.min(30,30-30*t)+"px"}var i=self.performance&&self.performance.now?self.performance.now.bind(performance):Date.now,a=i(),o=a,s=0,u=0,h=e("div","stats","width:80px;opacity:0.9;cursor:pointer");h.addEventListener("mousedown",function(e){e.preventDefault(),n(++u%h.children.length)},!1);var c=0,l=1/0,p=0,f=t("fps","#0ff","#002"),d=f.children[0],m=f.children[1];h.appendChild(f);var g=0,v=1/0,y=0,b=t("ms","#0f0","#020"),x=b.children[0],w=b.children[1];if(h.appendChild(b),self.performance&&self.performance.memory){var M=0,S=1/0,_=0,T=t("mb","#f08","#201"),E=T.children[0],C=T.children[1];h.appendChild(T)}return n(u),{REVISION:14,domElement:h,setMode:n,begin:function(){a=i()},end:function(){var e=i();if(g=e-a,v=Math.min(v,g),y=Math.max(y,g),x.textContent=(0|g)+" MS ("+(0|v)+"-"+(0|y)+")",r(w,g/200),s++,e>o+1e3&&(c=Math.round(1e3*s/(e-o)),l=Math.min(l,c),p=Math.max(p,c),d.textContent=c+" FPS ("+l+"-"+p+")",r(m,c/100),o=e,s=0,void 0!==M)){var t=performance.memory.usedJSHeapSize,n=performance.memory.jsHeapSizeLimit;M=Math.round(9.54e-7*t),S=Math.min(S,M),_=Math.max(_,M),E.textContent=M+" MB ("+S+"-"+_+")",r(C,t/n)}return e},update:function(){a=this.end()}}};"object"==typeof t&&(t.exports=r)},{}],10:[function(e,t,n){var r=r||{},i={REVISION:"73"};"function"==typeof define&&define.amd?define("three",i):"undefined"!=typeof n&&"undefined"!=typeof t&&(t.exports=i),(void 0===r.requestAnimationFrame||void 0===r.cancelAnimationFrame)&&!function(){for(var e=0,t=["ms","moz","webkit","o"],n=0;n<t.length&&!r.requestAnimationFrame;++n)r.requestAnimationFrame=r[t[n]+"RequestAnimationFrame"],r.cancelAnimationFrame=r[t[n]+"CancelAnimationFrame"]||r[t[n]+"CancelRequestAnimationFrame"];void 0===r.requestAnimationFrame&&void 0!==r.setTimeout&&(r.requestAnimationFrame=function(t){var n=Date.now(),i=Math.max(0,16-(n-e)),a=r.setTimeout(function(){t(n+i)},i);return e=n+i,a}),void 0===r.cancelAnimationFrame&&void 0!==r.clearTimeout&&(r.cancelAnimationFrame=function(e){r.clearTimeout(e)})}(),void 0===r.performance&&(r.performance={}),void 0===r.performance.now&&!function(){var e=Date.now();r.performance.now=function(){return Date.now()-e}}(),void 0===Number.EPSILON&&(Number.EPSILON=Math.pow(2,-52)),void 0===Math.sign&&(Math.sign=function(e){return 0>e?-1:e>0?1:+e}),void 0===Function.prototype.name&&void 0!==Object.defineProperty&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*(\S*)\s*\(/)[1]}}),i.MOUSE={LEFT:0,MIDDLE:1,RIGHT:2},i.CullFaceNone=0,i.CullFaceBack=1,i.CullFaceFront=2,i.CullFaceFrontBack=3,i.FrontFaceDirectionCW=0,i.FrontFaceDirectionCCW=1,i.BasicShadowMap=0,i.PCFShadowMap=1,i.PCFSoftShadowMap=2,i.FrontSide=0,i.BackSide=1,i.DoubleSide=2,i.FlatShading=1,i.SmoothShading=2,i.NoColors=0,i.FaceColors=1,i.VertexColors=2,i.NoBlending=0,i.NormalBlending=1,i.AdditiveBlending=2,i.SubtractiveBlending=3,i.MultiplyBlending=4,i.CustomBlending=5,i.AddEquation=100,i.SubtractEquation=101,i.ReverseSubtractEquation=102,i.MinEquation=103,i.MaxEquation=104,i.ZeroFactor=200,i.OneFactor=201,i.SrcColorFactor=202,i.OneMinusSrcColorFactor=203,i.SrcAlphaFactor=204,i.OneMinusSrcAlphaFactor=205,i.DstAlphaFactor=206,i.OneMinusDstAlphaFactor=207,i.DstColorFactor=208,i.OneMinusDstColorFactor=209,i.SrcAlphaSaturateFactor=210,i.NeverDepth=0,i.AlwaysDepth=1,i.LessDepth=2,i.LessEqualDepth=3,i.EqualDepth=4,i.GreaterEqualDepth=5,i.GreaterDepth=6,i.NotEqualDepth=7,i.MultiplyOperation=0,i.MixOperation=1,i.AddOperation=2,i.UVMapping=300,i.CubeReflectionMapping=301,i.CubeRefractionMapping=302,i.EquirectangularReflectionMapping=303,i.EquirectangularRefractionMapping=304,i.SphericalReflectionMapping=305,i.RepeatWrapping=1e3,i.ClampToEdgeWrapping=1001,i.MirroredRepeatWrapping=1002,i.NearestFilter=1003,i.NearestMipMapNearestFilter=1004,i.NearestMipMapLinearFilter=1005,i.LinearFilter=1006,i.LinearMipMapNearestFilter=1007,i.LinearMipMapLinearFilter=1008,i.UnsignedByteType=1009,i.ByteType=1010,i.ShortType=1011,i.UnsignedShortType=1012,i.IntType=1013,i.UnsignedIntType=1014,i.FloatType=1015,i.HalfFloatType=1025,i.UnsignedShort4444Type=1016,i.UnsignedShort5551Type=1017,i.UnsignedShort565Type=1018,i.AlphaFormat=1019,i.RGBFormat=1020,i.RGBAFormat=1021,i.LuminanceFormat=1022,i.LuminanceAlphaFormat=1023,i.RGBEFormat=i.RGBAFormat,i.RGB_S3TC_DXT1_Format=2001,i.RGBA_S3TC_DXT1_Format=2002,i.RGBA_S3TC_DXT3_Format=2003,i.RGBA_S3TC_DXT5_Format=2004,i.RGB_PVRTC_4BPPV1_Format=2100,i.RGB_PVRTC_2BPPV1_Format=2101,i.RGBA_PVRTC_4BPPV1_Format=2102,i.RGBA_PVRTC_2BPPV1_Format=2103,i.LoopOnce=2200,i.LoopRepeat=2201,i.LoopPingPong=2202,i.Projector=function(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(e,t){console.warn("THREE.Projector: .projectVector() is now vector.project()."),e.project(t)},this.unprojectVector=function(e,t){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),e.unproject(t)},this.pickingRay=function(e,t){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}},i.CanvasRenderer=function(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElement("canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}},i.Color=function(e){return 3===arguments.length?this.fromArray(arguments):this.set(e)},i.Color.prototype={constructor:i.Color,r:1,g:1,b:1,set:function(e){return e instanceof i.Color?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSL:function(){function e(e,t,n){return 0>n&&(n+=1),n>1&&(n-=1),1/6>n?e+6*(t-e)*n:.5>n?t:2/3>n?e+6*(t-e)*(2/3-n):e}return function(t,n,r){if(t=i.Math.euclideanModulo(t,1),n=i.Math.clamp(n,0,1),r=i.Math.clamp(r,0,1),0===n)this.r=this.g=this.b=r;else{var a=.5>=r?r*(1+n):r+n-r*n,o=2*r-a;this.r=e(o,a,t+1/3),this.g=e(o,a,t),this.b=e(o,a,t-1/3)}return this}}(),setStyle:function(e){function t(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var r,a=n[1],o=n[2];switch(a){case"rgb":case"rgba":if(r=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,t(r[5]),this;if(r=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,t(r[5]),this;break;case"hsl":case"hsla":if(r=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(o)){var s=parseFloat(r[1])/360,u=parseInt(r[2],10)/100,h=parseInt(r[3],10)/100;return t(r[5]),this.setHSL(s,u,h)}}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(e)){var c=n[1],l=c.length;if(3===l)return this.r=parseInt(c.charAt(0)+c.charAt(0),16)/255,this.g=parseInt(c.charAt(1)+c.charAt(1),16)/255,this.b=parseInt(c.charAt(2)+c.charAt(2),16)/255,this;if(6===l)return this.r=parseInt(c.charAt(0)+c.charAt(1),16)/255,this.g=parseInt(c.charAt(2)+c.charAt(3),16)/255,this.b=parseInt(c.charAt(4)+c.charAt(5),16)/255,this}if(e&&e.length>0){var c=i.ColorKeywords[e];void 0!==c?this.setHex(c):console.warn("THREE.Color: Unknown color "+e)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return void 0===t&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){void 0===t&&(t=2);var n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this},convertGammaToLinear:function(){var e=this.r,t=this.g,n=this.b;return this.r=e*e,this.g=t*t,this.b=n*n,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t,n,r=e||{h:0,s:0,l:0},i=this.r,a=this.g,o=this.b,s=Math.max(i,a,o),u=Math.min(i,a,o),h=(u+s)/2;if(u===s)t=0,n=0;else{var c=s-u;switch(n=.5>=h?c/(s+u):c/(2-s-u),s){case i:t=(a-o)/c+(o>a?6:0);break;case a:t=(o-i)/c+2;break;case o:t=(i-a)/c+4}t/=6}return r.h=t,r.s=n,r.l=h,r},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},offsetHSL:function(e,t,n){var r=this.getHSL();return r.h+=e,r.s+=t,r.l+=n,this.setHSL(r.h,r.s,r.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return void 0===t&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}},i.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},i.Quaternion=function(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._w=void 0!==r?r:1},i.Quaternion.prototype={constructor:i.Quaternion,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._w=r,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if(e instanceof i.Euler==!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var n=Math.cos(e._x/2),r=Math.cos(e._y/2),a=Math.cos(e._z/2),o=Math.sin(e._x/2),s=Math.sin(e._y/2),u=Math.sin(e._z/2),h=e.order;return"XYZ"===h?(this._x=o*r*a+n*s*u,this._y=n*s*a-o*r*u,this._z=n*r*u+o*s*a,this._w=n*r*a-o*s*u):"YXZ"===h?(this._x=o*r*a+n*s*u,this._y=n*s*a-o*r*u,this._z=n*r*u-o*s*a,this._w=n*r*a+o*s*u):"ZXY"===h?(this._x=o*r*a-n*s*u,this._y=n*s*a+o*r*u,this._z=n*r*u+o*s*a,this._w=n*r*a-o*s*u):"ZYX"===h?(this._x=o*r*a-n*s*u,this._y=n*s*a+o*r*u,this._z=n*r*u-o*s*a,this._w=n*r*a+o*s*u):"YZX"===h?(this._x=o*r*a+n*s*u,this._y=n*s*a+o*r*u,this._z=n*r*u-o*s*a,this._w=n*r*a-o*s*u):"XZY"===h&&(this._x=o*r*a-n*s*u,this._y=n*s*a-o*r*u,this._z=n*r*u+o*s*a,this._w=n*r*a+o*s*u),t!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var n=t/2,r=Math.sin(n);return this._x=e.x*r,this._y=e.y*r,this._z=e.z*r,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t,n=e.elements,r=n[0],i=n[4],a=n[8],o=n[1],s=n[5],u=n[9],h=n[2],c=n[6],l=n[10],p=r+s+l;return p>0?(t=.5/Math.sqrt(p+1),this._w=.25/t,this._x=(c-u)*t,this._y=(a-h)*t,this._z=(o-i)*t):r>s&&r>l?(t=2*Math.sqrt(1+r-s-l),this._w=(c-u)/t,this._x=.25*t,this._y=(i+o)/t,this._z=(a+h)/t):s>l?(t=2*Math.sqrt(1+s-r-l),this._w=(a-h)/t,this._x=(i+o)/t,this._y=.25*t,this._z=(u+c)/t):(t=2*Math.sqrt(1+l-r-s),this._w=(o-i)/t,this._x=(a+h)/t,this._y=(u+c)/t,this._z=.25*t),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t,n=1e-6;return function(r,a){return void 0===e&&(e=new i.Vector3),t=r.dot(a)+1,n>t?(t=0,Math.abs(r.x)>Math.abs(r.z)?e.set(-r.y,r.x,0):e.set(0,-r.z,r.y)):e.crossVectors(r,a),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize(),this}}(),inverse:function(){return this.conjugate().normalize(),this},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},multiplyQuaternions:function(e,t){var n=e._x,r=e._y,i=e._z,a=e._w,o=t._x,s=t._y,u=t._z,h=t._w;return this._x=n*h+a*o+r*u-i*s,this._y=r*h+a*s+i*o-n*u,this._z=i*h+a*u+n*s-r*o,this._w=a*h-n*o-r*s-i*u,this.onChangeCallback(),this},multiplyVector3:function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)},slerp:function(e,t){if(0===t)return this;if(1===t)return this.copy(e);var n=this._x,r=this._y,i=this._z,a=this._w,o=a*e._w+n*e._x+r*e._y+i*e._z;if(0>o?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=r,this._z=i,this;var s=Math.acos(o),u=Math.sqrt(1-o*o);if(Math.abs(u)<.001)return this._w=.5*(a+this._w),this._x=.5*(n+this._x),this._y=.5*(r+this._y),this._z=.5*(i+this._z),this;var h=Math.sin((1-t)*s)/u,c=Math.sin(t*s)/u;return this._w=a*h+this._w*c,this._x=n*h+this._x*c,this._y=r*h+this._y*c,this._z=i*h+this._z*c,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return void 0===t&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},i.Quaternion.slerp=function(e,t,n,r){return n.copy(e).slerp(t,r)},i.Vector2=function(e,t){this.x=e||0,this.y=t||0},i.Vector2.prototype={constructor:i.Vector2,get width(){return this.x},set width(e){this.x=e},get height(){return this.y},set height(e){this.y=e},set:function(e,t){return this.x=e,this.y=t,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e):(this.x=0,this.y=0),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(){var e,t;return function(n,r){return void 0===e&&(e=new i.Vector2,t=new i.Vector2),e.set(n,n),t.set(r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,n))/n),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e),this},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromAttribute:function(e,t,n){return void 0===n&&(n=0),t=t*e.itemSize+n,this.x=e.array[t],this.y=e.array[t+1],this},rotateAround:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=this.x-e.x,a=this.y-e.y;return this.x=i*n-a*r+e.x,this.y=i*r+a*n+e.y,this}},i.Vector3=function(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0},i.Vector3.prototype={constructor:i.Vector3,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return void 0!==t?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e):(this.x=0,this.y=0,this.z=0),this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(t){return t instanceof i.Euler==!1&&console.error("THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order."),void 0===e&&(e=new i.Quaternion),this.applyQuaternion(e.setFromEuler(t)),this}}(),applyAxisAngle:function(){var e;return function(t,n){return void 0===e&&(e=new i.Quaternion),this.applyQuaternion(e.setFromAxisAngle(t,n)),this}}(),applyMatrix3:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6]*r,this.y=i[1]*t+i[4]*n+i[7]*r,this.z=i[2]*t+i[5]*n+i[8]*r,this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r+i[12],this.y=i[1]*t+i[5]*n+i[9]*r+i[13],this.z=i[2]*t+i[6]*n+i[10]*r+i[14],this},applyProjection:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements,a=1/(i[3]*t+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*t+i[4]*n+i[8]*r+i[12])*a,this.y=(i[1]*t+i[5]*n+i[9]*r+i[13])*a,this.z=(i[2]*t+i[6]*n+i[10]*r+i[14])*a,this},applyQuaternion:function(e){var t=this.x,n=this.y,r=this.z,i=e.x,a=e.y,o=e.z,s=e.w,u=s*t+a*r-o*n,h=s*n+o*t-i*r,c=s*r+i*n-a*t,l=-i*t-a*n-o*r;return this.x=u*s+l*-i+h*-o-c*-a,this.y=h*s+l*-a+c*-i-u*-o,this.z=c*s+l*-o+u*-a-h*-i,this},project:function(){var e;return function(t){return void 0===e&&(e=new i.Matrix4),e.multiplyMatrices(t.projectionMatrix,e.getInverse(t.matrixWorld)),this.applyProjection(e)}}(),unproject:function(){var e;return function(t){return void 0===e&&(e=new i.Matrix4),e.multiplyMatrices(t.matrixWorld,e.getInverse(t.projectionMatrix)),this.applyProjection(e)}}(),transformDirection:function(e){var t=this.x,n=this.y,r=this.z,i=e.elements;return this.x=i[0]*t+i[4]*n+i[8]*r,this.y=i[1]*t+i[5]*n+i[9]*r,this.z=i[2]*t+i[6]*n+i[10]*r,this.normalize(),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(){var e,t;return function(n,r){return void 0===e&&(e=new i.Vector3,t=new i.Vector3),e.set(n,n,n),t.set(r,r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,n))/n),this},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e),this},cross:function(e,t){if(void 0!==t)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var n=this.x,r=this.y,i=this.z;return this.x=r*e.z-i*e.y,this.y=i*e.x-n*e.z,this.z=n*e.y-r*e.x,this},crossVectors:function(e,t){var n=e.x,r=e.y,i=e.z,a=t.x,o=t.y,s=t.z;return this.x=r*s-i*o,this.y=i*a-n*s,this.z=n*o-r*a,this},projectOnVector:function(){var e,t;return function(n){return void 0===e&&(e=new i.Vector3),e.copy(n).normalize(),t=this.dot(e),this.copy(e).multiplyScalar(t)}}(),projectOnPlane:function(){var e;return function(t){return void 0===e&&(e=new i.Vector3),e.copy(this).projectOnVector(t),this.sub(e)}}(),reflect:function(){var e;return function(t){return void 0===e&&(e=new i.Vector3),this.sub(e.copy(t).multiplyScalar(2*this.dot(t)))}}(),angleTo:function(e){var t=this.dot(e)/(this.length()*e.length());return Math.acos(i.Math.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,r=this.z-e.z;return t*t+n*n+r*r},setEulerFromRotationMatrix:function(e,t){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(e,t){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),
this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},setFromMatrixPosition:function(e){return this.x=e.elements[12],this.y=e.elements[13],this.z=e.elements[14],this},setFromMatrixScale:function(e){var t=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),n=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),r=this.set(e.elements[8],e.elements[9],e.elements[10]).length();return this.x=t,this.y=n,this.z=r,this},setFromMatrixColumn:function(e,t){var n=4*e,r=t.elements;return this.x=r[n],this.y=r[n+1],this.z=r[n+2],this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromAttribute:function(e,t,n){return void 0===n&&(n=0),t=t*e.itemSize+n,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this}},i.Vector4=function(e,t,n,r){this.x=e||0,this.y=t||0,this.z=n||0,this.w=void 0!==r?r:1},i.Vector4.prototype={constructor:i.Vector4,set:function(e,t,n,r){return this.x=e,this.y=t,this.z=n,this.w=r,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this},add:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return void 0!==t?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.x=0,this.y=0,this.z=0,this.w=0),this},applyMatrix4:function(e){var t=this.x,n=this.y,r=this.z,i=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*r+a[12]*i,this.y=a[1]*t+a[5]*n+a[9]*r+a[13]*i,this.z=a[2]*t+a[6]*n+a[10]*r+a[14]*i,this.w=a[3]*t+a[7]*n+a[11]*r+a[15]*i,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return 1e-4>t?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,n,r,i,a=.01,o=.1,s=e.elements,u=s[0],h=s[4],c=s[8],l=s[1],p=s[5],f=s[9],d=s[2],m=s[6],g=s[10];if(Math.abs(h-l)<a&&Math.abs(c-d)<a&&Math.abs(f-m)<a){if(Math.abs(h+l)<o&&Math.abs(c+d)<o&&Math.abs(f+m)<o&&Math.abs(u+p+g-3)<o)return this.set(1,0,0,0),this;t=Math.PI;var v=(u+1)/2,y=(p+1)/2,b=(g+1)/2,x=(h+l)/4,w=(c+d)/4,M=(f+m)/4;return v>y&&v>b?a>v?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(v),r=x/n,i=w/n):y>b?a>y?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(y),n=x/r,i=M/r):a>b?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(b),n=w/i,r=M/i),this.set(n,r,i,t),this}var S=Math.sqrt((m-f)*(m-f)+(c-d)*(c-d)+(l-h)*(l-h));return Math.abs(S)<.001&&(S=1),this.x=(m-f)/S,this.y=(c-d)/S,this.z=(l-h)/S,this.w=Math.acos((u+p+g-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(){var e,t;return function(n,r){return void 0===e&&(e=new i.Vector4,t=new i.Vector4),e.set(n,n,n,n),t.set(r,r,r,r),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e),this},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return void 0===t&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromAttribute:function(e,t,n){return void 0===n&&(n=0),t=t*e.itemSize+n,this.x=e.array[t],this.y=e.array[t+1],this.z=e.array[t+2],this.w=e.array[t+3],this}},i.Euler=function(e,t,n,r){this._x=e||0,this._y=t||0,this._z=n||0,this._order=r||i.Euler.DefaultOrder},i.Euler.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"],i.Euler.DefaultOrder="XYZ",i.Euler.prototype={constructor:i.Euler,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,n,r){return this._x=e,this._y=t,this._z=n,this._order=r||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){var r=i.Math.clamp,a=e.elements,o=a[0],s=a[4],u=a[8],h=a[1],c=a[5],l=a[9],p=a[2],f=a[6],d=a[10];return t=t||this._order,"XYZ"===t?(this._y=Math.asin(r(u,-1,1)),Math.abs(u)<.99999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-s,o)):(this._x=Math.atan2(f,c),this._z=0)):"YXZ"===t?(this._x=Math.asin(-r(l,-1,1)),Math.abs(l)<.99999?(this._y=Math.atan2(u,d),this._z=Math.atan2(h,c)):(this._y=Math.atan2(-p,o),this._z=0)):"ZXY"===t?(this._x=Math.asin(r(f,-1,1)),Math.abs(f)<.99999?(this._y=Math.atan2(-p,d),this._z=Math.atan2(-s,c)):(this._y=0,this._z=Math.atan2(h,o))):"ZYX"===t?(this._y=Math.asin(-r(p,-1,1)),Math.abs(p)<.99999?(this._x=Math.atan2(f,d),this._z=Math.atan2(h,o)):(this._x=0,this._z=Math.atan2(-s,c))):"YZX"===t?(this._z=Math.asin(r(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-l,c),this._y=Math.atan2(-p,o)):(this._x=0,this._y=Math.atan2(u,d))):"XZY"===t?(this._z=Math.asin(-r(s,-1,1)),Math.abs(s)<.99999?(this._x=Math.atan2(f,c),this._y=Math.atan2(u,o)):(this._x=Math.atan2(-l,d),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,n!==!1&&this.onChangeCallback(),this},setFromQuaternion:function(){var e;return function(t,n,r){return void 0===e&&(e=new i.Matrix4),e.makeRotationFromQuaternion(t),this.setFromRotationMatrix(e,n,r),this}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new i.Quaternion;return function(t){e.setFromEuler(this),this.setFromQuaternion(e,t)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return void 0===e&&(e=[]),void 0===t&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new i.Vector3(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}},i.Line3=function(e,t){this.start=void 0!==e?e:new i.Vector3,this.end=void 0!==t?t:new i.Vector3},i.Line3.prototype={constructor:i.Line3,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},center:function(e){var t=e||new i.Vector3;return t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){var t=e||new i.Vector3;return t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var n=t||new i.Vector3;return this.delta(n).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new i.Vector3,t=new i.Vector3;return function(n,r){e.subVectors(n,this.start),t.subVectors(this.end,this.start);var a=t.dot(t),o=t.dot(e),s=o/a;return r&&(s=i.Math.clamp(s,0,1)),s}}(),closestPointToPoint:function(e,t,n){var r=this.closestPointToPointParameter(e,t),a=n||new i.Vector3;return this.delta(a).multiplyScalar(r).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}},i.Box2=function(e,t){this.min=void 0!==e?e:new i.Vector2(1/0,1/0),this.max=void 0!==t?t:new i.Vector2(-(1/0),-(1/0))},i.Box2.prototype={constructor:i.Box2,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;n>t;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new i.Vector2;return function(t,n){var r=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(e){var t=e||new i.Vector2;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new i.Vector2;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y?!0:!1},getParameter:function(e,t){var n=t||new i.Vector2;return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y?!1:!0},clampPoint:function(e,t){var n=t||new i.Vector2;return n.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new i.Vector2;return function(t){var n=e.copy(t).clamp(this.min,this.max);return n.sub(t).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},i.Box3=function(e,t){this.min=void 0!==e?e:new i.Vector3(1/0,1/0,1/0),this.max=void 0!==t?t:new i.Vector3(-(1/0),-(1/0),-(1/0))},i.Box3.prototype={constructor:i.Box3,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;n>t;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new i.Vector3;return function(t,n){var r=e.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(r),this.max.copy(t).add(r),this}}(),setFromObject:function(){var e=new i.Vector3;return function(t){var n=this;return t.updateMatrixWorld(!0),this.makeEmpty(),t.traverse(function(t){var r=t.geometry;if(void 0!==r)if(r instanceof i.Geometry)for(var a=r.vertices,o=0,s=a.length;s>o;o++)e.copy(a[o]),e.applyMatrix4(t.matrixWorld),n.expandByPoint(e);else if(r instanceof i.BufferGeometry&&void 0!==r.attributes.position)for(var u=r.attributes.position.array,o=0,s=u.length;s>o;o+=3)e.set(u[o],u[o+1],u[o+2]),e.applyMatrix4(t.matrixWorld),n.expandByPoint(e)}),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-(1/0),this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(e){var t=e||new i.Vector3;return t.addVectors(this.min,this.max).multiplyScalar(.5)},size:function(e){var t=e||new i.Vector3;return t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z?!1:!0},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z?!0:!1},getParameter:function(e,t){var n=t||new i.Vector3;return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(e){return e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z?!1:!0},clampPoint:function(e,t){var n=t||new i.Vector3;return n.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new i.Vector3;return function(t){var n=e.copy(t).clamp(this.min,this.max);return n.sub(t).length()}}(),getBoundingSphere:function(){var e=new i.Vector3;return function(t){var n=t||new i.Sphere;return n.center=this.center(),n.radius=.5*this.size(e).length(),n}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new i.Vector3,new i.Vector3,new i.Vector3,new i.Vector3,new i.Vector3,new i.Vector3,new i.Vector3,new i.Vector3];return function(t){return e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.makeEmpty(),this.setFromPoints(e),this}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}},i.Matrix3=function(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")},i.Matrix3.prototype={constructor:i.Matrix3,set:function(e,t,n,r,i,a,o,s,u){var h=this.elements;return h[0]=e,h[3]=t,h[6]=n,h[1]=r,h[4]=i,h[7]=a,h[2]=o,h[5]=s,h[8]=u,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return(new this.constructor).fromArray(this.elements)},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var e;return function(t,n,r){void 0===e&&(e=new i.Vector3),void 0===n&&(n=0),void 0===r&&(r=t.length);for(var a=0,o=n;r>a;a+=3,o+=3)e.fromArray(t,o),e.applyMatrix3(this),e.toArray(t,o);return t}}(),applyToBuffer:function(){var e;return function(t,n,r){void 0===e&&(e=new i.Vector3),void 0===n&&(n=0),void 0===r&&(r=t.length/t.itemSize);for(var a=0,o=n;r>a;a++,o++)e.x=t.getX(o),e.y=t.getY(o),e.z=t.getZ(o),e.applyMatrix3(this),t.setXYZ(e.x,e.y,e.z);return t}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[1],r=e[2],i=e[3],a=e[4],o=e[5],s=e[6],u=e[7],h=e[8];return t*a*h-t*o*u-n*i*h+n*o*s+r*i*u-r*a*s},getInverse:function(e,t){var n=e.elements,r=this.elements;r[0]=n[10]*n[5]-n[6]*n[9],r[1]=-n[10]*n[1]+n[2]*n[9],r[2]=n[6]*n[1]-n[2]*n[5],r[3]=-n[10]*n[4]+n[6]*n[8],r[4]=n[10]*n[0]-n[2]*n[8],r[5]=-n[6]*n[0]+n[2]*n[4],r[6]=n[9]*n[4]-n[5]*n[8],r[7]=-n[9]*n[0]+n[1]*n[8],r[8]=n[5]*n[0]-n[1]*n[4];var i=n[0]*r[0]+n[1]*r[3]+n[2]*r[6];if(0===i){var a="Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(a);return console.warn(a),this.identity(),this}return this.multiplyScalar(1/i),this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},flattenToArrayOffset:function(e,t){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e},getNormalMatrix:function(e){return this.getInverse(e).transpose(),this},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8]]}},i.Matrix4=function(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")},i.Matrix4.prototype={constructor:i.Matrix4,set:function(e,t,n,r,i,a,o,s,u,h,c,l,p,f,d,m){var g=this.elements;return g[0]=e,g[4]=t,g[8]=n,g[12]=r,g[1]=i,g[5]=a,g[9]=o,g[13]=s,g[2]=u,g[6]=h,g[10]=c,g[14]=l,g[3]=p,g[7]=f,g[11]=d,g[15]=m,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return(new i.Matrix4).fromArray(this.elements)},copy:function(e){return this.elements.set(e.elements),this},extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},copyPosition:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this},extractBasis:function(e,t,n){var r=this.elements;return e.set(r[0],r[1],r[2]),t.set(r[4],r[5],r[6]),n.set(r[8],r[9],r[10]),this},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this},extractRotation:function(){var e;return function(t){void 0===e&&(e=new i.Vector3);var n=this.elements,r=t.elements,a=1/e.set(r[0],r[1],r[2]).length(),o=1/e.set(r[4],r[5],r[6]).length(),s=1/e.set(r[8],r[9],r[10]).length();return n[0]=r[0]*a,n[1]=r[1]*a,n[2]=r[2]*a,n[4]=r[4]*o,n[5]=r[5]*o,n[6]=r[6]*o,n[8]=r[8]*s,n[9]=r[9]*s,n[10]=r[10]*s,this}}(),makeRotationFromEuler:function(e){e instanceof i.Euler==!1&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,n=e.x,r=e.y,a=e.z,o=Math.cos(n),s=Math.sin(n),u=Math.cos(r),h=Math.sin(r),c=Math.cos(a),l=Math.sin(a);if("XYZ"===e.order){var p=o*c,f=o*l,d=s*c,m=s*l;t[0]=u*c,t[4]=-u*l,t[8]=h,t[1]=f+d*h,t[5]=p-m*h,t[9]=-s*u,t[2]=m-p*h,t[6]=d+f*h,t[10]=o*u}else if("YXZ"===e.order){var g=u*c,v=u*l,y=h*c,b=h*l;t[0]=g+b*s,t[4]=y*s-v,t[8]=o*h,t[1]=o*l,t[5]=o*c,t[9]=-s,t[2]=v*s-y,t[6]=b+g*s,t[10]=o*u}else if("ZXY"===e.order){var g=u*c,v=u*l,y=h*c,b=h*l;t[0]=g-b*s,t[4]=-o*l,t[8]=y+v*s,t[1]=v+y*s,t[5]=o*c,t[9]=b-g*s,t[2]=-o*h,t[6]=s,t[10]=o*u}else if("ZYX"===e.order){var p=o*c,f=o*l,d=s*c,m=s*l;t[0]=u*c,t[4]=d*h-f,t[8]=p*h+m,t[1]=u*l,t[5]=m*h+p,t[9]=f*h-d,t[2]=-h,t[6]=s*u,t[10]=o*u}else if("YZX"===e.order){var x=o*u,w=o*h,M=s*u,S=s*h;t[0]=u*c,t[4]=S-x*l,t[8]=M*l+w,t[1]=l,t[5]=o*c,t[9]=-s*c,t[2]=-h*c,t[6]=w*l+M,t[10]=x-S*l}else if("XZY"===e.order){var x=o*u,w=o*h,M=s*u,S=s*h;t[0]=u*c,t[4]=-l,t[8]=h*c,t[1]=x*l+S,t[5]=o*c,t[9]=w*l-M,t[2]=M*l-w,t[6]=s*c,t[10]=S*l+x}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},makeRotationFromQuaternion:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z,a=e.w,o=n+n,s=r+r,u=i+i,h=n*o,c=n*s,l=n*u,p=r*s,f=r*u,d=i*u,m=a*o,g=a*s,v=a*u;return t[0]=1-(p+d),t[4]=c-v,t[8]=l+g,t[1]=c+v,t[5]=1-(h+d),t[9]=f-m,t[2]=l-g,t[6]=f+m,t[10]=1-(h+p),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e,t,n;return function(r,a,o){void 0===e&&(e=new i.Vector3),void 0===t&&(t=new i.Vector3),void 0===n&&(n=new i.Vector3);var s=this.elements;return n.subVectors(r,a).normalize(),0===n.lengthSq()&&(n.z=1),e.crossVectors(o,n).normalize(),0===e.lengthSq()&&(n.x+=1e-4,e.crossVectors(o,n).normalize()),t.crossVectors(n,e),s[0]=e.x,s[4]=t.x,s[8]=n.x,s[1]=e.y,s[5]=t.y,s[9]=n.y,s[2]=e.z,s[6]=t.z,s[10]=n.z,this}}(),multiply:function(e,t){return void 0!==t?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},multiplyMatrices:function(e,t){var n=e.elements,r=t.elements,i=this.elements,a=n[0],o=n[4],s=n[8],u=n[12],h=n[1],c=n[5],l=n[9],p=n[13],f=n[2],d=n[6],m=n[10],g=n[14],v=n[3],y=n[7],b=n[11],x=n[15],w=r[0],M=r[4],S=r[8],_=r[12],T=r[1],E=r[5],C=r[9],A=r[13],L=r[2],P=r[6],k=r[10],D=r[14],R=r[3],F=r[7],O=r[11],V=r[15];return i[0]=a*w+o*T+s*L+u*R,i[4]=a*M+o*E+s*P+u*F,i[8]=a*S+o*C+s*k+u*O,i[12]=a*_+o*A+s*D+u*V,i[1]=h*w+c*T+l*L+p*R,i[5]=h*M+c*E+l*P+p*F,i[9]=h*S+c*C+l*k+p*O,i[13]=h*_+c*A+l*D+p*V,i[2]=f*w+d*T+m*L+g*R,i[6]=f*M+d*E+m*P+g*F,i[10]=f*S+d*C+m*k+g*O,i[14]=f*_+d*A+m*D+g*V,i[3]=v*w+y*T+b*L+x*R,i[7]=v*M+y*E+b*P+x*F,i[11]=v*S+y*C+b*k+x*O,i[15]=v*_+y*A+b*D+x*V,this},multiplyToArray:function(e,t,n){var r=this.elements;return this.multiplyMatrices(e,t),n[0]=r[0],n[1]=r[1],n[2]=r[2],n[3]=r[3],n[4]=r[4],n[5]=r[5],n[6]=r[6],n[7]=r[7],n[8]=r[8],n[9]=r[9],n[10]=r[10],n[11]=r[11],n[12]=r[12],n[13]=r[13],n[14]=r[14],n[15]=r[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToVector3Array:function(){var e;return function(t,n,r){void 0===e&&(e=new i.Vector3),void 0===n&&(n=0),void 0===r&&(r=t.length);for(var a=0,o=n;r>a;a+=3,o+=3)e.fromArray(t,o),e.applyMatrix4(this),e.toArray(t,o);return t}}(),applyToBuffer:function(){var e;return function(t,n,r){void 0===e&&(e=new i.Vector3),void 0===n&&(n=0),void 0===r&&(r=t.length/t.itemSize);for(var a=0,o=n;r>a;a++,o++)e.x=t.getX(o),e.y=t.getY(o),e.z=t.getZ(o),e.applyMatrix4(this),t.setXYZ(e.x,e.y,e.z);return t}}(),rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},determinant:function(){var e=this.elements,t=e[0],n=e[4],r=e[8],i=e[12],a=e[1],o=e[5],s=e[9],u=e[13],h=e[2],c=e[6],l=e[10],p=e[14],f=e[3],d=e[7],m=e[11],g=e[15];return f*(+i*s*c-r*u*c-i*o*l+n*u*l+r*o*p-n*s*p)+d*(+t*s*p-t*u*l+i*a*l-r*a*p+r*u*h-i*s*h)+m*(+t*u*c-t*o*p-i*a*c+n*a*p+i*o*h-n*u*h)+g*(-r*o*h-t*s*c+t*o*l+r*a*c-n*a*l+n*s*h)},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this},flattenToArrayOffset:function(e,t){var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e},getPosition:function(){var e;return function(){void 0===e&&(e=new i.Vector3),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.");var t=this.elements;return e.set(t[12],t[13],t[14])}}(),setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var n=this.elements,r=e.elements,i=r[0],a=r[4],o=r[8],s=r[12],u=r[1],h=r[5],c=r[9],l=r[13],p=r[2],f=r[6],d=r[10],m=r[14],g=r[3],v=r[7],y=r[11],b=r[15];n[0]=c*m*v-l*d*v+l*f*y-h*m*y-c*f*b+h*d*b,n[4]=s*d*v-o*m*v-s*f*y+a*m*y+o*f*b-a*d*b,n[8]=o*l*v-s*c*v+s*h*y-a*l*y-o*h*b+a*c*b,n[12]=s*c*f-o*l*f-s*h*d+a*l*d+o*h*m-a*c*m,n[1]=l*d*g-c*m*g-l*p*y+u*m*y+c*p*b-u*d*b,n[5]=o*m*g-s*d*g+s*p*y-i*m*y-o*p*b+i*d*b,n[9]=s*c*g-o*l*g-s*u*y+i*l*y+o*u*b-i*c*b,n[13]=o*l*p-s*c*p+s*u*d-i*l*d-o*u*m+i*c*m,n[2]=h*m*g-l*f*g+l*p*v-u*m*v-h*p*b+u*f*b,n[6]=s*f*g-a*m*g-s*p*v+i*m*v+a*p*b-i*f*b,n[10]=a*l*g-s*h*g+s*u*v-i*l*v-a*u*b+i*h*b,n[14]=s*h*p-a*l*p-s*u*f+i*l*f+a*u*m-i*h*m,n[3]=c*f*g-h*d*g-c*p*v+u*d*v+h*p*y-u*f*y,n[7]=a*d*g-o*f*g+o*p*v-i*d*v-a*p*y+i*f*y,n[11]=o*h*g-a*c*g-o*u*v+i*c*v+a*u*y-i*h*y,n[15]=a*c*p-o*h*p+o*u*f-i*c*f-a*u*d+i*h*d;var x=i*n[0]+u*n[4]+p*n[8]+g*n[12];if(0===x){var w="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t)throw new Error(w);return console.warn(w),this.identity(),this}return this.multiplyScalar(1/x),this},translate:function(e){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(e){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(e){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(e){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(e,t){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},scale:function(e){var t=this.elements,n=e.x,r=e.y,i=e.z;return t[0]*=n,t[4]*=r,t[8]*=i,t[1]*=n,t[5]*=r,t[9]*=i,t[2]*=n,t[6]*=r,t[10]*=i,t[3]*=n,t[7]*=r,t[11]*=i,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],r=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,r))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var n=Math.cos(t),r=Math.sin(t),i=1-n,a=e.x,o=e.y,s=e.z,u=i*a,h=i*o;return this.set(u*a+n,u*o-r*s,u*s+r*o,0,u*o+r*s,h*o+n,h*s-r*a,0,u*s-r*o,h*s+r*a,i*s*s+n,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},compose:function(e,t,n){return this.makeRotationFromQuaternion(t),this.scale(n),this.setPosition(e),this},decompose:function(){var e,t;return function(n,r,a){void 0===e&&(e=new i.Vector3),void 0===t&&(t=new i.Matrix4);var o=this.elements,s=e.set(o[0],o[1],o[2]).length(),u=e.set(o[4],o[5],o[6]).length(),h=e.set(o[8],o[9],o[10]).length(),c=this.determinant();0>c&&(s=-s),n.x=o[12],n.y=o[13],n.z=o[14],t.elements.set(this.elements);var l=1/s,p=1/u,f=1/h;return t.elements[0]*=l,t.elements[1]*=l,t.elements[2]*=l,t.elements[4]*=p,t.elements[5]*=p,t.elements[6]*=p,t.elements[8]*=f,t.elements[9]*=f,t.elements[10]*=f,r.setFromRotationMatrix(t),a.x=s,a.y=u,a.z=h,this}}(),makeFrustum:function(e,t,n,r,i,a){var o=this.elements,s=2*i/(t-e),u=2*i/(r-n),h=(t+e)/(t-e),c=(r+n)/(r-n),l=-(a+i)/(a-i),p=-2*a*i/(a-i);return o[0]=s,o[4]=0,o[8]=h,o[12]=0,o[1]=0,o[5]=u,o[9]=c,o[13]=0,o[2]=0,o[6]=0,o[10]=l,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makePerspective:function(e,t,n,r){var a=n*Math.tan(i.Math.degToRad(.5*e)),o=-a,s=o*t,u=a*t;return this.makeFrustum(s,u,o,a,n,r)},makeOrthographic:function(e,t,n,r,i,a){var o=this.elements,s=t-e,u=n-r,h=a-i,c=(t+e)/s,l=(n+r)/u,p=(a+i)/h;return o[0]=2/s,o[4]=0,o[8]=0,o[12]=-c,o[1]=0,o[5]=2/u,o[9]=0,o[13]=-l,o[2]=0,o[6]=0,o[10]=-2/h,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){for(var t=this.elements,n=e.elements,r=0;16>r;r++)if(t[r]!==n[r])return!1;return!0},fromArray:function(e){return this.elements.set(e),this},toArray:function(){var e=this.elements;return[e[0],e[1],e[2],e[3],e[4],e[5],e[6],e[7],e[8],e[9],e[10],e[11],e[12],e[13],e[14],e[15]]}},i.Ray=function(e,t){this.origin=void 0!==e?e:new i.Vector3,this.direction=void 0!==t?t:new i.Vector3},i.Ray.prototype={constructor:i.Ray,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){
return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){var n=t||new i.Vector3;return n.copy(this.direction).multiplyScalar(e).add(this.origin)},recast:function(){var e=new i.Vector3;return function(t){return this.origin.copy(this.at(t,e)),this}}(),closestPointToPoint:function(e,t){var n=t||new i.Vector3;n.subVectors(e,this.origin);var r=n.dot(this.direction);return 0>r?n.copy(this.origin):n.copy(this.direction).multiplyScalar(r).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new i.Vector3;return function(t){var n=e.subVectors(t,this.origin).dot(this.direction);return 0>n?this.origin.distanceToSquared(t):(e.copy(this.direction).multiplyScalar(n).add(this.origin),e.distanceToSquared(t))}}(),distanceSqToSegment:function(){var e=new i.Vector3,t=new i.Vector3,n=new i.Vector3;return function(r,i,a,o){e.copy(r).add(i).multiplyScalar(.5),t.copy(i).sub(r).normalize(),n.copy(this.origin).sub(e);var s,u,h,c,l=.5*r.distanceTo(i),p=-this.direction.dot(t),f=n.dot(this.direction),d=-n.dot(t),m=n.lengthSq(),g=Math.abs(1-p*p);if(g>0)if(s=p*d-f,u=p*f-d,c=l*g,s>=0)if(u>=-c)if(c>=u){var v=1/g;s*=v,u*=v,h=s*(s+p*u+2*f)+u*(p*s+u+2*d)+m}else u=l,s=Math.max(0,-(p*u+f)),h=-s*s+u*(u+2*d)+m;else u=-l,s=Math.max(0,-(p*u+f)),h=-s*s+u*(u+2*d)+m;else-c>=u?(s=Math.max(0,-(-p*l+f)),u=s>0?-l:Math.min(Math.max(-l,-d),l),h=-s*s+u*(u+2*d)+m):c>=u?(s=0,u=Math.min(Math.max(-l,-d),l),h=u*(u+2*d)+m):(s=Math.max(0,-(p*l+f)),u=s>0?l:Math.min(Math.max(-l,-d),l),h=-s*s+u*(u+2*d)+m);else u=p>0?-l:l,s=Math.max(0,-(p*u+f)),h=-s*s+u*(u+2*d)+m;return a&&a.copy(this.direction).multiplyScalar(s).add(this.origin),o&&o.copy(t).multiplyScalar(u).add(e),h}}(),isIntersectionSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},intersectSphere:function(){var e=new i.Vector3;return function(t,n){e.subVectors(t.center,this.origin);var r=e.dot(this.direction),i=e.dot(e)-r*r,a=t.radius*t.radius;if(i>a)return null;var o=Math.sqrt(a-i),s=r-o,u=r+o;return 0>s&&0>u?null:0>s?this.at(u,n):this.at(s,n)}}(),isIntersectionPlane:function(e){var t=e.distanceToPoint(this.origin);if(0===t)return!0;var n=e.normal.dot(this.direction);return 0>n*t?!0:!1},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return null===n?null:this.at(n,t)},isIntersectionBox:function(){var e=new i.Vector3;return function(t){return null!==this.intersectBox(t,e)}}(),intersectBox:function(e,t){var n,r,i,a,o,s,u=1/this.direction.x,h=1/this.direction.y,c=1/this.direction.z,l=this.origin;return u>=0?(n=(e.min.x-l.x)*u,r=(e.max.x-l.x)*u):(n=(e.max.x-l.x)*u,r=(e.min.x-l.x)*u),h>=0?(i=(e.min.y-l.y)*h,a=(e.max.y-l.y)*h):(i=(e.max.y-l.y)*h,a=(e.min.y-l.y)*h),n>a||i>r?null:((i>n||n!==n)&&(n=i),(r>a||r!==r)&&(r=a),c>=0?(o=(e.min.z-l.z)*c,s=(e.max.z-l.z)*c):(o=(e.max.z-l.z)*c,s=(e.min.z-l.z)*c),n>s||o>r?null:((o>n||n!==n)&&(n=o),(r>s||r!==r)&&(r=s),0>r?null:this.at(n>=0?n:r,t)))},intersectTriangle:function(){var e=new i.Vector3,t=new i.Vector3,n=new i.Vector3,r=new i.Vector3;return function(i,a,o,s,u){t.subVectors(a,i),n.subVectors(o,i),r.crossVectors(t,n);var h,c=this.direction.dot(r);if(c>0){if(s)return null;h=1}else{if(!(0>c))return null;h=-1,c=-c}e.subVectors(this.origin,i);var l=h*this.direction.dot(n.crossVectors(e,n));if(0>l)return null;var p=h*this.direction.dot(t.cross(e));if(0>p)return null;if(l+p>c)return null;var f=-h*e.dot(r);return 0>f?null:this.at(f/c,u)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}},i.Sphere=function(e,t){this.center=void 0!==e?e:new i.Vector3,this.radius=void 0!==t?t:0},i.Sphere.prototype={constructor:i.Sphere,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new i.Box3;return function(t,n){var r=this.center;void 0!==n?r.copy(n):e.setFromPoints(t).center(r);for(var i=0,a=0,o=t.length;o>a;a++)i=Math.max(i,r.distanceToSquared(t[a]));return this.radius=Math.sqrt(i),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},clampPoint:function(e,t){var n=this.center.distanceToSquared(e),r=t||new i.Vector3;return r.copy(e),n>this.radius*this.radius&&(r.sub(this.center).normalize(),r.multiplyScalar(this.radius).add(this.center)),r},getBoundingBox:function(e){var t=e||new i.Box3;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}},i.Frustum=function(e,t,n,r,a,o){this.planes=[void 0!==e?e:new i.Plane,void 0!==t?t:new i.Plane,void 0!==n?n:new i.Plane,void 0!==r?r:new i.Plane,void 0!==a?a:new i.Plane,void 0!==o?o:new i.Plane]},i.Frustum.prototype={constructor:i.Frustum,set:function(e,t,n,r,i,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(r),o[4].copy(i),o[5].copy(a),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){for(var t=this.planes,n=0;6>n;n++)t[n].copy(e.planes[n]);return this},setFromMatrix:function(e){var t=this.planes,n=e.elements,r=n[0],i=n[1],a=n[2],o=n[3],s=n[4],u=n[5],h=n[6],c=n[7],l=n[8],p=n[9],f=n[10],d=n[11],m=n[12],g=n[13],v=n[14],y=n[15];return t[0].setComponents(o-r,c-s,d-l,y-m).normalize(),t[1].setComponents(o+r,c+s,d+l,y+m).normalize(),t[2].setComponents(o+i,c+u,d+p,y+g).normalize(),t[3].setComponents(o-i,c-u,d-p,y-g).normalize(),t[4].setComponents(o-a,c-h,d-f,y-v).normalize(),t[5].setComponents(o+a,c+h,d+f,y+v).normalize(),this},intersectsObject:function(){var e=new i.Sphere;return function(t){var n=t.geometry;return null===n.boundingSphere&&n.computeBoundingSphere(),e.copy(n.boundingSphere),e.applyMatrix4(t.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,n=e.center,r=-e.radius,i=0;6>i;i++){var a=t[i].distanceToPoint(n);if(r>a)return!1}return!0},intersectsBox:function(){var e=new i.Vector3,t=new i.Vector3;return function(n){for(var r=this.planes,i=0;6>i;i++){var a=r[i];e.x=a.normal.x>0?n.min.x:n.max.x,t.x=a.normal.x>0?n.max.x:n.min.x,e.y=a.normal.y>0?n.min.y:n.max.y,t.y=a.normal.y>0?n.max.y:n.min.y,e.z=a.normal.z>0?n.min.z:n.max.z,t.z=a.normal.z>0?n.max.z:n.min.z;var o=a.distanceToPoint(e),s=a.distanceToPoint(t);if(0>o&&0>s)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,n=0;6>n;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}},i.Plane=function(e,t){this.normal=void 0!==e?e:new i.Vector3(1,0,0),this.constant=void 0!==t?t:0},i.Plane.prototype={constructor:i.Plane,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,r){return this.normal.set(e,t,n),this.constant=r,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new i.Vector3,t=new i.Vector3;return function(n,r,i){var a=e.subVectors(i,r).cross(t.subVectors(n,r)).normalize();return this.setFromNormalAndCoplanarPoint(a,n),this}}(),clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var n=this.distanceToPoint(e),r=t||new i.Vector3;return r.copy(this.normal).multiplyScalar(n)},isIntersectionLine:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return 0>t&&n>0||0>n&&t>0},intersectLine:function(){var e=new i.Vector3;return function(t,n){var r=n||new i.Vector3,a=t.delta(e),o=this.normal.dot(a);if(0===o)return 0===this.distanceToPoint(t.start)?r.copy(t.start):void 0;var s=-(t.start.dot(this.normal)+this.constant)/o;return 0>s||s>1?void 0:r.copy(a).multiplyScalar(s).add(t.start)}}(),coplanarPoint:function(e){var t=e||new i.Vector3;return t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new i.Vector3,t=new i.Vector3,n=new i.Matrix3;return function(r,i){var a=i||n.getNormalMatrix(r),o=e.copy(this.normal).applyMatrix3(a),s=this.coplanarPoint(t);return s.applyMatrix4(r),this.setFromNormalAndCoplanarPoint(o,s),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}},i.Math={generateUUID:function(){var e,t="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),n=new Array(36),r=0;return function(){for(var i=0;36>i;i++)8===i||13===i||18===i||23===i?n[i]="-":14===i?n[i]="4":(2>=r&&(r=33554432+16777216*Math.random()|0),e=15&r,r>>=4,n[i]=t[19===i?3&e|8:e]);return n.join("")}}(),clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,r,i){return r+(e-t)*(i-r)/(n-t)},smoothstep:function(e,t,n){return t>=e?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e))},smootherstep:function(e,t,n){return t>=e?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(6*e-15)+10))},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(){var e=Math.PI/180;return function(t){return t*e}}(),radToDeg:function(){var e=180/Math.PI;return function(t){return t*e}}(),isPowerOfTwo:function(e){return 0===(e&e-1)&&0!==e},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,e++,e}},i.Spline=function(e){function t(e,t,n,r,i,a,o){var s=.5*(n-e),u=.5*(r-t);return(2*(t-n)+s+u)*o+(-3*(t-n)-2*s-u)*a+s*i+t}this.points=e;var n,r,a,o,s,u,h,c,l,p=[],f={x:0,y:0,z:0};this.initFromArray=function(e){this.points=[];for(var t=0;t<e.length;t++)this.points[t]={x:e[t][0],y:e[t][1],z:e[t][2]}},this.getPoint=function(e){return n=(this.points.length-1)*e,r=Math.floor(n),a=n-r,p[0]=0===r?r:r-1,p[1]=r,p[2]=r>this.points.length-2?this.points.length-1:r+1,p[3]=r>this.points.length-3?this.points.length-1:r+2,u=this.points[p[0]],h=this.points[p[1]],c=this.points[p[2]],l=this.points[p[3]],o=a*a,s=a*o,f.x=t(u.x,h.x,c.x,l.x,a,o,s),f.y=t(u.y,h.y,c.y,l.y,a,o,s),f.z=t(u.z,h.z,c.z,l.z,a,o,s),f},this.getControlPointsArray=function(){var e,t,n=this.points.length,r=[];for(e=0;n>e;e++)t=this.points[e],r[e]=[t.x,t.y,t.z];return r},this.getLength=function(e){var t,n,r,a,o=0,s=0,u=0,h=new i.Vector3,c=new i.Vector3,l=[],p=0;for(l[0]=0,e||(e=100),r=this.points.length*e,h.copy(this.points[0]),t=1;r>t;t++)n=t/r,a=this.getPoint(n),c.copy(a),p+=c.distanceTo(h),h.copy(a),o=(this.points.length-1)*n,s=Math.floor(o),s!==u&&(l[s]=p,u=s);return l[l.length]=p,{chunks:l,total:p}},this.reparametrizeByArcLength=function(e){var t,n,r,a,o,s,u,h,c=[],l=new i.Vector3,p=this.getLength();for(c.push(l.copy(this.points[0]).clone()),t=1;t<this.points.length;t++){for(s=p.chunks[t]-p.chunks[t-1],u=Math.ceil(e*s/p.total),a=(t-1)/(this.points.length-1),o=t/(this.points.length-1),n=1;u-1>n;n++)r=a+n*(1/u)*(o-a),h=this.getPoint(r),c.push(l.copy(h).clone());c.push(l.copy(this.points[t]).clone())}this.points=c}},i.Triangle=function(e,t,n){this.a=void 0!==e?e:new i.Vector3,this.b=void 0!==t?t:new i.Vector3,this.c=void 0!==n?n:new i.Vector3},i.Triangle.normal=function(){var e=new i.Vector3;return function(t,n,r,a){var o=a||new i.Vector3;o.subVectors(r,n),e.subVectors(t,n),o.cross(e);var s=o.lengthSq();return s>0?o.multiplyScalar(1/Math.sqrt(s)):o.set(0,0,0)}}(),i.Triangle.barycoordFromPoint=function(){var e=new i.Vector3,t=new i.Vector3,n=new i.Vector3;return function(r,a,o,s,u){e.subVectors(s,a),t.subVectors(o,a),n.subVectors(r,a);var h=e.dot(e),c=e.dot(t),l=e.dot(n),p=t.dot(t),f=t.dot(n),d=h*p-c*c,m=u||new i.Vector3;if(0===d)return m.set(-2,-1,-1);var g=1/d,v=(p*l-c*f)*g,y=(h*f-c*l)*g;return m.set(1-v-y,y,v)}}(),i.Triangle.containsPoint=function(){var e=new i.Vector3;return function(t,n,r,a){var o=i.Triangle.barycoordFromPoint(t,n,r,a,e);return o.x>=0&&o.y>=0&&o.x+o.y<=1}}(),i.Triangle.prototype={constructor:i.Triangle,set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},setFromPointsAndIndices:function(e,t,n,r){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[r]),this},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new i.Vector3,t=new i.Vector3;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),.5*e.cross(t).length()}}(),midpoint:function(e){var t=e||new i.Vector3;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return i.Triangle.normal(this.a,this.b,this.c,e)},plane:function(e){var t=e||new i.Plane;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return i.Triangle.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return i.Triangle.containsPoint(e,this.a,this.b,this.c)},equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}},i.Channels=function(){this.mask=1},i.Channels.prototype={constructor:i.Channels,set:function(e){this.mask=1<<e},enable:function(e){this.mask|=1<<e},toggle:function(e){this.mask^=1<<e},disable:function(e){this.mask&=~(1<<e)}},i.Clock=function(e){this.autoStart=void 0!==e?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1},i.Clock.prototype={constructor:i.Clock,start:function(){this.startTime=r.performance.now(),this.oldTime=this.startTime,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=r.performance.now();e=.001*(t-this.oldTime),this.oldTime=t,this.elapsedTime+=e}return e}},i.EventDispatcher=function(){},i.EventDispatcher.prototype={constructor:i.EventDispatcher,apply:function(e){e.addEventListener=i.EventDispatcher.prototype.addEventListener,e.hasEventListener=i.EventDispatcher.prototype.hasEventListener,e.removeEventListener=i.EventDispatcher.prototype.removeEventListener,e.dispatchEvent=i.EventDispatcher.prototype.dispatchEvent},addEventListener:function(e,t){void 0===this._listeners&&(this._listeners={});var n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)},hasEventListener:function(e,t){if(void 0===this._listeners)return!1;var n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)?!0:!1},removeEventListener:function(e,t){if(void 0!==this._listeners){var n=this._listeners,r=n[e];if(void 0!==r){var i=r.indexOf(t);-1!==i&&r.splice(i,1)}}},dispatchEvent:function(e){if(void 0!==this._listeners){var t=this._listeners,n=t[e.type];if(void 0!==n){e.target=this;for(var r=[],i=n.length,a=0;i>a;a++)r[a]=n[a];for(var a=0;i>a;a++)r[a].call(this,e)}}}},function(e){function t(e,t){return e.distance-t.distance}function n(e,t,r,i){if(e.visible!==!1&&(e.raycast(t,r),i===!0))for(var a=e.children,o=0,s=a.length;s>o;o++)n(a[o],t,r,!0)}e.Raycaster=function(t,n,r,i){this.ray=new e.Ray(t,n),this.near=r||0,this.far=i||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})},e.Raycaster.prototype={constructor:e.Raycaster,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(t,n){n instanceof e.PerspectiveCamera?(this.ray.origin.setFromMatrixPosition(n.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(n).sub(this.ray.origin).normalize()):n instanceof e.OrthographicCamera?(this.ray.origin.set(t.x,t.y,-1).unproject(n),this.ray.direction.set(0,0,-1).transformDirection(n.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,r){var i=[];return n(e,this,i,r),i.sort(t),i},intersectObjects:function(e,r){var i=[];if(Array.isArray(e)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),i;for(var a=0,o=e.length;o>a;a++)n(e[a],this,i,r);return i.sort(t),i}}}(i),i.Object3D=function(){function e(){a.setFromEuler(r,!1)}function t(){r.setFromQuaternion(a,void 0,!1)}Object.defineProperty(this,"id",{value:i.Object3DIdCount++}),this.uuid=i.Math.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.channels=new i.Channels,this.children=[],this.up=i.Object3D.DefaultUp.clone();var n=new i.Vector3,r=new i.Euler,a=new i.Quaternion,o=new i.Vector3(1,1,1);r.onChange(e),a.onChange(t),Object.defineProperties(this,{position:{enumerable:!0,value:n},rotation:{enumerable:!0,value:r},quaternion:{enumerable:!0,value:a},scale:{enumerable:!0,value:o},modelViewMatrix:{value:new i.Matrix4},normalMatrix:{value:new i.Matrix3}}),this.rotationAutoUpdate=!0,this.matrix=new i.Matrix4,this.matrixWorld=new i.Matrix4,this.matrixAutoUpdate=i.Object3D.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={}},i.Object3D.DefaultUp=new i.Vector3(0,1,0),i.Object3D.DefaultMatrixAutoUpdate=!0,i.Object3D.prototype={constructor:i.Object3D,get eulerOrder(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set eulerOrder(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e},get useQuaternion(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set useQuaternion(e){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set renderDepth(e){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new i.Quaternion;return function(t,n){return e.setFromAxisAngle(t,n),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new i.Vector3(1,0,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateY:function(){var e=new i.Vector3(0,1,0);return function(t){return this.rotateOnAxis(e,t)}}(),rotateZ:function(){var e=new i.Vector3(0,0,1);return function(t){return this.rotateOnAxis(e,t)}}(),translateOnAxis:function(){var e=new i.Vector3;return function(t,n){return e.copy(t).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(n)),this}}(),translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)},translateX:function(){var e=new i.Vector3(1,0,0);return function(t){return this.translateOnAxis(e,t)}}(),translateY:function(){var e=new i.Vector3(0,1,0);return function(t){return this.translateOnAxis(e,t)}}(),translateZ:function(){var e=new i.Vector3(0,0,1);return function(t){return this.translateOnAxis(e,t)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new i.Matrix4;return function(t){return t.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new i.Matrix4;return function(t){e.lookAt(t,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e instanceof i.Object3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);var n=this.children.indexOf(e);-1!==n&&(e.parent=null,e.dispatchEvent({type:"removed"}),this.children.splice(n,1))},getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var n=0,r=this.children.length;r>n;n++){var i=this.children[n],a=i.getObjectByProperty(e,t);if(void 0!==a)return a}return void 0},getWorldPosition:function(e){var t=e||new i.Vector3;return this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new i.Vector3,t=new i.Vector3;return function(n){var r=n||new i.Quaternion;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,r,t),r}}(),getWorldRotation:function(){var e=new i.Quaternion;return function(t){var n=t||new i.Euler;return this.getWorldQuaternion(e),n.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new i.Vector3,t=new i.Quaternion;return function(n){var r=n||new i.Vector3;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,r),r}}(),getWorldDirection:function(){var e=new i.Quaternion;return function(t){var n=t||new i.Vector3;return this.getWorldQuaternion(e),n.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,n=0,r=t.length;r>n;n++)t[n].traverse(e)},traverseVisible:function(e){if(this.visible!==!1){e(this);for(var t=this.children,n=0,r=t.length;r>n;n++)t[n].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||e===!0)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=0,n=this.children.length;n>t;t++)this.children[t].updateMatrixWorld(e)},toJSON:function(e){function t(e){var t=[];for(var n in e){var r=e[n];delete r.metadata,t.push(r)}return t}var n=void 0===e,r={};n&&(e={geometries:{},materials:{},textures:{},images:{}},r.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"});var i={};if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),"{}"!==JSON.stringify(this.userData)&&(i.userData=this.userData),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),i.matrix=this.matrix.toArray(),void 0!==this.geometry&&(void 0===e.geometries[this.geometry.uuid]&&(e.geometries[this.geometry.uuid]=this.geometry.toJSON(e)),i.geometry=this.geometry.uuid),void 0!==this.material&&(void 0===e.materials[this.material.uuid]&&(e.materials[this.material.uuid]=this.material.toJSON(e)),i.material=this.material.uuid),this.children.length>0){i.children=[];for(var a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(n){var o=t(e.geometries),s=t(e.materials),u=t(e.textures),h=t(e.images);o.length>0&&(r.geometries=o),s.length>0&&(r.materials=s),u.length>0&&(r.textures=u),h.length>0&&(r.images=h)}return r.object=i,r},clone:function(e){return(new this.constructor).copy(this,e)},copy:function(e,t){if(void 0===t&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.rotationAutoUpdate=e.rotationAutoUpdate,this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(var n=0;n<e.children.length;n++){var r=e.children[n];this.add(r.clone())}return this}},i.EventDispatcher.prototype.apply(i.Object3D.prototype),i.Object3DIdCount=0,i.Face3=function(e,t,n,r,a,o){this.a=e,this.b=t,this.c=n,this.normal=r instanceof i.Vector3?r:new i.Vector3,this.vertexNormals=Array.isArray(r)?r:[],this.color=a instanceof i.Color?a:new i.Color,this.vertexColors=Array.isArray(a)?a:[],this.materialIndex=void 0!==o?o:0},i.Face3.prototype={constructor:i.Face3,clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,n=e.vertexNormals.length;n>t;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(var t=0,n=e.vertexColors.length;n>t;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}},i.Face4=function(e,t,n,r,a,o,s){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new i.Face3(e,t,n,a,o,s)},i.BufferAttribute=function(e,t){this.uuid=i.Math.generateUUID(),this.array=e,this.itemSize=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},i.BufferAttribute.prototype={constructor:i.BufferAttribute,get length(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length},get count(){return this.array.length/this.itemSize},set needsUpdate(e){e===!0&&this.version++},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var r=0,i=this.itemSize;i>r;r++)this.array[e+r]=t.array[n+r];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,n=0,r=0,a=e.length;a>r;r++){var o=e[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),o=new i.Color),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this},copyIndicesArray:function(e){for(var t=this.array,n=0,r=0,i=e.length;i>r;r++){var a=e[r];t[n++]=a.a,t[n++]=a.b,t[n++]=a.c}return this},copyVector2sArray:function(e){for(var t=this.array,n=0,r=0,a=e.length;a>r;r++){var o=e[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),o=new i.Vector2),t[n++]=o.x,t[n++]=o.y}return this},copyVector3sArray:function(e){for(var t=this.array,n=0,r=0,a=e.length;a>r;r++){var o=e[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),o=new i.Vector3),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this},copyVector4sArray:function(e){for(var t=this.array,n=0,r=0,a=e.length;a>r;r++){var o=e[r];void 0===o&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),o=new i.Vector4),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=r,this.array[e+3]=i,this},clone:function(){return(new this.constructor).copy(this)}},i.Int8Attribute=function(e,t){return new i.BufferAttribute(new Int8Array(e),t)},i.Uint8Attribute=function(e,t){return new i.BufferAttribute(new Uint8Array(e),t)},i.Uint8ClampedAttribute=function(e,t){return new i.BufferAttribute(new Uint8ClampedArray(e),t)},i.Int16Attribute=function(e,t){return new i.BufferAttribute(new Int16Array(e),t)},i.Uint16Attribute=function(e,t){return new i.BufferAttribute(new Uint16Array(e),t)},i.Int32Attribute=function(e,t){return new i.BufferAttribute(new Int32Array(e),t)},i.Uint32Attribute=function(e,t){return new i.BufferAttribute(new Uint32Array(e),t)},i.Float32Attribute=function(e,t){return new i.BufferAttribute(new Float32Array(e),t)},i.Float64Attribute=function(e,t){return new i.BufferAttribute(new Float64Array(e),t)},i.DynamicBufferAttribute=function(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new i.BufferAttribute(e,t).setDynamic(!0)},i.InstancedBufferAttribute=function(e,t,n){i.BufferAttribute.call(this,e,t),this.meshPerAttribute=n||1},i.InstancedBufferAttribute.prototype=Object.create(i.BufferAttribute.prototype),i.InstancedBufferAttribute.prototype.constructor=i.InstancedBufferAttribute,i.InstancedBufferAttribute.prototype.copy=function(e){return i.BufferAttribute.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this},i.InterleavedBuffer=function(e,t){this.uuid=i.Math.generateUUID(),this.array=e,this.stride=t,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.version=0},i.InterleavedBuffer.prototype={constructor:i.InterleavedBuffer,get length(){return this.array.length},get count(){return this.array.length/this.stride},set needsUpdate(e){e===!0&&this.version++},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){this.array=new e.array.constructor(e.array),this.stride=e.stride,this.dynamic=e.dynamic},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(var r=0,i=this.stride;i>r;r++)this.array[e+r]=t.array[n+r];return this},set:function(e,t){return void 0===t&&(t=0),this.array.set(e,t),this},clone:function(){return(new this.constructor).copy(this)}},i.InstancedInterleavedBuffer=function(e,t,n){i.InterleavedBuffer.call(this,e,t),this.meshPerAttribute=n||1},i.InstancedInterleavedBuffer.prototype=Object.create(i.InterleavedBuffer.prototype),i.InstancedInterleavedBuffer.prototype.constructor=i.InstancedInterleavedBuffer,i.InstancedInterleavedBuffer.prototype.copy=function(e){return i.InterleavedBuffer.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,
this},i.InterleavedBufferAttribute=function(e,t,n){this.uuid=i.Math.generateUUID(),this.data=e,this.itemSize=t,this.offset=n},i.InterleavedBufferAttribute.prototype={constructor:i.InterleavedBufferAttribute,get length(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Please use .count."),this.array.length},get count(){return this.data.array.length/this.data.stride},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this},setXYZW:function(e,t,n,r,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=r,this.data.array[e+3]=i,this}},i.Geometry=function(){Object.defineProperty(this,"id",{value:i.GeometryIdCount++}),this.uuid=i.Math.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.elementsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1},i.Geometry.prototype={constructor:i.Geometry,applyMatrix:function(e){for(var t=(new i.Matrix3).getNormalMatrix(e),n=0,r=this.vertices.length;r>n;n++){var a=this.vertices[n];a.applyMatrix4(e)}for(var n=0,r=this.faces.length;r>n;n++){var o=this.faces[n];o.normal.applyMatrix3(t).normalize();for(var s=0,u=o.vertexNormals.length;u>s;s++)o.vertexNormals[s].applyMatrix3(t).normalize()}null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0},rotateX:function(){var e;return function(t){return void 0===e&&(e=new i.Matrix4),e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return void 0===e&&(e=new i.Matrix4),e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return void 0===e&&(e=new i.Matrix4),e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e;return function(t,n,r){return void 0===e&&(e=new i.Matrix4),e.makeTranslation(t,n,r),this.applyMatrix(e),this}}(),scale:function(){var e;return function(t,n,r){return void 0===e&&(e=new i.Matrix4),e.makeScale(t,n,r),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(t){void 0===e&&(e=new i.Object3D),e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),fromBufferGeometry:function(e){function t(e,t,r){var a=void 0!==s?[l[e].clone(),l[t].clone(),l[r].clone()]:[],o=void 0!==u?[n.colors[e].clone(),n.colors[t].clone(),n.colors[r].clone()]:[],d=new i.Face3(e,t,r,a,o);n.faces.push(d),void 0!==h&&n.faceVertexUvs[0].push([p[e].clone(),p[t].clone(),p[r].clone()]),void 0!==c&&n.faceVertexUvs[1].push([f[e].clone(),f[t].clone(),f[r].clone()])}var n=this,r=null!==e.index?e.index.array:void 0,a=e.attributes,o=a.position.array,s=void 0!==a.normal?a.normal.array:void 0,u=void 0!==a.color?a.color.array:void 0,h=void 0!==a.uv?a.uv.array:void 0,c=void 0!==a.uv2?a.uv2.array:void 0;void 0!==c&&(this.faceVertexUvs[1]=[]);for(var l=[],p=[],f=[],d=0,m=0,g=0;d<o.length;d+=3,m+=2,g+=4)n.vertices.push(new i.Vector3(o[d],o[d+1],o[d+2])),void 0!==s&&l.push(new i.Vector3(s[d],s[d+1],s[d+2])),void 0!==u&&n.colors.push(new i.Color(u[d],u[d+1],u[d+2])),void 0!==h&&p.push(new i.Vector2(h[m],h[m+1])),void 0!==c&&f.push(new i.Vector2(c[m],c[m+1]));if(void 0!==r){var v=e.groups;if(v.length>0)for(var d=0;d<v.length;d++)for(var y=v[d],b=y.start,x=y.count,m=b,w=b+x;w>m;m+=3)t(r[m],r[m+1],r[m+2]);else for(var d=0;d<r.length;d+=3)t(r[d],r[d+1],r[d+2])}else for(var d=0;d<o.length/3;d+=3)t(d,d+1,d+2);return this.computeFaceNormals(),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.translate(e.x,e.y,e.z),e},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,n=0===t?1:1/t,r=new i.Matrix4;return r.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix(r),this},computeFaceNormals:function(){for(var e=new i.Vector3,t=new i.Vector3,n=0,r=this.faces.length;r>n;n++){var a=this.faces[n],o=this.vertices[a.a],s=this.vertices[a.b],u=this.vertices[a.c];e.subVectors(u,s),t.subVectors(o,s),e.cross(t),e.normalize(),a.normal.copy(e)}},computeVertexNormals:function(e){var t,n,r,a,o,s;for(s=new Array(this.vertices.length),t=0,n=this.vertices.length;n>t;t++)s[t]=new i.Vector3;if(e){var u,h,c,l=new i.Vector3,p=new i.Vector3;for(r=0,a=this.faces.length;a>r;r++)o=this.faces[r],u=this.vertices[o.a],h=this.vertices[o.b],c=this.vertices[o.c],l.subVectors(c,h),p.subVectors(u,h),l.cross(p),s[o.a].add(l),s[o.b].add(l),s[o.c].add(l)}else for(r=0,a=this.faces.length;a>r;r++)o=this.faces[r],s[o.a].add(o.normal),s[o.b].add(o.normal),s[o.c].add(o.normal);for(t=0,n=this.vertices.length;n>t;t++)s[t].normalize();for(r=0,a=this.faces.length;a>r;r++){o=this.faces[r];var f=o.vertexNormals;3===f.length?(f[0].copy(s[o.a]),f[1].copy(s[o.b]),f[2].copy(s[o.c])):(f[0]=s[o.a].clone(),f[1]=s[o.b].clone(),f[2]=s[o.c].clone())}},computeMorphNormals:function(){var e,t,n,r,a;for(n=0,r=this.faces.length;r>n;n++)for(a=this.faces[n],a.__originalFaceNormal?a.__originalFaceNormal.copy(a.normal):a.__originalFaceNormal=a.normal.clone(),a.__originalVertexNormals||(a.__originalVertexNormals=[]),e=0,t=a.vertexNormals.length;t>e;e++)a.__originalVertexNormals[e]?a.__originalVertexNormals[e].copy(a.vertexNormals[e]):a.__originalVertexNormals[e]=a.vertexNormals[e].clone();var o=new i.Geometry;for(o.faces=this.faces,e=0,t=this.morphTargets.length;t>e;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var s,u,h=this.morphNormals[e].faceNormals,c=this.morphNormals[e].vertexNormals;for(n=0,r=this.faces.length;r>n;n++)s=new i.Vector3,u={a:new i.Vector3,b:new i.Vector3,c:new i.Vector3},h.push(s),c.push(u)}var l=this.morphNormals[e];o.vertices=this.morphTargets[e].vertices,o.computeFaceNormals(),o.computeVertexNormals();var s,u;for(n=0,r=this.faces.length;r>n;n++)a=this.faces[n],s=l.faceNormals[n],u=l.vertexNormals[n],s.copy(a.normal),u.a.copy(a.vertexNormals[0]),u.b.copy(a.vertexNormals[1]),u.c.copy(a.vertexNormals[2])}for(n=0,r=this.faces.length;r>n;n++)a=this.faces[n],a.normal=a.__originalFaceNormal,a.vertexNormals=a.__originalVertexNormals},computeTangents:function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){for(var e=0,t=this.vertices,n=0,r=t.length;r>n;n++)n>0&&(e+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=e},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new i.Box3),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new i.Sphere),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if(e instanceof i.Geometry==!1)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);var r,a=this.vertices.length,o=this.vertices,s=e.vertices,u=this.faces,h=e.faces,c=this.faceVertexUvs[0],l=e.faceVertexUvs[0];void 0===n&&(n=0),void 0!==t&&(r=(new i.Matrix3).getNormalMatrix(t));for(var p=0,f=s.length;f>p;p++){var d=s[p],m=d.clone();void 0!==t&&m.applyMatrix4(t),o.push(m)}for(p=0,f=h.length;f>p;p++){var g,v,y,b=h[p],x=b.vertexNormals,w=b.vertexColors;g=new i.Face3(b.a+a,b.b+a,b.c+a),g.normal.copy(b.normal),void 0!==r&&g.normal.applyMatrix3(r).normalize();for(var M=0,S=x.length;S>M;M++)v=x[M].clone(),void 0!==r&&v.applyMatrix3(r).normalize(),g.vertexNormals.push(v);g.color.copy(b.color);for(var M=0,S=w.length;S>M;M++)y=w[M],g.vertexColors.push(y.clone());g.materialIndex=b.materialIndex+n,u.push(g)}for(p=0,f=l.length;f>p;p++){var _=l[p],T=[];if(void 0!==_){for(var M=0,S=_.length;S>M;M++)T.push(_[M].clone());c.push(T)}}},mergeMesh:function(e){return e instanceof i.Mesh==!1?void console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e):(e.matrixAutoUpdate&&e.updateMatrix(),void this.merge(e.geometry,e.matrix))},mergeVertices:function(){var e,t,n,r,i,a,o,s,u={},h=[],c=[],l=4,p=Math.pow(10,l);for(n=0,r=this.vertices.length;r>n;n++)e=this.vertices[n],t=Math.round(e.x*p)+"_"+Math.round(e.y*p)+"_"+Math.round(e.z*p),void 0===u[t]?(u[t]=n,h.push(this.vertices[n]),c[n]=h.length-1):c[n]=c[u[t]];var f=[];for(n=0,r=this.faces.length;r>n;n++){i=this.faces[n],i.a=c[i.a],i.b=c[i.b],i.c=c[i.c],a=[i.a,i.b,i.c];for(var d=-1,m=0;3>m;m++)if(a[m]===a[(m+1)%3]){d=m,f.push(n);break}}for(n=f.length-1;n>=0;n--){var g=f[n];for(this.faces.splice(g,1),o=0,s=this.faceVertexUvs.length;s>o;o++)this.faceVertexUvs[o].splice(g,1)}var v=this.vertices.length-h.length;return this.vertices=h,v},sortFacesByMaterialIndex:function(){function e(e,t){return e.materialIndex-t.materialIndex}for(var t=this.faces,n=t.length,r=0;n>r;r++)t[r]._id=r;t.sort(e);var i,a,o=this.faceVertexUvs[0],s=this.faceVertexUvs[1];o&&o.length===n&&(i=[]),s&&s.length===n&&(a=[]);for(var r=0;n>r;r++){var u=t[r]._id;i&&i.push(o[u]),a&&a.push(s[u])}i&&(this.faceVertexUvs[0]=i),a&&(this.faceVertexUvs[1]=a)},toJSON:function(){function e(e,t,n){return n?e|1<<t:e&~(1<<t)}function t(e){var t=e.x.toString()+e.y.toString()+e.z.toString();return void 0!==p[t]?p[t]:(p[t]=l.length/3,l.push(e.x,e.y,e.z),p[t])}function n(e){var t=e.r.toString()+e.g.toString()+e.b.toString();return void 0!==d[t]?d[t]:(d[t]=f.length,f.push(e.getHex()),d[t])}function r(e){var t=e.x.toString()+e.y.toString();return void 0!==g[t]?g[t]:(g[t]=m.length/2,m.push(e.x,e.y),g[t])}var i={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),void 0!==this.parameters){var a=this.parameters;for(var o in a)void 0!==a[o]&&(i[o]=a[o]);return i}for(var s=[],u=0;u<this.vertices.length;u++){var h=this.vertices[u];s.push(h.x,h.y,h.z)}for(var c=[],l=[],p={},f=[],d={},m=[],g={},u=0;u<this.faces.length;u++){var v=this.faces[u],y=!1,b=!1,x=void 0!==this.faceVertexUvs[0][u],w=v.normal.length()>0,M=v.vertexNormals.length>0,S=1!==v.color.r||1!==v.color.g||1!==v.color.b,_=v.vertexColors.length>0,T=0;if(T=e(T,0,0),T=e(T,1,y),T=e(T,2,b),T=e(T,3,x),T=e(T,4,w),T=e(T,5,M),T=e(T,6,S),T=e(T,7,_),c.push(T),c.push(v.a,v.b,v.c),x){var E=this.faceVertexUvs[0][u];c.push(r(E[0]),r(E[1]),r(E[2]))}if(w&&c.push(t(v.normal)),M){var C=v.vertexNormals;c.push(t(C[0]),t(C[1]),t(C[2]))}if(S&&c.push(n(v.color)),_){var A=v.vertexColors;c.push(n(A[0]),n(A[1]),n(A[2]))}}return i.data={},i.data.vertices=s,i.data.normals=l,f.length>0&&(i.data.colors=f),m.length>0&&(i.data.uvs=[m]),i.data.faces=c,i},clone:function(){return(new this.constructor).copy(this)},copy:function(e){this.vertices=[],this.faces=[],this.faceVertexUvs=[[]];for(var t=e.vertices,n=0,r=t.length;r>n;n++)this.vertices.push(t[n].clone());for(var i=e.faces,n=0,r=i.length;r>n;n++)this.faces.push(i[n].clone());for(var n=0,r=e.faceVertexUvs.length;r>n;n++){var a=e.faceVertexUvs[n];void 0===this.faceVertexUvs[n]&&(this.faceVertexUvs[n]=[]);for(var o=0,s=a.length;s>o;o++){for(var u=a[o],h=[],c=0,l=u.length;l>c;c++){var p=u[c];h.push(p.clone())}this.faceVertexUvs[n].push(h)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}},i.EventDispatcher.prototype.apply(i.Geometry.prototype),i.GeometryIdCount=0,i.DirectGeometry=function(){Object.defineProperty(this,"id",{value:i.GeometryIdCount++}),this.uuid=i.Math.generateUUID(),this.name="",this.type="DirectGeometry",this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1},i.DirectGeometry.prototype={constructor:i.DirectGeometry,computeBoundingBox:i.Geometry.prototype.computeBoundingBox,computeBoundingSphere:i.Geometry.prototype.computeBoundingSphere,computeFaceNormals:function(){console.warn("THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.")},computeVertexNormals:function(){console.warn("THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.")},computeGroups:function(e){for(var t,n,r=[],i=e.faces,a=0;a<i.length;a++){var o=i[a];o.materialIndex!==n&&(n=o.materialIndex,void 0!==t&&(t.count=3*a-t.start,r.push(t)),t={start:3*a,materialIndex:n})}void 0!==t&&(t.count=3*a-t.start,r.push(t)),this.groups=r},fromGeometry:function(e){var t=e.faces,n=e.vertices,r=e.faceVertexUvs,a=r[0]&&r[0].length>0,o=r[1]&&r[1].length>0,s=e.morphTargets,u=s.length;if(u>0){for(var h=[],c=0;u>c;c++)h[c]=[];this.morphTargets.position=h}var l=e.morphNormals,p=l.length;if(p>0){for(var f=[],c=0;p>c;c++)f[c]=[];this.morphTargets.normal=f}for(var d=e.skinIndices,m=e.skinWeights,g=d.length===n.length,v=m.length===n.length,c=0;c<t.length;c++){var y=t[c];this.vertices.push(n[y.a],n[y.b],n[y.c]);var b=y.vertexNormals;if(3===b.length)this.normals.push(b[0],b[1],b[2]);else{var x=y.normal;this.normals.push(x,x,x)}var w=y.vertexColors;if(3===w.length)this.colors.push(w[0],w[1],w[2]);else{var M=y.color;this.colors.push(M,M,M)}if(a===!0){var S=r[0][c];void 0!==S?this.uvs.push(S[0],S[1],S[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",c),this.uvs.push(new i.Vector2,new i.Vector2,new i.Vector2))}if(o===!0){var S=r[1][c];void 0!==S?this.uvs2.push(S[0],S[1],S[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",c),this.uvs2.push(new i.Vector2,new i.Vector2,new i.Vector2))}for(var _=0;u>_;_++){var T=s[_].vertices;h[_].push(T[y.a],T[y.b],T[y.c])}for(var _=0;p>_;_++){var E=l[_].vertexNormals[c];f[_].push(E.a,E.b,E.c)}g&&this.skinIndices.push(d[y.a],d[y.b],d[y.c]),v&&this.skinWeights.push(m[y.a],m[y.b],m[y.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},i.EventDispatcher.prototype.apply(i.DirectGeometry.prototype),i.BufferGeometry=function(){Object.defineProperty(this,"id",{value:i.GeometryIdCount++}),this.uuid=i.Math.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}},i.BufferGeometry.prototype={constructor:i.BufferGeometry,addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},getIndex:function(){return this.index},setIndex:function(e){this.index=e},addAttribute:function(e,t){return t instanceof i.BufferAttribute==!1&&t instanceof i.InterleavedBufferAttribute==!1?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),void this.addAttribute(e,new i.BufferAttribute(arguments[1],arguments[2]))):"index"===e?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),void this.setIndex(t)):void(this.attributes[e]=t)},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){delete this.attributes[e]},get drawcalls(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups},get offsets(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups},addDrawCall:function(e,t,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:void 0!==n?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;void 0!==t&&(e.applyToVector3Array(t.array),t.needsUpdate=!0);var n=this.attributes.normal;if(void 0!==n){var r=(new i.Matrix3).getNormalMatrix(e);r.applyToVector3Array(n.array),n.needsUpdate=!0}null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere()},rotateX:function(){var e;return function(t){return void 0===e&&(e=new i.Matrix4),e.makeRotationX(t),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(t){return void 0===e&&(e=new i.Matrix4),e.makeRotationY(t),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(t){return void 0===e&&(e=new i.Matrix4),e.makeRotationZ(t),this.applyMatrix(e),this}}(),translate:function(){var e;return function(t,n,r){return void 0===e&&(e=new i.Matrix4),e.makeTranslation(t,n,r),this.applyMatrix(e),this}}(),scale:function(){var e;return function(t,n,r){return void 0===e&&(e=new i.Matrix4),e.makeScale(t,n,r),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(t){void 0===e&&(e=new i.Object3D),e.lookAt(t),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){this.computeBoundingBox();var e=this.boundingBox.center().negate();return this.translate(e.x,e.y,e.z),e},setFromObject:function(e){var t=e.geometry;if(e instanceof i.Points||e instanceof i.Line){var n=new i.Float32Attribute(3*t.vertices.length,3),r=new i.Float32Attribute(3*t.colors.length,3);if(this.addAttribute("position",n.copyVector3sArray(t.vertices)),this.addAttribute("color",r.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var a=new i.Float32Attribute(t.lineDistances.length,1);this.addAttribute("lineDistance",a.copyArray(t.lineDistances))}null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone())}else e instanceof i.Mesh&&t instanceof i.Geometry&&this.fromGeometry(t);return this},updateFromObject:function(e){var t=e.geometry;if(e instanceof i.Mesh){var n=t.__directGeometry;if(void 0===n)return this.fromGeometry(t);n.verticesNeedUpdate=t.verticesNeedUpdate,n.normalsNeedUpdate=t.normalsNeedUpdate,n.colorsNeedUpdate=t.colorsNeedUpdate,n.uvsNeedUpdate=t.uvsNeedUpdate,n.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=n}if(t.verticesNeedUpdate===!0){var r=this.attributes.position;void 0!==r&&(r.copyVector3sArray(t.vertices),r.needsUpdate=!0),t.verticesNeedUpdate=!1}if(t.normalsNeedUpdate===!0){var r=this.attributes.normal;void 0!==r&&(r.copyVector3sArray(t.normals),r.needsUpdate=!0),t.normalsNeedUpdate=!1}if(t.colorsNeedUpdate===!0){var r=this.attributes.color;void 0!==r&&(r.copyColorsArray(t.colors),r.needsUpdate=!0),t.colorsNeedUpdate=!1}if(t.uvsNeedUpdate){var r=this.attributes.uv;void 0!==r&&(r.copyVector2sArray(t.uvs),r.needsUpdate=!0),t.uvsNeedUpdate=!1}if(t.lineDistancesNeedUpdate){var r=this.attributes.lineDistance;void 0!==r&&(r.copyArray(t.lineDistances),r.needsUpdate=!0),t.lineDistancesNeedUpdate=!1}return t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=(new i.DirectGeometry).fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(3*e.vertices.length);if(this.addAttribute("position",new i.BufferAttribute(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){var n=new Float32Array(3*e.normals.length);this.addAttribute("normal",new i.BufferAttribute(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var r=new Float32Array(3*e.colors.length);this.addAttribute("color",new i.BufferAttribute(r,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var a=new Float32Array(2*e.uvs.length);this.addAttribute("uv",new i.BufferAttribute(a,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var o=new Float32Array(2*e.uvs2.length);this.addAttribute("uv2",new i.BufferAttribute(o,2).copyVector2sArray(e.uvs2))}if(e.indices.length>0){var s=e.vertices.length>65535?Uint32Array:Uint16Array,u=new s(3*e.indices.length);this.setIndex(new i.BufferAttribute(u,1).copyIndicesArray(e.indices))}this.groups=e.groups;for(var h in e.morphTargets){for(var c=[],l=e.morphTargets[h],p=0,f=l.length;f>p;p++){var d=l[p],m=new i.Float32Attribute(3*d.length,3);c.push(m.copyVector3sArray(d))}this.morphAttributes[h]=c}if(e.skinIndices.length>0){var g=new i.Float32Attribute(4*e.skinIndices.length,4);this.addAttribute("skinIndex",g.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var v=new i.Float32Attribute(4*e.skinWeights.length,4);this.addAttribute("skinWeight",v.copyVector4sArray(e.skinWeights))}return null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){var e=new i.Vector3;return function(){null===this.boundingBox&&(this.boundingBox=new i.Box3);var t=this.attributes.position.array;if(t){var n=this.boundingBox;n.makeEmpty();for(var r=0,a=t.length;a>r;r+=3)e.fromArray(t,r),n.expandByPoint(e)}(void 0===t||0===t.length)&&(this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}}(),computeBoundingSphere:function(){var e=new i.Box3,t=new i.Vector3;return function(){null===this.boundingSphere&&(this.boundingSphere=new i.Sphere);var n=this.attributes.position.array;if(n){e.makeEmpty();for(var r=this.boundingSphere.center,a=0,o=n.length;o>a;a+=3)t.fromArray(n,a),e.expandByPoint(t);e.center(r);for(var s=0,a=0,o=n.length;o>a;a+=3)t.fromArray(n,a),s=Math.max(s,r.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(s),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes,n=this.groups;if(t.position){var r=t.position.array;if(void 0===t.normal)this.addAttribute("normal",new i.BufferAttribute(new Float32Array(r.length),3));else for(var a=t.normal.array,o=0,s=a.length;s>o;o++)a[o]=0;var u,h,c,a=t.normal.array,l=new i.Vector3,p=new i.Vector3,f=new i.Vector3,d=new i.Vector3,m=new i.Vector3;if(e){var g=e.array;0===n.length&&this.addGroup(0,g.length);for(var v=0,y=n.length;y>v;++v)for(var b=n[v],x=b.start,w=b.count,o=x,s=x+w;s>o;o+=3)u=3*g[o+0],h=3*g[o+1],c=3*g[o+2],l.fromArray(r,u),p.fromArray(r,h),f.fromArray(r,c),d.subVectors(f,p),m.subVectors(l,p),d.cross(m),a[u]+=d.x,a[u+1]+=d.y,a[u+2]+=d.z,a[h]+=d.x,a[h+1]+=d.y,a[h+2]+=d.z,a[c]+=d.x,a[c+1]+=d.y,a[c+2]+=d.z}else for(var o=0,s=r.length;s>o;o+=9)l.fromArray(r,o),p.fromArray(r,o+3),f.fromArray(r,o+6),d.subVectors(f,p),m.subVectors(l,p),d.cross(m),a[o]=d.x,a[o+1]=d.y,a[o+2]=d.z,a[o+3]=d.x,a[o+4]=d.y,a[o+5]=d.z,a[o+6]=d.x,a[o+7]=d.y,a[o+8]=d.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(e){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},merge:function(e,t){if(e instanceof i.BufferGeometry==!1)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);void 0===t&&(t=0);var n=this.attributes;for(var r in n)if(void 0!==e.attributes[r])for(var a=n[r],o=a.array,s=e.attributes[r],u=s.array,h=s.itemSize,c=0,l=h*t;c<u.length;c++,l++)o[l]=u[c];return this},normalizeNormals:function(){for(var e,t,n,r,i=this.attributes.normal.array,a=0,o=i.length;o>a;a+=3)e=i[a],t=i[a+1],n=i[a+2],r=1/Math.sqrt(e*e+t*t+n*n),i[a]*=r,i[a+1]*=r,i[a+2]*=r},toJSON:function(){var e={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),void 0!==this.parameters){var t=this.parameters;for(var n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};var r=this.index;if(null!==r){var i=Array.prototype.slice.call(r.array);e.data.index={type:r.array.constructor.name,array:i}}var a=this.attributes;for(var n in a){var o=a[n],i=Array.prototype.slice.call(o.array);e.data.attributes[n]={itemSize:o.itemSize,type:o.array.constructor.name,array:i}}var s=this.groups;s.length>0&&(e.data.groups=JSON.parse(JSON.stringify(s)));var u=this.boundingSphere;return null!==u&&(e.data.boundingSphere={center:u.center.toArray(),radius:u.radius}),e},clone:function(){return(new this.constructor).copy(this)},copy:function(e){var t=e.index;null!==t&&this.setIndex(t.clone());var n=e.attributes;for(var r in n){var i=n[r];this.addAttribute(r,i.clone())}for(var a=e.groups,o=0,s=a.length;s>o;o++){var u=a[o];this.addGroup(u.start,u.count)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}},i.EventDispatcher.prototype.apply(i.BufferGeometry.prototype),i.BufferGeometry.MaxIndex=65535,i.InstancedBufferGeometry=function(){i.BufferGeometry.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0},i.InstancedBufferGeometry.prototype=Object.create(i.BufferGeometry.prototype),i.InstancedBufferGeometry.prototype.constructor=i.InstancedBufferGeometry,i.InstancedBufferGeometry.prototype.addGroup=function(e,t,n){this.groups.push({start:e,count:t,instances:n})},i.InstancedBufferGeometry.prototype.copy=function(e){var t=e.index;null!==t&&this.setIndex(t.clone());var n=e.attributes;for(var r in n){var i=n[r];this.addAttribute(r,i.clone())}for(var a=e.groups,o=0,s=a.length;s>o;o++){var u=a[o];this.addGroup(u.start,u.count,u.instances)}return this},i.EventDispatcher.prototype.apply(i.InstancedBufferGeometry.prototype),i.AnimationAction=function(e,t,n,r,a){if(void 0===e)throw new Error("clip is null");this.clip=e,this.localRoot=null,this.startTime=t||0,this.timeScale=n||1,this.weight=r||1,this.loop=a||i.LoopRepeat,this.loopCount=0,this.enabled=!0,this.actionTime=-this.startTime,this.clipTime=0,this.propertyBindings=[]},i.AnimationAction.prototype={constructor:i.AnimationAction,setLocalRoot:function(e){return this.localRoot=e,this},updateTime:function(e){var t=this.clipTime,n=this.loopCount,r=(this.actionTime,this.clip.duration);if(this.actionTime=this.actionTime+e,this.loop===i.LoopOnce)return this.loopCount=0,this.clipTime=Math.min(Math.max(this.actionTime,0),r),this.clipTime!==t&&(this.clipTime===r?this.mixer.dispatchEvent({type:"finished",action:this,direction:1}):0===this.clipTime&&this.mixer.dispatchEvent({type:"finished",action:this,direction:-1})),this.clipTime;this.loopCount=Math.floor(this.actionTime/r);var a=this.actionTime-this.loopCount*r;return a%=r,this.loop==i.LoopPingPong&&1===Math.abs(this.loopCount%2)&&(a=r-a),this.clipTime=a,this.loopCount!==n&&this.mixer.dispatchEvent({type:"loop",action:this,loopDelta:this.loopCount-this.loopCount}),this.clipTime},syncWith:function(e){return this.actionTime=e.actionTime,this.timeScale=e.timeScale,this},warpToDuration:function(e){return this.timeScale=this.clip.duration/e,this},init:function(e){return this.clipTime=e-this.startTime,this},update:function(e){this.updateTime(e);var t=this.clip.getAt(this.clipTime);return t},getTimeScaleAt:function(e){return this.timeScale.getAt?this.timeScale.getAt(e):this.timeScale},getWeightAt:function(e){return this.weight.getAt?this.weight.getAt(e):this.weight}},i.AnimationClip=function(e,t,n){if(this.name=e,this.tracks=n,this.duration=void 0!==t?t:-1,this.duration<0)for(var r=0;r<this.tracks.length;r++){var i=this.tracks[r];this.duration=Math.max(i.keys[i.keys.length-1].time)}this.trim(),this.optimize(),this.results=[]},i.AnimationClip.prototype={constructor:i.AnimationClip,getAt:function(e){e=Math.max(0,Math.min(e,this.duration));for(var t=0;t<this.tracks.length;t++){var n=this.tracks[t];this.results[t]=n.getAt(e)}return this.results},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}},i.AnimationClip.CreateFromMorphTargetSequence=function(e,t,n){for(var r=t.length,a=[],o=0;r>o;o++){var s=[];s.push({time:(o+r-1)%r,value:0}),s.push({time:o,value:1}),s.push({time:(o+1)%r,value:0}),s.sort(i.KeyframeTrack.keyComparer),0===s[0].time&&s.push({time:r,value:s[0].value}),a.push(new i.NumberKeyframeTrack(".morphTargetInfluences["+t[o].name+"]",s).scale(1/n))}return new i.AnimationClip(e,-1,a)},i.AnimationClip.findByName=function(e,t){for(var n=0;n<e.length;n++)if(e[n].name===t)return e[n];return null},i.AnimationClip.CreateClipsFromMorphTargetSequences=function(e,t){for(var n={},r=/^([\w-]*?)([\d]+)$/,a=0,o=e.length;o>a;a++){var s=e[a],u=s.name.match(r);if(u&&u.length>1){var h=u[1],c=n[h];c||(n[h]=c=[]),c.push(s)}}var l=[];for(var h in n)l.push(i.AnimationClip.CreateFromMorphTargetSequence(h,n[h],t));return l},i.AnimationClip.parse=function(e){for(var t=[],n=0;n<e.tracks.length;n++)t.push(i.KeyframeTrack.parse(e.tracks[n]).scale(1/e.fps));return new i.AnimationClip(e.name,e.duration,t)},i.AnimationClip.parseAnimation=function(e,t,n){if(!e)return console.error("  no animation in JSONLoader data"),null;for(var r=function(e,t,n,r,i){for(var a=[],o=0;o<t.length;o++){var s=t[o];void 0!==s[n]&&a.push({time:s.time,value:i(s)})}return a.length>0?new r(e,a):null},a=[],o=e.name||"default",s=e.length||-1,u=e.fps||30,h=e.hierarchy||[],c=0;c<h.length;c++){var l=h[c].keys;if(l&&0!=l.length)if(l[0].morphTargets){for(var p={},f=0;f<l.length;f++)if(l[f].morphTargets)for(var d=0;d<l[f].morphTargets.length;d++)p[l[f].morphTargets[d]]=-1;for(var m in p){for(var g=[],d=0;d<l[f].morphTargets.length;d++){var v=l[f];g.push({time:v.time,value:v.morphTarget===m?1:0})}a.push(new i.NumberKeyframeTrack(n+".morphTargetInfluence["+m+"]",g))}s=p.length*(u||1)}else{var y=n+".bones["+t[c].name+"]",b=r(y+".position",l,"pos",i.VectorKeyframeTrack,function(e){return(new i.Vector3).fromArray(e.pos)});b&&a.push(b);var x=r(y+".quaternion",l,"rot",i.QuaternionKeyframeTrack,function(e){return e.rot.slerp?e.rot.clone():(new i.Quaternion).fromArray(e.rot)});x&&a.push(x);var w=r(y+".scale",l,"scl",i.VectorKeyframeTrack,function(e){return(new i.Vector3).fromArray(e.scl)});w&&a.push(w)}}if(0===a.length)return null;var M=new i.AnimationClip(o,s,a);return M},i.AnimationMixer=function(e){this.root=e,this.time=0,this.timeScale=1,this.actions=[],this.propertyBindingMap={}},i.AnimationMixer.prototype={constructor:i.AnimationMixer,addAction:function(e){
this.actions.push(e),e.init(this.time),e.mixer=this;for(var t=e.clip.tracks,n=e.localRoot||this.root,r=0;r<t.length;r++){var a=t[r],o=n.uuid+"-"+a.name,s=this.propertyBindingMap[o];void 0===s&&(s=new i.PropertyBinding(n,a.name),this.propertyBindingMap[o]=s),e.propertyBindings.push(s),s.referenceCount+=1}},removeAllActions:function(){for(var e=0;e<this.actions.length;e++)this.actions[e].mixer=null;for(var t in this.propertyBindingMap)this.propertyBindingMap[t].unbind();return this.actions=[],this.propertyBindingMap={},this},removeAction:function(e){var t=this.actions.indexOf(e);-1!==t&&(this.actions.splice(t,1),e.mixer=null);for(var n=e.localRoot||this.root,r=e.clip.tracks,i=0;i<r.length;i++){var a=r[i],o=n.uuid+"-"+a.name,s=this.propertyBindingMap[o];s.referenceCount-=1,s.referenceCount<=0&&(s.unbind(),delete this.propertyBindingMap[o])}return this},findActionByName:function(e){for(var t=0;t<this.actions.length;t++)if(this.actions[t].name===e)return this.actions[t];return null},play:function(e,t){return e.startTime=this.time,this.addAction(e),this},fadeOut:function(e,t){var n=[];return n.push({time:this.time,value:1}),n.push({time:this.time+t,value:0}),e.weight=new i.NumberKeyframeTrack("weight",n),this},fadeIn:function(e,t){var n=[];return n.push({time:this.time,value:0}),n.push({time:this.time+t,value:1}),e.weight=new i.NumberKeyframeTrack("weight",n),this},warp:function(e,t,n,r){var a=[];return a.push({time:this.time,value:t}),a.push({time:this.time+r,value:n}),e.timeScale=new i.NumberKeyframeTrack("timeScale",a),this},crossFade:function(e,t,n,r){if(this.fadeOut(e,n),this.fadeIn(t,n),r){var i=e.clip.duration/t.clip.duration,a=1/i;this.warp(e,1,i,n),this.warp(t,a,1,n)}return this},update:function(e){var t=e*this.timeScale;this.time+=t;for(var n=0;n<this.actions.length;n++){var r=this.actions[n],i=r.getWeightAt(this.time),a=r.getTimeScaleAt(this.time),o=t*a,s=r.update(o);if(!(r.weight<=0)&&r.enabled)for(var u=0;u<s.length;u++){r.clip.tracks[u].name;r.propertyBindings[u].accumulate(s[u],i)}}for(var h in this.propertyBindingMap)this.propertyBindingMap[h].apply();return this}},i.EventDispatcher.prototype.apply(i.AnimationMixer.prototype),i.AnimationUtils={getEqualsFunc:function(e){return e.equals?function(e,t){return e.equals(t)}:function(e,t){return e===t}},clone:function(e){var t=typeof e;if("object"===t){if(e.clone)return e.clone();console.error("can not figure out how to copy exemplarValue",e)}return e},lerp:function(e,t,n,r){var a=i.AnimationUtils.getLerpFunc(e,r);return a(e,t,n)},lerp_object:function(e,t,n){return e.lerp(t,n)},slerp_object:function(e,t,n){return e.slerp(t,n)},lerp_number:function(e,t,n){return e*(1-n)+t*n},lerp_boolean:function(e,t,n){return.5>n?e:t},lerp_boolean_immediate:function(e,t,n){return e},lerp_string:function(e,t,n){return.5>n?e:t},lerp_string_immediate:function(e,t,n){return e},getLerpFunc:function(e,t){if(void 0===e||null===e)throw new Error("examplarValue is null");var n=typeof e;switch(n){case"object":if(e.lerp)return i.AnimationUtils.lerp_object;if(e.slerp)return i.AnimationUtils.slerp_object;break;case"number":return i.AnimationUtils.lerp_number;case"boolean":return t?i.AnimationUtils.lerp_boolean:i.AnimationUtils.lerp_boolean_immediate;case"string":return t?i.AnimationUtils.lerp_string:i.AnimationUtils.lerp_string_immediate}}},i.KeyframeTrack=function(e,t){if(void 0===e)throw new Error("track name is undefined");if(void 0===t||0===t.length)throw new Error("no keys in track named "+e);this.name=e,this.keys=t,this.lastIndex=0,this.validate(),this.optimize()},i.KeyframeTrack.prototype={constructor:i.KeyframeTrack,getAt:function(e){for(;this.lastIndex<this.keys.length&&e>=this.keys[this.lastIndex].time;)this.lastIndex++;for(;this.lastIndex>0&&e<this.keys[this.lastIndex-1].time;)this.lastIndex--;if(this.lastIndex>=this.keys.length)return this.setResult(this.keys[this.keys.length-1].value),this.result;if(0===this.lastIndex)return this.setResult(this.keys[0].value),this.result;var t=this.keys[this.lastIndex-1];if(this.setResult(t.value),t.constantToNext)return this.result;var n=this.keys[this.lastIndex],r=(e-t.time)/(n.time-t.time);return this.result=this.lerpValues(this.result,n.value,r),this.result},shift:function(e){if(0!==e)for(var t=0;t<this.keys.length;t++)this.keys[t].time+=e;return this},scale:function(e){if(1!==e)for(var t=0;t<this.keys.length;t++)this.keys[t].time*=e;return this},trim:function(e,t){for(var n=0,r=1;r<this.keys.length;r++)this.keys[r]<=e&&n++;for(var i=0,r=this.keys.length-2;r>0&&this.keys[r]>=t;r++)i++;return n+i>0&&(this.keys=this.keys.splice(n,this.keys.length-i-n)),this},validate:function(){var e=null;if(0===this.keys.length)return void console.error("  track is empty, no keys",this);for(var t=0;t<this.keys.length;t++){var n=this.keys[t];if(!n)return void console.error("  key is null in track",this,t);if("number"!=typeof n.time||isNaN(n.time))return void console.error("  key.time is not a valid number",this,t,n);if(void 0===n.value||null===n.value)return void console.error("  key.value is null in track",this,t,n);if(e&&e.time>n.time)return void console.error("  key.time is less than previous key time, out of order keys",this,t,n,e);e=n}return this},optimize:function(){var e=[],t=this.keys[0];e.push(t);for(var n=(i.AnimationUtils.getEqualsFunc(t.value),1);n<this.keys.length-1;n++){var r=this.keys[n],a=this.keys[n+1];t.time!==r.time&&(this.compareValues(t.value,r.value)&&this.compareValues(r.value,a.value)||(t.constantToNext=this.compareValues(t.value,r.value),e.push(r),t=r))}return e.push(this.keys[this.keys.length-1]),this.keys=e,this}},i.KeyframeTrack.keyComparer=function(e,t){return e.time-t.time},i.KeyframeTrack.parse=function(e){if(void 0===e.type)throw new Error("track type undefined, can not parse");var t=i.KeyframeTrack.GetTrackTypeForTypeName(e.type);return t.parse(e)},i.KeyframeTrack.GetTrackTypeForTypeName=function(e){switch(e.toLowerCase()){case"vector":case"vector2":case"vector3":case"vector4":return i.VectorKeyframeTrack;case"quaternion":return i.QuaternionKeyframeTrack;case"integer":case"scalar":case"double":case"float":case"number":return i.NumberKeyframeTrack;case"bool":case"boolean":return i.BooleanKeyframeTrack;case"string":return i.StringKeyframeTrack}throw new Error("Unsupported typeName: "+e)},i.PropertyBinding=function(e,t){this.rootNode=e,this.trackName=t,this.referenceCount=0,this.originalValue=null;var n=i.PropertyBinding.parseTrackName(t);this.directoryName=n.directoryName,this.nodeName=n.nodeName,this.objectName=n.objectName,this.objectIndex=n.objectIndex,this.propertyName=n.propertyName,this.propertyIndex=n.propertyIndex,this.node=i.PropertyBinding.findNode(e,this.nodeName)||e,this.cumulativeValue=null,this.cumulativeWeight=0},i.PropertyBinding.prototype={constructor:i.PropertyBinding,reset:function(){this.cumulativeValue=null,this.cumulativeWeight=0},accumulate:function(e,t){if(this.isBound||this.bind(),0===this.cumulativeWeight)t>0&&(null===this.cumulativeValue&&(this.cumulativeValue=i.AnimationUtils.clone(e)),this.cumulativeWeight=t);else{var n=t/(this.cumulativeWeight+t);this.cumulativeValue=this.lerpValue(this.cumulativeValue,e,n),this.cumulativeWeight+=t}},unbind:function(){this.isBound&&(this.setValue(this.originalValue),this.setValue=null,this.getValue=null,this.lerpValue=null,this.equalsValue=null,this.triggerDirty=null,this.isBound=!1)},bind:function(){if(!this.isBound){var e=this.node;if(!e)return void console.error("  trying to update node for track: "+this.trackName+" but it wasn't found.");if(this.objectName){if("materials"===this.objectName){if(!e.material)return void console.error("  can not bind to material as node does not have a material",this);if(!e.material.materials)return void console.error("  can not bind to material.materials as node.material does not have a materials array",this);e=e.material.materials}else if("bones"===this.objectName){if(!e.skeleton)return void console.error("  can not bind to bones as node does not have a skeleton",this);e=e.skeleton.bones;for(var t=0;t<e.length;t++)if(e[t].name===this.objectIndex){this.objectIndex=t;break}}else{if(void 0===e[this.objectName])return void console.error("  can not bind to objectName of node, undefined",this);e=e[this.objectName]}if(void 0!==this.objectIndex){if(void 0===e[this.objectIndex])return void console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,e);e=e[this.objectIndex]}}var n=e[this.propertyName];if(!n)return void console.error("  trying to update property for track: "+this.nodeName+"."+this.propertyName+" but it wasn't found.",e);if(void 0!==this.propertyIndex){if("morphTargetInfluences"===this.propertyName){e.geometry||console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this),e.geometry.morphTargets||console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this);for(var t=0;t<this.node.geometry.morphTargets.length;t++)if(e.geometry.morphTargets[t].name===this.propertyIndex){this.propertyIndex=t;break}}this.setValue=function(e){return this.equalsValue(n[this.propertyIndex],e)?!1:(n[this.propertyIndex]=e,!0)},this.getValue=function(){return n[this.propertyIndex]}}else n.copy?(this.setValue=function(e){return this.equalsValue(n,e)?!1:(n.copy(e),!0)},this.getValue=function(){return n}):(this.setValue=function(t){return this.equalsValue(e[this.propertyName],t)?!1:(e[this.propertyName]=t,!0)},this.getValue=function(){return e[this.propertyName]});void 0!==e.needsUpdate?this.triggerDirty=function(){this.node.needsUpdate=!0}:void 0!==e.matrixWorldNeedsUpdate&&(this.triggerDirty=function(){e.matrixWorldNeedsUpdate=!0}),this.originalValue=this.getValue(),this.equalsValue=i.AnimationUtils.getEqualsFunc(this.originalValue),this.lerpValue=i.AnimationUtils.getLerpFunc(this.originalValue,!0),this.isBound=!0}},apply:function(){if(this.isBound||this.bind(),this.cumulativeWeight>0){if(this.cumulativeWeight<1){var e=1-this.cumulativeWeight,t=e/(this.cumulativeWeight+e);this.cumulativeValue=this.lerpValue(this.cumulativeValue,this.originalValue,t)}var n=this.setValue(this.cumulativeValue);n&&this.triggerDirty&&this.triggerDirty(),this.cumulativeValue=null,this.cumulativeWeight=0}}},i.PropertyBinding.parseTrackName=function(e){var t=/^(([\w]+\/)*)([\w-\d]+)?(\.([\w]+)(\[([\w\d\[\]\_. ]+)\])?)?(\.([\w.]+)(\[([\w\d\[\]\_. ]+)\])?)$/,n=t.exec(e);if(!n)throw new Error("cannot parse trackName at all: "+e);n.index===t.lastIndex&&t.lastIndex++;var r={directoryName:n[1],nodeName:n[3],objectName:n[5],objectIndex:n[7],propertyName:n[9],propertyIndex:n[11]};if(null===r.propertyName||0===r.propertyName.length)throw new Error("can not parse propertyName from trackName: "+e);return r},i.PropertyBinding.findNode=function(e,t){function n(e){for(var n=0;n<e.bones.length;n++){var r=e.bones[n];if(r.name===t)return r}return null}function r(e){for(var n=0;n<e.length;n++){var i=e[n];if(i.name===t||i.uuid===t)return i;var a=r(i.children);if(a)return a}return null}if(!t||""===t||"root"===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){var i=n(e.skeleton);if(i)return i}if(e.children){var a=r(e.children);if(a)return a}return null},i.VectorKeyframeTrack=function(e,t){i.KeyframeTrack.call(this,e,t),this.result=this.keys[0].value.clone()},i.VectorKeyframeTrack.prototype=Object.create(i.KeyframeTrack.prototype),i.VectorKeyframeTrack.prototype.constructor=i.VectorKeyframeTrack,i.VectorKeyframeTrack.prototype.setResult=function(e){this.result.copy(e)},i.VectorKeyframeTrack.prototype.lerpValues=function(e,t,n){return e.lerp(t,n)},i.VectorKeyframeTrack.prototype.compareValues=function(e,t){return e.equals(t)},i.VectorKeyframeTrack.prototype.clone=function(){for(var e=[],t=0;t<this.keys.length;t++){var n=this.keys[t];e.push({time:n.time,value:n.value.clone()})}return new i.VectorKeyframeTrack(this.name,e)},i.VectorKeyframeTrack.parse=function(e){for(var t=e.keys[0].value.length,n=i["Vector"+t],r=[],a=0;a<e.keys.length;a++){var o=e.keys[a];r.push({value:(new n).fromArray(o.value),time:o.time})}return new i.VectorKeyframeTrack(e.name,r)},i.QuaternionKeyframeTrack=function(e,t){i.KeyframeTrack.call(this,e,t),this.result=this.keys[0].value.clone()},i.QuaternionKeyframeTrack.prototype=Object.create(i.KeyframeTrack.prototype),i.QuaternionKeyframeTrack.prototype.constructor=i.QuaternionKeyframeTrack,i.QuaternionKeyframeTrack.prototype.setResult=function(e){this.result.copy(e)},i.QuaternionKeyframeTrack.prototype.lerpValues=function(e,t,n){return e.slerp(t,n)},i.QuaternionKeyframeTrack.prototype.compareValues=function(e,t){return e.equals(t)},i.QuaternionKeyframeTrack.prototype.multiply=function(e){for(var t=0;t<this.keys.length;t++)this.keys[t].value.multiply(e);return this},i.QuaternionKeyframeTrack.prototype.clone=function(){for(var e=[],t=0;t<this.keys.length;t++){var n=this.keys[t];e.push({time:n.time,value:n.value.clone()})}return new i.QuaternionKeyframeTrack(this.name,e)},i.QuaternionKeyframeTrack.parse=function(e){for(var t=[],n=0;n<e.keys.length;n++){var r=e.keys[n];t.push({value:(new i.Quaternion).fromArray(r.value),time:r.time})}return new i.QuaternionKeyframeTrack(e.name,t)},i.StringKeyframeTrack=function(e,t){i.KeyframeTrack.call(this,e,t),this.result=this.keys[0].value},i.StringKeyframeTrack.prototype=Object.create(i.KeyframeTrack.prototype),i.StringKeyframeTrack.prototype.constructor=i.StringKeyframeTrack,i.StringKeyframeTrack.prototype.setResult=function(e){this.result=e},i.StringKeyframeTrack.prototype.lerpValues=function(e,t,n){return 1>n?e:t},i.StringKeyframeTrack.prototype.compareValues=function(e,t){return e===t},i.StringKeyframeTrack.prototype.clone=function(){for(var e=[],t=0;t<this.keys.length;t++){var n=this.keys[t];e.push({time:n.time,value:n.value})}return new i.StringKeyframeTrack(this.name,e)},i.StringKeyframeTrack.parse=function(e){return new i.StringKeyframeTrack(e.name,e.keys)},i.BooleanKeyframeTrack=function(e,t){i.KeyframeTrack.call(this,e,t),this.result=this.keys[0].value},i.BooleanKeyframeTrack.prototype=Object.create(i.KeyframeTrack.prototype),i.BooleanKeyframeTrack.prototype.constructor=i.BooleanKeyframeTrack,i.BooleanKeyframeTrack.prototype.setResult=function(e){this.result=e},i.BooleanKeyframeTrack.prototype.lerpValues=function(e,t,n){return 1>n?e:t},i.BooleanKeyframeTrack.prototype.compareValues=function(e,t){return e===t},i.BooleanKeyframeTrack.prototype.clone=function(){for(var e=[],t=0;t<this.keys.length;t++){var n=this.keys[t];e.push({time:n.time,value:n.value})}return new i.BooleanKeyframeTrack(this.name,e)},i.BooleanKeyframeTrack.parse=function(e){return new i.BooleanKeyframeTrack(e.name,e.keys)},i.NumberKeyframeTrack=function(e,t){i.KeyframeTrack.call(this,e,t),this.result=this.keys[0].value},i.NumberKeyframeTrack.prototype=Object.create(i.KeyframeTrack.prototype),i.NumberKeyframeTrack.prototype.constructor=i.NumberKeyframeTrack,i.NumberKeyframeTrack.prototype.setResult=function(e){this.result=e},i.NumberKeyframeTrack.prototype.lerpValues=function(e,t,n){return e*(1-n)+t*n},i.NumberKeyframeTrack.prototype.compareValues=function(e,t){return e===t},i.NumberKeyframeTrack.prototype.clone=function(){for(var e=[],t=0;t<this.keys.length;t++){var n=this.keys[t];e.push({time:n.time,value:n.value})}return new i.NumberKeyframeTrack(this.name,e)},i.NumberKeyframeTrack.parse=function(e){return new i.NumberKeyframeTrack(e.name,e.keys)},i.Camera=function(){i.Object3D.call(this),this.type="Camera",this.matrixWorldInverse=new i.Matrix4,this.projectionMatrix=new i.Matrix4},i.Camera.prototype=Object.create(i.Object3D.prototype),i.Camera.prototype.constructor=i.Camera,i.Camera.prototype.getWorldDirection=function(){var e=new i.Quaternion;return function(t){var n=t||new i.Vector3;return this.getWorldQuaternion(e),n.set(0,0,-1).applyQuaternion(e)}}(),i.Camera.prototype.lookAt=function(){var e=new i.Matrix4;return function(t){e.lookAt(this.position,t,this.up),this.quaternion.setFromRotationMatrix(e)}}(),i.Camera.prototype.clone=function(){return(new this.constructor).copy(this)},i.Camera.prototype.copy=function(e){return i.Object3D.prototype.copy.call(this,e),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this},i.CubeCamera=function(e,t,n){i.Object3D.call(this),this.type="CubeCamera";var r=90,a=1,o=new i.PerspectiveCamera(r,a,e,t);o.up.set(0,-1,0),o.lookAt(new i.Vector3(1,0,0)),this.add(o);var s=new i.PerspectiveCamera(r,a,e,t);s.up.set(0,-1,0),s.lookAt(new i.Vector3(-1,0,0)),this.add(s);var u=new i.PerspectiveCamera(r,a,e,t);u.up.set(0,0,1),u.lookAt(new i.Vector3(0,1,0)),this.add(u);var h=new i.PerspectiveCamera(r,a,e,t);h.up.set(0,0,-1),h.lookAt(new i.Vector3(0,-1,0)),this.add(h);var c=new i.PerspectiveCamera(r,a,e,t);c.up.set(0,-1,0),c.lookAt(new i.Vector3(0,0,1)),this.add(c);var l=new i.PerspectiveCamera(r,a,e,t);l.up.set(0,-1,0),l.lookAt(new i.Vector3(0,0,-1)),this.add(l),this.renderTarget=new i.WebGLRenderTargetCube(n,n,{format:i.RGBFormat,magFilter:i.LinearFilter,minFilter:i.LinearFilter}),this.updateCubeMap=function(e,t){null===this.parent&&this.updateMatrixWorld();var n=this.renderTarget,r=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,n.activeCubeFace=0,e.render(t,o,n),n.activeCubeFace=1,e.render(t,s,n),n.activeCubeFace=2,e.render(t,u,n),n.activeCubeFace=3,e.render(t,h,n),n.activeCubeFace=4,e.render(t,c,n),n.texture.generateMipmaps=r,n.activeCubeFace=5,e.render(t,l,n),e.setRenderTarget(null)}},i.CubeCamera.prototype=Object.create(i.Object3D.prototype),i.CubeCamera.prototype.constructor=i.CubeCamera,i.OrthographicCamera=function(e,t,n,r,a,o){i.Camera.call(this),this.type="OrthographicCamera",this.zoom=1,this.left=e,this.right=t,this.top=n,this.bottom=r,this.near=void 0!==a?a:.1,this.far=void 0!==o?o:2e3,this.updateProjectionMatrix()},i.OrthographicCamera.prototype=Object.create(i.Camera.prototype),i.OrthographicCamera.prototype.constructor=i.OrthographicCamera,i.OrthographicCamera.prototype.updateProjectionMatrix=function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;this.projectionMatrix.makeOrthographic(n-e,n+e,r+t,r-t,this.near,this.far)},i.OrthographicCamera.prototype.copy=function(e){return i.Camera.prototype.copy.call(this,e),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this},i.OrthographicCamera.prototype.toJSON=function(e){var t=i.Object3D.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,t},i.PerspectiveCamera=function(e,t,n,r){i.Camera.call(this),this.type="PerspectiveCamera",this.zoom=1,this.fov=void 0!==e?e:50,this.aspect=void 0!==t?t:1,this.near=void 0!==n?n:.1,this.far=void 0!==r?r:2e3,this.updateProjectionMatrix()},i.PerspectiveCamera.prototype=Object.create(i.Camera.prototype),i.PerspectiveCamera.prototype.constructor=i.PerspectiveCamera,i.PerspectiveCamera.prototype.setLens=function(e,t){void 0===t&&(t=24),this.fov=2*i.Math.radToDeg(Math.atan(t/(2*e))),this.updateProjectionMatrix()},i.PerspectiveCamera.prototype.setViewOffset=function(e,t,n,r,i,a){this.fullWidth=e,this.fullHeight=t,this.x=n,this.y=r,this.width=i,this.height=a,this.updateProjectionMatrix()},i.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var e=i.Math.radToDeg(2*Math.atan(Math.tan(.5*i.Math.degToRad(this.fov))/this.zoom));if(this.fullWidth){var t=this.fullWidth/this.fullHeight,n=Math.tan(i.Math.degToRad(.5*e))*this.near,r=-n,a=t*r,o=t*n,s=Math.abs(o-a),u=Math.abs(n-r);this.projectionMatrix.makeFrustum(a+this.x*s/this.fullWidth,a+(this.x+this.width)*s/this.fullWidth,n-(this.y+this.height)*u/this.fullHeight,n-this.y*u/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(e,this.aspect,this.near,this.far)},i.PerspectiveCamera.prototype.copy=function(e){return i.Camera.prototype.copy.call(this,e),this.fov=e.fov,this.aspect=e.aspect,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this},i.PerspectiveCamera.prototype.toJSON=function(e){var t=i.Object3D.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.fov=this.fov,t.object.aspect=this.aspect,t.object.near=this.near,t.object.far=this.far,t},i.Light=function(e){i.Object3D.call(this),this.type="Light",this.color=new i.Color(e),this.receiveShadow=void 0},i.Light.prototype=Object.create(i.Object3D.prototype),i.Light.prototype.constructor=i.Light,Object.defineProperties(i.Light.prototype,{onlyShadow:{set:function(e){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){this.shadow.camera.far=e}},shadowCameraVisible:{set:function(e){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow ) instead.")}},shadowBias:{set:function(e){this.shadow.bias=e}},shadowDarkness:{set:function(e){this.shadow.darkness=e}},shadowMapWidth:{set:function(e){this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){this.shadow.mapSize.height=e}}}),i.Light.prototype.copy=function(e){return i.Object3D.prototype.copy.call(this,e),this.color.copy(e.color),this},i.Light.prototype.toJSON=function(e){var t=i.Object3D.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.intensity&&(t.object.intensity=this.intensity),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.exponent&&(t.object.exponent=this.exponent),t},i.LightShadow=function(e){this.camera=e,this.bias=0,this.darkness=1,this.mapSize=new i.Vector2(512,512),this.map=null,this.matrix=null},i.LightShadow.prototype={constructor:i.LightShadow,copy:function(e){this.camera=e.camera.clone(),this.bias=e.bias,this.darkness=e.darkness,this.mapSize.copy(e.mapSize)},clone:function(){return(new this.constructor).copy(this)}},i.AmbientLight=function(e){i.Light.call(this,e),this.type="AmbientLight",this.castShadow=void 0},i.AmbientLight.prototype=Object.create(i.Light.prototype),i.AmbientLight.prototype.constructor=i.AmbientLight,i.DirectionalLight=function(e,t){i.Light.call(this,e),this.type="DirectionalLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new i.Object3D,this.intensity=void 0!==t?t:1,this.shadow=new i.LightShadow(new i.OrthographicCamera(-500,500,500,-500,50,5e3))},i.DirectionalLight.prototype=Object.create(i.Light.prototype),i.DirectionalLight.prototype.constructor=i.DirectionalLight,i.DirectionalLight.prototype.copy=function(e){return i.Light.prototype.copy.call(this,e),this.intensity=e.intensity,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this},i.HemisphereLight=function(e,t,n){i.Light.call(this,e),this.type="HemisphereLight",this.castShadow=void 0,this.position.set(0,1,0),this.updateMatrix(),this.groundColor=new i.Color(t),this.intensity=void 0!==n?n:1},i.HemisphereLight.prototype=Object.create(i.Light.prototype),i.HemisphereLight.prototype.constructor=i.HemisphereLight,i.HemisphereLight.prototype.copy=function(e){return i.Light.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this.intensity=e.intensity,this},i.PointLight=function(e,t,n,r){i.Light.call(this,e),this.type="PointLight",this.intensity=void 0!==t?t:1,this.distance=void 0!==n?n:0,this.decay=void 0!==r?r:1,this.shadow=new i.LightShadow(new i.PerspectiveCamera(90,1,1,500))},i.PointLight.prototype=Object.create(i.Light.prototype),i.PointLight.prototype.constructor=i.PointLight,i.PointLight.prototype.copy=function(e){return i.Light.prototype.copy.call(this,e),this.intensity=e.intensity,this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this},i.SpotLight=function(e,t,n,r,a,o){i.Light.call(this,e),this.type="SpotLight",this.position.set(0,1,0),this.updateMatrix(),this.target=new i.Object3D,this.intensity=void 0!==t?t:1,this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/3,this.exponent=void 0!==a?a:10,this.decay=void 0!==o?o:1,this.shadow=new i.LightShadow(new i.PerspectiveCamera(50,1,50,5e3))},i.SpotLight.prototype=Object.create(i.Light.prototype),i.SpotLight.prototype.constructor=i.SpotLight,i.SpotLight.prototype.copy=function(e){return i.Light.prototype.copy.call(this,e),this.intensity=e.intensity,this.distance=e.distance,this.angle=e.angle,this.exponent=e.exponent,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this},i.Cache={enabled:!1,files:{},add:function(e,t){this.enabled!==!1&&(this.files[e]=t)},get:function(e){return this.enabled!==!1?this.files[e]:void 0},remove:function(e){delete this.files[e]},clear:function(){this.files={}}},i.Loader=function(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}},i.Loader.prototype={constructor:i.Loader,crossOrigin:void 0,extractUrlBase:function(e){var t=e.split("/");return 1===t.length?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(e,t,n){for(var r=[],i=0;i<e.length;++i)r[i]=this.createMaterial(e[i],t,n);return r},createMaterial:function(){var e,t,n;return function(r,a,o){function s(e,n,r,s,h){var c,l=a+e,p=i.Loader.Handlers.get(l);null!==p?c=p.load(l):(t.setCrossOrigin(o),c=t.load(l)),void 0!==n&&(c.repeat.fromArray(n),1!==n[0]&&(c.wrapS=i.RepeatWrapping),1!==n[1]&&(c.wrapT=i.RepeatWrapping)),void 0!==r&&c.offset.fromArray(r),void 0!==s&&("repeat"===s[0]&&(c.wrapS=i.RepeatWrapping),"mirror"===s[0]&&(c.wrapS=i.MirroredRepeatWrapping),"repeat"===s[1]&&(c.wrapT=i.RepeatWrapping),"mirror"===s[1]&&(c.wrapT=i.MirroredRepeatWrapping)),void 0!==h&&(c.anisotropy=h);var f=i.Math.generateUUID();return u[f]=c,f}void 0===e&&(e=new i.Color),void 0===t&&(t=new i.TextureLoader),void 0===n&&(n=new i.MaterialLoader);var u={},h={uuid:i.Math.generateUUID(),type:"MeshLambertMaterial"};for(var c in r){var l=r[c];switch(c){case"DbgColor":h.color=l;break;case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":h.name=l;break;case"blending":h.blending=i[l];break;case"colorDiffuse":h.color=e.fromArray(l).getHex();break;case"colorSpecular":h.specular=e.fromArray(l).getHex();break;case"colorEmissive":h.emissive=e.fromArray(l).getHex();break;case"specularCoef":h.shininess=l;break;case"shading":"basic"===l.toLowerCase()&&(h.type="MeshBasicMaterial"),"phong"===l.toLowerCase()&&(h.type="MeshPhongMaterial");break;case"mapDiffuse":h.map=s(l,r.mapDiffuseRepeat,r.mapDiffuseOffset,r.mapDiffuseWrap,r.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapLight":h.lightMap=s(l,r.mapLightRepeat,r.mapLightOffset,r.mapLightWrap,r.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":h.aoMap=s(l,r.mapAORepeat,r.mapAOOffset,r.mapAOWrap,r.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":h.bumpMap=s(l,r.mapBumpRepeat,r.mapBumpOffset,r.mapBumpWrap,r.mapBumpAnisotropy);break;case"mapBumpScale":h.bumpScale=l;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":h.normalMap=s(l,r.mapNormalRepeat,r.mapNormalOffset,r.mapNormalWrap,r.mapNormalAnisotropy);break;case"mapNormalFactor":h.normalScale=[l,l];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":h.specularMap=s(l,r.mapSpecularRepeat,r.mapSpecularOffset,r.mapSpecularWrap,r.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapAlpha":h.alphaMap=s(l,r.mapAlphaRepeat,r.mapAlphaOffset,r.mapAlphaWrap,r.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":h.side=i.BackSide;break;case"doubleSided":h.side=i.DoubleSide;break;case"transparency":console.warn("THREE.Loader: transparency has been renamed to opacity"),h.opacity=l;break;case"opacity":case"transparent":case"depthTest":case"depthWrite":case"transparent":case"visible":case"wireframe":h[c]=l;break;case"vertexColors":l===!0&&(h.vertexColors=i.VertexColors),"face"===l&&(h.vertexColors=i.FaceColors);break;default:console.error("Loader.createMaterial: Unsupported",c,l)}}return"MeshPhongMaterial"!==h.type&&delete h.specular,h.opacity<1&&(h.transparent=!0),n.setTextures(u),n.parse(h)}}()},i.Loader.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=this.handlers,n=0,r=t.length;r>n;n+=2){var i=t[n],a=t[n+1];if(i.test(e))return a}return null}},i.XHRLoader=function(e){this.manager=void 0!==e?e:i.DefaultLoadingManager},i.XHRLoader.prototype={constructor:i.XHRLoader,load:function(e,t,n,r){var a=this,o=i.Cache.get(e);if(void 0!==o)return t&&setTimeout(function(){t(o)},0),o;var s=new XMLHttpRequest;return s.open("GET",e,!0),s.addEventListener("load",function(n){var r=n.target.response;i.Cache.add(e,r),t&&t(r),a.manager.itemEnd(e)},!1),void 0!==n&&s.addEventListener("progress",function(e){n(e)},!1),s.addEventListener("error",function(t){r&&r(t),a.manager.itemError(e)},!1),void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),void 0!==this.responseType&&(s.responseType=this.responseType),void 0!==this.withCredentials&&(s.withCredentials=this.withCredentials),s.send(null),a.manager.itemStart(e),s},setResponseType:function(e){this.responseType=e},setCrossOrigin:function(e){this.crossOrigin=e},setWithCredentials:function(e){this.withCredentials=e}},i.ImageLoader=function(e){this.manager=void 0!==e?e:i.DefaultLoadingManager},i.ImageLoader.prototype={constructor:i.ImageLoader,load:function(e,t,n,r){var a=this,o=i.Cache.get(e);if(void 0!==o)return a.manager.itemStart(e),t?setTimeout(function(){t(o),a.manager.itemEnd(e)},0):a.manager.itemEnd(e),o;var s=document.createElement("img");return s.addEventListener("load",function(n){i.Cache.add(e,this),t&&t(this),a.manager.itemEnd(e)},!1),void 0!==n&&s.addEventListener("progress",function(e){n(e)},!1),s.addEventListener("error",function(t){r&&r(t),a.manager.itemError(e)},!1),void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),a.manager.itemStart(e),s.src=e,s},setCrossOrigin:function(e){this.crossOrigin=e}},i.JSONLoader=function(e){"boolean"==typeof e&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),e=void 0),this.manager=void 0!==e?e:i.DefaultLoadingManager,this.withCredentials=!1},i.JSONLoader.prototype={constructor:i.JSONLoader,get statusDomElement(){return void 0===this._statusDomElement&&(this._statusDomElement=document.createElement("div")),console.warn("THREE.JSONLoader: .statusDomElement has been removed."),this._statusDomElement},load:function(e,t,n,r){var a=this,o=this.texturePath&&"string"==typeof this.texturePath?this.texturePath:i.Loader.prototype.extractUrlBase(e),s=new i.XHRLoader(this.manager);s.setCrossOrigin(this.crossOrigin),s.setWithCredentials(this.withCredentials),s.load(e,function(n){var r=JSON.parse(n),i=r.metadata;if(void 0!==i){if("object"===i.type)return void console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.ObjectLoader instead.");if("scene"===i.type)return void console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.SceneLoader instead.")}var s=a.parse(r,o);t(s.geometry,s.materials)})},setCrossOrigin:function(e){this.crossOrigin=e;
},setTexturePath:function(e){this.texturePath=e},parse:function(e,t){function n(t){function n(e,t){return e&1<<t}var r,a,o,u,h,c,l,p,f,d,m,g,v,y,b,x,w,M,S,_,T,E,C,A,L,P,k,D=e.faces,R=e.vertices,F=e.normals,O=e.colors,V=0;if(void 0!==e.uvs){for(r=0;r<e.uvs.length;r++)e.uvs[r].length&&V++;for(r=0;V>r;r++)s.faceVertexUvs[r]=[]}for(u=0,h=R.length;h>u;)M=new i.Vector3,M.x=R[u++]*t,M.y=R[u++]*t,M.z=R[u++]*t,s.vertices.push(M);for(u=0,h=D.length;h>u;)if(d=D[u++],m=n(d,0),g=n(d,1),v=n(d,3),y=n(d,4),b=n(d,5),x=n(d,6),w=n(d,7),m){if(_=new i.Face3,_.a=D[u],_.b=D[u+1],_.c=D[u+3],T=new i.Face3,T.a=D[u+1],T.b=D[u+2],T.c=D[u+3],u+=4,g&&(f=D[u++],_.materialIndex=f,T.materialIndex=f),o=s.faces.length,v)for(r=0;V>r;r++)for(A=e.uvs[r],s.faceVertexUvs[r][o]=[],s.faceVertexUvs[r][o+1]=[],a=0;4>a;a++)p=D[u++],P=A[2*p],k=A[2*p+1],L=new i.Vector2(P,k),2!==a&&s.faceVertexUvs[r][o].push(L),0!==a&&s.faceVertexUvs[r][o+1].push(L);if(y&&(l=3*D[u++],_.normal.set(F[l++],F[l++],F[l]),T.normal.copy(_.normal)),b)for(r=0;4>r;r++)l=3*D[u++],C=new i.Vector3(F[l++],F[l++],F[l]),2!==r&&_.vertexNormals.push(C),0!==r&&T.vertexNormals.push(C);if(x&&(c=D[u++],E=O[c],_.color.setHex(E),T.color.setHex(E)),w)for(r=0;4>r;r++)c=D[u++],E=O[c],2!==r&&_.vertexColors.push(new i.Color(E)),0!==r&&T.vertexColors.push(new i.Color(E));s.faces.push(_),s.faces.push(T)}else{if(S=new i.Face3,S.a=D[u++],S.b=D[u++],S.c=D[u++],g&&(f=D[u++],S.materialIndex=f),o=s.faces.length,v)for(r=0;V>r;r++)for(A=e.uvs[r],s.faceVertexUvs[r][o]=[],a=0;3>a;a++)p=D[u++],P=A[2*p],k=A[2*p+1],L=new i.Vector2(P,k),s.faceVertexUvs[r][o].push(L);if(y&&(l=3*D[u++],S.normal.set(F[l++],F[l++],F[l])),b)for(r=0;3>r;r++)l=3*D[u++],C=new i.Vector3(F[l++],F[l++],F[l]),S.vertexNormals.push(C);if(x&&(c=D[u++],S.color.setHex(O[c])),w)for(r=0;3>r;r++)c=D[u++],S.vertexColors.push(new i.Color(O[c]));s.faces.push(S)}}function r(){var t=void 0!==e.influencesPerVertex?e.influencesPerVertex:2;if(e.skinWeights)for(var n=0,r=e.skinWeights.length;r>n;n+=t){var a=e.skinWeights[n],o=t>1?e.skinWeights[n+1]:0,u=t>2?e.skinWeights[n+2]:0,h=t>3?e.skinWeights[n+3]:0;s.skinWeights.push(new i.Vector4(a,o,u,h))}if(e.skinIndices)for(var n=0,r=e.skinIndices.length;r>n;n+=t){var c=e.skinIndices[n],l=t>1?e.skinIndices[n+1]:0,p=t>2?e.skinIndices[n+2]:0,f=t>3?e.skinIndices[n+3]:0;s.skinIndices.push(new i.Vector4(c,l,p,f))}s.bones=e.bones,s.bones&&s.bones.length>0&&(s.skinWeights.length!==s.skinIndices.length||s.skinIndices.length!==s.vertices.length)&&console.warn("When skinning, number of vertices ("+s.vertices.length+"), skinIndices ("+s.skinIndices.length+"), and skinWeights ("+s.skinWeights.length+") should match.")}function a(t){if(void 0!==e.morphTargets)for(var n=0,r=e.morphTargets.length;r>n;n++){s.morphTargets[n]={},s.morphTargets[n].name=e.morphTargets[n].name,s.morphTargets[n].vertices=[];for(var a=s.morphTargets[n].vertices,o=e.morphTargets[n].vertices,u=0,h=o.length;h>u;u+=3){var c=new i.Vector3;c.x=o[u]*t,c.y=o[u+1]*t,c.z=o[u+2]*t,a.push(c)}}if(void 0!==e.morphColors&&e.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');for(var l=s.faces,p=e.morphColors[0].colors,n=0,r=l.length;r>n;n++)l[n].color.fromArray(p,3*n)}}function o(){var t=[],n=[];void 0!==e.animation&&n.push(e.animation),void 0!==e.animations&&(e.animations.length?n=n.concat(e.animations):n.push(e.animations));for(var r=0;r<n.length;r++){var a=i.AnimationClip.parseAnimation(n[r],s.bones);a&&t.push(a)}if(s.morphTargets){var o=i.AnimationClip.CreateClipsFromMorphTargetSequences(s.morphTargets,10);t=t.concat(o)}t.length>0&&(s.animations=t)}var s=new i.Geometry,u=void 0!==e.scale?1/e.scale:1;if(n(u),r(),a(u),o(),s.computeFaceNormals(),s.computeBoundingSphere(),void 0===e.materials||0===e.materials.length)return{geometry:s};var h=i.Loader.prototype.initMaterials(e.materials,t,this.crossOrigin);return{geometry:s,materials:h}}},i.LoadingManager=function(e,t,n){var r=this,i=!1,a=0,o=0;this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(e){o++,i===!1&&void 0!==r.onStart&&r.onStart(e,a,o),i=!0},this.itemEnd=function(e){a++,void 0!==r.onProgress&&r.onProgress(e,a,o),a===o&&(i=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(e){void 0!==r.onError&&r.onError(e)}},i.DefaultLoadingManager=new i.LoadingManager,i.BufferGeometryLoader=function(e){this.manager=void 0!==e?e:i.DefaultLoadingManager},i.BufferGeometryLoader.prototype={constructor:i.BufferGeometryLoader,load:function(e,t,n,r){var a=this,o=new i.XHRLoader(a.manager);o.setCrossOrigin(this.crossOrigin),o.load(e,function(e){t(a.parse(JSON.parse(e)))},n,r)},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e){var t=new i.BufferGeometry,n=e.data.index;if(void 0!==n){var a=new r[n.type](n.array);t.setIndex(new i.BufferAttribute(a,1))}var o=e.data.attributes;for(var s in o){var u=o[s],a=new r[u.type](u.array);t.addAttribute(s,new i.BufferAttribute(a,u.itemSize))}var h=e.data.groups||e.data.drawcalls||e.data.offsets;if(void 0!==h)for(var c=0,l=h.length;c!==l;++c){var p=h[c];t.addGroup(p.start,p.count)}var f=e.data.boundingSphere;if(void 0!==f){var d=new i.Vector3;void 0!==f.center&&d.fromArray(f.center),t.boundingSphere=new i.Sphere(d,f.radius)}return t}},i.MaterialLoader=function(e){this.manager=void 0!==e?e:i.DefaultLoadingManager,this.textures={}},i.MaterialLoader.prototype={constructor:i.MaterialLoader,load:function(e,t,n,r){var a=this,o=new i.XHRLoader(a.manager);o.setCrossOrigin(this.crossOrigin),o.load(e,function(e){t(a.parse(JSON.parse(e)))},n,r)},setCrossOrigin:function(e){this.crossOrigin=e},setTextures:function(e){this.textures=e},getTexture:function(e){var t=this.textures;return void 0===t[e]&&console.warn("THREE.MaterialLoader: Undefined texture",e),t[e]},parse:function(e){var t=new i[e.type];if(t.uuid=e.uuid,void 0!==e.name&&(t.name=e.name),void 0!==e.color&&t.color.setHex(e.color),void 0!==e.emissive&&t.emissive.setHex(e.emissive),void 0!==e.specular&&t.specular.setHex(e.specular),void 0!==e.shininess&&(t.shininess=e.shininess),void 0!==e.uniforms&&(t.uniforms=e.uniforms),void 0!==e.vertexShader&&(t.vertexShader=e.vertexShader),void 0!==e.fragmentShader&&(t.fragmentShader=e.fragmentShader),void 0!==e.vertexColors&&(t.vertexColors=e.vertexColors),void 0!==e.shading&&(t.shading=e.shading),void 0!==e.blending&&(t.blending=e.blending),void 0!==e.side&&(t.side=e.side),void 0!==e.opacity&&(t.opacity=e.opacity),void 0!==e.transparent&&(t.transparent=e.transparent),void 0!==e.alphaTest&&(t.alphaTest=e.alphaTest),void 0!==e.depthTest&&(t.depthTest=e.depthTest),void 0!==e.depthWrite&&(t.depthWrite=e.depthWrite),void 0!==e.wireframe&&(t.wireframe=e.wireframe),void 0!==e.wireframeLinewidth&&(t.wireframeLinewidth=e.wireframeLinewidth),void 0!==e.size&&(t.size=e.size),void 0!==e.sizeAttenuation&&(t.sizeAttenuation=e.sizeAttenuation),void 0!==e.map&&(t.map=this.getTexture(e.map)),void 0!==e.alphaMap&&(t.alphaMap=this.getTexture(e.alphaMap),t.transparent=!0),void 0!==e.bumpMap&&(t.bumpMap=this.getTexture(e.bumpMap)),void 0!==e.bumpScale&&(t.bumpScale=e.bumpScale),void 0!==e.normalMap&&(t.normalMap=this.getTexture(e.normalMap)),e.normalScale&&(t.normalScale=new i.Vector2(e.normalScale,e.normalScale)),void 0!==e.displacementMap&&(t.displacementMap=this.getTexture(e.displacementMap)),void 0!==e.displacementScale&&(t.displacementScale=e.displacementScale),void 0!==e.displacementBias&&(t.displacementBias=e.displacementBias),void 0!==e.specularMap&&(t.specularMap=this.getTexture(e.specularMap)),void 0!==e.envMap&&(t.envMap=this.getTexture(e.envMap),t.combine=i.MultiplyOperation),e.reflectivity&&(t.reflectivity=e.reflectivity),void 0!==e.lightMap&&(t.lightMap=this.getTexture(e.lightMap)),void 0!==e.lightMapIntensity&&(t.lightMapIntensity=e.lightMapIntensity),void 0!==e.aoMap&&(t.aoMap=this.getTexture(e.aoMap)),void 0!==e.aoMapIntensity&&(t.aoMapIntensity=e.aoMapIntensity),void 0!==e.materials)for(var n=0,r=e.materials.length;r>n;n++)t.materials.push(this.parse(e.materials[n]));return t}},i.ObjectLoader=function(e){this.manager=void 0!==e?e:i.DefaultLoadingManager,this.texturePath=""},i.ObjectLoader.prototype={constructor:i.ObjectLoader,load:function(e,t,n,r){""===this.texturePath&&(this.texturePath=e.substring(0,e.lastIndexOf("/")+1));var a=this,o=new i.XHRLoader(a.manager);o.setCrossOrigin(this.crossOrigin),o.load(e,function(e){a.parse(JSON.parse(e),t)},n,r)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e,t){var n=this.parseGeometries(e.geometries),r=this.parseImages(e.images,function(){void 0!==t&&t(o)}),i=this.parseTextures(e.textures,r),a=this.parseMaterials(e.materials,i),o=this.parseObject(e.object,n,a);return e.animations&&(o.animations=this.parseAnimations(e.animations)),(void 0===e.images||0===e.images.length)&&void 0!==t&&t(o),o},parseGeometries:function(e){var t={};if(void 0!==e)for(var n=new i.JSONLoader,r=new i.BufferGeometryLoader,a=0,o=e.length;o>a;a++){var s,u=e[a];switch(u.type){case"PlaneGeometry":case"PlaneBufferGeometry":s=new i[u.type](u.width,u.height,u.widthSegments,u.heightSegments);break;case"BoxGeometry":case"CubeGeometry":s=new i.BoxGeometry(u.width,u.height,u.depth,u.widthSegments,u.heightSegments,u.depthSegments);break;case"CircleBufferGeometry":s=new i.CircleBufferGeometry(u.radius,u.segments,u.thetaStart,u.thetaLength);break;case"CircleGeometry":s=new i.CircleGeometry(u.radius,u.segments,u.thetaStart,u.thetaLength);break;case"CylinderGeometry":s=new i.CylinderGeometry(u.radiusTop,u.radiusBottom,u.height,u.radialSegments,u.heightSegments,u.openEnded,u.thetaStart,u.thetaLength);break;case"SphereGeometry":s=new i.SphereGeometry(u.radius,u.widthSegments,u.heightSegments,u.phiStart,u.phiLength,u.thetaStart,u.thetaLength);break;case"SphereBufferGeometry":s=new i.SphereBufferGeometry(u.radius,u.widthSegments,u.heightSegments,u.phiStart,u.phiLength,u.thetaStart,u.thetaLength);break;case"DodecahedronGeometry":s=new i.DodecahedronGeometry(u.radius,u.detail);break;case"IcosahedronGeometry":s=new i.IcosahedronGeometry(u.radius,u.detail);break;case"OctahedronGeometry":s=new i.OctahedronGeometry(u.radius,u.detail);break;case"TetrahedronGeometry":s=new i.TetrahedronGeometry(u.radius,u.detail);break;case"RingGeometry":s=new i.RingGeometry(u.innerRadius,u.outerRadius,u.thetaSegments,u.phiSegments,u.thetaStart,u.thetaLength);break;case"TorusGeometry":s=new i.TorusGeometry(u.radius,u.tube,u.radialSegments,u.tubularSegments,u.arc);break;case"TorusKnotGeometry":s=new i.TorusKnotGeometry(u.radius,u.tube,u.radialSegments,u.tubularSegments,u.p,u.q,u.heightScale);break;case"BufferGeometry":s=r.parse(u);break;case"Geometry":s=n.parse(u.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+u.type+'"');continue}s.uuid=u.uuid,void 0!==u.name&&(s.name=u.name),t[u.uuid]=s}return t},parseMaterials:function(e,t){var n={};if(void 0!==e){var r=new i.MaterialLoader;r.setTextures(t);for(var a=0,o=e.length;o>a;a++){var s=r.parse(e[a]);n[s.uuid]=s}}return n},parseAnimations:function(e){for(var t=[],n=0;n<e.length;n++){var r=i.AnimationClip.parse(e[n]);t.push(r)}return t},parseImages:function(e,t){function n(e){return r.manager.itemStart(e),s.load(e,function(){r.manager.itemEnd(e)})}var r=this,a={};if(void 0!==e&&e.length>0){var o=new i.LoadingManager(t),s=new i.ImageLoader(o);s.setCrossOrigin(this.crossOrigin);for(var u=0,h=e.length;h>u;u++){var c=e[u],l=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c.url)?c.url:r.texturePath+c.url;a[c.uuid]=n(l)}}return a},parseTextures:function(e,t){function n(e){return"number"==typeof e?e:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",e),i[e])}var r={};if(void 0!==e)for(var a=0,o=e.length;o>a;a++){var s=e[a];void 0===s.image&&console.warn('THREE.ObjectLoader: No "image" specified for',s.uuid),void 0===t[s.image]&&console.warn("THREE.ObjectLoader: Undefined image",s.image);var u=new i.Texture(t[s.image]);u.needsUpdate=!0,u.uuid=s.uuid,void 0!==s.name&&(u.name=s.name),void 0!==s.mapping&&(u.mapping=n(s.mapping)),void 0!==s.offset&&(u.offset=new i.Vector2(s.offset[0],s.offset[1])),void 0!==s.repeat&&(u.repeat=new i.Vector2(s.repeat[0],s.repeat[1])),void 0!==s.minFilter&&(u.minFilter=n(s.minFilter)),void 0!==s.magFilter&&(u.magFilter=n(s.magFilter)),void 0!==s.anisotropy&&(u.anisotropy=s.anisotropy),Array.isArray(s.wrap)&&(u.wrapS=n(s.wrap[0]),u.wrapT=n(s.wrap[1])),r[s.uuid]=u}return r},parseObject:function(){var e=new i.Matrix4;return function(t,n,r){function a(e){return void 0===n[e]&&console.warn("THREE.ObjectLoader: Undefined geometry",e),n[e]}function o(e){return void 0===e?void 0:(void 0===r[e]&&console.warn("THREE.ObjectLoader: Undefined material",e),r[e])}var s;switch(t.type){case"Scene":s=new i.Scene;break;case"PerspectiveCamera":s=new i.PerspectiveCamera(t.fov,t.aspect,t.near,t.far);break;case"OrthographicCamera":s=new i.OrthographicCamera(t.left,t.right,t.top,t.bottom,t.near,t.far);break;case"AmbientLight":s=new i.AmbientLight(t.color);break;case"DirectionalLight":s=new i.DirectionalLight(t.color,t.intensity);break;case"PointLight":s=new i.PointLight(t.color,t.intensity,t.distance,t.decay);break;case"SpotLight":s=new i.SpotLight(t.color,t.intensity,t.distance,t.angle,t.exponent,t.decay);break;case"HemisphereLight":s=new i.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"Mesh":s=new i.Mesh(a(t.geometry),o(t.material));break;case"LOD":s=new i.LOD;break;case"Line":s=new i.Line(a(t.geometry),o(t.material),t.mode);break;case"PointCloud":case"Points":s=new i.Points(a(t.geometry),o(t.material));break;case"Sprite":s=new i.Sprite(o(t.material));break;case"Group":s=new i.Group;break;default:s=new i.Object3D}if(s.uuid=t.uuid,void 0!==t.name&&(s.name=t.name),void 0!==t.matrix?(e.fromArray(t.matrix),e.decompose(s.position,s.quaternion,s.scale)):(void 0!==t.position&&s.position.fromArray(t.position),void 0!==t.rotation&&s.rotation.fromArray(t.rotation),void 0!==t.scale&&s.scale.fromArray(t.scale)),void 0!==t.castShadow&&(s.castShadow=t.castShadow),void 0!==t.receiveShadow&&(s.receiveShadow=t.receiveShadow),void 0!==t.visible&&(s.visible=t.visible),void 0!==t.userData&&(s.userData=t.userData),void 0!==t.children)for(var u in t.children)s.add(this.parseObject(t.children[u],n,r));if("LOD"===t.type)for(var h=t.levels,c=0;c<h.length;c++){var l=h[c],u=s.getObjectByProperty("uuid",l.object);void 0!==u&&s.addLevel(u,l.distance)}return s}}()},i.TextureLoader=function(e){this.manager=void 0!==e?e:i.DefaultLoadingManager},i.TextureLoader.prototype={constructor:i.TextureLoader,load:function(e,t,n,r){var a=new i.Texture,o=new i.ImageLoader(this.manager);return o.setCrossOrigin(this.crossOrigin),o.load(e,function(e){a.image=e,a.needsUpdate=!0,void 0!==t&&t(a)},n,r),a},setCrossOrigin:function(e){this.crossOrigin=e}},i.CubeTextureLoader=function(e){this.manager=void 0!==e?e:i.DefaultLoadingManager},i.CubeTextureLoader.prototype={constructor:i.CubeTextureLoader,load:function(e,t,n,r){function a(n){s.load(e[n],function(e){o.images[n]=e,u++,6===u&&(o.needsUpdate=!0,t&&t(o))},void 0,r)}var o=new i.CubeTexture([]),s=new i.ImageLoader;s.setCrossOrigin(this.crossOrigin);for(var u=0,h=0;h<e.length;++h)a(h);return o},setCrossOrigin:function(e){this.crossOrigin=e}},i.DataTextureLoader=i.BinaryTextureLoader=function(e){this.manager=void 0!==e?e:i.DefaultLoadingManager,this._parser=null},i.BinaryTextureLoader.prototype={constructor:i.BinaryTextureLoader,load:function(e,t,n,r){var a=this,o=new i.DataTexture,s=new i.XHRLoader(this.manager);return s.setCrossOrigin(this.crossOrigin),s.setResponseType("arraybuffer"),s.load(e,function(e){var n=a._parser(e);n&&(void 0!==n.image?o.image=n.image:void 0!==n.data&&(o.image.width=n.width,o.image.height=n.height,o.image.data=n.data),o.wrapS=void 0!==n.wrapS?n.wrapS:i.ClampToEdgeWrapping,o.wrapT=void 0!==n.wrapT?n.wrapT:i.ClampToEdgeWrapping,o.magFilter=void 0!==n.magFilter?n.magFilter:i.LinearFilter,o.minFilter=void 0!==n.minFilter?n.minFilter:i.LinearMipMapLinearFilter,o.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(o.format=n.format),void 0!==n.type&&(o.type=n.type),void 0!==n.mipmaps&&(o.mipmaps=n.mipmaps),1===n.mipmapCount&&(o.minFilter=i.LinearFilter),o.needsUpdate=!0,t&&t(o,n))},n,r),o},setCrossOrigin:function(e){this.crossOrigin=e}},i.CompressedTextureLoader=function(e){this.manager=void 0!==e?e:i.DefaultLoadingManager,this._parser=null},i.CompressedTextureLoader.prototype={constructor:i.CompressedTextureLoader,load:function(e,t,n,r){var a=this,o=[],s=new i.CompressedTexture;s.image=o;var u=new i.XHRLoader(this.manager);if(u.setCrossOrigin(this.crossOrigin),u.setResponseType("arraybuffer"),Array.isArray(e))for(var h=0,c=function(c){u.load(e[c],function(e){var n=a._parser(e,!0);o[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},h+=1,6===h&&(1===n.mipmapCount&&(s.minFilter=i.LinearFilter),s.format=n.format,s.needsUpdate=!0,t&&t(s))},n,r)},l=0,p=e.length;p>l;++l)c(l);else u.load(e,function(e){var n=a._parser(e,!0);if(n.isCubemap)for(var r=n.mipmaps.length/n.mipmapCount,u=0;r>u;u++){o[u]={mipmaps:[]};for(var h=0;h<n.mipmapCount;h++)o[u].mipmaps.push(n.mipmaps[u*n.mipmapCount+h]),o[u].format=n.format,o[u].width=n.width,o[u].height=n.height}else s.image.width=n.width,s.image.height=n.height,s.mipmaps=n.mipmaps;1===n.mipmapCount&&(s.minFilter=i.LinearFilter),s.format=n.format,s.needsUpdate=!0,t&&t(s)},n,r);return s},setCrossOrigin:function(e){this.crossOrigin=e}},i.Material=function(){Object.defineProperty(this,"id",{value:i.MaterialIdCount++}),this.uuid=i.Math.generateUUID(),this.name="",this.type="Material",this.side=i.FrontSide,this.opacity=1,this.transparent=!1,this.blending=i.NormalBlending,this.blendSrc=i.SrcAlphaFactor,this.blendDst=i.OneMinusSrcAlphaFactor,this.blendEquation=i.AddEquation,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=i.LessEqualDepth,this.depthTest=!0,this.depthWrite=!0,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.overdraw=0,this.visible=!0,this._needsUpdate=!0},i.Material.prototype={constructor:i.Material,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){e===!0&&this.update(),this._needsUpdate=e},setValues:function(e){if(void 0!==e)for(var t in e){var n=e[t];if(void 0!==n){var r=this[t];void 0!==r?r instanceof i.Color?r.set(n):r instanceof i.Vector3&&n instanceof i.Vector3?r.copy(n):"overdraw"===t?this[t]=Number(n):this[t]=n:console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.")}else console.warn("THREE.Material: '"+t+"' parameter is undefined.")}},toJSON:function(e){var t={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};return t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),this.color instanceof i.Color&&(t.color=this.color.getHex()),this.emissive instanceof i.Color&&(t.emissive=this.emissive.getHex()),this.specular instanceof i.Color&&(t.specular=this.specular.getHex()),void 0!==this.shininess&&(t.shininess=this.shininess),this.map instanceof i.Texture&&(t.map=this.map.toJSON(e).uuid),this.alphaMap instanceof i.Texture&&(t.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap instanceof i.Texture&&(t.lightMap=this.lightMap.toJSON(e).uuid),this.bumpMap instanceof i.Texture&&(t.bumpMap=this.bumpMap.toJSON(e).uuid,t.bumpScale=this.bumpScale),this.normalMap instanceof i.Texture&&(t.normalMap=this.normalMap.toJSON(e).uuid,t.normalScale=this.normalScale),this.displacementMap instanceof i.Texture&&(t.displacementMap=this.displacementMap.toJSON(e).uuid,t.displacementScale=this.displacementScale,t.displacementBias=this.displacementBias),this.specularMap instanceof i.Texture&&(t.specularMap=this.specularMap.toJSON(e).uuid),this.envMap instanceof i.Texture&&(t.envMap=this.envMap.toJSON(e).uuid,t.reflectivity=this.reflectivity),void 0!==this.size&&(t.size=this.size),void 0!==this.sizeAttenuation&&(t.sizeAttenuation=this.sizeAttenuation),void 0!==this.vertexColors&&this.vertexColors!==i.NoColors&&(t.vertexColors=this.vertexColors),void 0!==this.shading&&this.shading!==i.SmoothShading&&(t.shading=this.shading),void 0!==this.blending&&this.blending!==i.NormalBlending&&(t.blending=this.blending),void 0!==this.side&&this.side!==i.FrontSide&&(t.side=this.side),this.opacity<1&&(t.opacity=this.opacity),this.transparent===!0&&(t.transparent=this.transparent),this.alphaTest>0&&(t.alphaTest=this.alphaTest),this.wireframe===!0&&(t.wireframe=this.wireframe),this.wireframeLinewidth>1&&(t.wireframeLinewidth=this.wireframeLinewidth),t},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.name=e.name,this.side=e.side,this.opacity=e.opacity,this.transparent=e.transparent,this.blending=e.blending,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.alphaTest=e.alphaTest,this.overdraw=e.overdraw,this.visible=e.visible,this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})},get wrapAround(){console.warn("THREE."+this.type+": .wrapAround has been removed.")},set wrapAround(e){console.warn("THREE."+this.type+": .wrapAround has been removed.")},get wrapRGB(){return console.warn("THREE."+this.type+": .wrapRGB has been removed."),new i.Color}},i.EventDispatcher.prototype.apply(i.Material.prototype),i.MaterialIdCount=0,i.LineBasicMaterial=function(e){i.Material.call(this),this.type="LineBasicMaterial",this.color=new i.Color(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.vertexColors=i.NoColors,this.fog=!0,this.setValues(e)},i.LineBasicMaterial.prototype=Object.create(i.Material.prototype),i.LineBasicMaterial.prototype.constructor=i.LineBasicMaterial,i.LineBasicMaterial.prototype.copy=function(e){return i.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.vertexColors=e.vertexColors,this.fog=e.fog,this},i.LineDashedMaterial=function(e){i.Material.call(this),this.type="LineDashedMaterial",this.color=new i.Color(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.vertexColors=!1,this.fog=!0,this.setValues(e)},i.LineDashedMaterial.prototype=Object.create(i.Material.prototype),i.LineDashedMaterial.prototype.constructor=i.LineDashedMaterial,i.LineDashedMaterial.prototype.copy=function(e){return i.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this.vertexColors=e.vertexColors,this.fog=e.fog,this},i.MeshBasicMaterial=function(e){i.Material.call(this),this.type="MeshBasicMaterial",this.color=new i.Color(16777215),this.map=null,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=i.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=i.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=i.NoColors,this.skinning=!1,this.morphTargets=!1,this.setValues(e)},i.MeshBasicMaterial.prototype=Object.create(i.Material.prototype),i.MeshBasicMaterial.prototype.constructor=i.MeshBasicMaterial,i.MeshBasicMaterial.prototype.copy=function(e){return i.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this},i.MeshLambertMaterial=function(e){i.Material.call(this),this.type="MeshLambertMaterial",this.color=new i.Color(16777215),this.emissive=new i.Color(0),this.map=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=i.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=i.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},i.MeshLambertMaterial.prototype=Object.create(i.Material.prototype),i.MeshLambertMaterial.prototype.constructor=i.MeshLambertMaterial,i.MeshLambertMaterial.prototype.copy=function(e){return i.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.emissive.copy(e.emissive),this.map=e.map,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},i.MeshPhongMaterial=function(e){i.Material.call(this),this.type="MeshPhongMaterial",this.color=new i.Color(16777215),this.emissive=new i.Color(0),this.specular=new i.Color(1118481),this.shininess=30,this.metal=!1,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new i.Vector2(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=i.MultiplyOperation,this.reflectivity=1,this.refractionRatio=.98,this.fog=!0,this.shading=i.SmoothShading,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.vertexColors=i.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)},i.MeshPhongMaterial.prototype=Object.create(i.Material.prototype),i.MeshPhongMaterial.prototype.constructor=i.MeshPhongMaterial,i.MeshPhongMaterial.prototype.copy=function(e){return i.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.emissive.copy(e.emissive),this.specular.copy(e.specular),this.shininess=e.shininess,this.metal=e.metal,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissiveMap=e.emissiveMap,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.fog=e.fog,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this},i.MeshDepthMaterial=function(e){i.Material.call(this),this.type="MeshDepthMaterial",this.morphTargets=!1,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)},i.MeshDepthMaterial.prototype=Object.create(i.Material.prototype),i.MeshDepthMaterial.prototype.constructor=i.MeshDepthMaterial,i.MeshDepthMaterial.prototype.copy=function(e){return i.Material.prototype.copy.call(this,e),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},i.MeshNormalMaterial=function(e){i.Material.call(this,e),this.type="MeshNormalMaterial",this.wireframe=!1,this.wireframeLinewidth=1,this.morphTargets=!1,this.setValues(e)},i.MeshNormalMaterial.prototype=Object.create(i.Material.prototype),i.MeshNormalMaterial.prototype.constructor=i.MeshNormalMaterial,i.MeshNormalMaterial.prototype.copy=function(e){return i.Material.prototype.copy.call(this,e),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this},i.MultiMaterial=function(e){this.uuid=i.Math.generateUUID(),this.type="MultiMaterial",this.materials=e instanceof Array?e:[],this.visible=!0},i.MultiMaterial.prototype={constructor:i.MultiMaterial,toJSON:function(){for(var e={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},t=0,n=this.materials.length;n>t;t++)e.materials.push(this.materials[t].toJSON());return e.visible=this.visible,e},clone:function(){for(var e=new this.constructor,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e.visible=this.visible,e}},i.MeshFaceMaterial=i.MultiMaterial,i.PointsMaterial=function(e){i.Material.call(this),this.type="PointsMaterial",this.color=new i.Color(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.vertexColors=i.NoColors,this.fog=!0,this.setValues(e)},i.PointsMaterial.prototype=Object.create(i.Material.prototype),i.PointsMaterial.prototype.constructor=i.PointsMaterial,i.PointsMaterial.prototype.copy=function(e){return i.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.vertexColors=e.vertexColors,this.fog=e.fog,this},i.PointCloudMaterial=function(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new i.PointsMaterial(e)},i.ParticleBasicMaterial=function(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new i.PointsMaterial(e)},i.ParticleSystemMaterial=function(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new i.PointsMaterial(e)},i.ShaderMaterial=function(e){i.Material.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.shading=i.SmoothShading,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.vertexColors=i.NoColors,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.derivatives=!1,this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,void 0!==e&&(void 0!==e.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))},i.ShaderMaterial.prototype=Object.create(i.Material.prototype),i.ShaderMaterial.prototype.constructor=i.ShaderMaterial,i.ShaderMaterial.prototype.copy=function(e){return i.Material.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=i.UniformsUtils.clone(e.uniforms),this.attributes=e.attributes,this.defines=e.defines,this.shading=e.shading,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.vertexColors=e.vertexColors,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.derivatives=e.derivatives,this},i.ShaderMaterial.prototype.toJSON=function(e){var t=i.Material.prototype.toJSON.call(this,e);
return t.uniforms=this.uniforms,t.attributes=this.attributes,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t},i.RawShaderMaterial=function(e){i.ShaderMaterial.call(this,e),this.type="RawShaderMaterial"},i.RawShaderMaterial.prototype=Object.create(i.ShaderMaterial.prototype),i.RawShaderMaterial.prototype.constructor=i.RawShaderMaterial,i.SpriteMaterial=function(e){i.Material.call(this),this.type="SpriteMaterial",this.color=new i.Color(16777215),this.map=null,this.rotation=0,this.fog=!1,this.setValues(e)},i.SpriteMaterial.prototype=Object.create(i.Material.prototype),i.SpriteMaterial.prototype.constructor=i.SpriteMaterial,i.SpriteMaterial.prototype.copy=function(e){return i.Material.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.rotation=e.rotation,this.fog=e.fog,this},i.Texture=function(e,t,n,r,a,o,s,u,h){Object.defineProperty(this,"id",{value:i.TextureIdCount++}),this.uuid=i.Math.generateUUID(),this.name="",this.sourceFile="",this.image=void 0!==e?e:i.Texture.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=void 0!==t?t:i.Texture.DEFAULT_MAPPING,this.wrapS=void 0!==n?n:i.ClampToEdgeWrapping,this.wrapT=void 0!==r?r:i.ClampToEdgeWrapping,this.magFilter=void 0!==a?a:i.LinearFilter,this.minFilter=void 0!==o?o:i.LinearMipMapLinearFilter,this.anisotropy=void 0!==h?h:1,this.format=void 0!==s?s:i.RGBAFormat,this.type=void 0!==u?u:i.UnsignedByteType,this.offset=new i.Vector2(0,0),this.repeat=new i.Vector2(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.version=0,this.onUpdate=null},i.Texture.DEFAULT_IMAGE=void 0,i.Texture.DEFAULT_MAPPING=i.UVMapping,i.Texture.prototype={constructor:i.Texture,set needsUpdate(e){e===!0&&this.version++},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this},toJSON:function(e){function t(e){var t;return void 0!==e.toDataURL?t=e:(t=document.createElement("canvas"),t.width=e.width,t.height=e.height,t.getContext("2d").drawImage(e,0,0,e.width,e.height)),t.width>2048||t.height>2048?t.toDataURL("image/jpeg",.6):t.toDataURL("image/png")}if(void 0!==e.textures[this.uuid])return e.textures[this.uuid];var n={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy};if(void 0!==this.image){var r=this.image;void 0===r.uuid&&(r.uuid=i.Math.generateUUID()),void 0===e.images[r.uuid]&&(e.images[r.uuid]={uuid:r.uuid,url:t(r)}),n.image=r.uuid}return e.textures[this.uuid]=n,n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping===i.UVMapping){if(e.multiply(this.repeat),e.add(this.offset),e.x<0||e.x>1)switch(this.wrapS){case i.RepeatWrapping:e.x=e.x-Math.floor(e.x);break;case i.ClampToEdgeWrapping:e.x=e.x<0?0:1;break;case i.MirroredRepeatWrapping:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case i.RepeatWrapping:e.y=e.y-Math.floor(e.y);break;case i.ClampToEdgeWrapping:e.y=e.y<0?0:1;break;case i.MirroredRepeatWrapping:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}this.flipY&&(e.y=1-e.y)}}},i.EventDispatcher.prototype.apply(i.Texture.prototype),i.TextureIdCount=0,i.CanvasTexture=function(e,t,n,r,a,o,s,u,h){i.Texture.call(this,e,t,n,r,a,o,s,u,h),this.needsUpdate=!0},i.CanvasTexture.prototype=Object.create(i.Texture.prototype),i.CanvasTexture.prototype.constructor=i.CanvasTexture,i.CubeTexture=function(e,t,n,r,a,o,s,u,h){t=void 0!==t?t:i.CubeReflectionMapping,i.Texture.call(this,e,t,n,r,a,o,s,u,h),this.images=e,this.flipY=!1},i.CubeTexture.prototype=Object.create(i.Texture.prototype),i.CubeTexture.prototype.constructor=i.CubeTexture,i.CubeTexture.prototype.copy=function(e){return i.Texture.prototype.copy.call(this,e),this.images=e.images,this},i.CompressedTexture=function(e,t,n,r,a,o,s,u,h,c,l){i.Texture.call(this,null,o,s,u,h,c,r,a,l),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1},i.CompressedTexture.prototype=Object.create(i.Texture.prototype),i.CompressedTexture.prototype.constructor=i.CompressedTexture,i.DataTexture=function(e,t,n,r,a,o,s,u,h,c,l){i.Texture.call(this,null,o,s,u,h,c,r,a,l),this.image={data:e,width:t,height:n},this.magFilter=void 0!==h?h:i.NearestFilter,this.minFilter=void 0!==c?c:i.NearestFilter,this.flipY=!1,this.generateMipmaps=!1},i.DataTexture.prototype=Object.create(i.Texture.prototype),i.DataTexture.prototype.constructor=i.DataTexture,i.VideoTexture=function(e,t,n,r,a,o,s,u,h){function c(){requestAnimationFrame(c),e.readyState===e.HAVE_ENOUGH_DATA&&(l.needsUpdate=!0)}i.Texture.call(this,e,t,n,r,a,o,s,u,h),this.generateMipmaps=!1;var l=this;c()},i.VideoTexture.prototype=Object.create(i.Texture.prototype),i.VideoTexture.prototype.constructor=i.VideoTexture,i.Group=function(){i.Object3D.call(this),this.type="Group"},i.Group.prototype=Object.create(i.Object3D.prototype),i.Group.prototype.constructor=i.Group,i.Points=function(e,t){i.Object3D.call(this),this.type="Points",this.geometry=void 0!==e?e:new i.Geometry,this.material=void 0!==t?t:new i.PointsMaterial({color:16777215*Math.random()})},i.Points.prototype=Object.create(i.Object3D.prototype),i.Points.prototype.constructor=i.Points,i.Points.prototype.raycast=function(){var e=new i.Matrix4,t=new i.Ray;return function(n,r){function a(e,i){var a=t.distanceSqToPoint(e);if(c>a){var s=t.closestPointToPoint(e);s.applyMatrix4(o.matrixWorld);var u=n.ray.origin.distanceTo(s);if(u<n.near||u>n.far)return;r.push({distance:u,distanceToRay:Math.sqrt(a),point:s.clone(),index:i,face:null,object:o})}}var o=this,s=o.geometry,u=n.params.Points.threshold;if(e.getInverse(this.matrixWorld),t.copy(n.ray).applyMatrix4(e),null===s.boundingBox||t.isIntersectionBox(s.boundingBox)!==!1){var h=u/((this.scale.x+this.scale.y+this.scale.z)/3),c=h*h,l=new i.Vector3;if(s instanceof i.BufferGeometry){var p=s.index,f=s.attributes,d=f.position.array;if(null!==p)for(var m=p.array,g=0,v=m.length;v>g;g++){var y=m[g];l.fromArray(d,3*y),a(l,y)}else for(var g=0,b=d.length/3;b>g;g++)l.fromArray(d,3*g),a(l,g)}else for(var x=s.vertices,g=0,b=x.length;b>g;g++)a(x[g],g)}}}(),i.Points.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},i.PointCloud=function(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new i.Points(e,t)},i.ParticleSystem=function(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new i.Points(e,t)},i.Line=function(e,t,n){return 1===n?(console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new i.LineSegments(e,t)):(i.Object3D.call(this),this.type="Line",this.geometry=void 0!==e?e:new i.Geometry,void(this.material=void 0!==t?t:new i.LineBasicMaterial({color:16777215*Math.random()})))},i.Line.prototype=Object.create(i.Object3D.prototype),i.Line.prototype.constructor=i.Line,i.Line.prototype.raycast=function(){var e=new i.Matrix4,t=new i.Ray,n=new i.Sphere;return function(r,a){var o=r.linePrecision,s=o*o,u=this.geometry;if(null===u.boundingSphere&&u.computeBoundingSphere(),n.copy(u.boundingSphere),n.applyMatrix4(this.matrixWorld),r.ray.isIntersectionSphere(n)!==!1){e.getInverse(this.matrixWorld),t.copy(r.ray).applyMatrix4(e);var h=new i.Vector3,c=new i.Vector3,l=new i.Vector3,p=new i.Vector3,f=this instanceof i.LineSegments?2:1;if(u instanceof i.BufferGeometry){var d=u.index,m=u.attributes;if(null!==d)for(var g=d.array,v=m.position.array,y=0,b=g.length-1;b>y;y+=f){var x=g[y],w=g[y+1];h.fromArray(v,3*x),c.fromArray(v,3*w);var M=t.distanceSqToSegment(h,c,p,l);if(!(M>s)){p.applyMatrix4(this.matrixWorld);var S=r.ray.origin.distanceTo(p);S<r.near||S>r.far||a.push({distance:S,point:l.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}else for(var v=m.position.array,y=0,b=v.length/3-1;b>y;y+=f){h.fromArray(v,3*y),c.fromArray(v,3*y+3);var M=t.distanceSqToSegment(h,c,p,l);if(!(M>s)){p.applyMatrix4(this.matrixWorld);var S=r.ray.origin.distanceTo(p);S<r.near||S>r.far||a.push({distance:S,point:l.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}else if(u instanceof i.Geometry)for(var _=u.vertices,T=_.length,y=0;T-1>y;y+=f){var M=t.distanceSqToSegment(_[y],_[y+1],p,l);if(!(M>s)){p.applyMatrix4(this.matrixWorld);var S=r.ray.origin.distanceTo(p);S<r.near||S>r.far||a.push({distance:S,point:l.clone().applyMatrix4(this.matrixWorld),index:y,face:null,faceIndex:null,object:this})}}}}}(),i.Line.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},i.LineStrip=0,i.LinePieces=1,i.LineSegments=function(e,t){i.Line.call(this,e,t),this.type="LineSegments"},i.LineSegments.prototype=Object.create(i.Line.prototype),i.LineSegments.prototype.constructor=i.LineSegments,i.Mesh=function(e,t){i.Object3D.call(this),this.type="Mesh",this.geometry=void 0!==e?e:new i.Geometry,this.material=void 0!==t?t:new i.MeshBasicMaterial({color:16777215*Math.random()}),this.updateMorphTargets()},i.Mesh.prototype=Object.create(i.Object3D.prototype),i.Mesh.prototype.constructor=i.Mesh,i.Mesh.prototype.updateMorphTargets=function(){if(void 0!==this.geometry.morphTargets&&this.geometry.morphTargets.length>0){this.morphTargetBase=-1,this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var e=0,t=this.geometry.morphTargets.length;t>e;e++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[e].name]=e}},i.Mesh.prototype.getMorphTargetIndexByName=function(e){return void 0!==this.morphTargetDictionary[e]?this.morphTargetDictionary[e]:(console.warn("THREE.Mesh.getMorphTargetIndexByName: morph target "+e+" does not exist. Returning 0."),0)},i.Mesh.prototype.raycast=function(){function e(e,t,n,r,a,o,s){return i.Triangle.barycoordFromPoint(e,t,n,r,g),a.multiplyScalar(g.x),o.multiplyScalar(g.y),s.multiplyScalar(g.z),a.add(o).add(s),a.clone()}function t(e,t,n,r,a,o,s){var u,h=e.material;if(u=h.side===i.BackSide?n.intersectTriangle(o,a,r,!0,s):n.intersectTriangle(r,a,o,h.side!==i.DoubleSide,s),null===u)return null;y.copy(s),y.applyMatrix4(e.matrixWorld);var c=t.ray.origin.distanceTo(y);return c<t.near||c>t.far?null:{distance:c,point:y.clone(),object:e}}function n(n,r,a,o,c,l,p,g){s.fromArray(o,3*l),u.fromArray(o,3*p),h.fromArray(o,3*g);var y=t(n,r,a,s,u,h,v);return y&&(c&&(f.fromArray(c,2*l),d.fromArray(c,2*p),m.fromArray(c,2*g),y.uv=e(v,s,u,h,f,d,m)),y.face=new i.Face3(l,p,g,i.Triangle.normal(s,u,h)),y.faceIndex=l),y}var r=new i.Matrix4,a=new i.Ray,o=new i.Sphere,s=new i.Vector3,u=new i.Vector3,h=new i.Vector3,c=new i.Vector3,l=new i.Vector3,p=new i.Vector3,f=new i.Vector2,d=new i.Vector2,m=new i.Vector2,g=new i.Vector3,v=new i.Vector3,y=new i.Vector3;return function(g,y){var b=this.geometry,x=this.material;if(void 0!==x){null===b.boundingSphere&&b.computeBoundingSphere();var w=this.matrixWorld;if(o.copy(b.boundingSphere),o.applyMatrix4(w),g.ray.isIntersectionSphere(o)!==!1&&(r.getInverse(w),a.copy(g.ray).applyMatrix4(r),null===b.boundingBox||a.isIntersectionBox(b.boundingBox)!==!1)){var M,S;if(b instanceof i.BufferGeometry){var _,T,E,C=b.index,A=b.attributes,L=A.position.array;if(void 0!==A.uv&&(M=A.uv.array),null!==C)for(var P=C.array,k=0,D=P.length;D>k;k+=3)_=P[k],T=P[k+1],E=P[k+2],S=n(this,g,a,L,M,_,T,E),S&&(S.faceIndex=Math.floor(k/3),y.push(S));else for(var k=0,D=L.length;D>k;k+=9)_=k/3,T=_+1,E=_+2,S=n(this,g,a,L,M,_,T,E),S&&(S.index=_,y.push(S))}else if(b instanceof i.Geometry){var R,F,O,V=x instanceof i.MeshFaceMaterial,N=V===!0?x.materials:null,B=b.vertices,U=b.faces,G=b.faceVertexUvs[0];G.length>0&&(M=G);for(var I=0,j=U.length;j>I;I++){var z=U[I],H=V===!0?N[z.materialIndex]:x;if(void 0!==H){if(R=B[z.a],F=B[z.b],O=B[z.c],H.morphTargets===!0){var W=b.morphTargets,X=this.morphTargetInfluences;s.set(0,0,0),u.set(0,0,0),h.set(0,0,0);for(var q=0,Y=W.length;Y>q;q++){var K=X[q];if(0!==K){var Q=W[q].vertices;s.addScaledVector(c.subVectors(Q[z.a],R),K),u.addScaledVector(l.subVectors(Q[z.b],F),K),h.addScaledVector(p.subVectors(Q[z.c],O),K)}}s.add(R),u.add(F),h.add(O),R=s,F=u,O=h}if(S=t(this,g,a,R,F,O,v)){if(M){var Z=M[I];f.copy(Z[0]),d.copy(Z[1]),m.copy(Z[2]),S.uv=e(v,R,F,O,f,d,m)}S.face=z,S.faceIndex=I,y.push(S)}}}}}}}}(),i.Mesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material).copy(this)},i.Bone=function(e){i.Object3D.call(this),this.type="Bone",this.skin=e},i.Bone.prototype=Object.create(i.Object3D.prototype),i.Bone.prototype.constructor=i.Bone,i.Bone.prototype.copy=function(e){return i.Object3D.prototype.copy.call(this,e),this.skin=e.skin,this},i.Skeleton=function(e,t,n){if(this.useVertexTexture=void 0!==n?n:!0,this.identityMatrix=new i.Matrix4,e=e||[],this.bones=e.slice(0),this.useVertexTexture){var r=Math.sqrt(4*this.bones.length);r=i.Math.nextPowerOfTwo(Math.ceil(r)),r=Math.max(r,4),this.boneTextureWidth=r,this.boneTextureHeight=r,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new i.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,i.RGBAFormat,i.FloatType)}else this.boneMatrices=new Float32Array(16*this.bones.length);if(void 0===t)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];for(var a=0,o=this.bones.length;o>a;a++)this.boneInverses.push(new i.Matrix4)}},i.Skeleton.prototype.calculateInverses=function(){this.boneInverses=[];for(var e=0,t=this.bones.length;t>e;e++){var n=new i.Matrix4;this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},i.Skeleton.prototype.pose=function(){for(var e,t=0,n=this.bones.length;n>t;t++)e=this.bones[t],e&&e.matrixWorld.getInverse(this.boneInverses[t]);for(var t=0,n=this.bones.length;n>t;t++)e=this.bones[t],e&&(e.parent?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},i.Skeleton.prototype.update=function(){var e=new i.Matrix4;return function(){for(var t=0,n=this.bones.length;n>t;t++){var r=this.bones[t]?this.bones[t].matrixWorld:this.identityMatrix;e.multiplyMatrices(r,this.boneInverses[t]),e.flattenToArrayOffset(this.boneMatrices,16*t)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),i.Skeleton.prototype.clone=function(){return new i.Skeleton(this.bones,this.boneInverses,this.useVertexTexture)},i.SkinnedMesh=function(e,t,n){i.Mesh.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new i.Matrix4,this.bindMatrixInverse=new i.Matrix4;var r=[];if(this.geometry&&void 0!==this.geometry.bones){for(var a,o,s=0,u=this.geometry.bones.length;u>s;++s)o=this.geometry.bones[s],a=new i.Bone(this),r.push(a),a.name=o.name,a.position.fromArray(o.pos),a.quaternion.fromArray(o.rotq),void 0!==o.scl&&a.scale.fromArray(o.scl);for(var s=0,u=this.geometry.bones.length;u>s;++s)o=this.geometry.bones[s],-1!==o.parent&&null!==o.parent?r[o.parent].add(r[s]):this.add(r[s])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new i.Skeleton(r,void 0,n),this.matrixWorld)},i.SkinnedMesh.prototype=Object.create(i.Mesh.prototype),i.SkinnedMesh.prototype.constructor=i.SkinnedMesh,i.SkinnedMesh.prototype.bind=function(e,t){this.skeleton=e,void 0===t&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},i.SkinnedMesh.prototype.pose=function(){this.skeleton.pose()},i.SkinnedMesh.prototype.normalizeSkinWeights=function(){if(this.geometry instanceof i.Geometry)for(var e=0;e<this.geometry.skinIndices.length;e++){var t=this.geometry.skinWeights[e],n=1/t.lengthManhattan();n!==1/0?t.multiplyScalar(n):t.set(1)}},i.SkinnedMesh.prototype.updateMatrixWorld=function(e){i.Mesh.prototype.updateMatrixWorld.call(this,!0),"attached"===this.bindMode?this.bindMatrixInverse.getInverse(this.matrixWorld):"detached"===this.bindMode?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)},i.SkinnedMesh.prototype.clone=function(){return new this.constructor(this.geometry,this.material,this.useVertexTexture).copy(this)},i.LOD=function(){i.Object3D.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}})},i.LOD.prototype=Object.create(i.Object3D.prototype),i.LOD.prototype.constructor=i.LOD,i.LOD.prototype.addLevel=function(e,t){void 0===t&&(t=0),t=Math.abs(t);for(var n=this.levels,r=0;r<n.length&&!(t<n[r].distance);r++);n.splice(r,0,{distance:t,object:e}),this.add(e)},i.LOD.prototype.getObjectForDistance=function(e){for(var t=this.levels,n=1,r=t.length;r>n&&!(e<t[n].distance);n++);return t[n-1].object},i.LOD.prototype.raycast=function(){var e=new i.Vector3;return function(t,n){e.setFromMatrixPosition(this.matrixWorld);var r=t.ray.origin.distanceTo(e);this.getObjectForDistance(r).raycast(t,n)}}(),i.LOD.prototype.update=function(){var e=new i.Vector3,t=new i.Vector3;return function(n){var r=this.levels;if(r.length>1){e.setFromMatrixPosition(n.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var i=e.distanceTo(t);r[0].object.visible=!0;for(var a=1,o=r.length;o>a&&i>=r[a].distance;a++)r[a-1].object.visible=!1,r[a].object.visible=!0;for(;o>a;a++)r[a].object.visible=!1}}}(),i.LOD.prototype.copy=function(e){i.Object3D.prototype.copy.call(this,e,!1);for(var t=e.levels,n=0,r=t.length;r>n;n++){var a=t[n];this.addLevel(a.object.clone(),a.distance)}return this},i.LOD.prototype.toJSON=function(e){var t=i.Object3D.prototype.toJSON.call(this,e);t.object.levels=[];for(var n=this.levels,r=0,a=n.length;a>r;r++){var o=n[r];t.object.levels.push({object:o.object.uuid,distance:o.distance})}return t},i.Sprite=function(){var e=new Uint16Array([0,1,2,0,2,3]),t=new Float32Array([-.5,-.5,0,.5,-.5,0,.5,.5,0,-.5,.5,0]),n=new Float32Array([0,0,1,0,1,1,0,1]),r=new i.BufferGeometry;return r.setIndex(new i.BufferAttribute(e,1)),r.addAttribute("position",new i.BufferAttribute(t,3)),r.addAttribute("uv",new i.BufferAttribute(n,2)),function(e){i.Object3D.call(this),this.type="Sprite",this.geometry=r,this.material=void 0!==e?e:new i.SpriteMaterial}}(),i.Sprite.prototype=Object.create(i.Object3D.prototype),i.Sprite.prototype.constructor=i.Sprite,i.Sprite.prototype.raycast=function(){var e=new i.Vector3;return function(t,n){e.setFromMatrixPosition(this.matrixWorld);var r=t.ray.distanceSqToPoint(e),i=this.scale.x*this.scale.y;r>i||n.push({distance:Math.sqrt(r),point:this.position,face:null,object:this})}}(),i.Sprite.prototype.clone=function(){return new this.constructor(this.material).copy(this)},i.Particle=i.Sprite,i.LensFlare=function(e,t,n,r,a){i.Object3D.call(this),this.lensFlares=[],this.positionScreen=new i.Vector3,this.customUpdateCallback=void 0,void 0!==e&&this.add(e,t,n,r,a)},i.LensFlare.prototype=Object.create(i.Object3D.prototype),i.LensFlare.prototype.constructor=i.LensFlare,i.LensFlare.prototype.add=function(e,t,n,r,a,o){void 0===t&&(t=-1),void 0===n&&(n=0),void 0===o&&(o=1),void 0===a&&(a=new i.Color(16777215)),void 0===r&&(r=i.NormalBlending),n=Math.min(n,Math.max(0,n)),this.lensFlares.push({texture:e,size:t,distance:n,x:0,y:0,z:0,scale:1,rotation:0,opacity:o,color:a,blending:r})},i.LensFlare.prototype.updateLensFlares=function(){var e,t,n=this.lensFlares.length,r=2*-this.positionScreen.x,i=2*-this.positionScreen.y;for(e=0;n>e;e++)t=this.lensFlares[e],t.x=this.positionScreen.x+r*t.distance,t.y=this.positionScreen.y+i*t.distance,t.wantedRotation=t.x*Math.PI*.25,t.rotation+=.25*(t.wantedRotation-t.rotation)},i.LensFlare.prototype.copy=function(e){i.Object3D.prototype.copy.call(this,e),this.positionScreen.copy(e.positionScreen),this.customUpdateCallback=e.customUpdateCallback;for(var t=0,n=e.lensFlares.length;n>t;t++)this.lensFlares.push(e.lensFlares[t]);return this},i.Scene=function(){i.Object3D.call(this),this.type="Scene",this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0},i.Scene.prototype=Object.create(i.Object3D.prototype),i.Scene.prototype.constructor=i.Scene,i.Scene.prototype.copy=function(e){return i.Object3D.prototype.copy.call(this,e),null!==e.fog&&(this.fog=e.fog.clone()),null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this},i.Fog=function(e,t,n){this.name="",this.color=new i.Color(e),this.near=void 0!==t?t:1,this.far=void 0!==n?n:1e3},i.Fog.prototype.clone=function(){return new i.Fog(this.color.getHex(),this.near,this.far)},i.FogExp2=function(e,t){this.name="",this.color=new i.Color(e),this.density=void 0!==t?t:25e-5},i.FogExp2.prototype.clone=function(){return new i.FogExp2(this.color.getHex(),this.density)},i.ShaderChunk={},i.ShaderChunk.alphamap_fragment="#ifdef USE_ALPHAMAP\n\n	diffuseColor.a *= texture2D( alphaMap, vUv ).g;\n\n#endif\n",i.ShaderChunk.alphamap_pars_fragment="#ifdef USE_ALPHAMAP\n\n	uniform sampler2D alphaMap;\n\n#endif\n",i.ShaderChunk.alphatest_fragment="#ifdef ALPHATEST\n\n	if ( diffuseColor.a < ALPHATEST ) discard;\n\n#endif\n",i.ShaderChunk.aomap_fragment="#ifdef USE_AOMAP\n\n	totalAmbientLight *= ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\n#endif\n",i.ShaderChunk.aomap_pars_fragment="#ifdef USE_AOMAP\n\n	uniform sampler2D aoMap;\n	uniform float aoMapIntensity;\n\n#endif",i.ShaderChunk.begin_vertex="\nvec3 transformed = vec3( position );\n",i.ShaderChunk.beginnormal_vertex="\nvec3 objectNormal = vec3( normal );\n",i.ShaderChunk.bumpmap_pars_fragment="#ifdef USE_BUMPMAP\n\n	uniform sampler2D bumpMap;\n	uniform float bumpScale;\n\n\n\n	vec2 dHdxy_fwd() {\n\n		vec2 dSTdx = dFdx( vUv );\n		vec2 dSTdy = dFdy( vUv );\n\n		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\n		return vec2( dBx, dBy );\n\n	}\n\n	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\n		vec3 vSigmaX = dFdx( surf_pos );\n		vec3 vSigmaY = dFdy( surf_pos );\n		vec3 vN = surf_norm;\n		vec3 R1 = cross( vSigmaY, vN );\n		vec3 R2 = cross( vN, vSigmaX );\n\n		float fDet = dot( vSigmaX, R1 );\n\n		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n		return normalize( abs( fDet ) * surf_norm - vGrad );\n\n	}\n\n#endif\n",i.ShaderChunk.color_fragment="#ifdef USE_COLOR\n\n	diffuseColor.rgb *= vColor;\n\n#endif",i.ShaderChunk.color_pars_fragment="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif\n",i.ShaderChunk.color_pars_vertex="#ifdef USE_COLOR\n\n	varying vec3 vColor;\n\n#endif",i.ShaderChunk.color_vertex="#ifdef USE_COLOR\n\n	vColor.xyz = color.xyz;\n\n#endif",i.ShaderChunk.common="#define PI 3.14159\n#define PI2 6.28318\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\n\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\n\n	return normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\n\n}\n\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\n\n	return normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\n\n}\n\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n	float distance = dot( planeNormal, point - pointOnPlane );\n\n	return - distance * planeNormal + point;\n\n}\n\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n	return sign( dot( point - pointOnPlane, planeNormal ) );\n\n}\n\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\n	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n\n}\n\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\n\n	if ( decayExponent > 0.0 ) {\n\n	  return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\n	}\n\n	return 1.0;\n\n}\n\nvec3 F_Schlick( in vec3 specularColor, in float dotLH ) {\n\n\n	float fresnel = exp2( ( -5.55437 * dotLH - 6.98316 ) * dotLH );\n\n	return ( 1.0 - specularColor ) * fresnel + specularColor;\n\n}\n\nfloat G_BlinnPhong_Implicit( /* in float dotNL, in float dotNV */ ) {\n\n\n	return 0.25;\n\n}\n\nfloat D_BlinnPhong( in float shininess, in float dotNH ) {\n\n\n	return ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n\n}\n\nvec3 BRDF_BlinnPhong( in vec3 specularColor, in float shininess, in vec3 normal, in vec3 lightDir, in vec3 viewDir ) {\n\n	vec3 halfDir = normalize( lightDir + viewDir );\n\n	float dotNH = saturate( dot( normal, halfDir ) );\n	float dotLH = saturate( dot( lightDir, halfDir ) );\n\n	vec3 F = F_Schlick( specularColor, dotLH );\n\n	float G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );\n\n	float D = D_BlinnPhong( shininess, dotNH );\n\n	return F * G * D;\n\n}\n\nvec3 inputToLinear( in vec3 a ) {\n\n	#ifdef GAMMA_INPUT\n\n		return pow( a, vec3( float( GAMMA_FACTOR ) ) );\n\n	#else\n\n		return a;\n\n	#endif\n\n}\n\nvec3 linearToOutput( in vec3 a ) {\n\n	#ifdef GAMMA_OUTPUT\n\n		return pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\n\n	#else\n\n		return a;\n\n	#endif\n\n}\n",i.ShaderChunk.defaultnormal_vertex="#ifdef FLIP_SIDED\n\n	objectNormal = -objectNormal;\n\n#endif\n\nvec3 transformedNormal = normalMatrix * objectNormal;\n",i.ShaderChunk.displacementmap_vertex="#ifdef USE_DISPLACEMENTMAP\n\n	transformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\n\n#endif\n",i.ShaderChunk.displacementmap_pars_vertex="#ifdef USE_DISPLACEMENTMAP\n\n	uniform sampler2D displacementMap;\n	uniform float displacementScale;\n	uniform float displacementBias;\n\n#endif\n",i.ShaderChunk.emissivemap_fragment="#ifdef USE_EMISSIVEMAP\n\n	vec4 emissiveColor = texture2D( emissiveMap, vUv );\n\n	emissiveColor.rgb = inputToLinear( emissiveColor.rgb );\n\n	totalEmissiveLight *= emissiveColor.rgb;\n\n#endif\n",i.ShaderChunk.emissivemap_pars_fragment="#ifdef USE_EMISSIVEMAP\n\n	uniform sampler2D emissiveMap;\n\n#endif\n",i.ShaderChunk.envmap_fragment="#ifdef USE_ENVMAP\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\n\n		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\n		#ifdef ENVMAP_MODE_REFLECTION\n\n			vec3 reflectVec = reflect( cameraToVertex, worldNormal );\n\n		#else\n\n			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\n\n		#endif\n\n	#else\n\n		vec3 reflectVec = vReflect;\n\n	#endif\n\n	#ifdef DOUBLE_SIDED\n		float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n	#else\n		float flipNormal = 1.0;\n	#endif\n\n	#ifdef ENVMAP_TYPE_CUBE\n		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\n	#elif defined( ENVMAP_TYPE_EQUIREC )\n		vec2 sampleUV;\n		sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\n		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n		vec4 envColor = texture2D( envMap, sampleUV );\n\n	#elif defined( ENVMAP_TYPE_SPHERE )\n		vec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\n		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n	#endif\n\n	envColor.xyz = inputToLinear( envColor.xyz );\n\n	#ifdef ENVMAP_BLENDING_MULTIPLY\n\n		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_MIX )\n\n		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\n	#elif defined( ENVMAP_BLENDING_ADD )\n\n		outgoingLight += envColor.xyz * specularStrength * reflectivity;\n\n	#endif\n\n#endif\n",i.ShaderChunk.envmap_pars_fragment="#ifdef USE_ENVMAP\n\n	uniform float reflectivity;\n	#ifdef ENVMAP_TYPE_CUBE\n		uniform samplerCube envMap;\n	#else\n		uniform sampler2D envMap;\n	#endif\n	uniform float flipEnvMap;\n\n	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\n		uniform float refractionRatio;\n\n	#else\n\n		varying vec3 vReflect;\n\n	#endif\n\n#endif\n",i.ShaderChunk.envmap_pars_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	varying vec3 vReflect;\n\n	uniform float refractionRatio;\n\n#endif\n",i.ShaderChunk.envmap_vertex="#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\n\n	vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\n	vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\n	#ifdef ENVMAP_MODE_REFLECTION\n\n		vReflect = reflect( cameraToVertex, worldNormal );\n\n	#else\n\n		vReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\n	#endif\n\n#endif\n",i.ShaderChunk.fog_fragment="#ifdef USE_FOG\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		float depth = gl_FragDepthEXT / gl_FragCoord.w;\n\n	#else\n\n		float depth = gl_FragCoord.z / gl_FragCoord.w;\n\n	#endif\n\n	#ifdef FOG_EXP2\n\n		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\n\n	#else\n\n		float fogFactor = smoothstep( fogNear, fogFar, depth );\n\n	#endif\n	\n	outgoingLight = mix( outgoingLight, fogColor, fogFactor );\n\n#endif",i.ShaderChunk.fog_pars_fragment="#ifdef USE_FOG\n\n	uniform vec3 fogColor;\n\n	#ifdef FOG_EXP2\n\n		uniform float fogDensity;\n\n	#else\n\n		uniform float fogNear;\n		uniform float fogFar;\n	#endif\n\n#endif",i.ShaderChunk.hemilight_fragment="#if MAX_HEMI_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec3 lightDir = hemisphereLightDirection[ i ];\n\n		float dotProduct = dot( normal, lightDir );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vec3 lightColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		totalAmbientLight += lightColor;\n\n	}\n\n#endif\n\n",i.ShaderChunk.lightmap_fragment="#ifdef USE_LIGHTMAP\n\n	totalAmbientLight += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\n\n#endif\n",i.ShaderChunk.lightmap_pars_fragment="#ifdef USE_LIGHTMAP\n\n	uniform sampler2D lightMap;\n	uniform float lightMapIntensity;\n\n#endif",i.ShaderChunk.lights_lambert_pars_vertex="#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n",
i.ShaderChunk.lights_lambert_vertex="vLightFront = vec3( 0.0 );\n\n#ifdef DOUBLE_SIDED\n\n	vLightBack = vec3( 0.0 );\n\n#endif\n\nvec3 normal = normalize( transformedNormal );\n\n#if MAX_POINT_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec3 lightColor = pointLightColor[ i ];\n\n		vec3 lVector = pointLightPosition[ i ] - mvPosition.xyz;\n		vec3 lightDir = normalize( lVector );\n\n\n		float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\n		float dotProduct = dot( normal, lightDir );\n\n		vLightFront += lightColor * attenuation * saturate( dotProduct );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += lightColor * attenuation * saturate( - dotProduct );\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec3 lightColor = spotLightColor[ i ];\n\n		vec3 lightPosition = spotLightPosition[ i ];\n		vec3 lVector = lightPosition - mvPosition.xyz;\n		vec3 lightDir = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], lightDir );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\n\n\n			float attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n			attenuation *= spotEffect;\n\n\n			float dotProduct = dot( normal, lightDir );\n\n			vLightFront += lightColor * attenuation * saturate( dotProduct );\n\n			#ifdef DOUBLE_SIDED\n\n				vLightBack += lightColor * attenuation * saturate( - dotProduct );\n\n			#endif\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec3 lightColor = directionalLightColor[ i ];\n\n		vec3 lightDir = directionalLightDirection[ i ];\n\n\n		float dotProduct = dot( normal, lightDir );\n\n		vLightFront += lightColor * saturate( dotProduct );\n\n		#ifdef DOUBLE_SIDED\n\n			vLightBack += lightColor * saturate( - dotProduct );\n\n		#endif\n\n	}\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\n\n		vec3 lightDir = hemisphereLightDirection[ i ];\n\n\n		float dotProduct = dot( normal, lightDir );\n\n		float hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\n\n		vLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n\n		#ifdef DOUBLE_SIDED\n\n			float hemiDiffuseWeightBack = - 0.5 * dotProduct + 0.5;\n\n			vLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n\n		#endif\n\n	}\n\n#endif\n",i.ShaderChunk.lights_phong_fragment="vec3 viewDir = normalize( vViewPosition );\n\nvec3 totalDiffuseLight = vec3( 0.0 );\nvec3 totalSpecularLight = vec3( 0.0 );\n\n#if MAX_POINT_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n\n		vec3 lightColor = pointLightColor[ i ];\n\n		vec3 lightPosition = pointLightPosition[ i ];\n		vec3 lVector = lightPosition + vViewPosition.xyz;\n		vec3 lightDir = normalize( lVector );\n\n\n		float attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\n\n\n		float cosineTerm = saturate( dot( normal, lightDir ) );\n\n		totalDiffuseLight += lightColor * attenuation * cosineTerm;\n\n\n		vec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n		totalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\n\n\n	}\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n\n		vec3 lightColor = spotLightColor[ i ];\n\n		vec3 lightPosition = spotLightPosition[ i ];\n		vec3 lVector = lightPosition + vViewPosition.xyz;\n		vec3 lightDir = normalize( lVector );\n\n		float spotEffect = dot( spotLightDirection[ i ], lightDir );\n\n		if ( spotEffect > spotLightAngleCos[ i ] ) {\n\n			spotEffect = saturate( pow( saturate( spotEffect ), spotLightExponent[ i ] ) );\n\n\n			float attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\n\n			attenuation *= spotEffect;\n\n\n			float cosineTerm = saturate( dot( normal, lightDir ) );\n\n			totalDiffuseLight += lightColor * attenuation * cosineTerm;\n\n\n			vec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n			totalSpecularLight += brdf * specularStrength * lightColor * attenuation * cosineTerm;\n\n		}\n\n	}\n\n#endif\n\n#if MAX_DIR_LIGHTS > 0\n\n	for ( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\n\n		vec3 lightColor = directionalLightColor[ i ];\n\n		vec3 lightDir = directionalLightDirection[ i ];\n\n\n		float cosineTerm = saturate( dot( normal, lightDir ) );\n\n		totalDiffuseLight += lightColor * cosineTerm;\n\n\n		vec3 brdf = BRDF_BlinnPhong( specular, shininess, normal, lightDir, viewDir );\n\n		totalSpecularLight += brdf * specularStrength * lightColor * cosineTerm;\n\n	}\n\n#endif\n",i.ShaderChunk.lights_phong_pars_fragment="uniform vec3 ambientLightColor;\n\n#if MAX_DIR_LIGHTS > 0\n\n	uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\n	uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n\n#endif\n\n#if MAX_HEMI_LIGHTS > 0\n\n	uniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\n	uniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n	uniform float pointLightDecay[ MAX_POINT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0\n\n	uniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\n	uniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n	uniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\n\n#endif\n\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\nvarying vec3 vViewPosition;\n\n#ifndef FLAT_SHADED\n\n	varying vec3 vNormal;\n\n#endif\n",i.ShaderChunk.lights_phong_pars_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n	varying vec3 vWorldPosition;\n\n#endif\n\n#if MAX_POINT_LIGHTS > 0\n\n	uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n\n#endif\n",i.ShaderChunk.lights_phong_vertex="#if MAX_SPOT_LIGHTS > 0 || defined( USE_ENVMAP )\n\n	vWorldPosition = worldPosition.xyz;\n\n#endif\n",i.ShaderChunk.linear_to_gamma_fragment="\n	outgoingLight = linearToOutput( outgoingLight );\n",i.ShaderChunk.logdepthbuf_fragment="#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\n\n	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\n\n#endif",i.ShaderChunk.logdepthbuf_pars_fragment="#ifdef USE_LOGDEPTHBUF\n\n	uniform float logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n#endif\n",i.ShaderChunk.logdepthbuf_pars_vertex="#ifdef USE_LOGDEPTHBUF\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		varying float vFragDepth;\n\n	#endif\n\n	uniform float logDepthBufFC;\n\n#endif",i.ShaderChunk.logdepthbuf_vertex="#ifdef USE_LOGDEPTHBUF\n\n	gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\n\n	#ifdef USE_LOGDEPTHBUF_EXT\n\n		vFragDepth = 1.0 + gl_Position.w;\n\n#else\n\n		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\n\n	#endif\n\n#endif",i.ShaderChunk.map_fragment="#ifdef USE_MAP\n\n	vec4 texelColor = texture2D( map, vUv );\n\n	texelColor.xyz = inputToLinear( texelColor.xyz );\n\n	diffuseColor *= texelColor;\n\n#endif\n",i.ShaderChunk.map_pars_fragment="#ifdef USE_MAP\n\n	uniform sampler2D map;\n\n#endif",i.ShaderChunk.map_particle_fragment="#ifdef USE_MAP\n\n	diffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\n\n#endif\n",i.ShaderChunk.map_particle_pars_fragment="#ifdef USE_MAP\n\n	uniform vec4 offsetRepeat;\n	uniform sampler2D map;\n\n#endif\n",i.ShaderChunk.morphnormal_vertex="#ifdef USE_MORPHNORMALS\n\n	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\n	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\n	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\n	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\n\n#endif\n",i.ShaderChunk.morphtarget_pars_vertex="#ifdef USE_MORPHTARGETS\n\n	#ifndef USE_MORPHNORMALS\n\n	uniform float morphTargetInfluences[ 8 ];\n\n	#else\n\n	uniform float morphTargetInfluences[ 4 ];\n\n	#endif\n\n#endif",i.ShaderChunk.morphtarget_vertex="#ifdef USE_MORPHTARGETS\n\n	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\n	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\n	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\n	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n\n	#ifndef USE_MORPHNORMALS\n\n	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\n	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\n	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\n	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n\n	#endif\n\n#endif\n",i.ShaderChunk.normal_phong_fragment="#ifndef FLAT_SHADED\n\n	vec3 normal = normalize( vNormal );\n\n	#ifdef DOUBLE_SIDED\n\n		normal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n\n	#endif\n\n#else\n\n	vec3 fdx = dFdx( vViewPosition );\n	vec3 fdy = dFdy( vViewPosition );\n	vec3 normal = normalize( cross( fdx, fdy ) );\n\n#endif\n\n#ifdef USE_NORMALMAP\n\n	normal = perturbNormal2Arb( -vViewPosition, normal );\n\n#elif defined( USE_BUMPMAP )\n\n	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n\n#endif\n\n",i.ShaderChunk.normalmap_pars_fragment="#ifdef USE_NORMALMAP\n\n	uniform sampler2D normalMap;\n	uniform vec2 normalScale;\n\n\n	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\n\n		vec3 q0 = dFdx( eye_pos.xyz );\n		vec3 q1 = dFdy( eye_pos.xyz );\n		vec2 st0 = dFdx( vUv.st );\n		vec2 st1 = dFdy( vUv.st );\n\n		vec3 S = normalize( q0 * st1.t - q1 * st0.t );\n		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );\n		vec3 N = normalize( surf_norm );\n\n		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n		mapN.xy = normalScale * mapN.xy;\n		mat3 tsn = mat3( S, T, N );\n		return normalize( tsn * mapN );\n\n	}\n\n#endif\n",i.ShaderChunk.project_vertex="#ifdef USE_SKINNING\n\n	vec4 mvPosition = modelViewMatrix * skinned;\n\n#else\n\n	vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\n\n#endif\n\ngl_Position = projectionMatrix * mvPosition;\n",i.ShaderChunk.shadowmap_fragment="#ifdef USE_SHADOWMAP\n\n	for ( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n		float texelSizeY =  1.0 / shadowMapSize[ i ].y;\n\n		float shadow = 0.0;\n\n#if defined( POINT_LIGHT_SHADOWS )\n\n		bool isPointLight = shadowDarkness[ i ] < 0.0;\n\n		if ( isPointLight ) {\n\n			float realShadowDarkness = abs( shadowDarkness[ i ] );\n\n			vec3 lightToPosition = vShadowCoord[ i ].xyz;\n\n	#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n			vec3 bd3D = normalize( lightToPosition );\n			float dp = length( lightToPosition );\n\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n\n	#if defined( SHADOWMAP_TYPE_PCF )\n			const float Dr = 1.25;\n	#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n			const float Dr = 2.25;\n	#endif\n\n			float os = Dr *  2.0 * texelSizeY;\n\n			const vec3 Gsd = vec3( - 1, 0, 1 );\n\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xxy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xzy * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.zyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.xyx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxz * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yxx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D + Gsd.yzx * os, texelSizeY ) ), shadowBias[ i ], shadow );\n\n			shadow *= realShadowDarkness * ( 1.0 / 21.0 );\n\n	#else \n			vec3 bd3D = normalize( lightToPosition );\n			float dp = length( lightToPosition );\n\n			adjustShadowValue1K( dp, texture2D( shadowMap[ i ], cubeToUV( bd3D, texelSizeY ) ), shadowBias[ i ], shadow );\n\n			shadow *= realShadowDarkness;\n\n	#endif\n\n		} else {\n\n#endif \n			float texelSizeX =  1.0 / shadowMapSize[ i ].x;\n\n			vec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\n\n\n			bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n			bool inFrustum = all( inFrustumVec );\n\n			bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\n			bool frustumTest = all( frustumTestVec );\n\n			if ( frustumTest ) {\n\n	#if defined( SHADOWMAP_TYPE_PCF )\n\n\n				/*\n					for ( float y = -1.25; y <= 1.25; y += 1.25 )\n						for ( float x = -1.25; x <= 1.25; x += 1.25 ) {\n							vec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\n							float fDepth = unpackDepth( rgbaDepth );\n							if ( fDepth < shadowCoord.z )\n								shadow += 1.0;\n					}\n					shadow /= 9.0;\n				*/\n\n				shadowCoord.z += shadowBias[ i ];\n\n				const float ShadowDelta = 1.0 / 9.0;\n\n				float xPixelOffset = texelSizeX;\n				float yPixelOffset = texelSizeY;\n\n				float dx0 = - 1.25 * xPixelOffset;\n				float dy0 = - 1.25 * yPixelOffset;\n				float dx1 = 1.25 * xPixelOffset;\n				float dy1 = 1.25 * yPixelOffset;\n\n				float fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n				fDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n				if ( fDepth < shadowCoord.z ) shadow += ShadowDelta;\n\n				shadow *= shadowDarkness[ i ];\n\n	#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\n\n				shadowCoord.z += shadowBias[ i ];\n\n				float xPixelOffset = texelSizeX;\n				float yPixelOffset = texelSizeY;\n\n				float dx0 = - 1.0 * xPixelOffset;\n				float dy0 = - 1.0 * yPixelOffset;\n				float dx1 = 1.0 * xPixelOffset;\n				float dy1 = 1.0 * yPixelOffset;\n\n				mat3 shadowKernel;\n				mat3 depthKernel;\n\n				depthKernel[ 0 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\n				depthKernel[ 0 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\n				depthKernel[ 0 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\n				depthKernel[ 1 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\n				depthKernel[ 1 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\n				depthKernel[ 1 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\n				depthKernel[ 2 ][ 0 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\n				depthKernel[ 2 ][ 1 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\n				depthKernel[ 2 ][ 2 ] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\n\n				vec3 shadowZ = vec3( shadowCoord.z );\n				shadowKernel[ 0 ] = vec3( lessThan( depthKernel[ 0 ], shadowZ ) );\n				shadowKernel[ 0 ] *= vec3( 0.25 );\n\n				shadowKernel[ 1 ] = vec3( lessThan( depthKernel[ 1 ], shadowZ ) );\n				shadowKernel[ 1 ] *= vec3( 0.25 );\n\n				shadowKernel[ 2 ] = vec3( lessThan( depthKernel[ 2 ], shadowZ ) );\n				shadowKernel[ 2 ] *= vec3( 0.25 );\n\n				vec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[ i ].xy );\n\n				shadowKernel[ 0 ] = mix( shadowKernel[ 1 ], shadowKernel[ 0 ], fractionalCoord.x );\n				shadowKernel[ 1 ] = mix( shadowKernel[ 2 ], shadowKernel[ 1 ], fractionalCoord.x );\n\n				vec4 shadowValues;\n				shadowValues.x = mix( shadowKernel[ 0 ][ 1 ], shadowKernel[ 0 ][ 0 ], fractionalCoord.y );\n				shadowValues.y = mix( shadowKernel[ 0 ][ 2 ], shadowKernel[ 0 ][ 1 ], fractionalCoord.y );\n				shadowValues.z = mix( shadowKernel[ 1 ][ 1 ], shadowKernel[ 1 ][ 0 ], fractionalCoord.y );\n				shadowValues.w = mix( shadowKernel[ 1 ][ 2 ], shadowKernel[ 1 ][ 1 ], fractionalCoord.y );\n\n				shadow = dot( shadowValues, vec4( 1.0 ) ) * shadowDarkness[ i ];\n\n	#else \n				shadowCoord.z += shadowBias[ i ];\n\n				vec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\n				float fDepth = unpackDepth( rgbaDepth );\n\n				if ( fDepth < shadowCoord.z )\n					shadow = shadowDarkness[ i ];\n\n	#endif\n\n			}\n\n#ifdef SHADOWMAP_DEBUG\n\n			if ( inFrustum ) {\n\n				if ( i == 0 ) {\n\n					outgoingLight *= vec3( 1.0, 0.5, 0.0 );\n\n				} else if ( i == 1 ) {\n\n					outgoingLight *= vec3( 0.0, 1.0, 0.8 );\n\n				} else {\n\n					outgoingLight *= vec3( 0.0, 0.5, 1.0 );\n\n				}\n\n			}\n\n#endif\n\n#if defined( POINT_LIGHT_SHADOWS )\n\n		}\n\n#endif\n\n		shadowMask = shadowMask * vec3( 1.0 - shadow );\n\n	}\n\n#endif\n",i.ShaderChunk.shadowmap_pars_fragment="#ifdef USE_SHADOWMAP\n\n	uniform sampler2D shadowMap[ MAX_SHADOWS ];\n	uniform vec2 shadowMapSize[ MAX_SHADOWS ];\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform float shadowBias[ MAX_SHADOWS ];\n\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n	float unpackDepth( const in vec4 rgba_depth ) {\n\n		const vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n		float depth = dot( rgba_depth, bit_shift );\n		return depth;\n\n	}\n\n	#if defined(POINT_LIGHT_SHADOWS)\n\n\n		void adjustShadowValue1K( const float testDepth, const vec4 textureData, const float bias, inout float shadowValue ) {\n\n			const vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\n			if ( testDepth >= dot( textureData, bitSh ) * 1000.0 + bias )\n				shadowValue += 1.0;\n\n		}\n\n\n		vec2 cubeToUV( vec3 v, float texelSizeY ) {\n\n\n			vec3 absV = abs( v );\n\n\n			float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n			absV *= scaleToCube;\n\n\n			v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\n\n\n			vec2 planar = v.xy;\n\n			float almostATexel = 1.5 * texelSizeY;\n			float almostOne = 1.0 - almostATexel;\n\n			if ( absV.z >= almostOne ) {\n\n				if ( v.z > 0.0 )\n					planar.x = 4.0 - v.x;\n\n			} else if ( absV.x >= almostOne ) {\n\n				float signX = sign( v.x );\n				planar.x = v.z * signX + 2.0 * signX;\n\n			} else if ( absV.y >= almostOne ) {\n\n				float signY = sign( v.y );\n				planar.x = v.x + 2.0 * signY + 2.0;\n				planar.y = v.z * signY - 2.0;\n\n			}\n\n\n			return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\n		}\n\n	#endif\n\n#endif\n",i.ShaderChunk.shadowmap_pars_vertex="#ifdef USE_SHADOWMAP\n\n	uniform float shadowDarkness[ MAX_SHADOWS ];\n	uniform mat4 shadowMatrix[ MAX_SHADOWS ];\n	varying vec4 vShadowCoord[ MAX_SHADOWS ];\n\n#endif",i.ShaderChunk.shadowmap_vertex="#ifdef USE_SHADOWMAP\n\n	for ( int i = 0; i < MAX_SHADOWS; i ++ ) {\n\n			vShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n\n	}\n\n#endif",i.ShaderChunk.skinbase_vertex="#ifdef USE_SKINNING\n\n	mat4 boneMatX = getBoneMatrix( skinIndex.x );\n	mat4 boneMatY = getBoneMatrix( skinIndex.y );\n	mat4 boneMatZ = getBoneMatrix( skinIndex.z );\n	mat4 boneMatW = getBoneMatrix( skinIndex.w );\n\n#endif",i.ShaderChunk.skinning_pars_vertex="#ifdef USE_SKINNING\n\n	uniform mat4 bindMatrix;\n	uniform mat4 bindMatrixInverse;\n\n	#ifdef BONE_TEXTURE\n\n		uniform sampler2D boneTexture;\n		uniform int boneTextureWidth;\n		uniform int boneTextureHeight;\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			float j = i * 4.0;\n			float x = mod( j, float( boneTextureWidth ) );\n			float y = floor( j / float( boneTextureWidth ) );\n\n			float dx = 1.0 / float( boneTextureWidth );\n			float dy = 1.0 / float( boneTextureHeight );\n\n			y = dy * ( y + 0.5 );\n\n			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\n			mat4 bone = mat4( v1, v2, v3, v4 );\n\n			return bone;\n\n		}\n\n	#else\n\n		uniform mat4 boneGlobalMatrices[ MAX_BONES ];\n\n		mat4 getBoneMatrix( const in float i ) {\n\n			mat4 bone = boneGlobalMatrices[ int(i) ];\n			return bone;\n\n		}\n\n	#endif\n\n#endif\n",i.ShaderChunk.skinning_vertex="#ifdef USE_SKINNING\n\n	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\n	vec4 skinned = vec4( 0.0 );\n	skinned += boneMatX * skinVertex * skinWeight.x;\n	skinned += boneMatY * skinVertex * skinWeight.y;\n	skinned += boneMatZ * skinVertex * skinWeight.z;\n	skinned += boneMatW * skinVertex * skinWeight.w;\n	skinned  = bindMatrixInverse * skinned;\n\n#endif\n",i.ShaderChunk.skinnormal_vertex="#ifdef USE_SKINNING\n\n	mat4 skinMatrix = mat4( 0.0 );\n	skinMatrix += skinWeight.x * boneMatX;\n	skinMatrix += skinWeight.y * boneMatY;\n	skinMatrix += skinWeight.z * boneMatZ;\n	skinMatrix += skinWeight.w * boneMatW;\n	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\n	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\n#endif\n",i.ShaderChunk.specularmap_fragment="float specularStrength;\n\n#ifdef USE_SPECULARMAP\n\n	vec4 texelSpecular = texture2D( specularMap, vUv );\n	specularStrength = texelSpecular.r;\n\n#else\n\n	specularStrength = 1.0;\n\n#endif",i.ShaderChunk.specularmap_pars_fragment="#ifdef USE_SPECULARMAP\n\n	uniform sampler2D specularMap;\n\n#endif",i.ShaderChunk.uv2_pars_fragment="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n	varying vec2 vUv2;\n\n#endif",i.ShaderChunk.uv2_pars_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n	attribute vec2 uv2;\n	varying vec2 vUv2;\n\n#endif",i.ShaderChunk.uv2_vertex="#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\n	vUv2 = uv2;\n\n#endif",i.ShaderChunk.uv_pars_fragment="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n	varying vec2 vUv;\n\n#endif",i.ShaderChunk.uv_pars_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n	varying vec2 vUv;\n	uniform vec4 offsetRepeat;\n\n#endif\n",i.ShaderChunk.uv_vertex="#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP )\n\n	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n\n#endif",i.ShaderChunk.worldpos_vertex="#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n\n	#ifdef USE_SKINNING\n\n		vec4 worldPosition = modelMatrix * skinned;\n\n	#else\n\n		vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\n\n	#endif\n\n#endif\n",i.UniformsUtils={merge:function(e){for(var t={},n=0;n<e.length;n++){var r=this.clone(e[n]);for(var i in r)t[i]=r[i]}return t},clone:function(e){var t={};for(var n in e){t[n]={};for(var r in e[n]){var a=e[n][r];a instanceof i.Color||a instanceof i.Vector2||a instanceof i.Vector3||a instanceof i.Vector4||a instanceof i.Matrix3||a instanceof i.Matrix4||a instanceof i.Texture?t[n][r]=a.clone():Array.isArray(a)?t[n][r]=a.slice():t[n][r]=a}}return t}},i.UniformsLib={common:{diffuse:{type:"c",value:new i.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new i.Vector4(0,0,1,1)},specularMap:{type:"t",value:null},alphaMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98}},aomap:{aoMap:{type:"t",value:null},aoMapIntensity:{type:"f",value:1}},lightmap:{lightMap:{type:"t",value:null},lightMapIntensity:{type:"f",value:1}},emissivemap:{emissiveMap:{type:"t",value:null}},bumpmap:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new i.Vector2(1,1)}},displacementmap:{displacementMap:{type:"t",value:null},displacementScale:{type:"f",value:1},displacementBias:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new i.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},pointLightDecay:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]},spotLightDecay:{type:"fv1",value:[]}},points:{psColor:{type:"c",value:new i.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new i.Vector4(0,0,1,1)},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new i.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},i.ShaderLib={basic:{uniforms:i.UniformsUtils.merge([i.UniformsLib.common,i.UniformsLib.aomap,i.UniformsLib.fog,i.UniformsLib.shadowmap]),vertexShader:[i.ShaderChunk.common,i.ShaderChunk.uv_pars_vertex,i.ShaderChunk.uv2_pars_vertex,i.ShaderChunk.envmap_pars_vertex,i.ShaderChunk.color_pars_vertex,i.ShaderChunk.morphtarget_pars_vertex,i.ShaderChunk.skinning_pars_vertex,i.ShaderChunk.shadowmap_pars_vertex,i.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",i.ShaderChunk.uv_vertex,i.ShaderChunk.uv2_vertex,i.ShaderChunk.color_vertex,i.ShaderChunk.skinbase_vertex,"	#ifdef USE_ENVMAP",i.ShaderChunk.beginnormal_vertex,i.ShaderChunk.morphnormal_vertex,i.ShaderChunk.skinnormal_vertex,i.ShaderChunk.defaultnormal_vertex,"	#endif",i.ShaderChunk.begin_vertex,i.ShaderChunk.morphtarget_vertex,i.ShaderChunk.skinning_vertex,i.ShaderChunk.project_vertex,i.ShaderChunk.logdepthbuf_vertex,i.ShaderChunk.worldpos_vertex,i.ShaderChunk.envmap_vertex,i.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",i.ShaderChunk.common,i.ShaderChunk.color_pars_fragment,i.ShaderChunk.uv_pars_fragment,i.ShaderChunk.uv2_pars_fragment,i.ShaderChunk.map_pars_fragment,i.ShaderChunk.alphamap_pars_fragment,i.ShaderChunk.aomap_pars_fragment,i.ShaderChunk.envmap_pars_fragment,i.ShaderChunk.fog_pars_fragment,i.ShaderChunk.shadowmap_pars_fragment,i.ShaderChunk.specularmap_pars_fragment,i.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );","	vec3 totalAmbientLight = vec3( 1.0 );","	vec3 shadowMask = vec3( 1.0 );",i.ShaderChunk.logdepthbuf_fragment,i.ShaderChunk.map_fragment,i.ShaderChunk.color_fragment,i.ShaderChunk.alphamap_fragment,i.ShaderChunk.alphatest_fragment,i.ShaderChunk.specularmap_fragment,i.ShaderChunk.aomap_fragment,i.ShaderChunk.shadowmap_fragment,"	outgoingLight = diffuseColor.rgb * totalAmbientLight * shadowMask;",i.ShaderChunk.envmap_fragment,i.ShaderChunk.linear_to_gamma_fragment,i.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},lambert:{uniforms:i.UniformsUtils.merge([i.UniformsLib.common,i.UniformsLib.fog,i.UniformsLib.lights,i.UniformsLib.shadowmap,{emissive:{type:"c",value:new i.Color(0)}}]),vertexShader:["#define LAMBERT","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",i.ShaderChunk.common,i.ShaderChunk.uv_pars_vertex,i.ShaderChunk.uv2_pars_vertex,i.ShaderChunk.envmap_pars_vertex,i.ShaderChunk.lights_lambert_pars_vertex,i.ShaderChunk.color_pars_vertex,i.ShaderChunk.morphtarget_pars_vertex,i.ShaderChunk.skinning_pars_vertex,i.ShaderChunk.shadowmap_pars_vertex,i.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",i.ShaderChunk.uv_vertex,i.ShaderChunk.uv2_vertex,i.ShaderChunk.color_vertex,i.ShaderChunk.beginnormal_vertex,i.ShaderChunk.morphnormal_vertex,i.ShaderChunk.skinbase_vertex,i.ShaderChunk.skinnormal_vertex,i.ShaderChunk.defaultnormal_vertex,i.ShaderChunk.begin_vertex,i.ShaderChunk.morphtarget_vertex,i.ShaderChunk.skinning_vertex,i.ShaderChunk.project_vertex,i.ShaderChunk.logdepthbuf_vertex,i.ShaderChunk.worldpos_vertex,i.ShaderChunk.envmap_vertex,i.ShaderChunk.lights_lambert_vertex,i.ShaderChunk.shadowmap_vertex,"}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;","uniform vec3 emissive;","uniform float opacity;","uniform vec3 ambientLightColor;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","	varying vec3 vLightBack;","#endif",i.ShaderChunk.common,i.ShaderChunk.color_pars_fragment,i.ShaderChunk.uv_pars_fragment,i.ShaderChunk.uv2_pars_fragment,i.ShaderChunk.map_pars_fragment,i.ShaderChunk.alphamap_pars_fragment,i.ShaderChunk.envmap_pars_fragment,i.ShaderChunk.fog_pars_fragment,i.ShaderChunk.shadowmap_pars_fragment,i.ShaderChunk.specularmap_pars_fragment,i.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );","	vec3 totalAmbientLight = ambientLightColor;","	vec3 shadowMask = vec3( 1.0 );",i.ShaderChunk.logdepthbuf_fragment,i.ShaderChunk.map_fragment,i.ShaderChunk.color_fragment,i.ShaderChunk.alphamap_fragment,i.ShaderChunk.alphatest_fragment,i.ShaderChunk.specularmap_fragment,i.ShaderChunk.shadowmap_fragment,"	#ifdef DOUBLE_SIDED","		if ( gl_FrontFacing )","			outgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;","		else","			outgoingLight += diffuseColor.rgb * ( vLightBack * shadowMask + totalAmbientLight ) + emissive;","	#else","		outgoingLight += diffuseColor.rgb * ( vLightFront * shadowMask + totalAmbientLight ) + emissive;","	#endif",i.ShaderChunk.envmap_fragment,i.ShaderChunk.linear_to_gamma_fragment,i.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},phong:{uniforms:i.UniformsUtils.merge([i.UniformsLib.common,i.UniformsLib.aomap,i.UniformsLib.lightmap,i.UniformsLib.emissivemap,i.UniformsLib.bumpmap,i.UniformsLib.normalmap,i.UniformsLib.displacementmap,i.UniformsLib.fog,i.UniformsLib.lights,i.UniformsLib.shadowmap,{emissive:{type:"c",value:new i.Color(0)},specular:{type:"c",value:new i.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["#define PHONG","varying vec3 vViewPosition;","#ifndef FLAT_SHADED","	varying vec3 vNormal;","#endif",i.ShaderChunk.common,i.ShaderChunk.uv_pars_vertex,i.ShaderChunk.uv2_pars_vertex,i.ShaderChunk.displacementmap_pars_vertex,i.ShaderChunk.envmap_pars_vertex,i.ShaderChunk.lights_phong_pars_vertex,i.ShaderChunk.color_pars_vertex,i.ShaderChunk.morphtarget_pars_vertex,i.ShaderChunk.skinning_pars_vertex,i.ShaderChunk.shadowmap_pars_vertex,i.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",i.ShaderChunk.uv_vertex,i.ShaderChunk.uv2_vertex,i.ShaderChunk.color_vertex,i.ShaderChunk.beginnormal_vertex,i.ShaderChunk.morphnormal_vertex,i.ShaderChunk.skinbase_vertex,i.ShaderChunk.skinnormal_vertex,i.ShaderChunk.defaultnormal_vertex,"#ifndef FLAT_SHADED","	vNormal = normalize( transformedNormal );","#endif",i.ShaderChunk.begin_vertex,i.ShaderChunk.displacementmap_vertex,i.ShaderChunk.morphtarget_vertex,i.ShaderChunk.skinning_vertex,i.ShaderChunk.project_vertex,i.ShaderChunk.logdepthbuf_vertex,"	vViewPosition = - mvPosition.xyz;",i.ShaderChunk.worldpos_vertex,i.ShaderChunk.envmap_vertex,i.ShaderChunk.lights_phong_vertex,i.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["#define PHONG","uniform vec3 diffuse;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;","uniform float opacity;",i.ShaderChunk.common,i.ShaderChunk.color_pars_fragment,i.ShaderChunk.uv_pars_fragment,i.ShaderChunk.uv2_pars_fragment,i.ShaderChunk.map_pars_fragment,i.ShaderChunk.alphamap_pars_fragment,i.ShaderChunk.aomap_pars_fragment,i.ShaderChunk.lightmap_pars_fragment,i.ShaderChunk.emissivemap_pars_fragment,i.ShaderChunk.envmap_pars_fragment,i.ShaderChunk.fog_pars_fragment,i.ShaderChunk.lights_phong_pars_fragment,i.ShaderChunk.shadowmap_pars_fragment,i.ShaderChunk.bumpmap_pars_fragment,i.ShaderChunk.normalmap_pars_fragment,i.ShaderChunk.specularmap_pars_fragment,i.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );","	vec3 totalAmbientLight = ambientLightColor;","	vec3 totalEmissiveLight = emissive;","	vec3 shadowMask = vec3( 1.0 );",i.ShaderChunk.logdepthbuf_fragment,i.ShaderChunk.map_fragment,i.ShaderChunk.color_fragment,i.ShaderChunk.alphamap_fragment,i.ShaderChunk.alphatest_fragment,i.ShaderChunk.specularmap_fragment,i.ShaderChunk.normal_phong_fragment,i.ShaderChunk.lightmap_fragment,i.ShaderChunk.hemilight_fragment,i.ShaderChunk.aomap_fragment,i.ShaderChunk.emissivemap_fragment,i.ShaderChunk.lights_phong_fragment,i.ShaderChunk.shadowmap_fragment,"totalDiffuseLight *= shadowMask;","totalSpecularLight *= shadowMask;","#ifdef METAL","	outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) * specular + totalSpecularLight + totalEmissiveLight;","#else","	outgoingLight += diffuseColor.rgb * ( totalDiffuseLight + totalAmbientLight ) + totalSpecularLight + totalEmissiveLight;","#endif",i.ShaderChunk.envmap_fragment,i.ShaderChunk.linear_to_gamma_fragment,i.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},points:{uniforms:i.UniformsUtils.merge([i.UniformsLib.points,i.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",i.ShaderChunk.common,i.ShaderChunk.color_pars_vertex,i.ShaderChunk.shadowmap_pars_vertex,i.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",i.ShaderChunk.color_vertex,"	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	#ifdef USE_SIZEATTENUATION","		gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","	#else","		gl_PointSize = size;","	#endif","	gl_Position = projectionMatrix * mvPosition;",i.ShaderChunk.logdepthbuf_vertex,i.ShaderChunk.worldpos_vertex,i.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",i.ShaderChunk.common,i.ShaderChunk.color_pars_fragment,i.ShaderChunk.map_particle_pars_fragment,i.ShaderChunk.fog_pars_fragment,i.ShaderChunk.shadowmap_pars_fragment,i.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( psColor, opacity );","	vec3 shadowMask = vec3( 1.0 );",i.ShaderChunk.logdepthbuf_fragment,i.ShaderChunk.map_particle_fragment,i.ShaderChunk.color_fragment,i.ShaderChunk.alphatest_fragment,i.ShaderChunk.shadowmap_fragment,"	outgoingLight = diffuseColor.rgb * shadowMask;",i.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},dashed:{uniforms:i.UniformsUtils.merge([i.UniformsLib.common,i.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;","attribute float lineDistance;","varying float vLineDistance;",i.ShaderChunk.common,i.ShaderChunk.color_pars_vertex,i.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",i.ShaderChunk.color_vertex,"	vLineDistance = scale * lineDistance;","	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","	gl_Position = projectionMatrix * mvPosition;",i.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform float dashSize;","uniform float totalSize;","varying float vLineDistance;",i.ShaderChunk.common,i.ShaderChunk.color_pars_fragment,i.ShaderChunk.fog_pars_fragment,i.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	if ( mod( vLineDistance, totalSize ) > dashSize ) {","		discard;","	}","	vec3 outgoingLight = vec3( 0.0 );","	vec4 diffuseColor = vec4( diffuse, opacity );",i.ShaderChunk.logdepthbuf_fragment,i.ShaderChunk.color_fragment,"	outgoingLight = diffuseColor.rgb;",i.ShaderChunk.fog_fragment,"	gl_FragColor = vec4( outgoingLight, diffuseColor.a );","}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:[i.ShaderChunk.common,i.ShaderChunk.morphtarget_pars_vertex,i.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",i.ShaderChunk.begin_vertex,i.ShaderChunk.morphtarget_vertex,i.ShaderChunk.project_vertex,i.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float mNear;","uniform float mFar;","uniform float opacity;",i.ShaderChunk.common,i.ShaderChunk.logdepthbuf_pars_fragment,"void main() {",i.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		float depth = gl_FragDepthEXT / gl_FragCoord.w;","	#else","		float depth = gl_FragCoord.z / gl_FragCoord.w;","	#endif","	float color = 1.0 - smoothstep( mNear, mFar, depth );","	gl_FragColor = vec4( vec3( color ), opacity );","}"].join("\n")},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:["varying vec3 vNormal;",i.ShaderChunk.common,i.ShaderChunk.morphtarget_pars_vertex,i.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vNormal = normalize( normalMatrix * normal );",i.ShaderChunk.begin_vertex,i.ShaderChunk.morphtarget_vertex,i.ShaderChunk.project_vertex,i.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vNormal;",i.ShaderChunk.common,i.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );",i.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",i.ShaderChunk.common,i.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vWorldPosition = transformDirection( position, modelMatrix );","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",i.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform samplerCube tCube;","uniform float tFlip;","varying vec3 vWorldPosition;",i.ShaderChunk.common,i.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );",i.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},equirect:{uniforms:{tEquirect:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:["varying vec3 vWorldPosition;",i.ShaderChunk.common,i.ShaderChunk.logdepthbuf_pars_vertex,"void main() {","	vWorldPosition = transformDirection( position, modelMatrix );","	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );",i.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:["uniform sampler2D tEquirect;","uniform float tFlip;","varying vec3 vWorldPosition;",i.ShaderChunk.common,i.ShaderChunk.logdepthbuf_pars_fragment,"void main() {","vec3 direction = normalize( vWorldPosition );","vec2 sampleUV;","sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );","sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;","gl_FragColor = texture2D( tEquirect, sampleUV );",i.ShaderChunk.logdepthbuf_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[i.ShaderChunk.common,i.ShaderChunk.morphtarget_pars_vertex,i.ShaderChunk.skinning_pars_vertex,i.ShaderChunk.logdepthbuf_pars_vertex,"void main() {",i.ShaderChunk.skinbase_vertex,i.ShaderChunk.begin_vertex,i.ShaderChunk.morphtarget_vertex,i.ShaderChunk.skinning_vertex,i.ShaderChunk.project_vertex,i.ShaderChunk.logdepthbuf_vertex,"}"].join("\n"),fragmentShader:[i.ShaderChunk.common,i.ShaderChunk.logdepthbuf_pars_fragment,"vec4 pack_depth( const in float depth ) {","	const vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","	const vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","	vec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );","	res -= res.xxyz * bit_mask;","	return res;","}","void main() {",i.ShaderChunk.logdepthbuf_fragment,"	#ifdef USE_LOGDEPTHBUF_EXT","		gl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );","	#else","		gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );","	#endif","}"].join("\n")},distanceRGBA:{uniforms:{lightPos:{type:"v3",value:new i.Vector3(0,0,0)}},vertexShader:["varying vec4 vWorldPosition;",i.ShaderChunk.common,i.ShaderChunk.morphtarget_pars_vertex,i.ShaderChunk.skinning_pars_vertex,"void main() {",i.ShaderChunk.skinbase_vertex,i.ShaderChunk.begin_vertex,i.ShaderChunk.morphtarget_vertex,i.ShaderChunk.skinning_vertex,i.ShaderChunk.project_vertex,i.ShaderChunk.worldpos_vertex,"vWorldPosition = worldPosition;","}"].join("\n"),fragmentShader:["uniform vec3 lightPos;","varying vec4 vWorldPosition;",i.ShaderChunk.common,"vec4 pack1K ( float depth ) {","   depth /= 1000.0;","   const vec4 bitSh = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );","	const vec4 bitMsk = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );","	vec4 res = fract( depth * bitSh );","	res -= res.xxyz * bitMsk;","	return res; ","}","float unpack1K ( vec4 color ) {","	const vec4 bitSh = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );","	return dot( color, bitSh ) * 1000.0;","}","void main () {","	gl_FragColor = pack1K( length( vWorldPosition.xyz - lightPos.xyz ) );","}"].join("\n")}},i.WebGLRenderer=function(e){function t(e,t,n,r){oe===!0&&(e*=r,t*=r,n*=r),Ue.clearColor(e,t,n,r)}function n(){He.init(),Ue.viewport(Te,Ee,Ce,Ae),t(ue.r,ue.g,ue.b,he)}function r(){be=null,Se=null,Me="",we=-1,Oe=!0,He.reset()}function a(e){e.preventDefault(),r(),n(),We.clear()}function o(e){var t=e.target;t.removeEventListener("dispose",o),h(t),Ne.textures--}function s(e){var t=e.target;t.removeEventListener("dispose",s),c(t),Ne.textures--}function u(e){var t=e.target;t.removeEventListener("dispose",u),l(t)}function h(e){var t=We.get(e);if(e.image&&t.__image__webglTextureCube)Ue.deleteTexture(t.__image__webglTextureCube);else{if(void 0===t.__webglInit)return;Ue.deleteTexture(t.__webglTexture)}We["delete"](e)}function c(e){var t=We.get(e),n=We.get(e.texture);if(e&&void 0!==n.__webglTexture){if(Ue.deleteTexture(n.__webglTexture),e instanceof i.WebGLRenderTargetCube)for(var r=0;6>r;r++)Ue.deleteFramebuffer(t.__webglFramebuffer[r]),Ue.deleteRenderbuffer(t.__webglRenderbuffer[r]);else Ue.deleteFramebuffer(t.__webglFramebuffer),Ue.deleteRenderbuffer(t.__webglRenderbuffer);We["delete"](e.texture),We["delete"](e)}}function l(e){p(e),We["delete"](e)}function p(e){var t=We.get(e).program;e.program=void 0,void 0!==t&&qe.releaseProgram(t)}function f(e,t,n,r){var a;if(n instanceof i.InstancedBufferGeometry&&(a=je.get("ANGLE_instanced_arrays"),null===a))return void console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");void 0===r&&(r=0),He.initAttributes();var o=n.attributes,s=t.getAttributes(),u=e.defaultAttributeValues;for(var h in s){var c=s[h];if(c>=0){var l=o[h];if(void 0!==l){var p=l.itemSize,f=Xe.getAttributeBuffer(l);if(l instanceof i.InterleavedBufferAttribute){var d=l.data,m=d.stride,g=l.offset;d instanceof i.InstancedInterleavedBuffer?(He.enableAttributeAndDivisor(c,d.meshPerAttribute,a),void 0===n.maxInstancedCount&&(n.maxInstancedCount=d.meshPerAttribute*d.count)):He.enableAttribute(c),Ue.bindBuffer(Ue.ARRAY_BUFFER,f),Ue.vertexAttribPointer(c,p,Ue.FLOAT,!1,m*d.array.BYTES_PER_ELEMENT,(r*m+g)*d.array.BYTES_PER_ELEMENT)}else l instanceof i.InstancedBufferAttribute?(He.enableAttributeAndDivisor(c,l.meshPerAttribute,a),void 0===n.maxInstancedCount&&(n.maxInstancedCount=l.meshPerAttribute*l.count)):He.enableAttribute(c),Ue.bindBuffer(Ue.ARRAY_BUFFER,f),Ue.vertexAttribPointer(c,p,Ue.FLOAT,!1,0,r*p*4)}else if(void 0!==u){var v=u[h];if(void 0!==v)switch(v.length){case 2:Ue.vertexAttrib2fv(c,v);break;case 3:Ue.vertexAttrib3fv(c,v);break;case 4:Ue.vertexAttrib4fv(c,v);break;default:Ue.vertexAttrib1fv(c,v)}}}}He.disableUnusedAttributes()}function d(e,t){return t[0]-e[0]}function m(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function g(e,t){return e.object.renderOrder!==t.object.renderOrder?e.object.renderOrder-t.object.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function v(e,t,n,r,i){var a,o;n.transparent?(a=fe,o=++de):(a=le,o=++pe);var s=a[o];void 0!==s?(s.id=e.id,s.object=e,s.geometry=t,s.material=n,s.z=Re.z,s.group=i):(s={id:e.id,object:e,geometry:t,material:n,z:Re.z,group:i},a.push(s))}function y(e,t){if(e.visible!==!1){if(0!==(e.channels.mask&t.channels.mask))if(e instanceof i.Light)ce.push(e);else if(e instanceof i.Sprite)ge.push(e);else if(e instanceof i.LensFlare)ve.push(e);else if(e instanceof i.ImmediateRenderObject)ye.sortObjects===!0&&(Re.setFromMatrixPosition(e.matrixWorld),Re.applyProjection(De)),v(e,null,e.material,Re.z,null);else if((e instanceof i.Mesh||e instanceof i.Line||e instanceof i.Points)&&(e instanceof i.SkinnedMesh&&e.skeleton.update(),e.frustumCulled===!1||ke.intersectsObject(e)===!0)){var n=e.material;if(n.visible===!0){ye.sortObjects===!0&&(Re.setFromMatrixPosition(e.matrixWorld),Re.applyProjection(De));var r=Xe.update(e);if(n instanceof i.MeshFaceMaterial)for(var a=r.groups,o=n.materials,s=0,u=a.length;u>s;s++){var h=a[s],c=o[h.materialIndex];c.visible===!0&&v(e,r,c,Re.z,h)}else v(e,r,n,Re.z,null)}}for(var l=e.children,s=0,u=l.length;u>s;s++)y(l[s],t)}}function b(e,t,n,r,a){for(var o=0,s=e.length;s>o;o++){var u=e[o],h=u.object,c=u.geometry,l=void 0===a?u.material:a,p=u.group;if(h.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,h.matrixWorld),h.normalMatrix.getNormalMatrix(h.modelViewMatrix),h instanceof i.ImmediateRenderObject){w(l);var f=S(t,n,r,l,h);Me="",h.render(function(e){ye.renderBufferImmediate(e,f,l)})}else ye.renderBufferDirect(t,n,r,c,l,h,p)}}function x(e,t,n,r){var a=We.get(e),o=qe.getParameters(e,t,n,r),s=qe.getProgramCode(e,o),h=a.program,c=!0;if(void 0===h)e.addEventListener("dispose",u);else if(h.code!==s)p(e);else{if(void 0!==o.shaderID)return;c=!1}if(c){if(o.shaderID){var l=i.ShaderLib[o.shaderID];a.__webglShader={name:e.type,uniforms:i.UniformsUtils.clone(l.uniforms),vertexShader:l.vertexShader,fragmentShader:l.fragmentShader}}else a.__webglShader={name:e.type,uniforms:e.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader};e.__webglShader=a.__webglShader,h=qe.acquireProgram(e,o,s),a.program=h,e.program=h}var f=h.getAttributes();if(e.morphTargets){e.numSupportedMorphTargets=0;for(var d=0;d<ye.maxMorphTargets;d++)f["morphTarget"+d]>=0&&e.numSupportedMorphTargets++}if(e.morphNormals)for(e.numSupportedMorphNormals=0,d=0;d<ye.maxMorphNormals;d++)f["morphNormal"+d]>=0&&e.numSupportedMorphNormals++;a.uniformsList=[];var m=a.program.getUniforms();for(var g in a.__webglShader.uniforms){var v=m[g];v&&a.uniformsList.push([a.__webglShader.uniforms[g],v])}}function w(e){M(e),e.transparent===!0?He.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha):He.setBlending(i.NoBlending),He.setDepthFunc(e.depthFunc),He.setDepthTest(e.depthTest),He.setDepthWrite(e.depthWrite),He.setColorWrite(e.colorWrite),He.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits)}function M(e){e.side!==i.DoubleSide?He.enable(Ue.CULL_FACE):He.disable(Ue.CULL_FACE),He.setFlipSided(e.side===i.BackSide)}function S(e,t,n,r,a){_e=0;var o=We.get(r);(r.needsUpdate||!o.program)&&(x(r,t,n,a),r.needsUpdate=!1);var s=!1,u=!1,h=!1,c=o.program,l=c.getUniforms(),p=o.__webglShader.uniforms;if(c.id!==be&&(Ue.useProgram(c.program),be=c.id,s=!0,u=!0,h=!0),r.id!==we&&(-1===we&&(h=!0),we=r.id,u=!0),(s||e!==Se)&&(Ue.uniformMatrix4fv(l.projectionMatrix,!1,e.projectionMatrix.elements),ze.logarithmicDepthBuffer&&Ue.uniform1f(l.logDepthBufFC,2/(Math.log(e.far+1)/Math.LN2)),e!==Se&&(Se=e),(r instanceof i.ShaderMaterial||r instanceof i.MeshPhongMaterial||r.envMap)&&void 0!==l.cameraPosition&&(Re.setFromMatrixPosition(e.matrixWorld),Ue.uniform3f(l.cameraPosition,Re.x,Re.y,Re.z)),(r instanceof i.MeshPhongMaterial||r instanceof i.MeshLambertMaterial||r instanceof i.MeshBasicMaterial||r instanceof i.ShaderMaterial||r.skinning)&&void 0!==l.viewMatrix&&Ue.uniformMatrix4fv(l.viewMatrix,!1,e.matrixWorldInverse.elements)),r.skinning)if(a.bindMatrix&&void 0!==l.bindMatrix&&Ue.uniformMatrix4fv(l.bindMatrix,!1,a.bindMatrix.elements),a.bindMatrixInverse&&void 0!==l.bindMatrixInverse&&Ue.uniformMatrix4fv(l.bindMatrixInverse,!1,a.bindMatrixInverse.elements),ze.floatVertexTextures&&a.skeleton&&a.skeleton.useVertexTexture){if(void 0!==l.boneTexture){var f=F();Ue.uniform1i(l.boneTexture,f),ye.setTexture(a.skeleton.boneTexture,f)}void 0!==l.boneTextureWidth&&Ue.uniform1i(l.boneTextureWidth,a.skeleton.boneTextureWidth),void 0!==l.boneTextureHeight&&Ue.uniform1i(l.boneTextureHeight,a.skeleton.boneTextureHeight)}else a.skeleton&&a.skeleton.boneMatrices&&void 0!==l.boneGlobalMatrices&&Ue.uniformMatrix4fv(l.boneGlobalMatrices,!1,a.skeleton.boneMatrices);return u&&(n&&r.fog&&A(p,n),(r instanceof i.MeshPhongMaterial||r instanceof i.MeshLambertMaterial||r.lights)&&(Oe&&(h=!0,N(t,e),Oe=!1),h?(P(p,Ve),k(p,!0)):k(p,!1)),(r instanceof i.MeshBasicMaterial||r instanceof i.MeshLambertMaterial||r instanceof i.MeshPhongMaterial)&&_(p,r),r instanceof i.LineBasicMaterial?T(p,r):r instanceof i.LineDashedMaterial?(T(p,r),E(p,r)):r instanceof i.PointsMaterial?C(p,r):r instanceof i.MeshPhongMaterial?L(p,r):r instanceof i.MeshDepthMaterial?(p.mNear.value=e.near,p.mFar.value=e.far,p.opacity.value=r.opacity):r instanceof i.MeshNormalMaterial&&(p.opacity.value=r.opacity),a.receiveShadow&&!r._shadowPass&&D(p,t,e),O(o.uniformsList)),R(l,a),void 0!==l.modelMatrix&&Ue.uniformMatrix4fv(l.modelMatrix,!1,a.matrixWorld.elements),c}function _(e,t){e.opacity.value=t.opacity,e.diffuse.value=t.color,t.emissive&&(e.emissive.value=t.emissive),e.map.value=t.map,e.specularMap.value=t.specularMap,e.alphaMap.value=t.alphaMap,t.aoMap&&(e.aoMap.value=t.aoMap,e.aoMapIntensity.value=t.aoMapIntensity);var n;if(t.map?n=t.map:t.specularMap?n=t.specularMap:t.displacementMap?n=t.displacementMap:t.normalMap?n=t.normalMap:t.bumpMap?n=t.bumpMap:t.alphaMap?n=t.alphaMap:t.emissiveMap&&(n=t.emissiveMap),void 0!==n){n instanceof i.WebGLRenderTarget&&(n=n.texture);var r=n.offset,a=n.repeat;e.offsetRepeat.value.set(r.x,r.y,a.x,a.y)}e.envMap.value=t.envMap,e.flipEnvMap.value=t.envMap instanceof i.WebGLRenderTargetCube?1:-1,e.reflectivity.value=t.reflectivity,e.refractionRatio.value=t.refractionRatio}function T(e,t){e.diffuse.value=t.color,e.opacity.value=t.opacity}function E(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}function C(e,t){if(e.psColor.value=t.color,e.opacity.value=t.opacity,e.size.value=t.size,e.scale.value=Z.height/2,e.map.value=t.map,null!==t.map){var n=t.map.offset,r=t.map.repeat;e.offsetRepeat.value.set(n.x,n.y,r.x,r.y)}}function A(e,t){e.fogColor.value=t.color,t instanceof i.Fog?(e.fogNear.value=t.near,e.fogFar.value=t.far):t instanceof i.FogExp2&&(e.fogDensity.value=t.density)}function L(e,t){e.specular.value=t.specular,e.shininess.value=Math.max(t.shininess,1e-4),t.lightMap&&(e.lightMap.value=t.lightMap,e.lightMapIntensity.value=t.lightMapIntensity),t.emissiveMap&&(e.emissiveMap.value=t.emissiveMap),t.bumpMap&&(e.bumpMap.value=t.bumpMap,e.bumpScale.value=t.bumpScale),t.normalMap&&(e.normalMap.value=t.normalMap,e.normalScale.value.copy(t.normalScale)),t.displacementMap&&(e.displacementMap.value=t.displacementMap,e.displacementScale.value=t.displacementScale,e.displacementBias.value=t.displacementBias)}function P(e,t){e.ambientLightColor.value=t.ambient,e.directionalLightColor.value=t.directional.colors,e.directionalLightDirection.value=t.directional.positions,e.pointLightColor.value=t.point.colors,e.pointLightPosition.value=t.point.positions,e.pointLightDistance.value=t.point.distances,e.pointLightDecay.value=t.point.decays,e.spotLightColor.value=t.spot.colors,e.spotLightPosition.value=t.spot.positions,e.spotLightDistance.value=t.spot.distances,e.spotLightDirection.value=t.spot.directions,e.spotLightAngleCos.value=t.spot.anglesCos,e.spotLightExponent.value=t.spot.exponents,e.spotLightDecay.value=t.spot.decays,e.hemisphereLightSkyColor.value=t.hemi.skyColors,e.hemisphereLightGroundColor.value=t.hemi.groundColors,e.hemisphereLightDirection.value=t.hemi.positions}function k(e,t){e.ambientLightColor.needsUpdate=t,e.directionalLightColor.needsUpdate=t,e.directionalLightDirection.needsUpdate=t,e.pointLightColor.needsUpdate=t,e.pointLightPosition.needsUpdate=t,e.pointLightDistance.needsUpdate=t,e.pointLightDecay.needsUpdate=t,e.spotLightColor.needsUpdate=t,e.spotLightPosition.needsUpdate=t,e.spotLightDistance.needsUpdate=t,e.spotLightDirection.needsUpdate=t,e.spotLightAngleCos.needsUpdate=t,e.spotLightExponent.needsUpdate=t,e.spotLightDecay.needsUpdate=t,e.hemisphereLightSkyColor.needsUpdate=t,e.hemisphereLightGroundColor.needsUpdate=t,e.hemisphereLightDirection.needsUpdate=t}function D(e,t,n){if(e.shadowMatrix)for(var r=0,a=0,o=t.length;o>a;a++){var s=t[a];if(s.castShadow===!0&&(s instanceof i.PointLight||s instanceof i.SpotLight||s instanceof i.DirectionalLight)){var u=s.shadow;s instanceof i.PointLight?(Re.setFromMatrixPosition(s.matrixWorld).negate(),u.matrix.identity().setPosition(Re),e.shadowDarkness.value[r]=-u.darkness):e.shadowDarkness.value[r]=u.darkness,e.shadowMatrix.value[r]=u.matrix,e.shadowMap.value[r]=u.map,e.shadowMapSize.value[r]=u.mapSize,e.shadowBias.value[r]=u.bias,r++}}}function R(e,t){Ue.uniformMatrix4fv(e.modelViewMatrix,!1,t.modelViewMatrix.elements),e.normalMatrix&&Ue.uniformMatrix3fv(e.normalMatrix,!1,t.normalMatrix.elements)}function F(){var e=_e;return e>=ze.maxTextures&&console.warn("WebGLRenderer: trying to use "+e+" texture units while this GPU supports only "+ze.maxTextures),_e+=1,e}function O(e){for(var t,n,r=0,a=e.length;a>r;r++){var o=e[r][0];if(o.needsUpdate!==!1){var s=o.type,u=o.value,h=e[r][1];switch(s){case"1i":Ue.uniform1i(h,u);break;case"1f":Ue.uniform1f(h,u);break;case"2f":Ue.uniform2f(h,u[0],u[1]);break;case"3f":Ue.uniform3f(h,u[0],u[1],u[2]);break;case"4f":Ue.uniform4f(h,u[0],u[1],u[2],u[3]);break;case"1iv":Ue.uniform1iv(h,u);break;case"3iv":Ue.uniform3iv(h,u);break;case"1fv":Ue.uniform1fv(h,u);break;case"2fv":Ue.uniform2fv(h,u);break;case"3fv":Ue.uniform3fv(h,u);break;case"4fv":Ue.uniform4fv(h,u);break;case"Matrix3fv":Ue.uniformMatrix3fv(h,!1,u);break;case"Matrix4fv":Ue.uniformMatrix4fv(h,!1,u);break;case"i":Ue.uniform1i(h,u);break;case"f":Ue.uniform1f(h,u);break;case"v2":Ue.uniform2f(h,u.x,u.y);break;case"v3":Ue.uniform3f(h,u.x,u.y,u.z);break;case"v4":Ue.uniform4f(h,u.x,u.y,u.z,u.w);break;case"c":Ue.uniform3f(h,u.r,u.g,u.b);break;case"iv1":Ue.uniform1iv(h,u);break;case"iv":Ue.uniform3iv(h,u);break;case"fv1":Ue.uniform1fv(h,u);break;case"fv":Ue.uniform3fv(h,u);break;case"v2v":void 0===o._array&&(o._array=new Float32Array(2*u.length));for(var c=0,l=0,p=u.length;p>c;c++,l+=2)o._array[l+0]=u[c].x,o._array[l+1]=u[c].y;Ue.uniform2fv(h,o._array);break;case"v3v":void 0===o._array&&(o._array=new Float32Array(3*u.length));for(var c=0,f=0,p=u.length;p>c;c++,f+=3)o._array[f+0]=u[c].x,o._array[f+1]=u[c].y,o._array[f+2]=u[c].z;Ue.uniform3fv(h,o._array);break;case"v4v":void 0===o._array&&(o._array=new Float32Array(4*u.length));for(var c=0,d=0,p=u.length;p>c;c++,d+=4)o._array[d+0]=u[c].x,o._array[d+1]=u[c].y,o._array[d+2]=u[c].z,o._array[d+3]=u[c].w;Ue.uniform4fv(h,o._array);break;case"m3":Ue.uniformMatrix3fv(h,!1,u.elements);break;case"m3v":void 0===o._array&&(o._array=new Float32Array(9*u.length));for(var c=0,p=u.length;p>c;c++)u[c].flattenToArrayOffset(o._array,9*c);Ue.uniformMatrix3fv(h,!1,o._array);break;case"m4":Ue.uniformMatrix4fv(h,!1,u.elements);break;case"m4v":void 0===o._array&&(o._array=new Float32Array(16*u.length));for(var c=0,p=u.length;p>c;c++)u[c].flattenToArrayOffset(o._array,16*c);Ue.uniformMatrix4fv(h,!1,o._array);break;case"t":if(t=u,n=F(),Ue.uniform1i(h,n),!t)continue;t instanceof i.CubeTexture||Array.isArray(t.image)&&6===t.image.length?H(t,n):t instanceof i.WebGLRenderTargetCube?W(t.texture,n):t instanceof i.WebGLRenderTarget?ye.setTexture(t.texture,n):ye.setTexture(t,n);break;case"tv":void 0===o._array&&(o._array=[]);for(var c=0,p=o.value.length;p>c;c++)o._array[c]=F();Ue.uniform1iv(h,o._array);for(var c=0,p=o.value.length;p>c;c++)t=o.value[c],n=o._array[c],t&&(t instanceof i.CubeTexture||t.image instanceof Array&&6===t.image.length?H(t,n):t instanceof i.WebGLRenderTarget?ye.setTexture(t.texture,n):t instanceof i.WebGLRenderTargetCube?W(t.texture,n):ye.setTexture(t,n));break;default:console.warn("THREE.WebGLRenderer: Unknown uniform type: "+s)}}}}function V(e,t,n,r){e[t+0]=n.r*r,e[t+1]=n.g*r,e[t+2]=n.b*r}function N(e,t){var n,r,a,o,s,u,h,c,l=0,p=0,f=0,d=Ve,m=t.matrixWorldInverse,g=d.directional.colors,v=d.directional.positions,y=d.point.colors,b=d.point.positions,x=d.point.distances,w=d.point.decays,M=d.spot.colors,S=d.spot.positions,_=d.spot.distances,T=d.spot.directions,E=d.spot.anglesCos,C=d.spot.exponents,A=d.spot.decays,L=d.hemi.skyColors,P=d.hemi.groundColors,k=d.hemi.positions,D=0,R=0,F=0,O=0,N=0,B=0,U=0,G=0,I=0,j=0,z=0,H=0;for(n=0,r=e.length;r>n;n++)if(a=e[n],o=a.color,h=a.intensity,c=a.distance,a instanceof i.AmbientLight){if(!a.visible)continue;l+=o.r,p+=o.g,f+=o.b}else if(a instanceof i.DirectionalLight){if(N+=1,!a.visible)continue;Fe.setFromMatrixPosition(a.matrixWorld),Re.setFromMatrixPosition(a.target.matrixWorld),Fe.sub(Re),Fe.transformDirection(m),I=3*D,v[I+0]=Fe.x,v[I+1]=Fe.y,v[I+2]=Fe.z,V(g,I,o,h),D+=1}else if(a instanceof i.PointLight){if(B+=1,!a.visible)continue;j=3*R,V(y,j,o,h),Re.setFromMatrixPosition(a.matrixWorld),Re.applyMatrix4(m),b[j+0]=Re.x,b[j+1]=Re.y,b[j+2]=Re.z,x[R]=c,w[R]=0===a.distance?0:a.decay,R+=1}else if(a instanceof i.SpotLight){if(U+=1,!a.visible)continue;z=3*F,V(M,z,o,h),Fe.setFromMatrixPosition(a.matrixWorld),Re.copy(Fe).applyMatrix4(m),S[z+0]=Re.x,S[z+1]=Re.y,S[z+2]=Re.z,_[F]=c,Re.setFromMatrixPosition(a.target.matrixWorld),Fe.sub(Re),Fe.transformDirection(m),T[z+0]=Fe.x,T[z+1]=Fe.y,T[z+2]=Fe.z,E[F]=Math.cos(a.angle),C[F]=a.exponent,A[F]=0===a.distance?0:a.decay,F+=1}else if(a instanceof i.HemisphereLight){if(G+=1,!a.visible)continue;Fe.setFromMatrixPosition(a.matrixWorld),Fe.transformDirection(m),H=3*O,k[H+0]=Fe.x,k[H+1]=Fe.y,k[H+2]=Fe.z,s=a.color,u=a.groundColor,V(L,H,s,h),V(P,H,u,h),O+=1}for(n=3*D,r=Math.max(g.length,3*N);r>n;n++)g[n]=0;for(n=3*R,r=Math.max(y.length,3*B);r>n;n++)y[n]=0;for(n=3*F,r=Math.max(M.length,3*U);r>n;n++)M[n]=0;for(n=3*O,r=Math.max(L.length,3*G);r>n;n++)L[n]=0;for(n=3*O,r=Math.max(P.length,3*G);r>n;n++)P[n]=0;d.directional.length=D,d.point.length=R,d.spot.length=F,d.hemi.length=O,d.ambient[0]=l,d.ambient[1]=p,d.ambient[2]=f}function B(e,t,n){var r;if(n?(Ue.texParameteri(e,Ue.TEXTURE_WRAP_S,Q(t.wrapS)),Ue.texParameteri(e,Ue.TEXTURE_WRAP_T,Q(t.wrapT)),Ue.texParameteri(e,Ue.TEXTURE_MAG_FILTER,Q(t.magFilter)),Ue.texParameteri(e,Ue.TEXTURE_MIN_FILTER,Q(t.minFilter))):(Ue.texParameteri(e,Ue.TEXTURE_WRAP_S,Ue.CLAMP_TO_EDGE),Ue.texParameteri(e,Ue.TEXTURE_WRAP_T,Ue.CLAMP_TO_EDGE),(t.wrapS!==i.ClampToEdgeWrapping||t.wrapT!==i.ClampToEdgeWrapping)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",t),Ue.texParameteri(e,Ue.TEXTURE_MAG_FILTER,K(t.magFilter)),Ue.texParameteri(e,Ue.TEXTURE_MIN_FILTER,K(t.minFilter)),t.minFilter!==i.NearestFilter&&t.minFilter!==i.LinearFilter&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",t)),r=je.get("EXT_texture_filter_anisotropic")){if(t.type===i.FloatType&&null===je.get("OES_texture_float_linear"))return;if(t.type===i.HalfFloatType&&null===je.get("OES_texture_half_float_linear"))return;(t.anisotropy>1||We.get(t).__currentAnisotropy)&&(Ue.texParameterf(e,r.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,ye.getMaxAnisotropy())),We.get(t).__currentAnisotropy=t.anisotropy)}}function U(e,t,n){void 0===e.__webglInit&&(e.__webglInit=!0,t.addEventListener("dispose",o),e.__webglTexture=Ue.createTexture(),Ne.textures++),He.activeTexture(Ue.TEXTURE0+n),He.bindTexture(Ue.TEXTURE_2D,e.__webglTexture),Ue.pixelStorei(Ue.UNPACK_FLIP_Y_WEBGL,t.flipY),
Ue.pixelStorei(Ue.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),Ue.pixelStorei(Ue.UNPACK_ALIGNMENT,t.unpackAlignment),t.image=G(t.image,ze.maxTextureSize),j(t)&&I(t.image)===!1&&(t.image=z(t.image));var r=t.image,a=I(r),s=Q(t.format),u=Q(t.type);B(Ue.TEXTURE_2D,t,a);var h,c=t.mipmaps;if(t instanceof i.DataTexture)if(c.length>0&&a){for(var l=0,p=c.length;p>l;l++)h=c[l],He.texImage2D(Ue.TEXTURE_2D,l,s,h.width,h.height,0,s,u,h.data);t.generateMipmaps=!1}else He.texImage2D(Ue.TEXTURE_2D,0,s,r.width,r.height,0,s,u,r.data);else if(t instanceof i.CompressedTexture)for(var l=0,p=c.length;p>l;l++)h=c[l],t.format!==i.RGBAFormat&&t.format!==i.RGBFormat?He.getCompressedTextureFormats().indexOf(s)>-1?He.compressedTexImage2D(Ue.TEXTURE_2D,l,s,h.width,h.height,0,h.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):He.texImage2D(Ue.TEXTURE_2D,l,s,h.width,h.height,0,s,u,h.data);else if(c.length>0&&a){for(var l=0,p=c.length;p>l;l++)h=c[l],He.texImage2D(Ue.TEXTURE_2D,l,s,s,u,h);t.generateMipmaps=!1}else He.texImage2D(Ue.TEXTURE_2D,0,s,s,u,t.image);t.generateMipmaps&&a&&Ue.generateMipmap(Ue.TEXTURE_2D),e.__version=t.version,t.onUpdate&&t.onUpdate(t)}function G(e,t){if(e.width>t||e.height>t){var n=t/Math.max(e.width,e.height),r=document.createElement("canvas");r.width=Math.floor(e.width*n),r.height=Math.floor(e.height*n);var i=r.getContext("2d");return i.drawImage(e,0,0,e.width,e.height,0,0,r.width,r.height),console.warn("THREE.WebGLRenderer: image is too big ("+e.width+"x"+e.height+"). Resized to "+r.width+"x"+r.height,e),r}return e}function I(e){return i.Math.isPowerOfTwo(e.width)&&i.Math.isPowerOfTwo(e.height)}function j(e){return e.wrapS!==i.ClampToEdgeWrapping||e.wrapT!==i.ClampToEdgeWrapping?!0:e.minFilter!==i.NearestFilter&&e.minFilter!==i.LinearFilter?!0:!1}function z(e){if(e instanceof HTMLImageElement||e instanceof HTMLCanvasElement){var t=document.createElement("canvas");t.width=i.Math.nearestPowerOfTwo(e.width),t.height=i.Math.nearestPowerOfTwo(e.height);var n=t.getContext("2d");return n.drawImage(e,0,0,t.width,t.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+e.width+"x"+e.height+"). Resized to "+t.width+"x"+t.height,e),t}return e}function H(e,t){var n=We.get(e);if(6===e.image.length)if(e.version>0&&n.__version!==e.version){n.__image__webglTextureCube||(e.addEventListener("dispose",o),n.__image__webglTextureCube=Ue.createTexture(),Ne.textures++),He.activeTexture(Ue.TEXTURE0+t),He.bindTexture(Ue.TEXTURE_CUBE_MAP,n.__image__webglTextureCube),Ue.pixelStorei(Ue.UNPACK_FLIP_Y_WEBGL,e.flipY);for(var r=e instanceof i.CompressedTexture,a=e.image[0]instanceof i.DataTexture,s=[],u=0;6>u;u++)!ye.autoScaleCubemaps||r||a?s[u]=a?e.image[u].image:e.image[u]:s[u]=G(e.image[u],ze.maxCubemapSize);var h=s[0],c=I(h),l=Q(e.format),p=Q(e.type);B(Ue.TEXTURE_CUBE_MAP,e,c);for(var u=0;6>u;u++)if(r)for(var f,d=s[u].mipmaps,m=0,g=d.length;g>m;m++)f=d[m],e.format!==i.RGBAFormat&&e.format!==i.RGBFormat?He.getCompressedTextureFormats().indexOf(l)>-1?He.compressedTexImage2D(Ue.TEXTURE_CUBE_MAP_POSITIVE_X+u,m,l,f.width,f.height,0,f.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()"):He.texImage2D(Ue.TEXTURE_CUBE_MAP_POSITIVE_X+u,m,l,f.width,f.height,0,l,p,f.data);else a?He.texImage2D(Ue.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,l,s[u].width,s[u].height,0,l,p,s[u].data):He.texImage2D(Ue.TEXTURE_CUBE_MAP_POSITIVE_X+u,0,l,l,p,s[u]);e.generateMipmaps&&c&&Ue.generateMipmap(Ue.TEXTURE_CUBE_MAP),n.__version=e.version,e.onUpdate&&e.onUpdate(e)}else He.activeTexture(Ue.TEXTURE0+t),He.bindTexture(Ue.TEXTURE_CUBE_MAP,n.__image__webglTextureCube)}function W(e,t){He.activeTexture(Ue.TEXTURE0+t),He.bindTexture(Ue.TEXTURE_CUBE_MAP,We.get(e).__webglTexture)}function X(e,t,n){Ue.bindFramebuffer(Ue.FRAMEBUFFER,e),Ue.framebufferTexture2D(Ue.FRAMEBUFFER,Ue.COLOR_ATTACHMENT0,n,We.get(t.texture).__webglTexture,0)}function q(e,t){Ue.bindRenderbuffer(Ue.RENDERBUFFER,e),t.depthBuffer&&!t.stencilBuffer?(Ue.renderbufferStorage(Ue.RENDERBUFFER,Ue.DEPTH_COMPONENT16,t.width,t.height),Ue.framebufferRenderbuffer(Ue.FRAMEBUFFER,Ue.DEPTH_ATTACHMENT,Ue.RENDERBUFFER,e)):t.depthBuffer&&t.stencilBuffer?(Ue.renderbufferStorage(Ue.RENDERBUFFER,Ue.DEPTH_STENCIL,t.width,t.height),Ue.framebufferRenderbuffer(Ue.FRAMEBUFFER,Ue.DEPTH_STENCIL_ATTACHMENT,Ue.RENDERBUFFER,e)):Ue.renderbufferStorage(Ue.RENDERBUFFER,Ue.RGBA4,t.width,t.height)}function Y(e){var t=e instanceof i.WebGLRenderTargetCube?Ue.TEXTURE_CUBE_MAP:Ue.TEXTURE_2D,n=We.get(e.texture).__webglTexture;He.bindTexture(t,n),Ue.generateMipmap(t),He.bindTexture(t,null)}function K(e){return e===i.NearestFilter||e===i.NearestMipMapNearestFilter||e===i.NearestMipMapLinearFilter?Ue.NEAREST:Ue.LINEAR}function Q(e){var t;if(e===i.RepeatWrapping)return Ue.REPEAT;if(e===i.ClampToEdgeWrapping)return Ue.CLAMP_TO_EDGE;if(e===i.MirroredRepeatWrapping)return Ue.MIRRORED_REPEAT;if(e===i.NearestFilter)return Ue.NEAREST;if(e===i.NearestMipMapNearestFilter)return Ue.NEAREST_MIPMAP_NEAREST;if(e===i.NearestMipMapLinearFilter)return Ue.NEAREST_MIPMAP_LINEAR;if(e===i.LinearFilter)return Ue.LINEAR;if(e===i.LinearMipMapNearestFilter)return Ue.LINEAR_MIPMAP_NEAREST;if(e===i.LinearMipMapLinearFilter)return Ue.LINEAR_MIPMAP_LINEAR;if(e===i.UnsignedByteType)return Ue.UNSIGNED_BYTE;if(e===i.UnsignedShort4444Type)return Ue.UNSIGNED_SHORT_4_4_4_4;if(e===i.UnsignedShort5551Type)return Ue.UNSIGNED_SHORT_5_5_5_1;if(e===i.UnsignedShort565Type)return Ue.UNSIGNED_SHORT_5_6_5;if(e===i.ByteType)return Ue.BYTE;if(e===i.ShortType)return Ue.SHORT;if(e===i.UnsignedShortType)return Ue.UNSIGNED_SHORT;if(e===i.IntType)return Ue.INT;if(e===i.UnsignedIntType)return Ue.UNSIGNED_INT;if(e===i.FloatType)return Ue.FLOAT;if(t=je.get("OES_texture_half_float"),null!==t&&e===i.HalfFloatType)return t.HALF_FLOAT_OES;if(e===i.AlphaFormat)return Ue.ALPHA;if(e===i.RGBFormat)return Ue.RGB;if(e===i.RGBAFormat)return Ue.RGBA;if(e===i.LuminanceFormat)return Ue.LUMINANCE;if(e===i.LuminanceAlphaFormat)return Ue.LUMINANCE_ALPHA;if(e===i.AddEquation)return Ue.FUNC_ADD;if(e===i.SubtractEquation)return Ue.FUNC_SUBTRACT;if(e===i.ReverseSubtractEquation)return Ue.FUNC_REVERSE_SUBTRACT;if(e===i.ZeroFactor)return Ue.ZERO;if(e===i.OneFactor)return Ue.ONE;if(e===i.SrcColorFactor)return Ue.SRC_COLOR;if(e===i.OneMinusSrcColorFactor)return Ue.ONE_MINUS_SRC_COLOR;if(e===i.SrcAlphaFactor)return Ue.SRC_ALPHA;if(e===i.OneMinusSrcAlphaFactor)return Ue.ONE_MINUS_SRC_ALPHA;if(e===i.DstAlphaFactor)return Ue.DST_ALPHA;if(e===i.OneMinusDstAlphaFactor)return Ue.ONE_MINUS_DST_ALPHA;if(e===i.DstColorFactor)return Ue.DST_COLOR;if(e===i.OneMinusDstColorFactor)return Ue.ONE_MINUS_DST_COLOR;if(e===i.SrcAlphaSaturateFactor)return Ue.SRC_ALPHA_SATURATE;if(t=je.get("WEBGL_compressed_texture_s3tc"),null!==t){if(e===i.RGB_S3TC_DXT1_Format)return t.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===i.RGBA_S3TC_DXT1_Format)return t.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===i.RGBA_S3TC_DXT3_Format)return t.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===i.RGBA_S3TC_DXT5_Format)return t.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(t=je.get("WEBGL_compressed_texture_pvrtc"),null!==t){if(e===i.RGB_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===i.RGB_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===i.RGBA_PVRTC_4BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===i.RGBA_PVRTC_2BPPV1_Format)return t.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(t=je.get("EXT_blend_minmax"),null!==t){if(e===i.MinEquation)return t.MIN_EXT;if(e===i.MaxEquation)return t.MAX_EXT}return 0}console.log("THREE.WebGLRenderer",i.REVISION),e=e||{};var Z=void 0!==e.canvas?e.canvas:document.createElement("canvas"),J=void 0!==e.context?e.context:null,$=Z.width,ee=Z.height,te=1,ne=void 0!==e.alpha?e.alpha:!1,re=void 0!==e.depth?e.depth:!0,ie=void 0!==e.stencil?e.stencil:!0,ae=void 0!==e.antialias?e.antialias:!1,oe=void 0!==e.premultipliedAlpha?e.premultipliedAlpha:!0,se=void 0!==e.preserveDrawingBuffer?e.preserveDrawingBuffer:!1,ue=new i.Color(0),he=0,ce=[],le=[],pe=-1,fe=[],de=-1,me=new Float32Array(8),ge=[],ve=[];this.domElement=Z,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.maxMorphTargets=8,this.maxMorphNormals=4,this.autoScaleCubemaps=!0;var ye=this,be=null,xe=null,we=-1,Me="",Se=null,_e=0,Te=0,Ee=0,Ce=Z.width,Ae=Z.height,Le=0,Pe=0,ke=new i.Frustum,De=new i.Matrix4,Re=new i.Vector3,Fe=new i.Vector3,Oe=!0,Ve={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[],decays:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[],decays:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},Ne={geometries:0,textures:0},Be={calls:0,vertices:0,faces:0,points:0};this.info={render:Be,memory:Ne,programs:null};var Ue;try{var Ge={alpha:ne,depth:re,stencil:ie,antialias:ae,premultipliedAlpha:oe,preserveDrawingBuffer:se};if(Ue=J||Z.getContext("webgl",Ge)||Z.getContext("experimental-webgl",Ge),null===Ue)throw null!==Z.getContext("webgl")?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";Z.addEventListener("webglcontextlost",a,!1)}catch(Ie){console.error("THREE.WebGLRenderer: "+Ie)}var je=new i.WebGLExtensions(Ue);je.get("OES_texture_float"),je.get("OES_texture_float_linear"),je.get("OES_texture_half_float"),je.get("OES_texture_half_float_linear"),je.get("OES_standard_derivatives"),je.get("ANGLE_instanced_arrays"),je.get("OES_element_index_uint")&&(i.BufferGeometry.MaxIndex=4294967296);var ze=new i.WebGLCapabilities(Ue,je,e),He=new i.WebGLState(Ue,je,Q),We=new i.WebGLProperties,Xe=new i.WebGLObjects(Ue,We,this.info),qe=new i.WebGLPrograms(this,ze);this.info.programs=qe.programs;var Ye=new i.WebGLBufferRenderer(Ue,je,Be),Ke=new i.WebGLIndexedBufferRenderer(Ue,je,Be);n(),this.context=Ue,this.capabilities=ze,this.extensions=je,this.state=He;var Qe=new i.WebGLShadowMap(this,ce,Xe);this.shadowMap=Qe;var Ze=new i.SpritePlugin(this,ge),Je=new i.LensFlarePlugin(this,ve);this.getContext=function(){return Ue},this.getContextAttributes=function(){return Ue.getContextAttributes()},this.forceContextLoss=function(){je.get("WEBGL_lose_context").loseContext()},this.getMaxAnisotropy=function(){var e;return function(){if(void 0!==e)return e;var t=je.get("EXT_texture_filter_anisotropic");return e=null!==t?Ue.getParameter(t.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0}}(),this.getPrecision=function(){return ze.precision},this.getPixelRatio=function(){return te},this.setPixelRatio=function(e){void 0!==e&&(te=e)},this.getSize=function(){return{width:$,height:ee}},this.setSize=function(e,t,n){$=e,ee=t,Z.width=e*te,Z.height=t*te,n!==!1&&(Z.style.width=e+"px",Z.style.height=t+"px"),this.setViewport(0,0,e,t)},this.setViewport=function(e,t,n,r){Te=e*te,Ee=t*te,Ce=n*te,Ae=r*te,Ue.viewport(Te,Ee,Ce,Ae)},this.getViewport=function(e){e.x=Te/te,e.y=Ee/te,e.z=Ce/te,e.w=Ae/te},this.setScissor=function(e,t,n,r){Ue.scissor(e*te,t*te,n*te,r*te)},this.enableScissorTest=function(e){He.setScissorTest(e)},this.getClearColor=function(){return ue},this.setClearColor=function(e,n){ue.set(e),he=void 0!==n?n:1,t(ue.r,ue.g,ue.b,he)},this.getClearAlpha=function(){return he},this.setClearAlpha=function(e){he=e,t(ue.r,ue.g,ue.b,he)},this.clear=function(e,t,n){var r=0;(void 0===e||e)&&(r|=Ue.COLOR_BUFFER_BIT),(void 0===t||t)&&(r|=Ue.DEPTH_BUFFER_BIT),(void 0===n||n)&&(r|=Ue.STENCIL_BUFFER_BIT),Ue.clear(r)},this.clearColor=function(){Ue.clear(Ue.COLOR_BUFFER_BIT)},this.clearDepth=function(){Ue.clear(Ue.DEPTH_BUFFER_BIT)},this.clearStencil=function(){Ue.clear(Ue.STENCIL_BUFFER_BIT)},this.clearTarget=function(e,t,n,r){this.setRenderTarget(e),this.clear(t,n,r)},this.resetGLState=r,this.dispose=function(){Z.removeEventListener("webglcontextlost",a,!1)},this.renderBufferImmediate=function(e,t,n){He.initAttributes();var r=We.get(e);e.hasPositions&&!r.position&&(r.position=Ue.createBuffer()),e.hasNormals&&!r.normal&&(r.normal=Ue.createBuffer()),e.hasUvs&&!r.uv&&(r.uv=Ue.createBuffer()),e.hasColors&&!r.color&&(r.color=Ue.createBuffer());var a=t.getAttributes();if(e.hasPositions&&(Ue.bindBuffer(Ue.ARRAY_BUFFER,r.position),Ue.bufferData(Ue.ARRAY_BUFFER,e.positionArray,Ue.DYNAMIC_DRAW),He.enableAttribute(a.position),Ue.vertexAttribPointer(a.position,3,Ue.FLOAT,!1,0,0)),e.hasNormals){if(Ue.bindBuffer(Ue.ARRAY_BUFFER,r.normal),"MeshPhongMaterial"!==n.type&&n.shading===i.FlatShading)for(var o=0,s=3*e.count;s>o;o+=9){var u=e.normalArray,h=(u[o+0]+u[o+3]+u[o+6])/3,c=(u[o+1]+u[o+4]+u[o+7])/3,l=(u[o+2]+u[o+5]+u[o+8])/3;u[o+0]=h,u[o+1]=c,u[o+2]=l,u[o+3]=h,u[o+4]=c,u[o+5]=l,u[o+6]=h,u[o+7]=c,u[o+8]=l}Ue.bufferData(Ue.ARRAY_BUFFER,e.normalArray,Ue.DYNAMIC_DRAW),He.enableAttribute(a.normal),Ue.vertexAttribPointer(a.normal,3,Ue.FLOAT,!1,0,0)}e.hasUvs&&n.map&&(Ue.bindBuffer(Ue.ARRAY_BUFFER,r.uv),Ue.bufferData(Ue.ARRAY_BUFFER,e.uvArray,Ue.DYNAMIC_DRAW),He.enableAttribute(a.uv),Ue.vertexAttribPointer(a.uv,2,Ue.FLOAT,!1,0,0)),e.hasColors&&n.vertexColors!==i.NoColors&&(Ue.bindBuffer(Ue.ARRAY_BUFFER,r.color),Ue.bufferData(Ue.ARRAY_BUFFER,e.colorArray,Ue.DYNAMIC_DRAW),He.enableAttribute(a.color),Ue.vertexAttribPointer(a.color,3,Ue.FLOAT,!1,0,0)),He.disableUnusedAttributes(),Ue.drawArrays(Ue.TRIANGLES,0,e.count),e.count=0},this.renderBufferDirect=function(e,t,n,r,a,o,s){w(a);var u=S(e,t,n,a,o),h=!1,c=r.id+"_"+u.id+"_"+a.wireframe;c!==Me&&(Me=c,h=!0);var l=o.morphTargetInfluences;if(void 0!==l){for(var p=[],m=0,g=l.length;g>m;m++){var v=l[m];p.push([v,m])}p.sort(d),p.length>8&&(p.length=8);for(var y=r.morphAttributes,m=0,g=p.length;g>m;m++){var v=p[m];if(me[m]=v[0],0!==v[0]){var b=v[1];a.morphTargets===!0&&y.position&&r.addAttribute("morphTarget"+m,y.position[b]),a.morphNormals===!0&&y.normal&&r.addAttribute("morphNormal"+m,y.normal[b])}else a.morphTargets===!0&&r.removeAttribute("morphTarget"+m),a.morphNormals===!0&&r.removeAttribute("morphNormal"+m)}var x=u.getUniforms();null!==x.morphTargetInfluences&&Ue.uniform1fv(x.morphTargetInfluences,me),h=!0}var b=r.index,M=r.attributes.position;a.wireframe===!0&&(b=Xe.getWireframeAttribute(r));var _;null!==b?(_=Ke,_.setIndex(b)):_=Ye,h&&(f(a,u,r),null!==b&&Ue.bindBuffer(Ue.ELEMENT_ARRAY_BUFFER,Xe.getAttributeBuffer(b)));var T=0,E=1/0;null!==b?E=b.count:void 0!==M&&(E=M.count);var C=r.drawRange.start,A=r.drawRange.count,L=null!==s?s.start:0,P=null!==s?s.count:1/0,k=Math.max(T,C,L),D=Math.min(T+E,C+A,L+P)-1,R=Math.max(0,D-k+1);if(o instanceof i.Mesh)a.wireframe===!0?(He.setLineWidth(a.wireframeLinewidth*te),_.setMode(Ue.LINES)):_.setMode(Ue.TRIANGLES),r instanceof i.InstancedBufferGeometry&&r.maxInstancedCount>0?_.renderInstances(r):_.render(k,R);else if(o instanceof i.Line){var F=a.linewidth;void 0===F&&(F=1),He.setLineWidth(F*te),o instanceof i.LineSegments?_.setMode(Ue.LINES):_.setMode(Ue.LINE_STRIP),_.render(k,R)}else o instanceof i.Points&&(_.setMode(Ue.POINTS),_.render(k,R))},this.render=function(e,t,n,r){if(t instanceof i.Camera==!1)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");var a=e.fog;if(Me="",we=-1,Se=null,Oe=!0,e.autoUpdate===!0&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),t.matrixWorldInverse.getInverse(t.matrixWorld),De.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),ke.setFromMatrix(De),ce.length=0,pe=-1,de=-1,ge.length=0,ve.length=0,y(e,t),le.length=pe+1,fe.length=de+1,ye.sortObjects===!0&&(le.sort(m),fe.sort(g)),Qe.render(e),Be.calls=0,Be.vertices=0,Be.faces=0,Be.points=0,this.setRenderTarget(n),(this.autoClear||r)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),e.overrideMaterial){var o=e.overrideMaterial;b(le,t,ce,a,o),b(fe,t,ce,a,o)}else He.setBlending(i.NoBlending),b(le,t,ce,a),b(fe,t,ce,a);if(Ze.render(e,t),Je.render(e,t,Le,Pe),n){var s=n.texture,u=I(n);s.generateMipmaps&&u&&s.minFilter!==i.NearestFilter&&s.minFilter!==i.LinearFilter&&Y(n)}He.setDepthTest(!0),He.setDepthWrite(!0),He.setColorWrite(!0)},this.setFaceCulling=function(e,t){e===i.CullFaceNone?He.disable(Ue.CULL_FACE):(t===i.FrontFaceDirectionCW?Ue.frontFace(Ue.CW):Ue.frontFace(Ue.CCW),e===i.CullFaceBack?Ue.cullFace(Ue.BACK):e===i.CullFaceFront?Ue.cullFace(Ue.FRONT):Ue.cullFace(Ue.FRONT_AND_BACK),He.enable(Ue.CULL_FACE))},this.setTexture=function(e,t){var n=We.get(e);if(e.version>0&&n.__version!==e.version){var r=e.image;return void 0===r?void console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",e):r.complete===!1?void console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",e):void U(n,e,t)}He.activeTexture(Ue.TEXTURE0+t),He.bindTexture(Ue.TEXTURE_2D,n.__webglTexture)},this.setRenderTarget=function(e){var t=e instanceof i.WebGLRenderTargetCube;if(e&&void 0===We.get(e).__webglFramebuffer){var n=We.get(e),r=We.get(e.texture);void 0===e.depthBuffer&&(e.depthBuffer=!0),void 0===e.stencilBuffer&&(e.stencilBuffer=!0),e.addEventListener("dispose",s),r.__webglTexture=Ue.createTexture(),Ne.textures++;var a=I(e),o=Q(e.texture.format),u=Q(e.texture.type);if(t){n.__webglFramebuffer=[],n.__webglRenderbuffer=[],He.bindTexture(Ue.TEXTURE_CUBE_MAP,r.__webglTexture),B(Ue.TEXTURE_CUBE_MAP,e.texture,a);for(var h=0;6>h;h++)n.__webglFramebuffer[h]=Ue.createFramebuffer(),n.__webglRenderbuffer[h]=Ue.createRenderbuffer(),He.texImage2D(Ue.TEXTURE_CUBE_MAP_POSITIVE_X+h,0,o,e.width,e.height,0,o,u,null),X(n.__webglFramebuffer[h],e,Ue.TEXTURE_CUBE_MAP_POSITIVE_X+h),q(n.__webglRenderbuffer[h],e);e.texture.generateMipmaps&&a&&Ue.generateMipmap(Ue.TEXTURE_CUBE_MAP)}else n.__webglFramebuffer=Ue.createFramebuffer(),e.shareDepthFrom?n.__webglRenderbuffer=e.shareDepthFrom.__webglRenderbuffer:n.__webglRenderbuffer=Ue.createRenderbuffer(),He.bindTexture(Ue.TEXTURE_2D,r.__webglTexture),B(Ue.TEXTURE_2D,e.texture,a),He.texImage2D(Ue.TEXTURE_2D,0,o,e.width,e.height,0,o,u,null),X(n.__webglFramebuffer,e,Ue.TEXTURE_2D),e.shareDepthFrom?e.depthBuffer&&!e.stencilBuffer?Ue.framebufferRenderbuffer(Ue.FRAMEBUFFER,Ue.DEPTH_ATTACHMENT,Ue.RENDERBUFFER,n.__webglRenderbuffer):e.depthBuffer&&e.stencilBuffer&&Ue.framebufferRenderbuffer(Ue.FRAMEBUFFER,Ue.DEPTH_STENCIL_ATTACHMENT,Ue.RENDERBUFFER,n.__webglRenderbuffer):q(n.__webglRenderbuffer,e),e.texture.generateMipmaps&&a&&Ue.generateMipmap(Ue.TEXTURE_2D);t?He.bindTexture(Ue.TEXTURE_CUBE_MAP,null):He.bindTexture(Ue.TEXTURE_2D,null),Ue.bindRenderbuffer(Ue.RENDERBUFFER,null),Ue.bindFramebuffer(Ue.FRAMEBUFFER,null)}var c,l,p,f,d;if(e){var n=We.get(e);c=t?n.__webglFramebuffer[e.activeCubeFace]:n.__webglFramebuffer,l=e.width,p=e.height,f=0,d=0}else c=null,l=Ce,p=Ae,f=Te,d=Ee;if(c!==xe&&(Ue.bindFramebuffer(Ue.FRAMEBUFFER,c),Ue.viewport(f,d,l,p),xe=c),t){var r=We.get(e.texture);Ue.framebufferTexture2D(Ue.FRAMEBUFFER,Ue.COLOR_ATTACHMENT0,Ue.TEXTURE_CUBE_MAP_POSITIVE_X+e.activeCubeFace,r.__webglTexture,0)}Le=l,Pe=p},this.readRenderTargetPixels=function(e,t,n,r,a,o){if(e instanceof i.WebGLRenderTarget==!1)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");var s=We.get(e).__webglFramebuffer;if(s){var u=!1;s!==xe&&(Ue.bindFramebuffer(Ue.FRAMEBUFFER,s),u=!0);try{var h=e.texture;if(h.format!==i.RGBAFormat&&Q(h.format)!==Ue.getParameter(Ue.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(h.type===i.UnsignedByteType||Q(h.type)===Ue.getParameter(Ue.IMPLEMENTATION_COLOR_READ_TYPE)||h.type===i.FloatType&&je.get("WEBGL_color_buffer_float")||h.type===i.HalfFloatType&&je.get("EXT_color_buffer_half_float")))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");Ue.checkFramebufferStatus(Ue.FRAMEBUFFER)===Ue.FRAMEBUFFER_COMPLETE?Ue.readPixels(t,n,r,a,Q(h.format),Q(h.type),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{u&&Ue.bindFramebuffer(Ue.FRAMEBUFFER,xe)}}},this.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),je.get("OES_texture_float")},this.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),je.get("OES_texture_half_float")},this.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),je.get("OES_standard_derivatives")},this.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),je.get("WEBGL_compressed_texture_s3tc")},this.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),je.get("WEBGL_compressed_texture_pvrtc")},this.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),je.get("EXT_blend_minmax")},this.supportsVertexTextures=function(){return ze.vertexTextures},this.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),je.get("ANGLE_instanced_arrays")},this.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},this.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},this.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},this.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},Object.defineProperties(this,{shadowMapEnabled:{get:function(){return Qe.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),Qe.enabled=e}},shadowMapType:{get:function(){return Qe.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),Qe.type=e}},shadowMapCullFace:{get:function(){return Qe.cullFace},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),Qe.cullFace=e}},shadowMapDebug:{get:function(){return Qe.debug},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapDebug is now .shadowMap.debug."),Qe.debug=e}}})},i.WebGLRenderTarget=function(e,t,n){this.uuid=i.Math.generateUUID(),this.width=e,this.height=t,n=n||{},void 0===n.minFilter&&(n.minFilter=i.LinearFilter),this.texture=new i.Texture(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy),this.depthBuffer=void 0!==n.depthBuffer?n.depthBuffer:!0,this.stencilBuffer=void 0!==n.stencilBuffer?n.stencilBuffer:!0,this.shareDepthFrom=void 0!==n.shareDepthFrom?n.shareDepthFrom:null},i.WebGLRenderTarget.prototype={constructor:i.WebGLRenderTarget,get wrapS(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set wrapS(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e},get wrapT(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set wrapT(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e},get magFilter(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set magFilter(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e},get minFilter(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set minFilter(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e},get anisotropy(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set anisotropy(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e},get offset(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set offset(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e},get repeat(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set repeat(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e},get format(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set format(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e},get type(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set type(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e},get generateMipmaps(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set generateMipmaps(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e},setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.dispose())},clone:function(){return(new this.constructor).copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.shareDepthFrom=e.shareDepthFrom,this},dispose:function(){this.dispatchEvent({type:"dispose"})}},i.EventDispatcher.prototype.apply(i.WebGLRenderTarget.prototype),i.WebGLRenderTargetCube=function(e,t,n){i.WebGLRenderTarget.call(this,e,t,n),this.activeCubeFace=0},i.WebGLRenderTargetCube.prototype=Object.create(i.WebGLRenderTarget.prototype),i.WebGLRenderTargetCube.prototype.constructor=i.WebGLRenderTargetCube,i.WebGLBufferRenderer=function(e,t,n){function r(e){s=e}function a(t,r){e.drawArrays(s,t,r),n.calls++,n.vertices+=r,s===e.TRIANGLES&&(n.faces+=r/3)}function o(e){var n=t.get("ANGLE_instanced_arrays");if(null===n)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");var r=e.attributes.position;r instanceof i.InterleavedBufferAttribute?n.drawArraysInstancedANGLE(s,0,r.data.count,e.maxInstancedCount):n.drawArraysInstancedANGLE(s,0,r.count,e.maxInstancedCount)}var s;this.setMode=r,this.render=a,this.renderInstances=o},i.WebGLIndexedBufferRenderer=function(e,t,n){function r(e){s=e}function i(n){n.array instanceof Uint32Array&&t.get("OES_element_index_uint")?(u=e.UNSIGNED_INT,h=4):(u=e.UNSIGNED_SHORT,h=2)}function a(t,r){e.drawElements(s,r,u,t*h),n.calls++,n.vertices+=r,s===e.TRIANGLES&&(n.faces+=r/3)}function o(e){var n=t.get("ANGLE_instanced_arrays");if(null===n)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");var r=e.index;n.drawElementsInstancedANGLE(s,r.array.length,u,0,e.maxInstancedCount)}var s,u,h;this.setMode=r,this.setIndex=i,this.render=a,this.renderInstances=o},i.WebGLExtensions=function(e){var t={};this.get=function(n){if(void 0!==t[n])return t[n];var r;switch(n){case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(n)}return null===r&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]=r,r}},i.WebGLCapabilities=function(e,t,n){function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}this.getMaxPrecision=r,this.precision=void 0!==n.precision?n.precision:"highp",this.logarithmicDepthBuffer=void 0!==n.logarithmicDepthBuffer?n.logarithmicDepthBuffer:!1,this.maxTextures=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),this.maxVertexTextures=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),this.maxTextureSize=e.getParameter(e.MAX_TEXTURE_SIZE),this.maxCubemapSize=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),this.maxAttributes=e.getParameter(e.MAX_VERTEX_ATTRIBS),this.maxVertexUniforms=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),this.maxVaryings=e.getParameter(e.MAX_VARYING_VECTORS),this.maxFragmentUniforms=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),this.vertexTextures=this.maxVertexTextures>0,this.floatFragmentTextures=!!t.get("OES_texture_float"),this.floatVertexTextures=this.vertexTextures&&this.floatFragmentTextures;var i=r(this.precision);i!==this.precision&&(console.warn("THREE.WebGLRenderer:",this.precision,"not supported, using",i,"instead."),this.precision=i),this.logarithmicDepthBuffer&&(this.logarithmicDepthBuffer=!!t.get("EXT_frag_depth"))},i.WebGLGeometries=function(e,t,n){function r(e){var t=e.geometry;if(void 0!==c[t.id])return c[t.id];t.addEventListener("dispose",a);var r;return t instanceof i.BufferGeometry?r=t:t instanceof i.Geometry&&(void 0===t._bufferGeometry&&(t._bufferGeometry=(new i.BufferGeometry).setFromObject(e)),r=t._bufferGeometry),c[t.id]=r,n.memory.geometries++,r}function a(e){var r=e.target,i=c[r.id];u(i.attributes),r.removeEventListener("dispose",a),delete c[r.id];var o=t.get(r);o.wireframe&&s(o.wireframe),n.memory.geometries--}function o(e){return e instanceof i.InterleavedBufferAttribute?t.get(e.data).__webglBuffer:t.get(e).__webglBuffer}function s(t){var n=o(t);void 0!==n&&(e.deleteBuffer(n),h(t))}function u(e){for(var t in e)s(e[t])}function h(e){e instanceof i.InterleavedBufferAttribute?t["delete"](e.data):t["delete"](e)}var c={};this.get=r},i.WebGLObjects=function(e,t,n){function r(t){var n=l.get(t);t.geometry instanceof i.Geometry&&n.updateFromObject(t);var r=n.index,o=n.attributes;null!==r&&a(r,e.ELEMENT_ARRAY_BUFFER);for(var s in o)a(o[s],e.ARRAY_BUFFER);var u=n.morphAttributes;for(var s in u)for(var h=u[s],c=0,p=h.length;p>c;c++)a(h[c],e.ARRAY_BUFFER);return n}function a(e,n){var r=e instanceof i.InterleavedBufferAttribute?e.data:e,a=t.get(r);void 0===a.__webglBuffer?o(a,r,n):a.version!==r.version&&s(a,r,n)}function o(t,n,r){t.__webglBuffer=e.createBuffer(),e.bindBuffer(r,t.__webglBuffer);var i=n.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW;e.bufferData(r,n.array,i),t.version=n.version}function s(t,n,r){e.bindBuffer(r,t.__webglBuffer),n.dynamic===!1||-1===n.updateRange.count?e.bufferSubData(r,0,n.array):0===n.updateRange.count?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(e.bufferSubData(r,n.updateRange.offset*n.array.BYTES_PER_ELEMENT,n.array.subarray(n.updateRange.offset,n.updateRange.offset+n.updateRange.count)),n.updateRange.count=0),t.version=n.version;
}function u(e){return e instanceof i.InterleavedBufferAttribute?t.get(e.data).__webglBuffer:t.get(e).__webglBuffer}function h(n){var r=t.get(n);if(void 0!==r.wireframe)return r.wireframe;var o=[],s=n.index,u=n.attributes,h=u.position;if(null!==s)for(var l={},p=s.array,f=0,d=p.length;d>f;f+=3){var m=p[f+0],g=p[f+1],v=p[f+2];c(l,m,g)&&o.push(m,g),c(l,g,v)&&o.push(g,v),c(l,v,m)&&o.push(v,m)}else for(var p=u.position.array,f=0,d=p.length/3-1;d>f;f+=3){var m=f+0,g=f+1,v=f+2;o.push(m,g,g,v,v,m)}var y=h.count>65535?Uint32Array:Uint16Array,b=new i.BufferAttribute(new y(o),1);return a(b,e.ELEMENT_ARRAY_BUFFER),r.wireframe=b,b}function c(e,t,n){if(t>n){var r=t;t=n,n=r}var i=e[t];return void 0===i?(e[t]=[n],!0):-1===i.indexOf(n)?(i.push(n),!0):!1}var l=new i.WebGLGeometries(e,t,n);this.getAttributeBuffer=u,this.getWireframeAttribute=h,this.update=r},i.WebGLProgram=function(){function e(e){var t=[];for(var n in e){var r=e[n];r!==!1&&t.push("#define "+n+" "+r)}return t.join("\n")}function t(e,t,n){for(var r={},i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),a=0;i>a;a++){var o=e.getActiveUniform(t,a),s=o.name,u=e.getUniformLocation(t,s),h=s.lastIndexOf("[0]");-1!==h&&h===s.length-3&&(r[s.substr(0,h)]=u),r[s]=u}return r}function n(e,t,n){for(var r={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),a=0;i>a;a++){var o=e.getActiveAttrib(t,a),s=o.name;r[s]=e.getAttribLocation(t,s)}return r}function r(e){return""!==e}var a=0;return function(o,s,u,h){var c=o.context,l=u.defines,p=u.__webglShader.vertexShader,f=u.__webglShader.fragmentShader,d="SHADOWMAP_TYPE_BASIC";h.shadowMapType===i.PCFShadowMap?d="SHADOWMAP_TYPE_PCF":h.shadowMapType===i.PCFSoftShadowMap&&(d="SHADOWMAP_TYPE_PCF_SOFT");var m="ENVMAP_TYPE_CUBE",g="ENVMAP_MODE_REFLECTION",v="ENVMAP_BLENDING_MULTIPLY";if(h.envMap){switch(u.envMap.mapping){case i.CubeReflectionMapping:case i.CubeRefractionMapping:m="ENVMAP_TYPE_CUBE";break;case i.EquirectangularReflectionMapping:case i.EquirectangularRefractionMapping:m="ENVMAP_TYPE_EQUIREC";break;case i.SphericalReflectionMapping:m="ENVMAP_TYPE_SPHERE"}switch(u.envMap.mapping){case i.CubeRefractionMapping:case i.EquirectangularRefractionMapping:g="ENVMAP_MODE_REFRACTION"}switch(u.combine){case i.MultiplyOperation:v="ENVMAP_BLENDING_MULTIPLY";break;case i.MixOperation:v="ENVMAP_BLENDING_MIX";break;case i.AddOperation:v="ENVMAP_BLENDING_ADD"}}var y,b,x=o.gammaFactor>0?o.gammaFactor:1,w=e(l),M=c.createProgram();u instanceof i.RawShaderMaterial?(y="",b=""):(y=["precision "+h.precision+" float;","precision "+h.precision+" int;","#define SHADER_NAME "+u.__webglShader.name,w,h.supportsVertexTextures?"#define VERTEX_TEXTURES":"",o.gammaInput?"#define GAMMA_INPUT":"",o.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+x,"#define MAX_DIR_LIGHTS "+h.maxDirLights,"#define MAX_POINT_LIGHTS "+h.maxPointLights,"#define MAX_SPOT_LIGHTS "+h.maxSpotLights,"#define MAX_HEMI_LIGHTS "+h.maxHemiLights,"#define MAX_SHADOWS "+h.maxShadows,"#define MAX_BONES "+h.maxBones,h.map?"#define USE_MAP":"",h.envMap?"#define USE_ENVMAP":"",h.envMap?"#define "+g:"",h.lightMap?"#define USE_LIGHTMAP":"",h.aoMap?"#define USE_AOMAP":"",h.emissiveMap?"#define USE_EMISSIVEMAP":"",h.bumpMap?"#define USE_BUMPMAP":"",h.normalMap?"#define USE_NORMALMAP":"",h.displacementMap&&h.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",h.specularMap?"#define USE_SPECULARMAP":"",h.alphaMap?"#define USE_ALPHAMAP":"",h.vertexColors?"#define USE_COLOR":"",h.flatShading?"#define FLAT_SHADED":"",h.skinning?"#define USE_SKINNING":"",h.useVertexTexture?"#define BONE_TEXTURE":"",h.morphTargets?"#define USE_MORPHTARGETS":"",h.morphNormals&&h.flatShading===!1?"#define USE_MORPHNORMALS":"",h.doubleSided?"#define DOUBLE_SIDED":"",h.flipSided?"#define FLIP_SIDED":"",h.shadowMapEnabled?"#define USE_SHADOWMAP":"",h.shadowMapEnabled?"#define "+d:"",h.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",h.pointLightShadows>0?"#define POINT_LIGHT_SHADOWS":"",h.sizeAttenuation?"#define USE_SIZEATTENUATION":"",h.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",h.logarithmicDepthBuffer&&o.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif","\n"].filter(r).join("\n"),b=[h.bumpMap||h.normalMap||h.flatShading||u.derivatives?"#extension GL_OES_standard_derivatives : enable":"",h.logarithmicDepthBuffer&&o.extensions.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"","precision "+h.precision+" float;","precision "+h.precision+" int;","#define SHADER_NAME "+u.__webglShader.name,w,"#define MAX_DIR_LIGHTS "+h.maxDirLights,"#define MAX_POINT_LIGHTS "+h.maxPointLights,"#define MAX_SPOT_LIGHTS "+h.maxSpotLights,"#define MAX_HEMI_LIGHTS "+h.maxHemiLights,"#define MAX_SHADOWS "+h.maxShadows,h.alphaTest?"#define ALPHATEST "+h.alphaTest:"",o.gammaInput?"#define GAMMA_INPUT":"",o.gammaOutput?"#define GAMMA_OUTPUT":"","#define GAMMA_FACTOR "+x,h.useFog&&h.fog?"#define USE_FOG":"",h.useFog&&h.fogExp?"#define FOG_EXP2":"",h.map?"#define USE_MAP":"",h.envMap?"#define USE_ENVMAP":"",h.envMap?"#define "+m:"",h.envMap?"#define "+g:"",h.envMap?"#define "+v:"",h.lightMap?"#define USE_LIGHTMAP":"",h.aoMap?"#define USE_AOMAP":"",h.emissiveMap?"#define USE_EMISSIVEMAP":"",h.bumpMap?"#define USE_BUMPMAP":"",h.normalMap?"#define USE_NORMALMAP":"",h.specularMap?"#define USE_SPECULARMAP":"",h.alphaMap?"#define USE_ALPHAMAP":"",h.vertexColors?"#define USE_COLOR":"",h.flatShading?"#define FLAT_SHADED":"",h.metal?"#define METAL":"",h.doubleSided?"#define DOUBLE_SIDED":"",h.flipSided?"#define FLIP_SIDED":"",h.shadowMapEnabled?"#define USE_SHADOWMAP":"",h.shadowMapEnabled?"#define "+d:"",h.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",h.pointLightShadows>0?"#define POINT_LIGHT_SHADOWS":"",h.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",h.logarithmicDepthBuffer&&o.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","\n"].filter(r).join("\n"));var S=y+p,_=b+f,T=i.WebGLShader(c,c.VERTEX_SHADER,S),E=i.WebGLShader(c,c.FRAGMENT_SHADER,_);c.attachShader(M,T),c.attachShader(M,E),void 0!==u.index0AttributeName?c.bindAttribLocation(M,0,u.index0AttributeName):h.morphTargets===!0&&c.bindAttribLocation(M,0,"position"),c.linkProgram(M);var C=c.getProgramInfoLog(M),A=c.getShaderInfoLog(T),L=c.getShaderInfoLog(E),P=!0,k=!0;c.getProgramParameter(M,c.LINK_STATUS)===!1?(P=!1,console.error("THREE.WebGLProgram: shader error: ",c.getError(),"gl.VALIDATE_STATUS",c.getProgramParameter(M,c.VALIDATE_STATUS),"gl.getProgramInfoLog",C,A,L)):""!==C?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",C):(""===A||""===L)&&(k=!1),k&&(this.diagnostics={runnable:P,material:u,programLog:C,vertexShader:{log:A,prefix:y},fragmentShader:{log:L,prefix:b}}),c.deleteShader(T),c.deleteShader(E);var D;this.getUniforms=function(){return void 0===D&&(D=t(c,M)),D};var R;return this.getAttributes=function(){return void 0===R&&(R=n(c,M)),R},this.destroy=function(){c.deleteProgram(M),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=a++,this.code=s,this.usedTimes=1,this.program=M,this.vertexShader=T,this.fragmentShader=E,this}}(),i.WebGLPrograms=function(e,t){function n(e){if(t.floatVertexTextures&&e&&e.skeleton&&e.skeleton.useVertexTexture)return 1024;var n=t.maxVertexUniforms,r=Math.floor((n-20)/4),a=r;return void 0!==e&&e instanceof i.SkinnedMesh&&(a=Math.min(e.skeleton.bones.length,a),a<e.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+e.skeleton.bones.length+", this GPU supports just "+a+" (try OpenGL instead of ANGLE)")),a}function r(e){for(var t=0,n=0,r=0,a=0,o=0,s=e.length;s>o;o++){var u=e[o];u.visible!==!1&&(u instanceof i.DirectionalLight&&t++,u instanceof i.PointLight&&n++,u instanceof i.SpotLight&&r++,u instanceof i.HemisphereLight&&a++)}return{directional:t,point:n,spot:r,hemi:a}}function a(e){for(var t=0,n=0,r=0,a=e.length;a>r;r++){var o=e[r];o.castShadow&&((o instanceof i.SpotLight||o instanceof i.DirectionalLight)&&t++,o instanceof i.PointLight&&(t++,n++))}return{maxShadows:t,pointLightShadows:n}}var o=[],s={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},u=["precision","supportsVertexTextures","map","envMap","envMapMode","lightMap","aoMap","emissiveMap","bumpMap","normalMap","displacementMap","specularMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","maxDirLights","maxPointLights","maxSpotLights","maxHemiLights","maxShadows","shadowMapEnabled","pointLightShadows","shadowMapType","shadowMapDebug","alphaTest","metal","doubleSided","flipSided"];this.getParameters=function(o,u,h,c){var l=s[o.type],p=r(u),f=a(u),d=n(c),m=e.getPrecision();null!==o.precision&&(m=t.getMaxPrecision(o.precision),m!==o.precision&&console.warn("THREE.WebGLRenderer.initMaterial:",o.precision,"not supported, using",m,"instead."));var g={shaderID:l,precision:m,supportsVertexTextures:t.vertexTextures,map:!!o.map,envMap:!!o.envMap,envMapMode:o.envMap&&o.envMap.mapping,lightMap:!!o.lightMap,aoMap:!!o.aoMap,emissiveMap:!!o.emissiveMap,bumpMap:!!o.bumpMap,normalMap:!!o.normalMap,displacementMap:!!o.displacementMap,specularMap:!!o.specularMap,alphaMap:!!o.alphaMap,combine:o.combine,vertexColors:o.vertexColors,fog:h,useFog:o.fog,fogExp:h instanceof i.FogExp2,flatShading:o.shading===i.FlatShading,sizeAttenuation:o.sizeAttenuation,logarithmicDepthBuffer:t.logarithmicDepthBuffer,skinning:o.skinning,maxBones:d,useVertexTexture:t.floatVertexTextures&&c&&c.skeleton&&c.skeleton.useVertexTexture,morphTargets:o.morphTargets,morphNormals:o.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,maxDirLights:p.directional,maxPointLights:p.point,maxSpotLights:p.spot,maxHemiLights:p.hemi,maxShadows:f.maxShadows,pointLightShadows:f.pointLightShadows,shadowMapEnabled:e.shadowMap.enabled&&c.receiveShadow&&f.maxShadows>0,shadowMapType:e.shadowMap.type,shadowMapDebug:e.shadowMap.debug,alphaTest:o.alphaTest,metal:o.metal,doubleSided:o.side===i.DoubleSide,flipSided:o.side===i.BackSide};return g},this.getProgramCode=function(e,t){var n=[];if(t.shaderID?n.push(t.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(var r in e.defines)n.push(r),n.push(e.defines[r]);for(var i=0;i<u.length;i++){var a=u[i];n.push(a),n.push(t[a])}return n.join()},this.acquireProgram=function(t,n,r){for(var a,s=0,u=o.length;u>s;s++){var h=o[s];if(h.code===r){a=h,++a.usedTimes;break}}return void 0===a&&(a=new i.WebGLProgram(e,r,t,n),o.push(a)),a},this.releaseProgram=function(e){if(0===--e.usedTimes){var t=o.indexOf(e);o[t]=o[o.length-1],o.pop(),e.destroy()}},this.programs=o},i.WebGLProperties=function(){var e={};this.get=function(t){var n=t.uuid,r=e[n];return void 0===r&&(r={},e[n]=r),r},this["delete"]=function(t){delete e[t.uuid]},this.clear=function(){e={}}},i.WebGLShader=function(){function e(e){for(var t=e.split("\n"),n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join("\n")}return function(t,n,r){var i=t.createShader(n);return t.shaderSource(i,r),t.compileShader(i),t.getShaderParameter(i,t.COMPILE_STATUS)===!1&&console.error("THREE.WebGLShader: Shader couldn't compile."),""!==t.getShaderInfoLog(i)&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",n===t.VERTEX_SHADER?"vertex":"fragment",t.getShaderInfoLog(i),e(r)),i}}(),i.WebGLShadowMap=function(e,t,n){function r(e,t,n,r){var a=e.geometry,o=null,s=g,u=e.customDepthMaterial;if(n&&(s=v,u=e.customDistanceMaterial),u)o=u;else{var h=void 0!==a.morphTargets&&a.morphTargets.length>0&&t.morphTargets,c=e instanceof i.SkinnedMesh&&t.skinning,l=0;h&&(l|=f),c&&(l|=d),o=s[l]}return o.visible=t.visible,o.wireframe=t.wireframe,o.wireframeLinewidth=t.wireframeLinewidth,n&&void 0!==o.uniforms.lightPos&&o.uniforms.lightPos.value.copy(r),o}function a(e,t){if(e.visible!==!1){if((e instanceof i.Mesh||e instanceof i.Line||e instanceof i.Points)&&e.castShadow&&(e.frustumCulled===!1||u.intersectsObject(e)===!0)){var n=e.material;n.visible===!0&&(e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld),p.push(e))}for(var r=e.children,o=0,s=r.length;s>o;o++)a(r[o],t)}}for(var o=e.context,s=e.state,u=new i.Frustum,h=new i.Matrix4,c=(new i.Vector3,new i.Vector3,new i.Vector3),l=new i.Vector3,p=[],f=1,d=2,m=(f|d)+1,g=new Array(m),v=new Array(m),y=[new i.Vector3(1,0,0),new i.Vector3(-1,0,0),new i.Vector3(0,0,1),new i.Vector3(0,0,-1),new i.Vector3(0,1,0),new i.Vector3(0,-1,0)],b=[new i.Vector3(0,1,0),new i.Vector3(0,1,0),new i.Vector3(0,1,0),new i.Vector3(0,1,0),new i.Vector3(0,0,1),new i.Vector3(0,0,-1)],x=[new i.Vector4,new i.Vector4,new i.Vector4,new i.Vector4,new i.Vector4,new i.Vector4],w=new i.Vector4,M=i.ShaderLib.depthRGBA,S=i.UniformsUtils.clone(M.uniforms),_=i.ShaderLib.distanceRGBA,T=i.UniformsUtils.clone(_.uniforms),E=0;E!==m;++E){var C=0!==(E&f),A=0!==(E&d),L=new i.ShaderMaterial({uniforms:S,vertexShader:M.vertexShader,fragmentShader:M.fragmentShader,morphTargets:C,skinning:A});L._shadowPass=!0,g[E]=L;var P=new i.ShaderMaterial({uniforms:T,vertexShader:_.vertexShader,fragmentShader:_.fragmentShader,morphTargets:C,skinning:A});P._shadowPass=!0,v[E]=P}var k=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=i.PCFShadowMap,this.cullFace=i.CullFaceFront,this.render=function(f){var d,m;if(k.enabled!==!1&&(k.autoUpdate!==!1||k.needsUpdate!==!1)){o.clearColor(1,1,1,1),s.disable(o.BLEND),s.enable(o.CULL_FACE),o.frontFace(o.CCW),o.cullFace(k.cullFace===i.CullFaceFront?o.FRONT:o.BACK),s.setDepthTest(!0),e.getViewport(w);for(var g=0,v=t.length;v>g;g++){var M=t[g];if(M.castShadow===!0){var S=M.shadow,_=S.camera,T=S.mapSize;if(M instanceof i.PointLight){d=6,m=!0;var E=T.x/4,C=T.y/2;x[0].set(2*E,C,E,C),x[1].set(0,C,E,C),x[2].set(3*E,C,E,C),x[3].set(E,C,E,C),x[4].set(3*E,0,E,C),x[5].set(E,0,E,C)}else d=1,m=!1;if(null===S.map){var A=i.LinearFilter;k.type===i.PCFSoftShadowMap&&(A=i.NearestFilter);var L={minFilter:A,magFilter:A,format:i.RGBAFormat};S.map=new i.WebGLRenderTarget(T.x,T.y,L),S.matrix=new i.Matrix4,M instanceof i.SpotLight&&(_.aspect=T.x/T.y),_.updateProjectionMatrix()}var P=S.map,D=S.matrix;l.setFromMatrixPosition(M.matrixWorld),_.position.copy(l),e.setRenderTarget(P),e.clear();for(var R=0;d>R;R++){if(m){c.copy(_.position),c.add(y[R]),_.up.copy(b[R]),_.lookAt(c);var F=x[R];e.setViewport(F.x,F.y,F.z,F.w)}else c.setFromMatrixPosition(M.target.matrixWorld),_.lookAt(c);_.updateMatrixWorld(),_.matrixWorldInverse.getInverse(_.matrixWorld),D.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),D.multiply(_.projectionMatrix),D.multiply(_.matrixWorldInverse),h.multiplyMatrices(_.projectionMatrix,_.matrixWorldInverse),u.setFromMatrix(h),p.length=0,a(f,_);for(var O=0,V=p.length;V>O;O++){var N=p[O],B=n.update(N),U=N.material;if(U instanceof i.MeshFaceMaterial)for(var G=B.groups,I=U.materials,j=0,z=G.length;z>j;j++){var H=G[j],W=I[H.materialIndex];if(W.visible===!0){var X=r(N,W,m,l);e.renderBufferDirect(_,t,null,B,X,N,H)}}else{var X=r(N,U,m,l);e.renderBufferDirect(_,t,null,B,X,N,null)}}}e.resetGLState()}}e.setViewport(w.x,w.y,w.z,w.w);var q=e.getClearColor(),Y=e.getClearAlpha();e.setClearColor(q,Y),s.enable(o.BLEND),k.cullFace===i.CullFaceFront&&o.cullFace(o.BACK),e.resetGLState(),k.needsUpdate=!1}}},i.WebGLState=function(e,t,n){var r=this,a=new Uint8Array(16),o=new Uint8Array(16),s=new Uint8Array(16),u={},h=null,c=null,l=null,p=null,f=null,d=null,m=null,g=null,v=null,y=null,b=null,x=null,w=null,M=null,S=null,_=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),T=void 0,E={};this.init=function(){e.clearColor(0,0,0,1),e.clearDepth(1),e.clearStencil(0),this.enable(e.DEPTH_TEST),e.depthFunc(e.LEQUAL),e.frontFace(e.CCW),e.cullFace(e.BACK),this.enable(e.CULL_FACE),this.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA)},this.initAttributes=function(){for(var e=0,t=a.length;t>e;e++)a[e]=0},this.enableAttribute=function(n){if(a[n]=1,0===o[n]&&(e.enableVertexAttribArray(n),o[n]=1),0!==s[n]){var r=t.get("ANGLE_instanced_arrays");r.vertexAttribDivisorANGLE(n,0),s[n]=0}},this.enableAttributeAndDivisor=function(t,n,r){a[t]=1,0===o[t]&&(e.enableVertexAttribArray(t),o[t]=1),s[t]!==n&&(r.vertexAttribDivisorANGLE(t,n),s[t]=n)},this.disableUnusedAttributes=function(){for(var t=0,n=o.length;n>t;t++)o[t]!==a[t]&&(e.disableVertexAttribArray(t),o[t]=0)},this.enable=function(t){u[t]!==!0&&(e.enable(t),u[t]=!0)},this.disable=function(t){u[t]!==!1&&(e.disable(t),u[t]=!1)},this.getCompressedTextureFormats=function(){if(null===h&&(h=[],t.get("WEBGL_compressed_texture_pvrtc")||t.get("WEBGL_compressed_texture_s3tc")))for(var n=e.getParameter(e.COMPRESSED_TEXTURE_FORMATS),r=0;r<n.length;r++)h.push(n[r]);return h},this.setBlending=function(t,r,a,o,s,u,h){t!==c&&(t===i.NoBlending?this.disable(e.BLEND):t===i.AdditiveBlending?(this.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)):t===i.SubtractiveBlending?(this.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR)):t===i.MultiplyBlending?(this.enable(e.BLEND),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR)):t===i.CustomBlending?this.enable(e.BLEND):(this.enable(e.BLEND),e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)),c=t),t===i.CustomBlending?(s=s||r,u=u||a,h=h||o,(r!==l||s!==d)&&(e.blendEquationSeparate(n(r),n(s)),l=r,d=s),(a!==p||o!==f||u!==m||h!==g)&&(e.blendFuncSeparate(n(a),n(o),n(u),n(h)),p=a,f=o,m=u,g=h)):(l=null,p=null,f=null,d=null,m=null,g=null)},this.setDepthFunc=function(t){if(v!==t){if(t)switch(t){case i.NeverDepth:e.depthFunc(e.NEVER);break;case i.AlwaysDepth:e.depthFunc(e.ALWAYS);break;case i.LessDepth:e.depthFunc(e.LESS);break;case i.LessEqualDepth:e.depthFunc(e.LEQUAL);break;case i.EqualDepth:e.depthFunc(e.EQUAL);break;case i.GreaterEqualDepth:e.depthFunc(e.GEQUAL);break;case i.GreaterDepth:e.depthFunc(e.GREATER);break;case i.NotEqualDepth:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}else e.depthFunc(e.LEQUAL);v=t}},this.setDepthTest=function(t){t?this.enable(e.DEPTH_TEST):this.disable(e.DEPTH_TEST)},this.setDepthWrite=function(t){y!==t&&(e.depthMask(t),y=t)},this.setColorWrite=function(t){b!==t&&(e.colorMask(t,t,t,t),b=t)},this.setFlipSided=function(t){x!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),x=t)},this.setLineWidth=function(t){t!==w&&(e.lineWidth(t),w=t)},this.setPolygonOffset=function(t,n,r){t?this.enable(e.POLYGON_OFFSET_FILL):this.disable(e.POLYGON_OFFSET_FILL),!t||M===n&&S===r||(e.polygonOffset(n,r),M=n,S=r)},this.setScissorTest=function(t){t?this.enable(e.SCISSOR_TEST):this.disable(e.SCISSOR_TEST)},this.activeTexture=function(t){void 0===t&&(t=e.TEXTURE0+_-1),T!==t&&(e.activeTexture(t),T=t)},this.bindTexture=function(t,n){void 0===T&&r.activeTexture();var i=E[T];void 0===i&&(i={type:void 0,texture:void 0},E[T]=i),(i.type!==t||i.texture!==n)&&(e.bindTexture(t,n),i.type=t,i.texture=n)},this.compressedTexImage2D=function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(t){console.error(t)}},this.texImage2D=function(){try{e.texImage2D.apply(e,arguments)}catch(t){console.error(t)}},this.reset=function(){for(var t=0;t<o.length;t++)1===o[t]&&(e.disableVertexAttribArray(t),o[t]=0);u={},h=null,c=null,y=null,b=null,x=null}},i.LensFlarePlugin=function(e,t){function n(){var e=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),t=new Uint16Array([0,1,2,0,2,3]);a=f.createBuffer(),o=f.createBuffer(),f.bindBuffer(f.ARRAY_BUFFER,a),f.bufferData(f.ARRAY_BUFFER,e,f.STATIC_DRAW),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,o),f.bufferData(f.ELEMENT_ARRAY_BUFFER,t,f.STATIC_DRAW),l=f.createTexture(),p=f.createTexture(),d.bindTexture(f.TEXTURE_2D,l),f.texImage2D(f.TEXTURE_2D,0,f.RGB,16,16,0,f.RGB,f.UNSIGNED_BYTE,null),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_S,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_T,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,f.NEAREST),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,f.NEAREST),d.bindTexture(f.TEXTURE_2D,p),f.texImage2D(f.TEXTURE_2D,0,f.RGBA,16,16,0,f.RGBA,f.UNSIGNED_BYTE,null),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_S,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_WRAP_T,f.CLAMP_TO_EDGE),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MAG_FILTER,f.NEAREST),f.texParameteri(f.TEXTURE_2D,f.TEXTURE_MIN_FILTER,f.NEAREST),c=f.getParameter(f.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;var n;n=c?{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")}:{vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join("\n"),fragmentShader:["precision mediump float;","uniform lowp int renderType;","uniform sampler2D map;","uniform sampler2D occlusionMap;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;","visibility = ( 1.0 - visibility / 4.0 );","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * visibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join("\n")},s=r(n),u={vertex:f.getAttribLocation(s,"position"),uv:f.getAttribLocation(s,"uv")},h={renderType:f.getUniformLocation(s,"renderType"),map:f.getUniformLocation(s,"map"),occlusionMap:f.getUniformLocation(s,"occlusionMap"),opacity:f.getUniformLocation(s,"opacity"),color:f.getUniformLocation(s,"color"),scale:f.getUniformLocation(s,"scale"),rotation:f.getUniformLocation(s,"rotation"),screenPosition:f.getUniformLocation(s,"screenPosition")}}function r(t){var n=f.createProgram(),r=f.createShader(f.FRAGMENT_SHADER),i=f.createShader(f.VERTEX_SHADER),a="precision "+e.getPrecision()+" float;\n";return f.shaderSource(r,a+t.fragmentShader),f.shaderSource(i,a+t.vertexShader),f.compileShader(r),f.compileShader(i),f.attachShader(n,r),f.attachShader(n,i),f.linkProgram(n),n}var a,o,s,u,h,c,l,p,f=e.context,d=e.state;this.render=function(r,m,g,v){if(0!==t.length){var y=new i.Vector3,b=v/g,x=.5*g,w=.5*v,M=16/v,S=new i.Vector2(M*b,M),_=new i.Vector3(1,1,0),T=new i.Vector2(1,1);void 0===s&&n(),f.useProgram(s),d.initAttributes(),d.enableAttribute(u.vertex),d.enableAttribute(u.uv),d.disableUnusedAttributes(),f.uniform1i(h.occlusionMap,0),f.uniform1i(h.map,1),f.bindBuffer(f.ARRAY_BUFFER,a),f.vertexAttribPointer(u.vertex,2,f.FLOAT,!1,16,0),f.vertexAttribPointer(u.uv,2,f.FLOAT,!1,16,8),f.bindBuffer(f.ELEMENT_ARRAY_BUFFER,o),d.disable(f.CULL_FACE),f.depthMask(!1);for(var E=0,C=t.length;C>E;E++){M=16/v,S.set(M*b,M);var A=t[E];if(y.set(A.matrixWorld.elements[12],A.matrixWorld.elements[13],A.matrixWorld.elements[14]),y.applyMatrix4(m.matrixWorldInverse),y.applyProjection(m.projectionMatrix),_.copy(y),T.x=_.x*x+x,T.y=_.y*w+w,c||T.x>0&&T.x<g&&T.y>0&&T.y<v){d.activeTexture(f.TEXTURE0),d.bindTexture(f.TEXTURE_2D,null),d.activeTexture(f.TEXTURE1),d.bindTexture(f.TEXTURE_2D,l),f.copyTexImage2D(f.TEXTURE_2D,0,f.RGB,T.x-8,T.y-8,16,16,0),f.uniform1i(h.renderType,0),f.uniform2f(h.scale,S.x,S.y),f.uniform3f(h.screenPosition,_.x,_.y,_.z),d.disable(f.BLEND),d.enable(f.DEPTH_TEST),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0),d.activeTexture(f.TEXTURE0),d.bindTexture(f.TEXTURE_2D,p),f.copyTexImage2D(f.TEXTURE_2D,0,f.RGBA,T.x-8,T.y-8,16,16,0),f.uniform1i(h.renderType,1),d.disable(f.DEPTH_TEST),d.activeTexture(f.TEXTURE1),d.bindTexture(f.TEXTURE_2D,l),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0),A.positionScreen.copy(_),A.customUpdateCallback?A.customUpdateCallback(A):A.updateLensFlares(),f.uniform1i(h.renderType,2),d.enable(f.BLEND);for(var L=0,P=A.lensFlares.length;P>L;L++){var k=A.lensFlares[L];k.opacity>.001&&k.scale>.001&&(_.x=k.x,_.y=k.y,_.z=k.z,M=k.size*k.scale/v,S.x=M*b,S.y=M,f.uniform3f(h.screenPosition,_.x,_.y,_.z),f.uniform2f(h.scale,S.x,S.y),f.uniform1f(h.rotation,k.rotation),f.uniform1f(h.opacity,k.opacity),f.uniform3f(h.color,k.color.r,k.color.g,k.color.b),d.setBlending(k.blending,k.blendEquation,k.blendSrc,k.blendDst),e.setTexture(k.texture,1),f.drawElements(f.TRIANGLES,6,f.UNSIGNED_SHORT,0))}}}d.enable(f.CULL_FACE),d.enable(f.DEPTH_TEST),f.depthMask(!0),e.resetGLState()}}},i.SpritePlugin=function(e,t){function n(){var e=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),t=new Uint16Array([0,1,2,0,2,3]);o=p.createBuffer(),s=p.createBuffer(),p.bindBuffer(p.ARRAY_BUFFER,o),p.bufferData(p.ARRAY_BUFFER,e,p.STATIC_DRAW),p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,s),p.bufferData(p.ELEMENT_ARRAY_BUFFER,t,p.STATIC_DRAW),u=r(),h={position:p.getAttribLocation(u,"position"),uv:p.getAttribLocation(u,"uv")},c={uvOffset:p.getUniformLocation(u,"uvOffset"),uvScale:p.getUniformLocation(u,"uvScale"),rotation:p.getUniformLocation(u,"rotation"),scale:p.getUniformLocation(u,"scale"),color:p.getUniformLocation(u,"color"),map:p.getUniformLocation(u,"map"),opacity:p.getUniformLocation(u,"opacity"),modelViewMatrix:p.getUniformLocation(u,"modelViewMatrix"),projectionMatrix:p.getUniformLocation(u,"projectionMatrix"),fogType:p.getUniformLocation(u,"fogType"),fogDensity:p.getUniformLocation(u,"fogDensity"),fogNear:p.getUniformLocation(u,"fogNear"),fogFar:p.getUniformLocation(u,"fogFar"),fogColor:p.getUniformLocation(u,"fogColor"),alphaTest:p.getUniformLocation(u,"alphaTest")};var n=document.createElement("canvas");n.width=8,n.height=8;var a=n.getContext("2d");a.fillStyle="white",a.fillRect(0,0,8,8),l=new i.Texture(n),l.needsUpdate=!0}function r(){var t=p.createProgram(),n=p.createShader(p.VERTEX_SHADER),r=p.createShader(p.FRAGMENT_SHADER);return p.shaderSource(n,["precision "+e.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join("\n")),p.shaderSource(r,["precision "+e.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join("\n")),p.compileShader(n),p.compileShader(r),p.attachShader(t,n),p.attachShader(t,r),p.linkProgram(t),t}function a(e,t){return e.z!==t.z?t.z-e.z:t.id-e.id}var o,s,u,h,c,l,p=e.context,f=e.state,d=new i.Vector3,m=new i.Quaternion,g=new i.Vector3;this.render=function(r,v){if(0!==t.length){void 0===u&&n(),p.useProgram(u),f.initAttributes(),f.enableAttribute(h.position),f.enableAttribute(h.uv),f.disableUnusedAttributes(),f.disable(p.CULL_FACE),f.enable(p.BLEND),p.bindBuffer(p.ARRAY_BUFFER,o),p.vertexAttribPointer(h.position,2,p.FLOAT,!1,16,0),p.vertexAttribPointer(h.uv,2,p.FLOAT,!1,16,8),p.bindBuffer(p.ELEMENT_ARRAY_BUFFER,s),p.uniformMatrix4fv(c.projectionMatrix,!1,v.projectionMatrix.elements),f.activeTexture(p.TEXTURE0),p.uniform1i(c.map,0);var y=0,b=0,x=r.fog;x?(p.uniform3f(c.fogColor,x.color.r,x.color.g,x.color.b),x instanceof i.Fog?(p.uniform1f(c.fogNear,x.near),p.uniform1f(c.fogFar,x.far),p.uniform1i(c.fogType,1),y=1,b=1):x instanceof i.FogExp2&&(p.uniform1f(c.fogDensity,x.density),
p.uniform1i(c.fogType,2),y=2,b=2)):(p.uniform1i(c.fogType,0),y=0,b=0);for(var w=0,M=t.length;M>w;w++){var S=t[w];S.modelViewMatrix.multiplyMatrices(v.matrixWorldInverse,S.matrixWorld),S.z=-S.modelViewMatrix.elements[14]}t.sort(a);for(var _=[],w=0,M=t.length;M>w;w++){var S=t[w],T=S.material;p.uniform1f(c.alphaTest,T.alphaTest),p.uniformMatrix4fv(c.modelViewMatrix,!1,S.modelViewMatrix.elements),S.matrixWorld.decompose(d,m,g),_[0]=g.x,_[1]=g.y;var E=0;r.fog&&T.fog&&(E=b),y!==E&&(p.uniform1i(c.fogType,E),y=E),null!==T.map?(p.uniform2f(c.uvOffset,T.map.offset.x,T.map.offset.y),p.uniform2f(c.uvScale,T.map.repeat.x,T.map.repeat.y)):(p.uniform2f(c.uvOffset,0,0),p.uniform2f(c.uvScale,1,1)),p.uniform1f(c.opacity,T.opacity),p.uniform3f(c.color,T.color.r,T.color.g,T.color.b),p.uniform1f(c.rotation,T.rotation),p.uniform2fv(c.scale,_),f.setBlending(T.blending,T.blendEquation,T.blendSrc,T.blendDst),f.setDepthTest(T.depthTest),f.setDepthWrite(T.depthWrite),T.map&&T.map.image&&T.map.image.width?e.setTexture(T.map,0):e.setTexture(l,0),p.drawElements(p.TRIANGLES,6,p.UNSIGNED_SHORT,0)}f.enable(p.CULL_FACE),e.resetGLState()}}},i.CurveUtils={tangentQuadraticBezier:function(e,t,n,r){return 2*(1-e)*(n-t)+2*e*(r-n)},tangentCubicBezier:function(e,t,n,r,i){return-3*t*(1-e)*(1-e)+3*n*(1-e)*(1-e)-6*e*n*(1-e)+6*e*r*(1-e)-3*e*e*r+3*e*e*i},tangentSpline:function(e,t,n,r,i){var a=6*e*e-6*e,o=3*e*e-4*e+1,s=-6*e*e+6*e,u=3*e*e-2*e;return a+o+s+u},interpolate:function(e,t,n,r,i){var a=.5*(n-e),o=.5*(r-t),s=i*i,u=i*s;return(2*t-2*n+a+o)*u+(-3*t+3*n-2*a-o)*s+a*i+t}},i.GeometryUtils={merge:function(e,t,n){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var r;t instanceof i.Mesh&&(t.matrixAutoUpdate&&t.updateMatrix(),r=t.matrix,t=t.geometry),e.merge(t,r,n)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}},i.ImageUtils={crossOrigin:void 0,loadTexture:function(e,t,n,r){console.warn("THREE.ImageUtils.loadTexture is being deprecated. Use THREE.TextureLoader() instead.");var a=new i.TextureLoader;a.setCrossOrigin(this.crossOrigin);var o=a.load(e,n,void 0,r);return t&&(o.mapping=t),o},loadTextureCube:function(e,t,n,r){console.warn("THREE.ImageUtils.loadTextureCube is being deprecated. Use THREE.CubeTextureLoader() instead.");var a=new i.CubeTextureLoader;a.setCrossOrigin(this.crossOrigin);var o=a.load(e,n,void 0,r);return t&&(o.mapping=t),o},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}},i.SceneUtils={createMultiMaterialObject:function(e,t){for(var n=new i.Group,r=0,a=t.length;a>r;r++)n.add(new i.Mesh(e,t[r]));return n},detach:function(e,t,n){e.applyMatrix(t.matrixWorld),t.remove(e),n.add(e)},attach:function(e,t,n){var r=new i.Matrix4;r.getInverse(n.matrixWorld),e.applyMatrix(r),t.remove(e),n.add(e)}},i.ShapeUtils={area:function(e){for(var t=e.length,n=0,r=t-1,i=0;t>i;r=i++)n+=e[r].x*e[i].y-e[i].x*e[r].y;return.5*n},triangulate:function(){function e(e,t,n,r,i,a){var o,s,u,h,c,l,p,f,d;if(s=e[a[t]].x,u=e[a[t]].y,h=e[a[n]].x,c=e[a[n]].y,l=e[a[r]].x,p=e[a[r]].y,Number.EPSILON>(h-s)*(p-u)-(c-u)*(l-s))return!1;var m,g,v,y,b,x,w,M,S,_,T,E,C,A,L;for(m=l-h,g=p-c,v=s-l,y=u-p,b=h-s,x=c-u,o=0;i>o;o++)if(f=e[a[o]].x,d=e[a[o]].y,!(f===s&&d===u||f===h&&d===c||f===l&&d===p)&&(w=f-s,M=d-u,S=f-h,_=d-c,T=f-l,E=d-p,L=m*_-g*S,C=b*M-x*w,A=v*E-y*T,L>=-Number.EPSILON&&A>=-Number.EPSILON&&C>=-Number.EPSILON))return!1;return!0}return function(t,n){var r=t.length;if(3>r)return null;var a,o,s,u=[],h=[],c=[];if(i.ShapeUtils.area(t)>0)for(o=0;r>o;o++)h[o]=o;else for(o=0;r>o;o++)h[o]=r-1-o;var l=r,p=2*l;for(o=l-1;l>2;){if(p--<=0)return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),n?c:u;if(a=o,a>=l&&(a=0),o=a+1,o>=l&&(o=0),s=o+1,s>=l&&(s=0),e(t,a,o,s,l,h)){var f,d,m,g,v;for(f=h[a],d=h[o],m=h[s],u.push([t[f],t[d],t[m]]),c.push([h[a],h[o],h[s]]),g=o,v=o+1;l>v;g++,v++)h[g]=h[v];l--,p=2*l}}return n?c:u}}(),triangulateShape:function(e,t){function n(e,t,n){return e.x!==t.x?e.x<t.x?e.x<=n.x&&n.x<=t.x:t.x<=n.x&&n.x<=e.x:e.y<t.y?e.y<=n.y&&n.y<=t.y:t.y<=n.y&&n.y<=e.y}function r(e,t,r,i,a){var o=t.x-e.x,s=t.y-e.y,u=i.x-r.x,h=i.y-r.y,c=e.x-r.x,l=e.y-r.y,p=s*u-o*h,f=s*c-o*l;if(Math.abs(p)>Number.EPSILON){var d;if(p>0){if(0>f||f>p)return[];if(d=h*c-u*l,0>d||d>p)return[]}else{if(f>0||p>f)return[];if(d=h*c-u*l,d>0||p>d)return[]}if(0===d)return!a||0!==f&&f!==p?[e]:[];if(d===p)return!a||0!==f&&f!==p?[t]:[];if(0===f)return[r];if(f===p)return[i];var m=d/p;return[{x:e.x+m*o,y:e.y+m*s}]}if(0!==f||h*c!==u*l)return[];var g=0===o&&0===s,v=0===u&&0===h;if(g&&v)return e.x!==r.x||e.y!==r.y?[]:[e];if(g)return n(r,i,e)?[e]:[];if(v)return n(e,t,r)?[r]:[];var y,b,x,w,M,S,_,T;return 0!==o?(e.x<t.x?(y=e,x=e.x,b=t,w=t.x):(y=t,x=t.x,b=e,w=e.x),r.x<i.x?(M=r,_=r.x,S=i,T=i.x):(M=i,_=i.x,S=r,T=r.x)):(e.y<t.y?(y=e,x=e.y,b=t,w=t.y):(y=t,x=t.y,b=e,w=e.y),r.y<i.y?(M=r,_=r.y,S=i,T=i.y):(M=i,_=i.y,S=r,T=r.y)),_>=x?_>w?[]:w===_?a?[]:[M]:T>=w?[M,b]:[M,S]:x>T?[]:x===T?a?[]:[y]:T>=w?[y,b]:[y,S]}function a(e,t,n,r){var i=t.x-e.x,a=t.y-e.y,o=n.x-e.x,s=n.y-e.y,u=r.x-e.x,h=r.y-e.y,c=i*s-a*o,l=i*h-a*u;if(Math.abs(c)>Number.EPSILON){var p=u*s-h*o;return c>0?l>=0&&p>=0:l>=0||p>=0}return l>0}function o(e,t){function n(e,t){var n=y.length-1,r=e-1;0>r&&(r=n);var i=e+1;i>n&&(i=0);var o=a(y[e],y[r],y[i],s[t]);if(!o)return!1;var u=s.length-1,h=t-1;0>h&&(h=u);var c=t+1;return c>u&&(c=0),o=a(s[t],s[h],s[c],y[e]),o?!0:!1}function i(e,t){var n,i,a;for(n=0;n<y.length;n++)if(i=n+1,i%=y.length,a=r(e,t,y[n],y[i],!0),a.length>0)return!0;return!1}function o(e,n){var i,a,o,s,u;for(i=0;i<b.length;i++)for(a=t[b[i]],o=0;o<a.length;o++)if(s=o+1,s%=a.length,u=r(e,n,a[o],a[s],!0),u.length>0)return!0;return!1}for(var s,u,h,c,l,p,f,d,m,g,v,y=e.concat(),b=[],x=[],w=0,M=t.length;M>w;w++)b.push(w);for(var S=0,_=2*b.length;b.length>0;){if(_--,0>_){console.log("Infinite Loop! Holes left:"+b.length+", Probably Hole outside Shape!");break}for(h=S;h<y.length;h++){c=y[h],u=-1;for(var w=0;w<b.length;w++)if(p=b[w],f=c.x+":"+c.y+":"+p,void 0===x[f]){s=t[p];for(var T=0;T<s.length;T++)if(l=s[T],n(h,T)&&!i(c,l)&&!o(c,l)){u=T,b.splice(w,1),d=y.slice(0,h+1),m=y.slice(h),g=s.slice(u),v=s.slice(0,u+1),y=d.concat(g).concat(v).concat(m),S=h;break}if(u>=0)break;x[f]=!0}if(u>=0)break}}return y}for(var s,u,h,c,l,p,f={},d=e.concat(),m=0,g=t.length;g>m;m++)Array.prototype.push.apply(d,t[m]);for(s=0,u=d.length;u>s;s++)l=d[s].x+":"+d[s].y,void 0!==f[l]&&console.warn("THREE.Shape: Duplicate point",l),f[l]=s;var v=o(e,t),y=i.ShapeUtils.triangulate(v,!1);for(s=0,u=y.length;u>s;s++)for(c=y[s],h=0;3>h;h++)l=c[h].x+":"+c[h].y,p=f[l],void 0!==p&&(c[h]=p);return y.concat()},isClockWise:function(e){return i.ShapeUtils.area(e)<0},b2:function(){function e(e,t){var n=1-e;return n*n*t}function t(e,t){return 2*(1-e)*e*t}function n(e,t){return e*e*t}return function(r,i,a,o){return e(r,i)+t(r,a)+n(r,o)}}(),b3:function(){function e(e,t){var n=1-e;return n*n*n*t}function t(e,t){var n=1-e;return 3*n*n*e*t}function n(e,t){var n=1-e;return 3*n*e*e*t}function r(e,t){return e*e*e*t}return function(i,a,o,s,u){return e(i,a)+t(i,o)+n(i,s)+r(i,u)}}()},i.Audio=function(e){i.Object3D.call(this),this.type="Audio",this.context=e.context,this.source=this.context.createBufferSource(),this.source.onended=this.onEnded.bind(this),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.panner=this.context.createPanner(),this.panner.connect(this.gain),this.autoplay=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1},i.Audio.prototype=Object.create(i.Object3D.prototype),i.Audio.prototype.constructor=i.Audio,i.Audio.prototype.load=function(e){var t=this,n=new XMLHttpRequest;return n.open("GET",e,!0),n.responseType="arraybuffer",n.onload=function(e){t.context.decodeAudioData(this.response,function(e){t.source.buffer=e,t.autoplay&&t.play()})},n.send(),this},i.Audio.prototype.play=function(){if(this.isPlaying===!0)return void console.warn("THREE.Audio: Audio is already playing.");var e=this.context.createBufferSource();e.buffer=this.source.buffer,e.loop=this.source.loop,e.onended=this.source.onended,e.start(0,this.startTime),e.playbackRate.value=this.playbackRate,this.isPlaying=!0,this.source=e,this.connect()},i.Audio.prototype.pause=function(){this.source.stop(),this.startTime=this.context.currentTime},i.Audio.prototype.stop=function(){this.source.stop(),this.startTime=0},i.Audio.prototype.connect=function(){void 0!==this.filter?(this.source.connect(this.filter),this.filter.connect(this.panner)):this.source.connect(this.panner)},i.Audio.prototype.disconnect=function(){void 0!==this.filter?(this.source.disconnect(this.filter),this.filter.disconnect(this.panner)):this.source.disconnect(this.panner)},i.Audio.prototype.setFilter=function(e){this.isPlaying===!0?(this.disconnect(),this.filter=e,this.connect()):this.filter=e},i.Audio.prototype.getFilter=function(){return this.filter},i.Audio.prototype.setPlaybackRate=function(e){this.playbackRate=e,this.isPlaying===!0&&(this.source.playbackRate.value=this.playbackRate)},i.Audio.prototype.getPlaybackRate=function(){return this.playbackRate},i.Audio.prototype.onEnded=function(){this.isPlaying=!1},i.Audio.prototype.setLoop=function(e){this.source.loop=e},i.Audio.prototype.getLoop=function(){return this.source.loop},i.Audio.prototype.setRefDistance=function(e){this.panner.refDistance=e},i.Audio.prototype.getRefDistance=function(){return this.panner.refDistance},i.Audio.prototype.setRolloffFactor=function(e){this.panner.rolloffFactor=e},i.Audio.prototype.getRolloffFactor=function(){return this.panner.rolloffFactor},i.Audio.prototype.setVolume=function(e){this.gain.gain.value=e},i.Audio.prototype.getVolume=function(){return this.gain.gain.value},i.Audio.prototype.updateMatrixWorld=function(){var e=new i.Vector3;return function(t){i.Object3D.prototype.updateMatrixWorld.call(this,t),e.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(e.x,e.y,e.z)}}(),i.AudioListener=function(){i.Object3D.call(this),this.type="AudioListener",this.context=new(window.AudioContext||window.webkitAudioContext)},i.AudioListener.prototype=Object.create(i.Object3D.prototype),i.AudioListener.prototype.constructor=i.AudioListener,i.AudioListener.prototype.updateMatrixWorld=function(){var e=new i.Vector3,t=new i.Quaternion,n=new i.Vector3,r=new i.Vector3;return function(a){i.Object3D.prototype.updateMatrixWorld.call(this,a);var o=this.context.listener,s=this.up;this.matrixWorld.decompose(e,t,n),r.set(0,0,-1).applyQuaternion(t),o.setPosition(e.x,e.y,e.z),o.setOrientation(r.x,r.y,r.z,s.x,s.y,s.z)}}(),i.Curve=function(){},i.Curve.prototype={constructor:i.Curve,getPoint:function(e){return console.warn("THREE.Curve: Warning, getPoint() not implemented!"),null},getPointAt:function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},getPoints:function(e){e||(e=5);var t,n=[];for(t=0;e>=t;t++)n.push(this.getPoint(t/e));return n},getSpacedPoints:function(e){e||(e=5);var t,n=[];for(t=0;e>=t;t++)n.push(this.getPointAt(t/e));return n},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t,n,r=[],i=this.getPoint(0),a=0;for(r.push(0),n=1;e>=n;n++)t=this.getPoint(n/e),a+=t.distanceTo(i),r.push(a),i=t;return this.cacheArcLengths=r,r},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var n,r=this.getLengths(),i=0,a=r.length;n=t?t:e*r[a-1];for(var o,s=0,u=a-1;u>=s;)if(i=Math.floor(s+(u-s)/2),o=r[i]-n,0>o)s=i+1;else{if(!(o>0)){u=i;break}u=i-1}if(i=u,r[i]===n){var h=i/(a-1);return h}var c=r[i],l=r[i+1],p=l-c,f=(n-c)/p,h=(i+f)/(a-1);return h},getTangent:function(e){var t=1e-4,n=e-t,r=e+t;0>n&&(n=0),r>1&&(r=1);var i=this.getPoint(n),a=this.getPoint(r),o=a.clone().sub(i);return o.normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)}},i.Curve.Utils=i.CurveUtils,i.Curve.create=function(e,t){return e.prototype=Object.create(i.Curve.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e},i.CurvePath=function(){this.curves=[],this.autoClose=!1},i.CurvePath.prototype=Object.create(i.Curve.prototype),i.CurvePath.prototype.constructor=i.CurvePath,i.CurvePath.prototype.add=function(e){this.curves.push(e)},i.CurvePath.prototype.closePath=function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new i.LineCurve(t,e))},i.CurvePath.prototype.getPoint=function(e){for(var t=e*this.getLength(),n=this.getCurveLengths(),r=0;r<n.length;){if(n[r]>=t){var i=n[r]-t,a=this.curves[r],o=1-i/a.getLength();return a.getPointAt(o)}r++}return null},i.CurvePath.prototype.getLength=function(){var e=this.getCurveLengths();return e[e.length-1]},i.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,n=0,r=this.curves.length;r>n;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},i.CurvePath.prototype.createPointsGeometry=function(e){var t=this.getPoints(e,!0);return this.createGeometry(t)},i.CurvePath.prototype.createSpacedPointsGeometry=function(e){var t=this.getSpacedPoints(e,!0);return this.createGeometry(t)},i.CurvePath.prototype.createGeometry=function(e){for(var t=new i.Geometry,n=0,r=e.length;r>n;n++){var a=e[n];t.vertices.push(new i.Vector3(a.x,a.y,a.z||0))}return t},i.Path=function(e){i.CurvePath.call(this),this.actions=[],e&&this.fromPoints(e)},i.Path.prototype=Object.create(i.CurvePath.prototype),i.Path.prototype.constructor=i.Path,i.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;n>t;t++)this.lineTo(e[t].x,e[t].y)},i.Path.prototype.moveTo=function(e,t){this.actions.push({action:"moveTo",args:[e,t]})},i.Path.prototype.lineTo=function(e,t){var n=this.actions[this.actions.length-1].args,r=n[n.length-2],a=n[n.length-1],o=new i.LineCurve(new i.Vector2(r,a),new i.Vector2(e,t));this.curves.push(o),this.actions.push({action:"lineTo",args:[e,t]})},i.Path.prototype.quadraticCurveTo=function(e,t,n,r){var a=this.actions[this.actions.length-1].args,o=a[a.length-2],s=a[a.length-1],u=new i.QuadraticBezierCurve(new i.Vector2(o,s),new i.Vector2(e,t),new i.Vector2(n,r));this.curves.push(u),this.actions.push({action:"quadraticCurveTo",args:[e,t,n,r]})},i.Path.prototype.bezierCurveTo=function(e,t,n,r,a,o){var s=this.actions[this.actions.length-1].args,u=s[s.length-2],h=s[s.length-1],c=new i.CubicBezierCurve(new i.Vector2(u,h),new i.Vector2(e,t),new i.Vector2(n,r),new i.Vector2(a,o));this.curves.push(c),this.actions.push({action:"bezierCurveTo",args:[e,t,n,r,a,o]})},i.Path.prototype.splineThru=function(e){var t=Array.prototype.slice.call(arguments),n=this.actions[this.actions.length-1].args,r=n[n.length-2],a=n[n.length-1],o=[new i.Vector2(r,a)];Array.prototype.push.apply(o,e);var s=new i.SplineCurve(o);this.curves.push(s),this.actions.push({action:"splineThru",args:t})},i.Path.prototype.arc=function(e,t,n,r,i,a){var o=this.actions[this.actions.length-1].args,s=o[o.length-2],u=o[o.length-1];this.absarc(e+s,t+u,n,r,i,a)},i.Path.prototype.absarc=function(e,t,n,r,i,a){this.absellipse(e,t,n,n,r,i,a)},i.Path.prototype.ellipse=function(e,t,n,r,i,a,o,s){var u=this.actions[this.actions.length-1].args,h=u[u.length-2],c=u[u.length-1];this.absellipse(e+h,t+c,n,r,i,a,o,s)},i.Path.prototype.absellipse=function(e,t,n,r,a,o,s,u){var h=[e,t,n,r,a,o,s,u||0],c=new i.EllipseCurve(e,t,n,r,a,o,s,u);this.curves.push(c);var l=c.getPoint(1);h.push(l.x),h.push(l.y),this.actions.push({action:"ellipse",args:h})},i.Path.prototype.getSpacedPoints=function(e,t){e||(e=40);for(var n=[],r=0;e>r;r++)n.push(this.getPoint(r/e));return n},i.Path.prototype.getPoints=function(e,t){e=e||12;for(var n,r,a,o,s,u,h,c,l,p,f,d=i.ShapeUtils.b2,m=i.ShapeUtils.b3,g=[],v=0,y=this.actions.length;y>v;v++){var b=this.actions[v],x=b.action,w=b.args;switch(x){case"moveTo":g.push(new i.Vector2(w[0],w[1]));break;case"lineTo":g.push(new i.Vector2(w[0],w[1]));break;case"quadraticCurveTo":n=w[2],r=w[3],s=w[0],u=w[1],g.length>0?(l=g[g.length-1],h=l.x,c=l.y):(l=this.actions[v-1].args,h=l[l.length-2],c=l[l.length-1]);for(var M=1;e>=M;M++){var S=M/e;p=d(S,h,s,n),f=d(S,c,u,r),g.push(new i.Vector2(p,f))}break;case"bezierCurveTo":n=w[4],r=w[5],s=w[0],u=w[1],a=w[2],o=w[3],g.length>0?(l=g[g.length-1],h=l.x,c=l.y):(l=this.actions[v-1].args,h=l[l.length-2],c=l[l.length-1]);for(var M=1;e>=M;M++){var S=M/e;p=m(S,h,s,a,n),f=m(S,c,u,o,r),g.push(new i.Vector2(p,f))}break;case"splineThru":l=this.actions[v-1].args;var _=new i.Vector2(l[l.length-2],l[l.length-1]),T=[_],E=e*w[0].length;T=T.concat(w[0]);for(var C=new i.SplineCurve(T),M=1;E>=M;M++)g.push(C.getPointAt(M/E));break;case"arc":for(var A,L=w[0],P=w[1],k=w[2],D=w[3],R=w[4],F=!!w[5],O=R-D,V=2*e,M=1;V>=M;M++){var S=M/V;F||(S=1-S),A=D+S*O,p=L+k*Math.cos(A),f=P+k*Math.sin(A),g.push(new i.Vector2(p,f))}break;case"ellipse":var A,N,B,L=w[0],P=w[1],U=w[2],G=w[3],D=w[4],R=w[5],F=!!w[6],I=w[7],O=R-D,V=2*e;0!==I&&(N=Math.cos(I),B=Math.sin(I));for(var M=1;V>=M;M++){var S=M/V;if(F||(S=1-S),A=D+S*O,p=L+U*Math.cos(A),f=P+G*Math.sin(A),0!==I){var j=p,z=f;p=(j-L)*N-(z-P)*B+L,f=(j-L)*B+(z-P)*N+P}g.push(new i.Vector2(p,f))}}}var H=g[g.length-1];return Math.abs(H.x-g[0].x)<Number.EPSILON&&Math.abs(H.y-g[0].y)<Number.EPSILON&&g.splice(g.length-1,1),t&&g.push(g[0]),g},i.Path.prototype.toShapes=function(e,t){function n(e){for(var t=[],n=new i.Path,r=0,a=e.length;a>r;r++){var o=e[r],s=o.args,u=o.action;"moveTo"===u&&0!==n.actions.length&&(t.push(n),n=new i.Path),n[u].apply(n,s)}return 0!==n.actions.length&&t.push(n),t}function r(e){for(var t=[],n=0,r=e.length;r>n;n++){var a=e[n],o=new i.Shape;o.actions=a.actions,o.curves=a.curves,t.push(o)}return t}function a(e,t){for(var n=t.length,r=!1,i=n-1,a=0;n>a;i=a++){var o=t[i],s=t[a],u=s.x-o.x,h=s.y-o.y;if(Math.abs(h)>Number.EPSILON){if(0>h&&(o=t[a],u=-u,s=t[i],h=-h),e.y<o.y||e.y>s.y)continue;if(e.y===o.y){if(e.x===o.x)return!0}else{var c=h*(e.x-o.x)-u*(e.y-o.y);if(0===c)return!0;if(0>c)continue;r=!r}}else{if(e.y!==o.y)continue;if(s.x<=e.x&&e.x<=o.x||o.x<=e.x&&e.x<=s.x)return!0}}return r}var o=i.ShapeUtils.isClockWise,s=n(this.actions);if(0===s.length)return[];if(t===!0)return r(s);var u,h,c,l=[];if(1===s.length)return h=s[0],c=new i.Shape,c.actions=h.actions,c.curves=h.curves,l.push(c),l;var p=!o(s[0].getPoints());p=e?!p:p;var f,d=[],m=[],g=[],v=0;m[v]=void 0,g[v]=[];for(var y=0,b=s.length;b>y;y++)h=s[y],f=h.getPoints(),u=o(f),u=e?!u:u,u?(!p&&m[v]&&v++,m[v]={s:new i.Shape,p:f},m[v].s.actions=h.actions,m[v].s.curves=h.curves,p&&v++,g[v]=[]):g[v].push({h:h,p:f[0]});if(!m[0])return r(s);if(m.length>1){for(var x=!1,w=[],M=0,S=m.length;S>M;M++)d[M]=[];for(var M=0,S=m.length;S>M;M++)for(var _=g[M],T=0;T<_.length;T++){for(var E=_[T],C=!0,A=0;A<m.length;A++)a(E.p,m[A].p)&&(M!==A&&w.push({froms:M,tos:A,hole:T}),C?(C=!1,d[A].push(E)):x=!0);C&&d[M].push(E)}w.length>0&&(x||(g=d))}for(var L,y=0,P=m.length;P>y;y++){c=m[y].s,l.push(c),L=g[y];for(var k=0,D=L.length;D>k;k++)c.holes.push(L[k].h)}return l},i.Shape=function(){i.Path.apply(this,arguments),this.holes=[]},i.Shape.prototype=Object.create(i.Path.prototype),i.Shape.prototype.constructor=i.Shape,i.Shape.prototype.extrude=function(e){return new i.ExtrudeGeometry(this,e)},i.Shape.prototype.makeGeometry=function(e){return new i.ShapeGeometry(this,e)},i.Shape.prototype.getPointsHoles=function(e){for(var t=[],n=0,r=this.holes.length;r>n;n++)t[n]=this.holes[n].getPoints(e);return t},i.Shape.prototype.extractAllPoints=function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},i.Shape.prototype.extractPoints=function(e){return this.extractAllPoints(e)},i.Shape.Utils=i.ShapeUtils,i.LineCurve=function(e,t){this.v1=e,this.v2=t},i.LineCurve.prototype=Object.create(i.Curve.prototype),i.LineCurve.prototype.constructor=i.LineCurve,i.LineCurve.prototype.getPoint=function(e){var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t},i.LineCurve.prototype.getPointAt=function(e){return this.getPoint(e)},i.LineCurve.prototype.getTangent=function(e){var t=this.v2.clone().sub(this.v1);return t.normalize()},i.QuadraticBezierCurve=function(e,t,n){this.v0=e,this.v1=t,this.v2=n},i.QuadraticBezierCurve.prototype=Object.create(i.Curve.prototype),i.QuadraticBezierCurve.prototype.constructor=i.QuadraticBezierCurve,i.QuadraticBezierCurve.prototype.getPoint=function(e){var t=i.ShapeUtils.b2;return new i.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y))},i.QuadraticBezierCurve.prototype.getTangent=function(e){var t=i.CurveUtils.tangentQuadraticBezier;return new i.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y)).normalize()},i.CubicBezierCurve=function(e,t,n,r){this.v0=e,this.v1=t,this.v2=n,this.v3=r},i.CubicBezierCurve.prototype=Object.create(i.Curve.prototype),i.CubicBezierCurve.prototype.constructor=i.CubicBezierCurve,i.CubicBezierCurve.prototype.getPoint=function(e){var t=i.ShapeUtils.b3;return new i.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y))},i.CubicBezierCurve.prototype.getTangent=function(e){var t=i.CurveUtils.tangentCubicBezier;return new i.Vector2(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y)).normalize()},i.SplineCurve=function(e){this.points=void 0==e?[]:e},i.SplineCurve.prototype=Object.create(i.Curve.prototype),i.SplineCurve.prototype.constructor=i.SplineCurve,i.SplineCurve.prototype.getPoint=function(e){var t=this.points,n=(t.length-1)*e,r=Math.floor(n),a=n-r,o=t[0===r?r:r-1],s=t[r],u=t[r>t.length-2?t.length-1:r+1],h=t[r>t.length-3?t.length-1:r+2],c=i.CurveUtils.interpolate;return new i.Vector2(c(o.x,s.x,u.x,h.x,a),c(o.y,s.y,u.y,h.y,a))},i.EllipseCurve=function(e,t,n,r,i,a,o,s){this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=r,this.aStartAngle=i,this.aEndAngle=a,this.aClockwise=o,this.aRotation=s||0},i.EllipseCurve.prototype=Object.create(i.Curve.prototype),i.EllipseCurve.prototype.constructor=i.EllipseCurve,i.EllipseCurve.prototype.getPoint=function(e){var t=this.aEndAngle-this.aStartAngle;0>t&&(t+=2*Math.PI),t>2*Math.PI&&(t-=2*Math.PI);var n;n=this.aClockwise===!0?this.aEndAngle+(1-e)*(2*Math.PI-t):this.aStartAngle+e*t;var r=this.aX+this.xRadius*Math.cos(n),a=this.aY+this.yRadius*Math.sin(n);if(0!==this.aRotation){var o=Math.cos(this.aRotation),s=Math.sin(this.aRotation),u=r,h=a;r=(u-this.aX)*o-(h-this.aY)*s+this.aX,a=(u-this.aX)*s+(h-this.aY)*o+this.aY}return new i.Vector2(r,a)},i.ArcCurve=function(e,t,n,r,a,o){i.EllipseCurve.call(this,e,t,n,n,r,a,o)},i.ArcCurve.prototype=Object.create(i.EllipseCurve.prototype),i.ArcCurve.prototype.constructor=i.ArcCurve,i.LineCurve3=i.Curve.create(function(e,t){this.v1=e,this.v2=t},function(e){var t=new i.Vector3;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t}),i.QuadraticBezierCurve3=i.Curve.create(function(e,t,n){this.v0=e,this.v1=t,this.v2=n},function(e){var t=i.ShapeUtils.b2;return new i.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y),t(e,this.v0.z,this.v1.z,this.v2.z))}),i.CubicBezierCurve3=i.Curve.create(function(e,t,n,r){this.v0=e,this.v1=t,this.v2=n,this.v3=r},function(e){var t=i.ShapeUtils.b3;return new i.Vector3(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z))}),i.SplineCurve3=i.Curve.create(function(e){console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"),this.points=void 0==e?[]:e},function(e){var t=this.points,n=(t.length-1)*e,r=Math.floor(n),a=n-r,o=t[0==r?r:r-1],s=t[r],u=t[r>t.length-2?t.length-1:r+1],h=t[r>t.length-3?t.length-1:r+2],c=i.CurveUtils.interpolate;return new i.Vector3(c(o.x,s.x,u.x,h.x,a),c(o.y,s.y,u.y,h.y,a),c(o.z,s.z,u.z,h.z,a))}),i.CatmullRomCurve3=function(){function e(){}var t=new i.Vector3,n=new e,r=new e,a=new e;return e.prototype.init=function(e,t,n,r){this.c0=e,this.c1=n,this.c2=-3*e+3*t-2*n-r,this.c3=2*e-2*t+n+r},e.prototype.initNonuniformCatmullRom=function(e,t,n,r,i,a,o){var s=(t-e)/i-(n-e)/(i+a)+(n-t)/a,u=(n-t)/a-(r-t)/(a+o)+(r-n)/o;s*=a,u*=a,this.init(t,n,s,u)},e.prototype.initCatmullRom=function(e,t,n,r,i){this.init(t,n,i*(n-e),i*(r-t))},e.prototype.calc=function(e){var t=e*e,n=t*e;return this.c0+this.c1*e+this.c2*t+this.c3*n},i.Curve.create(function(e){this.points=e||[]},function(e){var o,s,u,h,c=this.points;h=c.length,2>h&&console.log("duh, you need at least 2 points"),o=(h-1)*e,s=Math.floor(o),u=o-s,0===u&&s===h-1&&(s=h-2,u=1);var l,p,f,d;if(0===s?(t.subVectors(c[0],c[1]).add(c[0]),l=t):l=c[s-1],p=c[s],f=c[s+1],h>s+2?d=c[s+2]:(t.subVectors(c[h-1],c[h-2]).add(c[h-2]),d=t),void 0===this.type||"centripetal"===this.type||"chordal"===this.type){var m="chordal"===this.type?.5:.25,g=Math.pow(l.distanceToSquared(p),m),v=Math.pow(p.distanceToSquared(f),m),y=Math.pow(f.distanceToSquared(d),m);1e-4>v&&(v=1),1e-4>g&&(g=v),1e-4>y&&(y=v),n.initNonuniformCatmullRom(l.x,p.x,f.x,d.x,g,v,y),r.initNonuniformCatmullRom(l.y,p.y,f.y,d.y,g,v,y),a.initNonuniformCatmullRom(l.z,p.z,f.z,d.z,g,v,y)}else if("catmullrom"===this.type){var b=void 0!==this.tension?this.tension:.5;n.initCatmullRom(l.x,p.x,f.x,d.x,b),r.initCatmullRom(l.y,p.y,f.y,d.y,b),a.initCatmullRom(l.z,p.z,f.z,d.z,b)}var x=new i.Vector3(n.calc(u),r.calc(u),a.calc(u));return x})}(),i.ClosedSplineCurve3=i.Curve.create(function(e){this.points=void 0==e?[]:e},function(e){var t=this.points,n=(t.length-0)*e,r=Math.floor(n),a=n-r;r+=r>0?0:(Math.floor(Math.abs(r)/t.length)+1)*t.length;var o=t[(r-1)%t.length],s=t[r%t.length],u=t[(r+1)%t.length],h=t[(r+2)%t.length],c=i.CurveUtils.interpolate;return new i.Vector3(c(o.x,s.x,u.x,h.x,a),c(o.y,s.y,u.y,h.y,a),c(o.z,s.z,u.z,h.z,a))}),i.BoxGeometry=function(e,t,n,r,a,o){function s(e,t,n,r,a,o,s,h){var c,l,p,f=u.widthSegments,d=u.heightSegments,m=a/2,g=o/2,v=u.vertices.length;"x"===e&&"y"===t||"y"===e&&"x"===t?c="z":"x"===e&&"z"===t||"z"===e&&"x"===t?(c="y",d=u.depthSegments):("z"===e&&"y"===t||"y"===e&&"z"===t)&&(c="x",f=u.depthSegments);var y=f+1,b=d+1,x=a/f,w=o/d,M=new i.Vector3;for(M[c]=s>0?1:-1,p=0;b>p;p++)for(l=0;y>l;l++){var S=new i.Vector3;S[e]=(l*x-m)*n,S[t]=(p*w-g)*r,S[c]=s,u.vertices.push(S)}for(p=0;d>p;p++)for(l=0;f>l;l++){var _=l+y*p,T=l+y*(p+1),E=l+1+y*(p+1),C=l+1+y*p,A=new i.Vector2(l/f,1-p/d),L=new i.Vector2(l/f,1-(p+1)/d),P=new i.Vector2((l+1)/f,1-(p+1)/d),k=new i.Vector2((l+1)/f,1-p/d),D=new i.Face3(_+v,T+v,C+v);D.normal.copy(M),D.vertexNormals.push(M.clone(),M.clone(),M.clone()),D.materialIndex=h,u.faces.push(D),u.faceVertexUvs[0].push([A,L,k]),D=new i.Face3(T+v,E+v,C+v),D.normal.copy(M),D.vertexNormals.push(M.clone(),M.clone(),M.clone()),D.materialIndex=h,u.faces.push(D),u.faceVertexUvs[0].push([L.clone(),P,k.clone()])}}i.Geometry.call(this),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:r,heightSegments:a,depthSegments:o},this.widthSegments=r||1,this.heightSegments=a||1,this.depthSegments=o||1;var u=this,h=e/2,c=t/2,l=n/2;s("z","y",-1,-1,n,t,h,0),s("z","y",1,-1,n,t,-h,1),s("x","z",1,1,e,n,c,2),s("x","z",1,-1,e,n,-c,3),s("x","y",1,-1,e,t,l,4),s("x","y",-1,-1,e,t,-l,5),this.mergeVertices()},i.BoxGeometry.prototype=Object.create(i.Geometry.prototype),i.BoxGeometry.prototype.constructor=i.BoxGeometry,i.BoxGeometry.prototype.clone=function(){var e=this.parameters;return new i.BoxGeometry(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)},i.CubeGeometry=i.BoxGeometry,i.CircleGeometry=function(e,t,n,r){i.Geometry.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},this.fromBufferGeometry(new i.CircleBufferGeometry(e,t,n,r))},i.CircleGeometry.prototype=Object.create(i.Geometry.prototype),i.CircleGeometry.prototype.constructor=i.CircleGeometry,i.CircleGeometry.prototype.clone=function(){var e=this.parameters;return new i.CircleGeometry(e.radius,e.segments,e.thetaStart,e.thetaLength)},i.CircleBufferGeometry=function(e,t,n,r){i.BufferGeometry.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:r},e=e||50,t=void 0!==t?Math.max(3,t):8,n=void 0!==n?n:0,r=void 0!==r?r:2*Math.PI;var a=t+2,o=new Float32Array(3*a),s=new Float32Array(3*a),u=new Float32Array(2*a);s[2]=1,u[0]=.5,u[1]=.5;for(var h=0,c=3,l=2;t>=h;h++,c+=3,l+=2){var p=n+h/t*r;o[c]=e*Math.cos(p),o[c+1]=e*Math.sin(p),s[c+2]=1,u[l]=(o[c]/e+1)/2,u[l+1]=(o[c+1]/e+1)/2}for(var f=[],c=1;t>=c;c++)f.push(c,c+1,0);this.setIndex(new i.BufferAttribute(new Uint16Array(f),1)),this.addAttribute("position",new i.BufferAttribute(o,3)),this.addAttribute("normal",new i.BufferAttribute(s,3)),this.addAttribute("uv",new i.BufferAttribute(u,2)),this.boundingSphere=new i.Sphere(new i.Vector3,e)},i.CircleBufferGeometry.prototype=Object.create(i.BufferGeometry.prototype),i.CircleBufferGeometry.prototype.constructor=i.CircleBufferGeometry,i.CircleBufferGeometry.prototype.clone=function(){var e=this.parameters;return new i.CircleBufferGeometry(e.radius,e.segments,e.thetaStart,e.thetaLength)},i.CylinderGeometry=function(e,t,n,r,a,o,s,u){i.Geometry.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:r,heightSegments:a,openEnded:o,thetaStart:s,thetaLength:u},e=void 0!==e?e:20,t=void 0!==t?t:20,n=void 0!==n?n:100,r=r||8,a=a||1,o=void 0!==o?o:!1,s=void 0!==s?s:0,u=void 0!==u?u:2*Math.PI;var h,c,l=n/2,p=[],f=[];for(c=0;a>=c;c++){var d=[],m=[],g=c/a,v=g*(t-e)+e;for(h=0;r>=h;h++){var y=h/r,b=new i.Vector3;b.x=v*Math.sin(y*u+s),b.y=-g*n+l,b.z=v*Math.cos(y*u+s),this.vertices.push(b),d.push(this.vertices.length-1),m.push(new i.Vector2(y,1-g))}p.push(d),f.push(m)}var x,w,M=(t-e)/n;for(h=0;r>h;h++)for(0!==e?(x=this.vertices[p[0][h]].clone(),w=this.vertices[p[0][h+1]].clone()):(x=this.vertices[p[1][h]].clone(),w=this.vertices[p[1][h+1]].clone()),x.setY(Math.sqrt(x.x*x.x+x.z*x.z)*M).normalize(),w.setY(Math.sqrt(w.x*w.x+w.z*w.z)*M).normalize(),c=0;a>c;c++){var S=p[c][h],_=p[c+1][h],T=p[c+1][h+1],E=p[c][h+1],C=x.clone(),A=x.clone(),L=w.clone(),P=w.clone(),k=f[c][h].clone(),D=f[c+1][h].clone(),R=f[c+1][h+1].clone(),F=f[c][h+1].clone();this.faces.push(new i.Face3(S,_,E,[C,A,P])),this.faceVertexUvs[0].push([k,D,F]),this.faces.push(new i.Face3(_,T,E,[A.clone(),L,P.clone()])),this.faceVertexUvs[0].push([D.clone(),R,F.clone()])}if(o===!1&&e>0)for(this.vertices.push(new i.Vector3(0,l,0)),h=0;r>h;h++){var S=p[0][h],_=p[0][h+1],T=this.vertices.length-1,C=new i.Vector3(0,1,0),A=new i.Vector3(0,1,0),L=new i.Vector3(0,1,0),k=f[0][h].clone(),D=f[0][h+1].clone(),R=new i.Vector2(D.x,0);this.faces.push(new i.Face3(S,_,T,[C,A,L],void 0,1)),this.faceVertexUvs[0].push([k,D,R])}if(o===!1&&t>0)for(this.vertices.push(new i.Vector3(0,-l,0)),h=0;r>h;h++){var S=p[a][h+1],_=p[a][h],T=this.vertices.length-1,C=new i.Vector3(0,-1,0),A=new i.Vector3(0,-1,0),L=new i.Vector3(0,-1,0),k=f[a][h+1].clone(),D=f[a][h].clone(),R=new i.Vector2(D.x,1);this.faces.push(new i.Face3(S,_,T,[C,A,L],void 0,2)),this.faceVertexUvs[0].push([k,D,R])}this.computeFaceNormals()},i.CylinderGeometry.prototype=Object.create(i.Geometry.prototype),i.CylinderGeometry.prototype.constructor=i.CylinderGeometry,i.CylinderGeometry.prototype.clone=function(){var e=this.parameters;return new i.CylinderGeometry(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)},i.EdgesGeometry=function(e,t){function n(e,t){return e-t}i.BufferGeometry.call(this),t=void 0!==t?t:1;
var r,a=Math.cos(i.Math.degToRad(t)),o=[0,0],s={},u=["a","b","c"];e instanceof i.BufferGeometry?(r=new i.Geometry,r.fromBufferGeometry(e)):r=e.clone(),r.mergeVertices(),r.computeFaceNormals();for(var h=r.vertices,c=r.faces,l=0,p=c.length;p>l;l++)for(var f=c[l],d=0;3>d;d++){o[0]=f[u[d]],o[1]=f[u[(d+1)%3]],o.sort(n);var m=o.toString();void 0===s[m]?s[m]={vert1:o[0],vert2:o[1],face1:l,face2:void 0}:s[m].face2=l}var g=[];for(var m in s){var v=s[m];if(void 0===v.face2||c[v.face1].normal.dot(c[v.face2].normal)<=a){var y=h[v.vert1];g.push(y.x),g.push(y.y),g.push(y.z),y=h[v.vert2],g.push(y.x),g.push(y.y),g.push(y.z)}}this.addAttribute("position",new i.BufferAttribute(new Float32Array(g),3))},i.EdgesGeometry.prototype=Object.create(i.BufferGeometry.prototype),i.EdgesGeometry.prototype.constructor=i.EdgesGeometry,i.ExtrudeGeometry=function(e,t){return"undefined"==typeof e?void(e=[]):(i.Geometry.call(this),this.type="ExtrudeGeometry",e=Array.isArray(e)?e:[e],this.addShapeList(e,t),void this.computeFaceNormals())},i.ExtrudeGeometry.prototype=Object.create(i.Geometry.prototype),i.ExtrudeGeometry.prototype.constructor=i.ExtrudeGeometry,i.ExtrudeGeometry.prototype.addShapeList=function(e,t){for(var n=e.length,r=0;n>r;r++){var i=e[r];this.addShape(i,t)}},i.ExtrudeGeometry.prototype.addShape=function(e,t){function n(e,t,n){return t||console.error("THREE.ExtrudeGeometry: vec does not exist"),t.clone().multiplyScalar(n).add(e)}function r(e,t,n){var r,a,o=1,s=e.x-t.x,u=e.y-t.y,h=n.x-e.x,c=n.y-e.y,l=s*s+u*u,p=s*c-u*h;if(Math.abs(p)>Number.EPSILON){var f=Math.sqrt(l),d=Math.sqrt(h*h+c*c),m=t.x-u/f,g=t.y+s/f,v=n.x-c/d,y=n.y+h/d,b=((v-m)*c-(y-g)*h)/(s*c-u*h);r=m+s*b-e.x,a=g+u*b-e.y;var x=r*r+a*a;if(2>=x)return new i.Vector2(r,a);o=Math.sqrt(x/2)}else{var w=!1;s>Number.EPSILON?h>Number.EPSILON&&(w=!0):s<-Number.EPSILON?h<-Number.EPSILON&&(w=!0):Math.sign(u)===Math.sign(c)&&(w=!0),w?(r=-u,a=s,o=Math.sqrt(l)):(r=s,a=u,o=Math.sqrt(l/2))}return new i.Vector2(r/o,a/o)}function a(){if(x){var e=0,t=z*e;for(X=0;H>X;X++)j=O[X],h(j[2]+t,j[1]+t,j[0]+t);for(e=M+2*b,t=z*e,X=0;H>X;X++)j=O[X],h(j[0]+t,j[1]+t,j[2]+t)}else{for(X=0;H>X;X++)j=O[X],h(j[2],j[1],j[0]);for(X=0;H>X;X++)j=O[X],h(j[0]+z*M,j[1]+z*M,j[2]+z*M)}}function o(){var e=0;for(s(V,e),e+=V.length,C=0,A=R.length;A>C;C++)E=R[C],s(E,e),e+=E.length}function s(e,t){var n,r;for(X=e.length;--X>=0;){n=X,r=X-1,0>r&&(r=e.length-1);var i=0,a=M+2*b;for(i=0;a>i;i++){var o=z*i,s=z*(i+1),u=t+n+o,h=t+r+o,l=t+r+s,p=t+n+s;c(u,h,l,p,e,i,a,n,r)}}}function u(e,t,n){L.vertices.push(new i.Vector3(e,t,n))}function h(e,t,n){e+=P,t+=P,n+=P,L.faces.push(new i.Face3(e,t,n,null,null,0));var r=T.generateTopUV(L,e,t,n);L.faceVertexUvs[0].push(r)}function c(e,t,n,r,a,o,s,u,h){e+=P,t+=P,n+=P,r+=P,L.faces.push(new i.Face3(e,t,r,null,null,1)),L.faces.push(new i.Face3(t,n,r,null,null,1));var c=T.generateSideWallUV(L,e,t,n,r);L.faceVertexUvs[0].push([c[0],c[1],c[3]]),L.faceVertexUvs[0].push([c[1],c[2],c[3]])}var l,p,f,d,m,g=void 0!==t.amount?t.amount:100,v=void 0!==t.bevelThickness?t.bevelThickness:6,y=void 0!==t.bevelSize?t.bevelSize:v-2,b=void 0!==t.bevelSegments?t.bevelSegments:3,x=void 0!==t.bevelEnabled?t.bevelEnabled:!0,w=void 0!==t.curveSegments?t.curveSegments:12,M=void 0!==t.steps?t.steps:1,S=t.extrudePath,_=!1,T=void 0!==t.UVGenerator?t.UVGenerator:i.ExtrudeGeometry.WorldUVGenerator;S&&(l=S.getSpacedPoints(M),_=!0,x=!1,p=void 0!==t.frames?t.frames:new i.TubeGeometry.FrenetFrames(S,M,!1),f=new i.Vector3,d=new i.Vector3,m=new i.Vector3),x||(b=0,v=0,y=0);var E,C,A,L=this,P=this.vertices.length,k=e.extractPoints(w),D=k.shape,R=k.holes,F=!i.ShapeUtils.isClockWise(D);if(F){for(D=D.reverse(),C=0,A=R.length;A>C;C++)E=R[C],i.ShapeUtils.isClockWise(E)&&(R[C]=E.reverse());F=!1}var O=i.ShapeUtils.triangulateShape(D,R),V=D;for(C=0,A=R.length;A>C;C++)E=R[C],D=D.concat(E);for(var N,B,U,G,I,j,z=D.length,H=O.length,W=[],X=0,q=V.length,Y=q-1,K=X+1;q>X;X++,Y++,K++)Y===q&&(Y=0),K===q&&(K=0),W[X]=r(V[X],V[Y],V[K]);var Q,Z=[],J=W.concat();for(C=0,A=R.length;A>C;C++){for(E=R[C],Q=[],X=0,q=E.length,Y=q-1,K=X+1;q>X;X++,Y++,K++)Y===q&&(Y=0),K===q&&(K=0),Q[X]=r(E[X],E[Y],E[K]);Z.push(Q),J=J.concat(Q)}for(N=0;b>N;N++){for(U=N/b,G=v*(1-U),B=y*Math.sin(U*Math.PI/2),X=0,q=V.length;q>X;X++)I=n(V[X],W[X],B),u(I.x,I.y,-G);for(C=0,A=R.length;A>C;C++)for(E=R[C],Q=Z[C],X=0,q=E.length;q>X;X++)I=n(E[X],Q[X],B),u(I.x,I.y,-G)}for(B=y,X=0;z>X;X++)I=x?n(D[X],J[X],B):D[X],_?(d.copy(p.normals[0]).multiplyScalar(I.x),f.copy(p.binormals[0]).multiplyScalar(I.y),m.copy(l[0]).add(d).add(f),u(m.x,m.y,m.z)):u(I.x,I.y,0);var $;for($=1;M>=$;$++)for(X=0;z>X;X++)I=x?n(D[X],J[X],B):D[X],_?(d.copy(p.normals[$]).multiplyScalar(I.x),f.copy(p.binormals[$]).multiplyScalar(I.y),m.copy(l[$]).add(d).add(f),u(m.x,m.y,m.z)):u(I.x,I.y,g/M*$);for(N=b-1;N>=0;N--){for(U=N/b,G=v*(1-U),B=y*Math.sin(U*Math.PI/2),X=0,q=V.length;q>X;X++)I=n(V[X],W[X],B),u(I.x,I.y,g+G);for(C=0,A=R.length;A>C;C++)for(E=R[C],Q=Z[C],X=0,q=E.length;q>X;X++)I=n(E[X],Q[X],B),_?u(I.x,I.y+l[M-1].y,l[M-1].x+G):u(I.x,I.y,g+G)}a(),o()},i.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(e,t,n,r){var a=e.vertices,o=a[t],s=a[n],u=a[r];return[new i.Vector2(o.x,o.y),new i.Vector2(s.x,s.y),new i.Vector2(u.x,u.y)]},generateSideWallUV:function(e,t,n,r,a){var o=e.vertices,s=o[t],u=o[n],h=o[r],c=o[a];return Math.abs(s.y-u.y)<.01?[new i.Vector2(s.x,1-s.z),new i.Vector2(u.x,1-u.z),new i.Vector2(h.x,1-h.z),new i.Vector2(c.x,1-c.z)]:[new i.Vector2(s.y,1-s.z),new i.Vector2(u.y,1-u.z),new i.Vector2(h.y,1-h.z),new i.Vector2(c.y,1-c.z)]}},i.ShapeGeometry=function(e,t){i.Geometry.call(this),this.type="ShapeGeometry",Array.isArray(e)===!1&&(e=[e]),this.addShapeList(e,t),this.computeFaceNormals()},i.ShapeGeometry.prototype=Object.create(i.Geometry.prototype),i.ShapeGeometry.prototype.constructor=i.ShapeGeometry,i.ShapeGeometry.prototype.addShapeList=function(e,t){for(var n=0,r=e.length;r>n;n++)this.addShape(e[n],t);return this},i.ShapeGeometry.prototype.addShape=function(e,t){void 0===t&&(t={});var n,r,a,o=void 0!==t.curveSegments?t.curveSegments:12,s=t.material,u=void 0===t.UVGenerator?i.ExtrudeGeometry.WorldUVGenerator:t.UVGenerator,h=this.vertices.length,c=e.extractPoints(o),l=c.shape,p=c.holes,f=!i.ShapeUtils.isClockWise(l);if(f){for(l=l.reverse(),n=0,r=p.length;r>n;n++)a=p[n],i.ShapeUtils.isClockWise(a)&&(p[n]=a.reverse());f=!1}var d=i.ShapeUtils.triangulateShape(l,p);for(n=0,r=p.length;r>n;n++)a=p[n],l=l.concat(a);var m,g,v=l.length,y=d.length;for(n=0;v>n;n++)m=l[n],this.vertices.push(new i.Vector3(m.x,m.y,0));for(n=0;y>n;n++){g=d[n];var b=g[0]+h,x=g[1]+h,w=g[2]+h;this.faces.push(new i.Face3(b,x,w,null,null,s)),this.faceVertexUvs[0].push(u.generateTopUV(this,b,x,w))}},i.LatheGeometry=function(e,t,n,r){i.Geometry.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:r},t=t||12,n=n||0,r=r||2*Math.PI;for(var a=1/(e.length-1),o=1/t,s=0,u=t;u>=s;s++)for(var h=n+s*o*r,c=Math.cos(h),l=Math.sin(h),p=0,f=e.length;f>p;p++){var d=e[p],m=new i.Vector3;m.x=c*d.x-l*d.y,m.y=l*d.x+c*d.y,m.z=d.z,this.vertices.push(m)}for(var g=e.length,s=0,u=t;u>s;s++)for(var p=0,f=e.length-1;f>p;p++){var v=p+g*s,y=v,b=v+g,c=v+1+g,x=v+1,w=s*o,M=p*a,S=w+o,_=M+a;this.faces.push(new i.Face3(y,b,x)),this.faceVertexUvs[0].push([new i.Vector2(w,M),new i.Vector2(S,M),new i.Vector2(w,_)]),this.faces.push(new i.Face3(b,c,x)),this.faceVertexUvs[0].push([new i.Vector2(S,M),new i.Vector2(S,_),new i.Vector2(w,_)])}this.mergeVertices(),this.computeFaceNormals(),this.computeVertexNormals()},i.LatheGeometry.prototype=Object.create(i.Geometry.prototype),i.LatheGeometry.prototype.constructor=i.LatheGeometry,i.PlaneGeometry=function(e,t,n,r){i.Geometry.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r},this.fromBufferGeometry(new i.PlaneBufferGeometry(e,t,n,r))},i.PlaneGeometry.prototype=Object.create(i.Geometry.prototype),i.PlaneGeometry.prototype.constructor=i.PlaneGeometry,i.PlaneGeometry.prototype.clone=function(){var e=this.parameters;return new i.PlaneGeometry(e.width,e.height,e.widthSegments,e.heightSegments)},i.PlaneBufferGeometry=function(e,t,n,r){i.BufferGeometry.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:r};for(var a=e/2,o=t/2,s=Math.floor(n)||1,u=Math.floor(r)||1,h=s+1,c=u+1,l=e/s,p=t/u,f=new Float32Array(h*c*3),d=new Float32Array(h*c*3),m=new Float32Array(h*c*2),g=0,v=0,y=0;c>y;y++)for(var b=y*p-o,x=0;h>x;x++){var w=x*l-a;f[g]=w,f[g+1]=-b,d[g+2]=1,m[v]=x/s,m[v+1]=1-y/u,g+=3,v+=2}g=0;for(var M=new(f.length/3>65535?Uint32Array:Uint16Array)(s*u*6),y=0;u>y;y++)for(var x=0;s>x;x++){var S=x+h*y,_=x+h*(y+1),T=x+1+h*(y+1),E=x+1+h*y;M[g]=S,M[g+1]=_,M[g+2]=E,M[g+3]=_,M[g+4]=T,M[g+5]=E,g+=6}this.setIndex(new i.BufferAttribute(M,1)),this.addAttribute("position",new i.BufferAttribute(f,3)),this.addAttribute("normal",new i.BufferAttribute(d,3)),this.addAttribute("uv",new i.BufferAttribute(m,2))},i.PlaneBufferGeometry.prototype=Object.create(i.BufferGeometry.prototype),i.PlaneBufferGeometry.prototype.constructor=i.PlaneBufferGeometry,i.PlaneBufferGeometry.prototype.clone=function(){var e=this.parameters;return new i.PlaneBufferGeometry(e.width,e.height,e.widthSegments,e.heightSegments)},i.RingGeometry=function(e,t,n,r,a,o){i.Geometry.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:r,thetaStart:a,thetaLength:o},e=e||0,t=t||50,a=void 0!==a?a:0,o=void 0!==o?o:2*Math.PI,n=void 0!==n?Math.max(3,n):8,r=void 0!==r?Math.max(1,r):8;var s,u,h=[],c=e,l=(t-e)/r;for(s=0;r+1>s;s++){for(u=0;n+1>u;u++){var p=new i.Vector3,f=a+u/n*o;p.x=c*Math.cos(f),p.y=c*Math.sin(f),this.vertices.push(p),h.push(new i.Vector2((p.x/t+1)/2,(p.y/t+1)/2))}c+=l}var d=new i.Vector3(0,0,1);for(s=0;r>s;s++){var m=s*(n+1);for(u=0;n>u;u++){var f=u+m,g=f,v=f+n+1,y=f+n+2;this.faces.push(new i.Face3(g,v,y,[d.clone(),d.clone(),d.clone()])),this.faceVertexUvs[0].push([h[g].clone(),h[v].clone(),h[y].clone()]),g=f,v=f+n+2,y=f+1,this.faces.push(new i.Face3(g,v,y,[d.clone(),d.clone(),d.clone()])),this.faceVertexUvs[0].push([h[g].clone(),h[v].clone(),h[y].clone()])}}this.computeFaceNormals(),this.boundingSphere=new i.Sphere(new i.Vector3,c)},i.RingGeometry.prototype=Object.create(i.Geometry.prototype),i.RingGeometry.prototype.constructor=i.RingGeometry,i.RingGeometry.prototype.clone=function(){var e=this.parameters;return new i.RingGeometry(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)},i.SphereGeometry=function(e,t,n,r,a,o,s){i.Geometry.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:a,thetaStart:o,thetaLength:s},this.fromBufferGeometry(new i.SphereBufferGeometry(e,t,n,r,a,o,s))},i.SphereGeometry.prototype=Object.create(i.Geometry.prototype),i.SphereGeometry.prototype.constructor=i.SphereGeometry,i.SphereGeometry.prototype.clone=function(){var e=this.parameters;return new i.SphereGeometry(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)},i.SphereBufferGeometry=function(e,t,n,r,a,o,s){i.BufferGeometry.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:r,phiLength:a,thetaStart:o,thetaLength:s},e=e||50,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),r=void 0!==r?r:0,a=void 0!==a?a:2*Math.PI,o=void 0!==o?o:0,s=void 0!==s?s:Math.PI;for(var u=o+s,h=(t+1)*(n+1),c=new i.BufferAttribute(new Float32Array(3*h),3),l=new i.BufferAttribute(new Float32Array(3*h),3),p=new i.BufferAttribute(new Float32Array(2*h),2),f=0,d=[],m=new i.Vector3,g=0;n>=g;g++){for(var v=[],y=g/n,b=0;t>=b;b++){var x=b/t,w=-e*Math.cos(r+x*a)*Math.sin(o+y*s),M=e*Math.cos(o+y*s),S=e*Math.sin(r+x*a)*Math.sin(o+y*s);m.set(w,M,S).normalize(),c.setXYZ(f,w,M,S),l.setXYZ(f,m.x,m.y,m.z),p.setXY(f,x,1-y),v.push(f),f++}d.push(v)}for(var _=[],g=0;n>g;g++)for(var b=0;t>b;b++){var T=d[g][b+1],E=d[g][b],C=d[g+1][b],A=d[g+1][b+1];(0!==g||o>0)&&_.push(T,E,A),(g!==n-1||u<Math.PI)&&_.push(E,C,A)}this.setIndex(new(c.count>65535?i.Uint32Attribute:i.Uint16Attribute)(_,1)),this.addAttribute("position",c),this.addAttribute("normal",l),this.addAttribute("uv",p),this.boundingSphere=new i.Sphere(new i.Vector3,e)},i.SphereBufferGeometry.prototype=Object.create(i.BufferGeometry.prototype),i.SphereBufferGeometry.prototype.constructor=i.SphereBufferGeometry,i.SphereBufferGeometry.prototype.clone=function(){var e=this.parameters;return new i.SphereBufferGeometry(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)},i.TorusGeometry=function(e,t,n,r,a){i.Geometry.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,arc:a},e=e||100,t=t||40,n=n||8,r=r||6,a=a||2*Math.PI;for(var o=new i.Vector3,s=[],u=[],h=0;n>=h;h++)for(var c=0;r>=c;c++){var l=c/r*a,p=h/n*Math.PI*2;o.x=e*Math.cos(l),o.y=e*Math.sin(l);var f=new i.Vector3;f.x=(e+t*Math.cos(p))*Math.cos(l),f.y=(e+t*Math.cos(p))*Math.sin(l),f.z=t*Math.sin(p),this.vertices.push(f),s.push(new i.Vector2(c/r,h/n)),u.push(f.clone().sub(o).normalize())}for(var h=1;n>=h;h++)for(var c=1;r>=c;c++){var d=(r+1)*h+c-1,m=(r+1)*(h-1)+c-1,g=(r+1)*(h-1)+c,v=(r+1)*h+c,y=new i.Face3(d,m,v,[u[d].clone(),u[m].clone(),u[v].clone()]);this.faces.push(y),this.faceVertexUvs[0].push([s[d].clone(),s[m].clone(),s[v].clone()]),y=new i.Face3(m,g,v,[u[m].clone(),u[g].clone(),u[v].clone()]),this.faces.push(y),this.faceVertexUvs[0].push([s[m].clone(),s[g].clone(),s[v].clone()])}this.computeFaceNormals()},i.TorusGeometry.prototype=Object.create(i.Geometry.prototype),i.TorusGeometry.prototype.constructor=i.TorusGeometry,i.TorusGeometry.prototype.clone=function(){var e=this.parameters;return new i.TorusGeometry(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)},i.TorusKnotGeometry=function(e,t,n,r,a,o,s){function u(e,t,n,r,a){var o=Math.cos(e),s=Math.sin(e),u=t/n*e,h=Math.cos(u),c=r*(2+h)*.5*o,l=r*(2+h)*s*.5,p=a*r*Math.sin(u)*.5;return new i.Vector3(c,l,p)}i.Geometry.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:r,p:a,q:o,heightScale:s},e=e||100,t=t||40,n=n||64,r=r||8,a=a||2,o=o||3,s=s||1;for(var h=new Array(n),c=new i.Vector3,l=new i.Vector3,p=new i.Vector3,f=0;n>f;++f){h[f]=new Array(r);var d=f/n*2*a*Math.PI,m=u(d,o,a,e,s),g=u(d+.01,o,a,e,s);c.subVectors(g,m),l.addVectors(g,m),p.crossVectors(c,l),l.crossVectors(p,c),p.normalize(),l.normalize();for(var v=0;r>v;++v){var y=v/r*2*Math.PI,b=-t*Math.cos(y),x=t*Math.sin(y),w=new i.Vector3;w.x=m.x+b*l.x+x*p.x,w.y=m.y+b*l.y+x*p.y,w.z=m.z+b*l.z+x*p.z,h[f][v]=this.vertices.push(w)-1}}for(var f=0;n>f;++f)for(var v=0;r>v;++v){var M=(f+1)%n,S=(v+1)%r,_=h[f][v],T=h[M][v],E=h[M][S],C=h[f][S],A=new i.Vector2(f/n,v/r),L=new i.Vector2((f+1)/n,v/r),P=new i.Vector2((f+1)/n,(v+1)/r),k=new i.Vector2(f/n,(v+1)/r);this.faces.push(new i.Face3(_,T,C)),this.faceVertexUvs[0].push([A,L,k]),this.faces.push(new i.Face3(T,E,C)),this.faceVertexUvs[0].push([L.clone(),P,k.clone()])}this.computeFaceNormals(),this.computeVertexNormals()},i.TorusKnotGeometry.prototype=Object.create(i.Geometry.prototype),i.TorusKnotGeometry.prototype.constructor=i.TorusKnotGeometry,i.TorusKnotGeometry.prototype.clone=function(){var e=this.parameters;return new i.TorusKnotGeometry(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.p,e.q,e.heightScale)},i.TubeGeometry=function(e,t,n,r,a,o){function s(e,t,n){return P.vertices.push(new i.Vector3(e,t,n))-1}i.Geometry.call(this),this.type="TubeGeometry",this.parameters={path:e,segments:t,radius:n,radialSegments:r,closed:a,taper:o},t=t||64,n=n||1,r=r||8,a=a||!1,o=o||i.TubeGeometry.NoTaper;var u,h,c,l,p,f,d,m,g,v,y,b,x,w,M,S,_,T,E,C,A,L=[],P=this,k=t+1,D=new i.Vector3,R=new i.TubeGeometry.FrenetFrames(e,t,a),F=R.tangents,O=R.normals,V=R.binormals;for(this.tangents=F,this.normals=O,this.binormals=V,v=0;k>v;v++)for(L[v]=[],l=v/(k-1),g=e.getPointAt(l),u=F[v],h=O[v],c=V[v],f=n*o(l),y=0;r>y;y++)p=y/r*2*Math.PI,d=-f*Math.cos(p),m=f*Math.sin(p),D.copy(g),D.x+=d*h.x+m*c.x,D.y+=d*h.y+m*c.y,D.z+=d*h.z+m*c.z,L[v][y]=s(D.x,D.y,D.z);for(v=0;t>v;v++)for(y=0;r>y;y++)b=a?(v+1)%t:v+1,x=(y+1)%r,w=L[v][y],M=L[b][y],S=L[b][x],_=L[v][x],T=new i.Vector2(v/t,y/r),E=new i.Vector2((v+1)/t,y/r),C=new i.Vector2((v+1)/t,(y+1)/r),A=new i.Vector2(v/t,(y+1)/r),this.faces.push(new i.Face3(w,M,_)),this.faceVertexUvs[0].push([T,E,A]),this.faces.push(new i.Face3(M,S,_)),this.faceVertexUvs[0].push([E.clone(),C,A.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},i.TubeGeometry.prototype=Object.create(i.Geometry.prototype),i.TubeGeometry.prototype.constructor=i.TubeGeometry,i.TubeGeometry.prototype.clone=function(){return new this.constructor(this.parameters.path,this.parameters.segments,this.parameters.radius,this.parameters.radialSegments,this.parameters.closed,this.parameters.taper)},i.TubeGeometry.NoTaper=function(e){return 1},i.TubeGeometry.SinusoidalTaper=function(e){return Math.sin(Math.PI*e)},i.TubeGeometry.FrenetFrames=function(e,t,n){function r(){d[0]=new i.Vector3,m[0]=new i.Vector3,o=Number.MAX_VALUE,s=Math.abs(f[0].x),u=Math.abs(f[0].y),h=Math.abs(f[0].z),o>=s&&(o=s,p.set(1,0,0)),o>=u&&(o=u,p.set(0,1,0)),o>=h&&p.set(0,0,1),g.crossVectors(f[0],p).normalize(),d[0].crossVectors(f[0],g),m[0].crossVectors(f[0],d[0])}var a,o,s,u,h,c,l,p=new i.Vector3,f=[],d=[],m=[],g=new i.Vector3,v=new i.Matrix4,y=t+1;for(this.tangents=f,this.normals=d,this.binormals=m,c=0;y>c;c++)l=c/(y-1),f[c]=e.getTangentAt(l),f[c].normalize();for(r(),c=1;y>c;c++)d[c]=d[c-1].clone(),m[c]=m[c-1].clone(),g.crossVectors(f[c-1],f[c]),g.length()>Number.EPSILON&&(g.normalize(),a=Math.acos(i.Math.clamp(f[c-1].dot(f[c]),-1,1)),d[c].applyMatrix4(v.makeRotationAxis(g,a))),m[c].crossVectors(f[c],d[c]);if(n)for(a=Math.acos(i.Math.clamp(d[0].dot(d[y-1]),-1,1)),a/=y-1,f[0].dot(g.crossVectors(d[0],d[y-1]))>0&&(a=-a),c=1;y>c;c++)d[c].applyMatrix4(v.makeRotationAxis(f[c],a*c)),m[c].crossVectors(f[c],d[c])},i.PolyhedronGeometry=function(e,t,n,r){function a(e){var t=e.normalize().clone();t.index=l.vertices.push(t)-1;var n=u(e)/2/Math.PI+.5,r=h(e)/Math.PI+.5;return t.uv=new i.Vector2(n,1-r),t}function o(e,t,n,r){var a=new i.Face3(e.index,t.index,n.index,[e.clone(),t.clone(),n.clone()],void 0,r);l.faces.push(a),x.copy(e).add(t).add(n).divideScalar(3);var o=u(x);l.faceVertexUvs[0].push([c(e.uv,e,o),c(t.uv,t,o),c(n.uv,n,o)])}function s(e,t){for(var n=Math.pow(2,t),r=a(l.vertices[e.a]),i=a(l.vertices[e.b]),s=a(l.vertices[e.c]),u=[],h=e.materialIndex,c=0;n>=c;c++){u[c]=[];for(var p=a(r.clone().lerp(s,c/n)),f=a(i.clone().lerp(s,c/n)),d=n-c,m=0;d>=m;m++)0===m&&c===n?u[c][m]=p:u[c][m]=a(p.clone().lerp(f,m/d))}for(var c=0;n>c;c++)for(var m=0;2*(n-c)-1>m;m++){var g=Math.floor(m/2);m%2===0?o(u[c][g+1],u[c+1][g],u[c][g],h):o(u[c][g+1],u[c+1][g+1],u[c+1][g],h)}}function u(e){return Math.atan2(e.z,-e.x)}function h(e){return Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))}function c(e,t,n){return 0>n&&1===e.x&&(e=new i.Vector2(e.x-1,e.y)),0===t.x&&0===t.z&&(e=new i.Vector2(n/2/Math.PI+.5,e.y)),e.clone()}i.Geometry.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:r},n=n||1,r=r||0;for(var l=this,p=0,f=e.length;f>p;p+=3)a(new i.Vector3(e[p],e[p+1],e[p+2]));for(var d=this.vertices,m=[],p=0,g=0,f=t.length;f>p;p+=3,g++){var v=d[t[p]],y=d[t[p+1]],b=d[t[p+2]];m[g]=new i.Face3(v.index,y.index,b.index,[v.clone(),y.clone(),b.clone()],void 0,g)}for(var x=new i.Vector3,p=0,f=m.length;f>p;p++)s(m[p],r);for(var p=0,f=this.faceVertexUvs[0].length;f>p;p++){var w=this.faceVertexUvs[0][p],M=w[0].x,S=w[1].x,_=w[2].x,T=Math.max(M,S,_),E=Math.min(M,S,_);T>.9&&.1>E&&(.2>M&&(w[0].x+=1),.2>S&&(w[1].x+=1),.2>_&&(w[2].x+=1))}for(var p=0,f=this.vertices.length;f>p;p++)this.vertices[p].multiplyScalar(n);this.mergeVertices(),this.computeFaceNormals(),this.boundingSphere=new i.Sphere(new i.Vector3,n)},i.PolyhedronGeometry.prototype=Object.create(i.Geometry.prototype),i.PolyhedronGeometry.prototype.constructor=i.PolyhedronGeometry,i.PolyhedronGeometry.prototype.clone=function(){var e=this.parameters;return new i.PolyhedronGeometry(e.vertices,e.indices,e.radius,e.detail)},i.DodecahedronGeometry=function(e,t){var n=(1+Math.sqrt(5))/2,r=1/n,a=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-r,-n,0,-r,n,0,r,-n,0,r,n,-r,-n,0,-r,n,0,r,-n,0,r,n,0,-n,0,-r,n,0,-r,-n,0,r,n,0,r],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];i.PolyhedronGeometry.call(this,a,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}},i.DodecahedronGeometry.prototype=Object.create(i.PolyhedronGeometry.prototype),i.DodecahedronGeometry.prototype.constructor=i.DodecahedronGeometry,i.DodecahedronGeometry.prototype.clone=function(){var e=this.parameters;return new i.DodecahedronGeometry(e.radius,e.detail)},i.IcosahedronGeometry=function(e,t){var n=(1+Math.sqrt(5))/2,r=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],a=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];i.PolyhedronGeometry.call(this,r,a,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}},i.IcosahedronGeometry.prototype=Object.create(i.PolyhedronGeometry.prototype),i.IcosahedronGeometry.prototype.constructor=i.IcosahedronGeometry,i.IcosahedronGeometry.prototype.clone=function(){var e=this.parameters;return new i.IcosahedronGeometry(e.radius,e.detail)},i.OctahedronGeometry=function(e,t){var n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],r=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];i.PolyhedronGeometry.call(this,n,r,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}},i.OctahedronGeometry.prototype=Object.create(i.PolyhedronGeometry.prototype),i.OctahedronGeometry.prototype.constructor=i.OctahedronGeometry,i.OctahedronGeometry.prototype.clone=function(){var e=this.parameters;return new i.OctahedronGeometry(e.radius,e.detail)},i.TetrahedronGeometry=function(e,t){var n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],r=[2,1,0,0,3,2,1,3,0,2,3,1];i.PolyhedronGeometry.call(this,n,r,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}},i.TetrahedronGeometry.prototype=Object.create(i.PolyhedronGeometry.prototype),i.TetrahedronGeometry.prototype.constructor=i.TetrahedronGeometry,i.TetrahedronGeometry.prototype.clone=function(){var e=this.parameters;return new i.TetrahedronGeometry(e.radius,e.detail)},i.ParametricGeometry=function(e,t,n){i.Geometry.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n};var r,a,o,s,u,h=this.vertices,c=this.faces,l=this.faceVertexUvs[0],p=t+1;for(r=0;n>=r;r++)for(u=r/n,a=0;t>=a;a++)s=a/t,o=e(s,u),h.push(o);var f,d,m,g,v,y,b,x;for(r=0;n>r;r++)for(a=0;t>a;a++)f=r*p+a,d=r*p+a+1,m=(r+1)*p+a+1,g=(r+1)*p+a,v=new i.Vector2(a/t,r/n),y=new i.Vector2((a+1)/t,r/n),b=new i.Vector2((a+1)/t,(r+1)/n),x=new i.Vector2(a/t,(r+1)/n),c.push(new i.Face3(f,d,g)),l.push([v,y,x]),c.push(new i.Face3(d,m,g)),l.push([y.clone(),b,x.clone()]);this.computeFaceNormals(),this.computeVertexNormals()},i.ParametricGeometry.prototype=Object.create(i.Geometry.prototype),i.ParametricGeometry.prototype.constructor=i.ParametricGeometry,i.WireframeGeometry=function(e){function t(e,t){return e-t}i.BufferGeometry.call(this);var n=[0,0],r={},a=["a","b","c"];if(e instanceof i.Geometry){for(var o=e.vertices,s=e.faces,u=0,h=new Uint32Array(6*s.length),c=0,l=s.length;l>c;c++)for(var p=s[c],f=0;3>f;f++){n[0]=p[a[f]],n[1]=p[a[(f+1)%3]],n.sort(t);var d=n.toString();void 0===r[d]&&(h[2*u]=n[0],h[2*u+1]=n[1],r[d]=!0,u++)}for(var m=new Float32Array(2*u*3),c=0,l=u;l>c;c++)for(var f=0;2>f;f++){var g=o[h[2*c+f]],v=6*c+3*f;m[v+0]=g.x,m[v+1]=g.y,m[v+2]=g.z}this.addAttribute("position",new i.BufferAttribute(m,3))}else if(e instanceof i.BufferGeometry)if(null!==e.index){var y=e.index.array,o=e.attributes.position,b=e.drawcalls,u=0;0===b.length&&e.addGroup(0,y.length);for(var h=new Uint32Array(2*y.length),x=0,w=b.length;w>x;++x)for(var M=b[x],S=M.start,_=M.count,c=S,T=S+_;T>c;c+=3)for(var f=0;3>f;f++){n[0]=y[c+f],n[1]=y[c+(f+1)%3],n.sort(t);var d=n.toString();void 0===r[d]&&(h[2*u]=n[0],h[2*u+1]=n[1],r[d]=!0,u++)}for(var m=new Float32Array(2*u*3),c=0,l=u;l>c;c++)for(var f=0;2>f;f++){var v=6*c+3*f,E=h[2*c+f];m[v+0]=o.getX(E),m[v+1]=o.getY(E),m[v+2]=o.getZ(E)}this.addAttribute("position",new i.BufferAttribute(m,3))}else{for(var o=e.attributes.position.array,u=o.length/3,C=u/3,m=new Float32Array(2*u*3),c=0,l=C;l>c;c++)for(var f=0;3>f;f++){var v=18*c+6*f,A=9*c+3*f;m[v+0]=o[A],m[v+1]=o[A+1],m[v+2]=o[A+2];var E=9*c+3*((f+1)%3);m[v+3]=o[E],m[v+4]=o[E+1],m[v+5]=o[E+2]}this.addAttribute("position",new i.BufferAttribute(m,3))}},i.WireframeGeometry.prototype=Object.create(i.BufferGeometry.prototype),i.WireframeGeometry.prototype.constructor=i.WireframeGeometry,i.AxisHelper=function(e){e=e||1;var t=new Float32Array([0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e]),n=new Float32Array([1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1]),r=new i.BufferGeometry;r.addAttribute("position",new i.BufferAttribute(t,3)),r.addAttribute("color",new i.BufferAttribute(n,3));var a=new i.LineBasicMaterial({vertexColors:i.VertexColors});i.LineSegments.call(this,r,a)},i.AxisHelper.prototype=Object.create(i.LineSegments.prototype),i.AxisHelper.prototype.constructor=i.AxisHelper,i.ArrowHelper=function(){var e=new i.Geometry;e.vertices.push(new i.Vector3(0,0,0),new i.Vector3(0,1,0));var t=new i.CylinderGeometry(0,.5,1,5,1);return t.translate(0,-.5,0),function(n,r,a,o,s,u){i.Object3D.call(this),void 0===o&&(o=16776960),void 0===a&&(a=1),void 0===s&&(s=.2*a),void 0===u&&(u=.2*s),this.position.copy(r),a>s&&(this.line=new i.Line(e,new i.LineBasicMaterial({color:o})),this.line.matrixAutoUpdate=!1,this.add(this.line)),this.cone=new i.Mesh(t,new i.MeshBasicMaterial({color:o})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(n),this.setLength(a,s,u)}}(),i.ArrowHelper.prototype=Object.create(i.Object3D.prototype),i.ArrowHelper.prototype.constructor=i.ArrowHelper,i.ArrowHelper.prototype.setDirection=function(){var e,t=new i.Vector3;return function(n){n.y>.99999?this.quaternion.set(0,0,0,1):n.y<-.99999?this.quaternion.set(1,0,0,0):(t.set(n.z,0,-n.x).normalize(),e=Math.acos(n.y),this.quaternion.setFromAxisAngle(t,e))}}(),i.ArrowHelper.prototype.setLength=function(e,t,n){void 0===t&&(t=.2*e),void 0===n&&(n=.2*t),e>t&&(this.line.scale.set(1,e-t,1),this.line.updateMatrix()),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()},i.ArrowHelper.prototype.setColor=function(e){void 0!==this.line&&this.line.material.color.set(e),this.cone.material.color.set(e)},i.BoxHelper=function(e){var t=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(24),r=new i.BufferGeometry;r.setIndex(new i.BufferAttribute(t,1)),r.addAttribute("position",new i.BufferAttribute(n,3)),i.LineSegments.call(this,r,new i.LineBasicMaterial({color:16776960})),void 0!==e&&this.update(e)},i.BoxHelper.prototype=Object.create(i.LineSegments.prototype),i.BoxHelper.prototype.constructor=i.BoxHelper,i.BoxHelper.prototype.update=function(){var e=new i.Box3;return function(t){if(e.setFromObject(t),!e.empty()){var n=e.min,r=e.max,i=this.geometry.attributes.position,a=i.array;a[0]=r.x,a[1]=r.y,a[2]=r.z,a[3]=n.x,a[4]=r.y,a[5]=r.z,a[6]=n.x,a[7]=n.y,a[8]=r.z,a[9]=r.x,a[10]=n.y,a[11]=r.z,a[12]=r.x,a[13]=r.y,a[14]=n.z,a[15]=n.x,a[16]=r.y,a[17]=n.z,a[18]=n.x,a[19]=n.y,a[20]=n.z,a[21]=r.x,a[22]=n.y,a[23]=n.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}(),i.BoundingBoxHelper=function(e,t){var n=void 0!==t?t:8947848;this.object=e,this.box=new i.Box3,i.Mesh.call(this,new i.BoxGeometry(1,1,1),new i.MeshBasicMaterial({color:n,wireframe:!0}))},i.BoundingBoxHelper.prototype=Object.create(i.Mesh.prototype),i.BoundingBoxHelper.prototype.constructor=i.BoundingBoxHelper,i.BoundingBoxHelper.prototype.update=function(){this.box.setFromObject(this.object),this.box.size(this.scale),this.box.center(this.position)},i.CameraHelper=function(e){function t(e,t,r){n(e,r),n(t,r)}function n(e,t){r.vertices.push(new i.Vector3),r.colors.push(new i.Color(t)),void 0===o[e]&&(o[e]=[]),o[e].push(r.vertices.length-1)}var r=new i.Geometry,a=new i.LineBasicMaterial({color:16777215,vertexColors:i.FaceColors}),o={},s=16755200,u=16711680,h=43775,c=16777215,l=3355443;t("n1","n2",s),t("n2","n4",s),t("n4","n3",s),t("n3","n1",s),t("f1","f2",s),t("f2","f4",s),t("f4","f3",s),t("f3","f1",s),t("n1","f1",s),t("n2","f2",s),t("n3","f3",s),t("n4","f4",s),t("p","n1",u),t("p","n2",u),t("p","n3",u),t("p","n4",u),t("u1","u2",h),t("u2","u3",h),t("u3","u1",h),t("c","t",c),t("p","c",l),t("cn1","cn2",l),t("cn3","cn4",l),t("cf1","cf2",l),t("cf3","cf4",l),i.LineSegments.call(this,r,a),this.camera=e,this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()},i.CameraHelper.prototype=Object.create(i.LineSegments.prototype),i.CameraHelper.prototype.constructor=i.CameraHelper,i.CameraHelper.prototype.update=function(){function e(e,i,o,s){r.set(i,o,s).unproject(a);var u=n[e];if(void 0!==u)for(var h=0,c=u.length;c>h;h++)t.vertices[u[h]].copy(r)}var t,n,r=new i.Vector3,a=new i.Camera;return function(){t=this.geometry,n=this.pointMap;var r=1,i=1;a.projectionMatrix.copy(this.camera.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-r,-i,-1),e("n2",r,-i,-1),e("n3",-r,i,-1),e("n4",r,i,-1),e("f1",-r,-i,1),e("f2",r,-i,1),e("f3",-r,i,1),e("f4",r,i,1),e("u1",.7*r,1.1*i,-1),e("u2",.7*-r,1.1*i,-1),e("u3",0,2*i,-1),e("cf1",-r,0,1),e("cf2",r,0,1),e("cf3",0,-i,1),e("cf4",0,i,1),e("cn1",-r,0,-1),e("cn2",r,0,-1),e("cn3",0,-i,-1),e("cn4",0,i,-1),t.verticesNeedUpdate=!0}}(),i.DirectionalLightHelper=function(e,t){i.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,t=t||1;var n=new i.Geometry;n.vertices.push(new i.Vector3(-t,t,0),new i.Vector3(t,t,0),new i.Vector3(t,-t,0),new i.Vector3(-t,-t,0),new i.Vector3(-t,t,0));var r=new i.LineBasicMaterial({fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.lightPlane=new i.Line(n,r),this.add(this.lightPlane),n=new i.Geometry,n.vertices.push(new i.Vector3,new i.Vector3),r=new i.LineBasicMaterial({fog:!1}),r.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine=new i.Line(n,r),this.add(this.targetLine),this.update()},i.DirectionalLightHelper.prototype=Object.create(i.Object3D.prototype),i.DirectionalLightHelper.prototype.constructor=i.DirectionalLightHelper,i.DirectionalLightHelper.prototype.dispose=function(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()},i.DirectionalLightHelper.prototype.update=function(){var e=new i.Vector3,t=new i.Vector3,n=new i.Vector3;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),n.subVectors(t,e),this.lightPlane.lookAt(n),this.lightPlane.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),this.targetLine.geometry.vertices[1].copy(n),this.targetLine.geometry.verticesNeedUpdate=!0,this.targetLine.material.color.copy(this.lightPlane.material.color)}}(),i.EdgesHelper=function(e,t,n){var r=void 0!==t?t:16777215;i.LineSegments.call(this,new i.EdgesGeometry(e.geometry,n),new i.LineBasicMaterial({color:r})),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},i.EdgesHelper.prototype=Object.create(i.LineSegments.prototype),i.EdgesHelper.prototype.constructor=i.EdgesHelper,i.FaceNormalsHelper=function(e,t,n,r){this.object=e,this.size=void 0!==t?t:1;var a=void 0!==n?n:16776960,o=void 0!==r?r:1,s=0,u=this.object.geometry;
u instanceof i.Geometry?s=u.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var h=new i.BufferGeometry,c=new i.Float32Attribute(2*s*3,3);h.addAttribute("position",c),i.LineSegments.call(this,h,new i.LineBasicMaterial({color:a,linewidth:o})),this.matrixAutoUpdate=!1,this.update()},i.FaceNormalsHelper.prototype=Object.create(i.LineSegments.prototype),i.FaceNormalsHelper.prototype.constructor=i.FaceNormalsHelper,i.FaceNormalsHelper.prototype.update=function(){var e=new i.Vector3,t=new i.Vector3,n=new i.Matrix3;return function(){this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);for(var r=this.object.matrixWorld,i=this.geometry.attributes.position,a=this.object.geometry,o=a.vertices,s=a.faces,u=0,h=0,c=s.length;c>h;h++){var l=s[h],p=l.normal;e.copy(o[l.a]).add(o[l.b]).add(o[l.c]).divideScalar(3).applyMatrix4(r),t.copy(p).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),i.setXYZ(u,e.x,e.y,e.z),u+=1,i.setXYZ(u,t.x,t.y,t.z),u+=1}return i.needsUpdate=!0,this}}(),i.GridHelper=function(e,t){var n=new i.Geometry,r=new i.LineBasicMaterial({vertexColors:i.VertexColors});this.color1=new i.Color(4473924),this.color2=new i.Color(8947848);for(var a=-e;e>=a;a+=t){n.vertices.push(new i.Vector3(-e,0,a),new i.Vector3(e,0,a),new i.Vector3(a,0,-e),new i.Vector3(a,0,e));var o=0===a?this.color1:this.color2;n.colors.push(o,o,o,o)}i.LineSegments.call(this,n,r)},i.GridHelper.prototype=Object.create(i.LineSegments.prototype),i.GridHelper.prototype.constructor=i.GridHelper,i.GridHelper.prototype.setColors=function(e,t){this.color1.set(e),this.color2.set(t),this.geometry.colorsNeedUpdate=!0},i.HemisphereLightHelper=function(e,t){i.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.colors=[new i.Color,new i.Color];var n=new i.SphereGeometry(t,4,2);n.rotateX(-Math.PI/2);for(var r=0,a=8;a>r;r++)n.faces[r].color=this.colors[4>r?0:1];var o=new i.MeshBasicMaterial({vertexColors:i.FaceColors,wireframe:!0});this.lightSphere=new i.Mesh(n,o),this.add(this.lightSphere),this.update()},i.HemisphereLightHelper.prototype=Object.create(i.Object3D.prototype),i.HemisphereLightHelper.prototype.constructor=i.HemisphereLightHelper,i.HemisphereLightHelper.prototype.dispose=function(){this.lightSphere.geometry.dispose(),this.lightSphere.material.dispose()},i.HemisphereLightHelper.prototype.update=function(){var e=new i.Vector3;return function(){this.colors[0].copy(this.light.color).multiplyScalar(this.light.intensity),this.colors[1].copy(this.light.groundColor).multiplyScalar(this.light.intensity),this.lightSphere.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),this.lightSphere.geometry.colorsNeedUpdate=!0}}(),i.PointLightHelper=function(e,t){this.light=e,this.light.updateMatrixWorld();var n=new i.SphereGeometry(t,4,2),r=new i.MeshBasicMaterial({wireframe:!0,fog:!1});r.color.copy(this.light.color).multiplyScalar(this.light.intensity),i.Mesh.call(this,n,r),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1},i.PointLightHelper.prototype=Object.create(i.Mesh.prototype),i.PointLightHelper.prototype.constructor=i.PointLightHelper,i.PointLightHelper.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()},i.PointLightHelper.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)},i.SkeletonHelper=function(e){this.bones=this.getBoneList(e);for(var t=new i.Geometry,n=0;n<this.bones.length;n++){var r=this.bones[n];r.parent instanceof i.Bone&&(t.vertices.push(new i.Vector3),t.vertices.push(new i.Vector3),t.colors.push(new i.Color(0,0,1)),t.colors.push(new i.Color(0,1,0)))}t.dynamic=!0;var a=new i.LineBasicMaterial({vertexColors:i.VertexColors,depthTest:!1,depthWrite:!1,transparent:!0});i.LineSegments.call(this,t,a),this.root=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.update()},i.SkeletonHelper.prototype=Object.create(i.LineSegments.prototype),i.SkeletonHelper.prototype.constructor=i.SkeletonHelper,i.SkeletonHelper.prototype.getBoneList=function(e){var t=[];e instanceof i.Bone&&t.push(e);for(var n=0;n<e.children.length;n++)t.push.apply(t,this.getBoneList(e.children[n]));return t},i.SkeletonHelper.prototype.update=function(){for(var e=this.geometry,t=(new i.Matrix4).getInverse(this.root.matrixWorld),n=new i.Matrix4,r=0,a=0;a<this.bones.length;a++){var o=this.bones[a];o.parent instanceof i.Bone&&(n.multiplyMatrices(t,o.matrixWorld),e.vertices[r].setFromMatrixPosition(n),n.multiplyMatrices(t,o.parent.matrixWorld),e.vertices[r+1].setFromMatrixPosition(n),r+=2)}e.verticesNeedUpdate=!0,e.computeBoundingSphere()},i.SpotLightHelper=function(e){i.Object3D.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;var t=new i.CylinderGeometry(0,1,1,8,1,!0);t.translate(0,-.5,0),t.rotateX(-Math.PI/2);var n=new i.MeshBasicMaterial({wireframe:!0,fog:!1});this.cone=new i.Mesh(t,n),this.add(this.cone),this.update()},i.SpotLightHelper.prototype=Object.create(i.Object3D.prototype),i.SpotLightHelper.prototype.constructor=i.SpotLightHelper,i.SpotLightHelper.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()},i.SpotLightHelper.prototype.update=function(){var e=new i.Vector3,t=new i.Vector3;return function(){var n=this.light.distance?this.light.distance:1e4,r=n*Math.tan(this.light.angle);this.cone.scale.set(r,r,n),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}(),i.VertexNormalsHelper=function(e,t,n,r){this.object=e,this.size=void 0!==t?t:1;var a=void 0!==n?n:16711680,o=void 0!==r?r:1,s=0,u=this.object.geometry;u instanceof i.Geometry?s=3*u.faces.length:u instanceof i.BufferGeometry&&(s=u.attributes.normal.count);var h=new i.BufferGeometry,c=new i.Float32Attribute(2*s*3,3);h.addAttribute("position",c),i.LineSegments.call(this,h,new i.LineBasicMaterial({color:a,linewidth:o})),this.matrixAutoUpdate=!1,this.update()},i.VertexNormalsHelper.prototype=Object.create(i.LineSegments.prototype),i.VertexNormalsHelper.prototype.constructor=i.VertexNormalsHelper,i.VertexNormalsHelper.prototype.update=function(){var e=new i.Vector3,t=new i.Vector3,n=new i.Matrix3;return function(){var r=["a","b","c"];this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);var a=this.object.matrixWorld,o=this.geometry.attributes.position,s=this.object.geometry;if(s instanceof i.Geometry)for(var u=s.vertices,h=s.faces,c=0,l=0,p=h.length;p>l;l++)for(var f=h[l],d=0,m=f.vertexNormals.length;m>d;d++){var g=u[f[r[d]]],v=f.vertexNormals[d];e.copy(g).applyMatrix4(a),t.copy(v).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),o.setXYZ(c,e.x,e.y,e.z),c+=1,o.setXYZ(c,t.x,t.y,t.z),c+=1}else if(s instanceof i.BufferGeometry)for(var y=s.attributes.position,b=s.attributes.normal,c=0,d=0,m=y.count;m>d;d++)e.set(y.getX(d),y.getY(d),y.getZ(d)).applyMatrix4(a),t.set(b.getX(d),b.getY(d),b.getZ(d)),t.applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),o.setXYZ(c,e.x,e.y,e.z),c+=1,o.setXYZ(c,t.x,t.y,t.z),c+=1;return o.needsUpdate=!0,this}}(),i.WireframeHelper=function(e,t){var n=void 0!==t?t:16777215;i.LineSegments.call(this,new i.WireframeGeometry(e.geometry),new i.LineBasicMaterial({color:n})),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1},i.WireframeHelper.prototype=Object.create(i.LineSegments.prototype),i.WireframeHelper.prototype.constructor=i.WireframeHelper,i.ImmediateRenderObject=function(e){i.Object3D.call(this),this.material=e,this.render=function(e){}},i.ImmediateRenderObject.prototype=Object.create(i.Object3D.prototype),i.ImmediateRenderObject.prototype.constructor=i.ImmediateRenderObject,i.MorphBlendMesh=function(e,t){i.Mesh.call(this,e,t),this.animationsMap={},this.animationsList=[];var n=this.geometry.morphTargets.length,r="__default",a=0,o=n-1,s=n/1;this.createAnimation(r,a,o,s),this.setAnimationWeight(r,1)},i.MorphBlendMesh.prototype=Object.create(i.Mesh.prototype),i.MorphBlendMesh.prototype.constructor=i.MorphBlendMesh,i.MorphBlendMesh.prototype.createAnimation=function(e,t,n,r){var i={start:t,end:n,length:n-t+1,fps:r,duration:(n-t)/r,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=i,this.animationsList.push(i)},i.MorphBlendMesh.prototype.autoCreateAnimations=function(e){for(var t,n=/([a-z]+)_?(\d+)/,r={},i=this.geometry,a=0,o=i.morphTargets.length;o>a;a++){var s=i.morphTargets[a],u=s.name.match(n);if(u&&u.length>1){var h=u[1];r[h]||(r[h]={start:1/0,end:-(1/0)});var c=r[h];a<c.start&&(c.start=a),a>c.end&&(c.end=a),t||(t=h)}}for(var h in r){var c=r[h];this.createAnimation(h,c.start,c.end,e)}this.firstAnimation=t},i.MorphBlendMesh.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)},i.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)},i.MorphBlendMesh.prototype.setAnimationFPS=function(e,t){var n=this.animationsMap[e];n&&(n.fps=t,n.duration=(n.end-n.start)/n.fps)},i.MorphBlendMesh.prototype.setAnimationDuration=function(e,t){var n=this.animationsMap[e];n&&(n.duration=t,n.fps=(n.end-n.start)/n.duration)},i.MorphBlendMesh.prototype.setAnimationWeight=function(e,t){var n=this.animationsMap[e];n&&(n.weight=t)},i.MorphBlendMesh.prototype.setAnimationTime=function(e,t){var n=this.animationsMap[e];n&&(n.time=t)},i.MorphBlendMesh.prototype.getAnimationTime=function(e){var t=0,n=this.animationsMap[e];return n&&(t=n.time),t},i.MorphBlendMesh.prototype.getAnimationDuration=function(e){var t=-1,n=this.animationsMap[e];return n&&(t=n.duration),t},i.MorphBlendMesh.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("THREE.MorphBlendMesh: animation["+e+"] undefined in .playAnimation()")},i.MorphBlendMesh.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)},i.MorphBlendMesh.prototype.update=function(e){for(var t=0,n=this.animationsList.length;n>t;t++){var r=this.animationsList[t];if(r.active){var a=r.duration/r.length;r.time+=r.direction*e,r.mirroredLoop?(r.time>r.duration||r.time<0)&&(r.direction*=-1,r.time>r.duration&&(r.time=r.duration,r.directionBackwards=!0),r.time<0&&(r.time=0,r.directionBackwards=!1)):(r.time=r.time%r.duration,r.time<0&&(r.time+=r.duration));var o=r.start+i.Math.clamp(Math.floor(r.time/a),0,r.length-1),s=r.weight;o!==r.currentFrame&&(this.morphTargetInfluences[r.lastFrame]=0,this.morphTargetInfluences[r.currentFrame]=1*s,this.morphTargetInfluences[o]=0,r.lastFrame=r.currentFrame,r.currentFrame=o);var u=r.time%a/a;r.directionBackwards&&(u=1-u),r.currentFrame!==r.lastFrame?(this.morphTargetInfluences[r.currentFrame]=u*s,this.morphTargetInfluences[r.lastFrame]=(1-u)*s):this.morphTargetInfluences[r.currentFrame]=s}}},"undefined"!=typeof n?("undefined"!=typeof t&&t.exports&&(n=t.exports=i),n.THREE=i):this.THREE=i},{}],11:[function(e,t,n){(function(){function e(e){function t(t,n,r,i,a,o){for(;a>=0&&o>a;a+=e){var s=i?i[a]:a;r=n(r,t[s],s,t)}return r}return function(n,r,i,a){r=w(r,a,4);var o=!A(n)&&x.keys(n),s=(o||n).length,u=e>0?0:s-1;return arguments.length<3&&(i=n[o?o[u]:u],u+=e),t(n,r,i,o,u,s)}}function r(e){return function(t,n,r){n=M(n,r);for(var i=C(t),a=e>0?0:i-1;a>=0&&i>a;a+=e)if(n(t[a],a,t))return a;return-1}}function i(e,t,n){return function(r,i,a){var o=0,s=C(r);if("number"==typeof a)e>0?o=a>=0?a:Math.max(a+s,o):s=a>=0?Math.min(a+1,s):a+s+1;else if(n&&a&&s)return a=n(r,i),r[a]===i?a:-1;if(i!==i)return a=t(p.call(r,o,s),x.isNaN),a>=0?a+o:-1;for(a=e>0?o:s-1;a>=0&&s>a;a+=e)if(r[a]===i)return a;return-1}}function a(e,t){var n=R.length,r=e.constructor,i=x.isFunction(r)&&r.prototype||h,a="constructor";for(x.has(e,a)&&!x.contains(t,a)&&t.push(a);n--;)a=R[n],a in e&&e[a]!==i[a]&&!x.contains(t,a)&&t.push(a)}var o=this,s=o._,u=Array.prototype,h=Object.prototype,c=Function.prototype,l=u.push,p=u.slice,f=h.toString,d=h.hasOwnProperty,m=Array.isArray,g=Object.keys,v=c.bind,y=Object.create,b=function(){},x=function(e){return e instanceof x?e:this instanceof x?void(this._wrapped=e):new x(e)};"undefined"!=typeof n?("undefined"!=typeof t&&t.exports&&(n=t.exports=x),n._=x):o._=x,x.VERSION="1.8.3";var w=function(e,t,n){if(void 0===t)return e;switch(null==n?3:n){case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,i){return e.call(t,n,r,i)};case 4:return function(n,r,i,a){return e.call(t,n,r,i,a)}}return function(){return e.apply(t,arguments)}},M=function(e,t,n){return null==e?x.identity:x.isFunction(e)?w(e,t,n):x.isObject(e)?x.matcher(e):x.property(e)};x.iteratee=function(e,t){return M(e,t,1/0)};var S=function(e,t){return function(n){var r=arguments.length;if(2>r||null==n)return n;for(var i=1;r>i;i++)for(var a=arguments[i],o=e(a),s=o.length,u=0;s>u;u++){var h=o[u];t&&void 0!==n[h]||(n[h]=a[h])}return n}},_=function(e){if(!x.isObject(e))return{};if(y)return y(e);b.prototype=e;var t=new b;return b.prototype=null,t},T=function(e){return function(t){return null==t?void 0:t[e]}},E=Math.pow(2,53)-1,C=T("length"),A=function(e){var t=C(e);return"number"==typeof t&&t>=0&&E>=t};x.each=x.forEach=function(e,t,n){t=w(t,n);var r,i;if(A(e))for(r=0,i=e.length;i>r;r++)t(e[r],r,e);else{var a=x.keys(e);for(r=0,i=a.length;i>r;r++)t(e[a[r]],a[r],e)}return e},x.map=x.collect=function(e,t,n){t=M(t,n);for(var r=!A(e)&&x.keys(e),i=(r||e).length,a=Array(i),o=0;i>o;o++){var s=r?r[o]:o;a[o]=t(e[s],s,e)}return a},x.reduce=x.foldl=x.inject=e(1),x.reduceRight=x.foldr=e(-1),x.find=x.detect=function(e,t,n){var r;return r=A(e)?x.findIndex(e,t,n):x.findKey(e,t,n),void 0!==r&&-1!==r?e[r]:void 0},x.filter=x.select=function(e,t,n){var r=[];return t=M(t,n),x.each(e,function(e,n,i){t(e,n,i)&&r.push(e)}),r},x.reject=function(e,t,n){return x.filter(e,x.negate(M(t)),n)},x.every=x.all=function(e,t,n){t=M(t,n);for(var r=!A(e)&&x.keys(e),i=(r||e).length,a=0;i>a;a++){var o=r?r[a]:a;if(!t(e[o],o,e))return!1}return!0},x.some=x.any=function(e,t,n){t=M(t,n);for(var r=!A(e)&&x.keys(e),i=(r||e).length,a=0;i>a;a++){var o=r?r[a]:a;if(t(e[o],o,e))return!0}return!1},x.contains=x.includes=x.include=function(e,t,n,r){return A(e)||(e=x.values(e)),("number"!=typeof n||r)&&(n=0),x.indexOf(e,t,n)>=0},x.invoke=function(e,t){var n=p.call(arguments,2),r=x.isFunction(t);return x.map(e,function(e){var i=r?t:e[t];return null==i?i:i.apply(e,n)})},x.pluck=function(e,t){return x.map(e,x.property(t))},x.where=function(e,t){return x.filter(e,x.matcher(t))},x.findWhere=function(e,t){return x.find(e,x.matcher(t))},x.max=function(e,t,n){var r,i,a=-(1/0),o=-(1/0);if(null==t&&null!=e){e=A(e)?e:x.values(e);for(var s=0,u=e.length;u>s;s++)r=e[s],r>a&&(a=r)}else t=M(t,n),x.each(e,function(e,n,r){i=t(e,n,r),(i>o||i===-(1/0)&&a===-(1/0))&&(a=e,o=i)});return a},x.min=function(e,t,n){var r,i,a=1/0,o=1/0;if(null==t&&null!=e){e=A(e)?e:x.values(e);for(var s=0,u=e.length;u>s;s++)r=e[s],a>r&&(a=r)}else t=M(t,n),x.each(e,function(e,n,r){i=t(e,n,r),(o>i||i===1/0&&a===1/0)&&(a=e,o=i)});return a},x.shuffle=function(e){for(var t,n=A(e)?e:x.values(e),r=n.length,i=Array(r),a=0;r>a;a++)t=x.random(0,a),t!==a&&(i[a]=i[t]),i[t]=n[a];return i},x.sample=function(e,t,n){return null==t||n?(A(e)||(e=x.values(e)),e[x.random(e.length-1)]):x.shuffle(e).slice(0,Math.max(0,t))},x.sortBy=function(e,t,n){return t=M(t,n),x.pluck(x.map(e,function(e,n,r){return{value:e,index:n,criteria:t(e,n,r)}}).sort(function(e,t){var n=e.criteria,r=t.criteria;if(n!==r){if(n>r||void 0===n)return 1;if(r>n||void 0===r)return-1}return e.index-t.index}),"value")};var L=function(e){return function(t,n,r){var i={};return n=M(n,r),x.each(t,function(r,a){var o=n(r,a,t);e(i,r,o)}),i}};x.groupBy=L(function(e,t,n){x.has(e,n)?e[n].push(t):e[n]=[t]}),x.indexBy=L(function(e,t,n){e[n]=t}),x.countBy=L(function(e,t,n){x.has(e,n)?e[n]++:e[n]=1}),x.toArray=function(e){return e?x.isArray(e)?p.call(e):A(e)?x.map(e,x.identity):x.values(e):[]},x.size=function(e){return null==e?0:A(e)?e.length:x.keys(e).length},x.partition=function(e,t,n){t=M(t,n);var r=[],i=[];return x.each(e,function(e,n,a){(t(e,n,a)?r:i).push(e)}),[r,i]},x.first=x.head=x.take=function(e,t,n){return null==e?void 0:null==t||n?e[0]:x.initial(e,e.length-t)},x.initial=function(e,t,n){return p.call(e,0,Math.max(0,e.length-(null==t||n?1:t)))},x.last=function(e,t,n){return null==e?void 0:null==t||n?e[e.length-1]:x.rest(e,Math.max(0,e.length-t))},x.rest=x.tail=x.drop=function(e,t,n){return p.call(e,null==t||n?1:t)},x.compact=function(e){return x.filter(e,x.identity)};var P=function(e,t,n,r){for(var i=[],a=0,o=r||0,s=C(e);s>o;o++){var u=e[o];if(A(u)&&(x.isArray(u)||x.isArguments(u))){t||(u=P(u,t,n));var h=0,c=u.length;for(i.length+=c;c>h;)i[a++]=u[h++]}else n||(i[a++]=u)}return i};x.flatten=function(e,t){return P(e,t,!1)},x.without=function(e){return x.difference(e,p.call(arguments,1))},x.uniq=x.unique=function(e,t,n,r){x.isBoolean(t)||(r=n,n=t,t=!1),null!=n&&(n=M(n,r));for(var i=[],a=[],o=0,s=C(e);s>o;o++){var u=e[o],h=n?n(u,o,e):u;t?(o&&a===h||i.push(u),a=h):n?x.contains(a,h)||(a.push(h),i.push(u)):x.contains(i,u)||i.push(u)}return i},x.union=function(){return x.uniq(P(arguments,!0,!0))},x.intersection=function(e){for(var t=[],n=arguments.length,r=0,i=C(e);i>r;r++){var a=e[r];if(!x.contains(t,a)){for(var o=1;n>o&&x.contains(arguments[o],a);o++);o===n&&t.push(a)}}return t},x.difference=function(e){var t=P(arguments,!0,!0,1);return x.filter(e,function(e){return!x.contains(t,e)})},x.zip=function(){return x.unzip(arguments)},x.unzip=function(e){for(var t=e&&x.max(e,C).length||0,n=Array(t),r=0;t>r;r++)n[r]=x.pluck(e,r);return n},x.object=function(e,t){for(var n={},r=0,i=C(e);i>r;r++)t?n[e[r]]=t[r]:n[e[r][0]]=e[r][1];return n},x.findIndex=r(1),x.findLastIndex=r(-1),x.sortedIndex=function(e,t,n,r){n=M(n,r,1);for(var i=n(t),a=0,o=C(e);o>a;){var s=Math.floor((a+o)/2);n(e[s])<i?a=s+1:o=s}return a},x.indexOf=i(1,x.findIndex,x.sortedIndex),x.lastIndexOf=i(-1,x.findLastIndex),x.range=function(e,t,n){null==t&&(t=e||0,e=0),n=n||1;for(var r=Math.max(Math.ceil((t-e)/n),0),i=Array(r),a=0;r>a;a++,e+=n)i[a]=e;return i};var k=function(e,t,n,r,i){if(!(r instanceof t))return e.apply(n,i);var a=_(e.prototype),o=e.apply(a,i);return x.isObject(o)?o:a};x.bind=function(e,t){if(v&&e.bind===v)return v.apply(e,p.call(arguments,1));if(!x.isFunction(e))throw new TypeError("Bind must be called on a function");var n=p.call(arguments,2),r=function(){return k(e,r,t,this,n.concat(p.call(arguments)))};return r},x.partial=function(e){var t=p.call(arguments,1),n=function(){for(var r=0,i=t.length,a=Array(i),o=0;i>o;o++)a[o]=t[o]===x?arguments[r++]:t[o];for(;r<arguments.length;)a.push(arguments[r++]);return k(e,n,this,this,a)};return n},x.bindAll=function(e){var t,n,r=arguments.length;if(1>=r)throw new Error("bindAll must be passed function names");for(t=1;r>t;t++)n=arguments[t],e[n]=x.bind(e[n],e);return e},x.memoize=function(e,t){var n=function(r){var i=n.cache,a=""+(t?t.apply(this,arguments):r);return x.has(i,a)||(i[a]=e.apply(this,arguments)),i[a]};return n.cache={},n},x.delay=function(e,t){var n=p.call(arguments,2);return setTimeout(function(){return e.apply(null,n)},t)},x.defer=x.partial(x.delay,x,1),x.throttle=function(e,t,n){var r,i,a,o=null,s=0;n||(n={});var u=function(){s=n.leading===!1?0:x.now(),o=null,a=e.apply(r,i),o||(r=i=null)};return function(){var h=x.now();s||n.leading!==!1||(s=h);var c=t-(h-s);return r=this,i=arguments,0>=c||c>t?(o&&(clearTimeout(o),o=null),s=h,a=e.apply(r,i),o||(r=i=null)):o||n.trailing===!1||(o=setTimeout(u,c)),a}},x.debounce=function(e,t,n){var r,i,a,o,s,u=function(){var h=x.now()-o;t>h&&h>=0?r=setTimeout(u,t-h):(r=null,n||(s=e.apply(a,i),r||(a=i=null)))};return function(){a=this,i=arguments,o=x.now();var h=n&&!r;return r||(r=setTimeout(u,t)),h&&(s=e.apply(a,i),a=i=null),s}},x.wrap=function(e,t){return x.partial(t,e)},x.negate=function(e){return function(){return!e.apply(this,arguments)}},x.compose=function(){var e=arguments,t=e.length-1;return function(){for(var n=t,r=e[t].apply(this,arguments);n--;)r=e[n].call(this,r);return r}},x.after=function(e,t){return function(){return--e<1?t.apply(this,arguments):void 0}},x.before=function(e,t){var n;return function(){return--e>0&&(n=t.apply(this,arguments)),1>=e&&(t=null),n}},x.once=x.partial(x.before,2);var D=!{toString:null}.propertyIsEnumerable("toString"),R=["valueOf","isPrototypeOf","toString","propertyIsEnumerable","hasOwnProperty","toLocaleString"];x.keys=function(e){if(!x.isObject(e))return[];if(g)return g(e);var t=[];for(var n in e)x.has(e,n)&&t.push(n);return D&&a(e,t),t},x.allKeys=function(e){if(!x.isObject(e))return[];var t=[];for(var n in e)t.push(n);return D&&a(e,t),t},x.values=function(e){for(var t=x.keys(e),n=t.length,r=Array(n),i=0;n>i;i++)r[i]=e[t[i]];return r},x.mapObject=function(e,t,n){t=M(t,n);for(var r,i=x.keys(e),a=i.length,o={},s=0;a>s;s++)r=i[s],o[r]=t(e[r],r,e);return o},x.pairs=function(e){for(var t=x.keys(e),n=t.length,r=Array(n),i=0;n>i;i++)r[i]=[t[i],e[t[i]]];return r},x.invert=function(e){for(var t={},n=x.keys(e),r=0,i=n.length;i>r;r++)t[e[n[r]]]=n[r];return t},x.functions=x.methods=function(e){var t=[];for(var n in e)x.isFunction(e[n])&&t.push(n);return t.sort()},x.extend=S(x.allKeys),x.extendOwn=x.assign=S(x.keys),x.findKey=function(e,t,n){t=M(t,n);for(var r,i=x.keys(e),a=0,o=i.length;o>a;a++)if(r=i[a],t(e[r],r,e))return r},x.pick=function(e,t,n){var r,i,a={},o=e;if(null==o)return a;x.isFunction(t)?(i=x.allKeys(o),r=w(t,n)):(i=P(arguments,!1,!1,1),r=function(e,t,n){return t in n},o=Object(o));for(var s=0,u=i.length;u>s;s++){var h=i[s],c=o[h];r(c,h,o)&&(a[h]=c)}return a},x.omit=function(e,t,n){if(x.isFunction(t))t=x.negate(t);else{var r=x.map(P(arguments,!1,!1,1),String);t=function(e,t){return!x.contains(r,t)}}return x.pick(e,t,n)},x.defaults=S(x.allKeys,!0),x.create=function(e,t){var n=_(e);return t&&x.extendOwn(n,t),n},x.clone=function(e){return x.isObject(e)?x.isArray(e)?e.slice():x.extend({},e):e},x.tap=function(e,t){return t(e),e},x.isMatch=function(e,t){var n=x.keys(t),r=n.length;if(null==e)return!r;for(var i=Object(e),a=0;r>a;a++){var o=n[a];if(t[o]!==i[o]||!(o in i))return!1}return!0};var F=function(e,t,n,r){if(e===t)return 0!==e||1/e===1/t;if(null==e||null==t)return e===t;e instanceof x&&(e=e._wrapped),t instanceof x&&(t=t._wrapped);var i=f.call(e);if(i!==f.call(t))return!1;switch(i){case"[object RegExp]":case"[object String]":return""+e==""+t;case"[object Number]":return+e!==+e?+t!==+t:0===+e?1/+e===1/t:+e===+t;case"[object Date]":case"[object Boolean]":return+e===+t}var a="[object Array]"===i;if(!a){if("object"!=typeof e||"object"!=typeof t)return!1;var o=e.constructor,s=t.constructor;if(o!==s&&!(x.isFunction(o)&&o instanceof o&&x.isFunction(s)&&s instanceof s)&&"constructor"in e&&"constructor"in t)return!1}n=n||[],r=r||[];for(var u=n.length;u--;)if(n[u]===e)return r[u]===t;if(n.push(e),r.push(t),a){if(u=e.length,u!==t.length)return!1;for(;u--;)if(!F(e[u],t[u],n,r))return!1}else{var h,c=x.keys(e);if(u=c.length,x.keys(t).length!==u)return!1;for(;u--;)if(h=c[u],!x.has(t,h)||!F(e[h],t[h],n,r))return!1}return n.pop(),r.pop(),!0};x.isEqual=function(e,t){return F(e,t)},x.isEmpty=function(e){return null==e?!0:A(e)&&(x.isArray(e)||x.isString(e)||x.isArguments(e))?0===e.length:0===x.keys(e).length},x.isElement=function(e){return!(!e||1!==e.nodeType)},x.isArray=m||function(e){return"[object Array]"===f.call(e)},x.isObject=function(e){var t=typeof e;return"function"===t||"object"===t&&!!e},x.each(["Arguments","Function","String","Number","Date","RegExp","Error"],function(e){x["is"+e]=function(t){return f.call(t)==="[object "+e+"]"}}),x.isArguments(arguments)||(x.isArguments=function(e){return x.has(e,"callee")}),"function"!=typeof/./&&"object"!=typeof Int8Array&&(x.isFunction=function(e){return"function"==typeof e||!1}),x.isFinite=function(e){return isFinite(e)&&!isNaN(parseFloat(e))},x.isNaN=function(e){return x.isNumber(e)&&e!==+e},x.isBoolean=function(e){return e===!0||e===!1||"[object Boolean]"===f.call(e)},x.isNull=function(e){return null===e},x.isUndefined=function(e){return void 0===e},x.has=function(e,t){return null!=e&&d.call(e,t)},x.noConflict=function(){return o._=s,this},x.identity=function(e){return e},x.constant=function(e){return function(){return e}},x.noop=function(){},x.property=T,x.propertyOf=function(e){return null==e?function(){}:function(t){return e[t]}},x.matcher=x.matches=function(e){return e=x.extendOwn({},e),function(t){return x.isMatch(t,e)}},x.times=function(e,t,n){var r=Array(Math.max(0,e));t=w(t,n,1);for(var i=0;e>i;i++)r[i]=t(i);return r},x.random=function(e,t){return null==t&&(t=e,e=0),e+Math.floor(Math.random()*(t-e+1))},x.now=Date.now||function(){return(new Date).getTime()};var O={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#x27;","`":"&#x60;"},V=x.invert(O),N=function(e){var t=function(t){return e[t]},n="(?:"+x.keys(e).join("|")+")",r=RegExp(n),i=RegExp(n,"g");return function(e){return e=null==e?"":""+e,r.test(e)?e.replace(i,t):e}};x.escape=N(O),x.unescape=N(V),x.result=function(e,t,n){var r=null==e?void 0:e[t];return void 0===r&&(r=n),x.isFunction(r)?r.call(e):r};var B=0;x.uniqueId=function(e){var t=++B+"";return e?e+t:t},x.templateSettings={evaluate:/<%([\s\S]+?)%>/g,interpolate:/<%=([\s\S]+?)%>/g,escape:/<%-([\s\S]+?)%>/g};var U=/(.)^/,G={"'":"'","\\":"\\","\r":"r","\n":"n","\u2028":"u2028","\u2029":"u2029"},I=/\\|'|\r|\n|\u2028|\u2029/g,j=function(e){return"\\"+G[e]};x.template=function(e,t,n){!t&&n&&(t=n),t=x.defaults({},t,x.templateSettings);var r=RegExp([(t.escape||U).source,(t.interpolate||U).source,(t.evaluate||U).source].join("|")+"|$","g"),i=0,a="__p+='";e.replace(r,function(t,n,r,o,s){return a+=e.slice(i,s).replace(I,j),i=s+t.length,n?a+="'+\n((__t=("+n+"))==null?'':_.escape(__t))+\n'":r?a+="'+\n((__t=("+r+"))==null?'':__t)+\n'":o&&(a+="';\n"+o+"\n__p+='"),t}),a+="';\n",t.variable||(a="with(obj||{}){\n"+a+"}\n"),a="var __t,__p='',__j=Array.prototype.join,print=function(){__p+=__j.call(arguments,'');};\n"+a+"return __p;\n";try{var o=new Function(t.variable||"obj","_",a)}catch(s){throw s.source=a,s}var u=function(e){return o.call(this,e,x)},h=t.variable||"obj";return u.source="function("+h+"){\n"+a+"}",u},x.chain=function(e){var t=x(e);return t._chain=!0,t};var z=function(e,t){return e._chain?x(t).chain():t};x.mixin=function(e){x.each(x.functions(e),function(t){var n=x[t]=e[t];x.prototype[t]=function(){var e=[this._wrapped];return l.apply(e,arguments),z(this,n.apply(x,e))}})},x.mixin(x),x.each(["pop","push","reverse","shift","sort","splice","unshift"],function(e){var t=u[e];x.prototype[e]=function(){var n=this._wrapped;return t.apply(n,arguments),"shift"!==e&&"splice"!==e||0!==n.length||delete n[0],z(this,n)}}),x.each(["concat","join","slice"],function(e){var t=u[e];x.prototype[e]=function(){return z(this,t.apply(this._wrapped,arguments))}}),x.prototype.value=function(){return this._wrapped},x.prototype.valueOf=x.prototype.toJSON=x.prototype.value,x.prototype.toString=function(){return""+this._wrapped},"function"==typeof define&&define.amd&&define("underscore",[],function(){return x})}).call(this)},{}],12:[function(e,t,n){"use strict";var r=e("three"),i={test:{cells:[[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1],[1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,1],[1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,2,0,2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]],
spawnPoints:[{x:1.5,y:21},{x:2.5,y:21},{x:3.5,y:21}]}},a=e("./models.js");t.exports=function(){var e={};var t=function(){this.load=function(t){var n=new r.JSONLoader,i=(new r.TextureLoader,function(t,i,o){var s=n.parse(a[i]),u=s.materials||(void 0===o?new r.MeshDepthMaterial:new r.MeshBasicMaterial({color:o}));u.length>=1?e[t]=new r.Mesh(s.geometry,new r.MeshFaceMaterial(u)):e[t]=new r.Mesh(s.geometry,u)});i("empty","empty"),i("solid","solid"),i("target","solid",11289666),i("man","man",96725),i("missile","missile",96725),t()},this.model={cubeEmpty:function(t){return e.empty.clone()},cubeSolid:function(){return e.solid.clone()},cubeTarget:function(){return e.target.clone()},man:function(){return e.man.clone()},missile:function(){return e.missile.clone()}},this.level={test:function(){return JSON.parse(JSON.stringify(i.test))}}};return new t}()},{"./models.js":19,three:10}],13:[function(e,t,n){"use strict";var r=e("underscore"),i=e("three"),a=function(e){var t=new i.Euler,n=new i.Vector3(0,0,0),a=new i.Vector2(0,0),o=new i.Vector2(0,0),s=[],u=function(){var n=(new i.Vector3,new i.Matrix4);return r.each(e,function(e){var t=new i.Vector3;t.r=e.r,t.rs=e.rs,s.push(t)}),function(){n.makeRotationFromEuler(t).setPosition(o),r.each(s,function(t,r){t.set(e[r].x,e[r].y,0).applyMatrix4(n)})}}();this.update=function(){var e=new i.Vector2,r=new i.Vector3;return function(i,s,h){e.set(0,0),r.set(0,0,0),s(r,e,t),e.multiplyScalar(i),a.add(e),r.multiplyScalar(i),n.add(r),h(a,n),e.copy(a).multiplyScalar(i),r.copy(n).multiplyScalar(i),o.add(e),t.z+=r.z,u()}}(),this.reset=function(e,r){o.set(e,r),n.set(0,0,0),a.set(0,0),t.set(0,0,0)},this.setRotation=function(e){t.set(0,0,e||0)},this.position=function(){var e=new i.Vector3;return function(){return e.set(o.x,o.y,0)}}(),this.velocity=function(){var e=new i.Vector3;return function(){return e.set(a.x,a.y,0)}}(),this.rotation=function(){var e=new i.Euler;return function(){return e.copy(t)}}(),this.getPoints=function(){return s},this.handleCollision=function(e){o.add(e.offset),a.sub(e.normal.multiplyScalar(a.dot(e.normal)))}};t.exports=a},{three:10,underscore:11}],14:[function(e,t,n){"use strict";var r=e("underscore"),i=e("util"),a=e("events").EventEmitter,o=function(e){var t=e?JSON.parse(e):[],n=this;a.call(this),this.update=function(e){var i=t[e.toString()];i&&n.emit("input.move",r.clone(i))},this.serialize=function(){return JSON.stringify(t)}};i.inherits(o,a);var s=function(e){var t=r.mapObject(e,function(){return!1}),n=r.clone(t),i={},o=this;a.call(this);const s=function(n,i,a){r.findKey(e,function(e,r){return e===i?(t[r]=a,n.preventDefault(),!0):void 0})};document.body.addEventListener("keydown",function(e){return s(e,e.keyCode,!0)}),document.body.addEventListener("keyup",function(e){return s(e,e.keyCode,!1)}),this.reset=function(){i={},o.removeAllListeners("input.move")},this.serialize=function(){return JSON.stringify(i)},this.update=function(e){r.isMatch(t,n)||(i[e.toString()]=r.clone(t),o.emit("input.move",r.clone(t)),r.extend(n,t))}};i.inherits(s,a),t.exports=function(e){return e=e||{},"object"==typeof e.keys?new s(e.keys):new o(e.replay)}},{events:3,underscore:11,util:7}],15:[function(e,t,n){"use strict";var r=e("three"),i=function(e,t,n){var i,a,o,s,u=new r.Vector2,h=function(e,t,n){return"object"==typeof e&&(i={x:e.a[0]+t,y:e.a[1]+n},a={x:e.b[0]+t,y:e.b[1]+n},o={x:e.n[0],y:e.n[1]},u.subVectors(a,i),s=u.lengthSq()),this},c=function(){var e=new r.Vector2,t=e.clone();return function(n){var r=e.subVectors(t.copy(n),i).dot(u);return 0>r?i:r>s?a:e.copy(u).multiplyScalar(r/s).add(i)}}();return h(e,t,n),{p1:i,p2:a,n:o,set:h,detectCollision:function(){var e,t,n=new r.Vector2,i=new r.Vector2,a=(new r.Vector2,{offset:new r.Vector2,normal:new r.Vector2});return function(r){return i.copy(c(r)),n.copy(r).sub(i),a.normal.copy(n).normalize(),a.normal.dot(o)>=0&&(t=n.lengthSq(),t<r.rs)?(e=r.r-Math.sqrt(t),a.offset.copy(n.normalize().multiplyScalar(e)),a):void 0}}()}};t.exports=i},{three:10}],16:[function(e,t,n){"use strict";var r=e("util"),i=e("events").EventEmitter,a=e("stats.js");t.exports=function(){const e=function(){var e={begin:function(){},end:function(){}};return"undefined"!=typeof a&&(e=new a,e.setMode(0),e.domElement.style.position="absolute",e.domElement.style.left="0px",e.domElement.style.top="0px",document.body.appendChild(e.domElement)),e}();var t,n,o=function(){return window.performance&&window.performance.now?window.performance.now():(new Date).getTime()},s=1/60,u=0,h=o(),c=0,l=function(){i.call(this),this.reset=function(){c=0}};return r.inherits(l,i),t=new l,+function p(){requestAnimationFrame(p),e.begin(),n=o(),u=n-h,h=n,t.emit("loop.update",c,s),t.emit("loop.render",u),c+=1,e.end()}(),t}()},{events:3,"stats.js":9,util:7}],17:[function(e,t,n){"use strict";var r=[[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]}],[{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}]],i=[[],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]}],[{a:[2,1],b:[-1,1],n:[0,-1]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[0,0],b:[-1,0],n:[0,-1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]}],[{a:[2,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]}],[{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[2,1],b:[-1,1],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]}],[{a:[0,2],b:[0,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,-1],n:[1,0]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]}],[{a:[0,2],b:[0,-1],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]}],[{a:[2,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,-1],n:[1,0]}],[{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,2],b:[0,-1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,2],b:[0,-1],n:[1,0]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]}],[{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[2,1],b:[-1,1],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[2,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[2,1],b:[-1,1],n:[0,-1]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[2,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[-1,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,0],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[2,0],b:[1,0],n:[0,-1]},{a:[0,0],b:[1,0],n:[0,1]},{a:[1,0],b:[1,-1],n:[1,0]}],[{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[-1,1],n:[0,-1]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[1,1],b:[2,1],n:[0,1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[1,-1],b:[1,2],n:[-1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,-1],b:[1,2],n:[-1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,-1],b:[1,2],n:[-1,0]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,-1],b:[1,2],n:[-1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[-1,1],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,2],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,2],b:[0,-1],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,0],n:[-1,0]},{a:[1,0],b:[2,0],n:[0,1]}],[{a:[1,1],b:[2,1],n:[0,1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,2],n:[-1,0]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,2],n:[-1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[-1,0],b:[0,0],n:[0,1]},{a:[0,0],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[0,2],b:[0,-1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,2],n:[-1,0]}],[{a:[0,2],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,2],n:[-1,0]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,1],n:[-1,0]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,-1],n:[1,0]},{a:[1,-1],b:[1,1],n:[-1,0]
}],[{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[-1,1],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[1,0],b:[1,2],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[-1,0],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,-1],b:[0,0],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[-1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[-1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,0],b:[2,0],n:[0,1]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[-1,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[-1,1],n:[0,-1]},{a:[-1,0],b:[2,0],n:[0,1]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[2,1],b:[1,1],n:[0,-1]},{a:[1,1],b:[1,2],n:[-1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[2,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[2,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[0,0],b:[2,0],n:[0,1]}],[{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[-1,0],b:[1,0],n:[0,1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[-1,0],b:[1,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[-1,0],b:[1,0],n:[0,1]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[-1,0],b:[1,0],n:[0,1]}],[{a:[1,0],b:[1,2],n:[-1,0]},{a:[-1,0],b:[1,0],n:[0,1]}],[{a:[0,1],b:[-1,1],n:[0,-1]},{a:[0,2],b:[0,1],n:[1,0]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[-1,0],b:[1,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[-1,0],b:[1,0],n:[0,1]}],[{a:[1,1],b:[-1,1],n:[0,-1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[-1,0],b:[1,0],n:[0,1]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[1,2],b:[1,1],n:[1,0]},{a:[0,1],b:[0,0],n:[1,0]},{a:[1,1],b:[2,1],n:[0,1]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[0,2],b:[0,0],n:[1,0]},{a:[1,0],b:[1,2],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[0,1],b:[0,2],n:[-1,0]},{a:[1,1],b:[0,1],n:[0,-1]},{a:[-1,1],b:[0,1],n:[0,1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}],[{a:[1,1],b:[0,1],n:[0,-1]},{a:[0,1],b:[0,0],n:[1,0]},{a:[1,0],b:[1,1],n:[-1,0]},{a:[0,0],b:[1,0],n:[0,1]}]],a=[[-1,1,1],[0,1,2],[1,1,4],[-1,0,8],[1,0,16],[-1,-1,32],[0,-1,64],[1,-1,128]],o=e("underscore"),s=e("./line"),u=function(){var e=[],t=function(t,n){return e[n][t]};this.clear=function(){e=[]},this.removeBlock=function(t,n){e[n][t]=0},this.addBlocks=function(t){e=t},this.checkCollides=function(){var e,n,i,u=new s,h=function(t,s,h,c){o.each(r[t],function(r){u.set(r,n,i),o.each(h.getPoints(),function(r){e=u.detectCollision(r),e&&(e.x=n+a[t][0],e.y=i+a[t][1],s(h,e,c))})})};return function(e,r,s){n=Math.floor(e.position().x),i=Math.floor(e.position().y),o.each(a,function(a,o){t(n+a[0],i+a[1])===r&&h(o,s,e,r)})}}(),this.handleCollides=function(){var e,n=[],r=function(e,r){var u=Math.floor(e.position().x),h=Math.floor(e.position().y),c=0,l=[];return o.each(a,function(e){c+=t(u+e[0],h+e[1])===r?e[2]:0}),o.each(i[c],function(e){var t;n.length<=l.length?(t=new s(e,u,h),n.push(t)):t=n[l.length].set(e,u,h),l.push(t)}),l};return function(t,n){var i=r(t,n);o.each(i,function(n){o.each(t.getPoints(),function(r){e=n.detectCollision(r),e&&t.handleCollision(e)})})}}()};t.exports=u},{"./line":15,underscore:11}],18:[function(e,t,n){"use strict";var r=e("three"),i=new r.Matrix3,a=new r.Vector3,o=new r.Quaternion;const s=function(e){var t=e.x+e.x,n=e.y+e.y,r=e.z+e.z,a=t*e.w,o=n*e.w,s=r*e.w,u=t*e.x,h=n*e.x,c=r*e.x,l=n*e.y,p=r*e.y,f=r*e.z;return i.set(1-(l+f),h-s,0,h+s,1-(u+f),0,c-o,p+a,0)};t.exports=function(e,t,n){a.copy(n).applyMatrix3(s(o.setFromEuler(t))),e.x+=a.x,e.y+=a.y}},{three:10}],19:[function(e,t,n){t.exports={missile:{uvs:[],skinWeights:[],materials:[{depthWrite:!0,colorAmbient:[1,1,1],transparent:!1,vertexColors:!1,DbgColor:15658734,blending:"NormalBlending",colorEmissive:[.024158,.068478,.278894],doubleSided:!0,opacity:1,shading:"lambert",DbgName:"Material",visible:!0,wireframe:!1,DbgIndex:0,depthTest:!0,colorDiffuse:[1,1,1]},{depthWrite:!0,colorAmbient:[1,1,1],transparent:!1,vertexColors:!1,DbgColor:15597568,blending:"NormalBlending",colorEmissive:[1,1,1],doubleSided:!0,opacity:1,shading:"lambert",DbgName:"Material.001",visible:!0,wireframe:!1,DbgIndex:1,depthTest:!0,colorDiffuse:[1,1,1]}],name:"SphereGeometry.8",skinIndices:[],vertices:[.001748,.517685,-.017757,.00349,.515472,-.035444,.005219,.511793,-.052991,.006926,.506663,-.070329,.008607,.500103,-.087389,.010253,.492137,-.104105,.011859,.482797,-.12041,.013418,.472121,-.136239,.014924,.46015,-.151531,.016371,.446932,-.166224,.017754,.432518,-.180262,.019066,.416967,-.193589,.020304,.400338,-.206151,.021461,.382698,-.2179,.022533,.364116,-.228788,.023517,.344666,-.238774,.024408,.324425,-.247818,.025202,.303471,-.255883,.025897,.281889,-.262939,.02649,.259763,-.268957,.026978,.23718,-.273913,.00348,.517685,-.0175,.006948,.515472,-.034931,.010387,.511793,-.052224,.013786,.506663,-.069311,.017131,.500103,-.086125,.020408,.492137,-.102599,.023604,.482797,-.118667,.026707,.472121,-.134268,.029705,.46015,-.149338,.032585,.446932,-.163819,.035337,.432518,-.177654,.03795,.416967,-.190787,.040412,.400338,-.203168,.042715,.382698,-.214747,.04485,.364116,-.225478,.046808,.344666,-.235319,.048581,.324425,-.244232,.050162,.303471,-.252181,.051545,.281889,-.259134,.052725,.259763,-.265065,.053696,.23718,-.26995,.005179,.517685,-.017075,.010338,.515472,-.034082,.015456,.511793,-.050955,.020514,.506663,-.067626,.02549,.500103,-.084031,.030366,.492137,-.100104,.035122,.482797,-.115782,.039739,.472121,-.131003,.044199,.46015,-.145708,.048486,.446932,-.159837,.05258,.432518,-.173335,.056467,.416967,-.186149,.060132,.400338,-.198229,.063559,.382698,-.209526,.066735,.364116,-.219996,.069648,.344666,-.229598,.072286,.324425,-.238294,.074638,.303471,-.24605,.076696,.281889,-.252834,.078452,.259763,-.258621,.079898,.23718,-.263387,.006828,.517685,-.016485,.013629,.515472,-.032904,.020376,.511793,-.049194,.027043,.506663,-.06529,.033604,.500103,-.081128,.040032,.492137,-.096646,.046301,.482797,-.111782,.052388,.472121,-.126477,.058268,.46015,-.140674,.063919,.446932,-.154314,.069317,.432518,-.167346,.074441,.416967,-.179718,.079272,.400338,-.19138,.08379,.382698,-.202287,.087977,.364116,-.212396,.091817,.344666,-.221666,.095295,.324425,-.230062,.098396,.303471,-.237549,.101109,.281889,-.244099,.103423,.259763,-.249686,.105329,.23718,-.254287,.008411,.517685,-.015736,.016788,.515472,-.03141,.0251,.511793,-.04696,.033313,.506663,-.062325,.041394,.500103,-.077443,.049312,.492137,-.092257,.057035,.482797,-.106706,.064533,.472121,-.120733,.071776,.46015,-.134285,.078737,.446932,-.147306,.085386,.432518,-.159746,.091698,.416967,-.171556,.097649,.400338,-.182689,.103214,.382698,-.1931,.108372,.364116,-.20275,.113102,.344666,-.211599,.117386,.324425,-.219613,.121206,.303471,-.226761,.124548,.281889,-.233013,.127399,.259763,-.238346,.129747,.23718,-.242739,.009912,.517685,-.014836,.019786,.515472,-.029613,.029582,.511793,-.044274,.039261,.506664,-.058759,.048785,.500103,-.073013,.058117,.492137,-.086979,.067219,.482797,-.100601,.076056,.472121,-.113827,.084593,.46015,-.126603,.092796,.446932,-.138879,.100633,.432518,-.150608,.108072,.416967,-.161742,.115085,.400338,-.172238,.121644,.382698,-.182053,.127723,.364116,-.191151,.133298,.344666,-.199494,.138346,.324425,-.20705,.142849,.303471,-.213789,.146788,.281889,-.219683,.150147,.259763,-.224711,.152914,.23718,-.228852,.011319,.517685,-.013793,.022594,.515472,-.027531,.033779,.511793,-.041161,.044832,.506664,-.054628,.055707,.500103,-.06788,.066363,.492137,-.080863,.076756,.482797,-.093528,.086847,.472121,-.105824,.096595,.46015,-.117702,.105962,.446932,-.129115,.11491,.432518,-.140019,.123405,.416967,-.15037,.131413,.400338,-.160128,.138903,.382698,-.169254,.145844,.364116,-.177711,.15221,.344666,-.185468,.157975,.324425,-.192493,.163116,.303471,-.198757,.167614,.281889,-.204238,.17145,.259763,-.208912,.17461,.23718,-.212762,.161461,-.286362,-.19674,.1414,-.286362,-.211619,.119976,-.286362,-.224459,.097398,-.286362,-.235138,.073881,-.286362,-.243553,.049653,-.286362,-.249621,.024947,-.286362,-.253286,.161461,-.44837,-.19674,.1414,-.44837,-.211619,.119977,-.44837,-.224459,.097398,-.44837,-.235138,.073881,-.44837,-.243553,.049653,-.44837,-.249621,.024947,-.44837,-.253286,.117606,-.242756,-.283924,.144869,-.080015,-.27103,.117605,.060915,-.283924,.144869,.060915,-.27103,.117606,-.080015,-.283924,.144869,-.242756,-.27103,.030123,-.242756,-.305838,.08921,-.080015,-.294084,.030122,.060915,-.305838,.059955,.060915,-.301412,.059955,-.080015,-.301412,.059955,-.242756,-.301412,.08921,.060915,-.294084,.030123,-.080015,-.305838,.08921,-.242756,-.294084,.025183,.515472,-.025184,.037651,.511793,-.037652,.04997,.506664,-.049971,.062092,.500103,-.062093,.085554,.482797,-.085554,.096801,.472121,-.096802,.107667,.46015,-.107667,.118107,.446932,-.118107,.128081,.432518,-.128081,.13755,.416967,-.13755,.146476,.400338,-.146476,.154824,.382698,-.154824,.162561,.364116,-.16256,.169656,.344666,-.169656,.176081,.324425,-.176081,.181812,.303471,-.181812,.186826,.281889,-.186825,.191102,.259763,-.191101,.194623,.23718,-.194623,.017757,.517685,-.001749,.035444,.515472,-.003491,.052991,.511793,-.005219,.070329,.506664,-.006927,.087389,.500103,-.008607,.104105,.492137,-.010253,.120409,.482797,-.011859,.136239,.472121,-.013418,.15153,.46015,-.014924,.166224,.446932,-.016371,.180262,.432518,-.017754,.193588,.416967,-.019066,.206151,.400338,-.020304,.217899,.382698,-.021461,.228788,.364116,-.022533,.238774,.344666,-.023517,.247818,.324425,-.024407,.255883,.303471,-.025202,.262939,.281889,-.025897,.268957,.259763,-.026489,.273913,.23718,-.026978,.0175,.517685,-.003481,.034931,.515472,-.006948,.052224,.511793,-.010388,.069311,.506664,-.013787,.086125,.500103,-.017131,.102598,.492137,-.020408,.118667,.482797,-.023604,.134267,.472121,-.026707,.149338,.46015,-.029705,.163819,.446932,-.032585,.177654,.432518,-.035337,.190787,.416967,-.03795,.203168,.400338,-.040412,.214747,.382698,-.042715,.225478,.364116,-.04485,.235319,.344666,-.046808,.244232,.324425,-.04858,.252181,.303471,-.050162,.259134,.281889,-.051545,.265065,.259763,-.052724,.26995,.23718,-.053696,.017074,.517685,-.005179,.034081,.515472,-.010338,.050954,.511793,-.015457,.067626,.506664,-.020514,.084031,.500103,-.02549,.100104,.492137,-.030366,.115782,.482797,-.035122,.131003,.472121,-.039739,.145707,.46015,-.0442,.159836,.446932,-.048486,.173335,.432518,-.05258,.186149,.416967,-.056467,.198229,.400338,-.060132,.209526,.382698,-.063559,.219996,.364116,-.066735,.229598,.344666,-.069648,.238294,.324425,-.072285,.24605,.303471,-.074638,.252834,.281889,-.076696,.258621,.259763,-.078451,.263387,.23718,-.079897,.016484,.517685,-.006828,.032904,.515472,-.013629,.049194,.511793,-.020377,.06529,.506664,-.027044,.081127,.500103,-.033604,.096645,.492137,-.040032,.111782,.482797,-.046301,.126477,.472121,-.052388,.140673,.46015,-.058269,.154314,.446932,-.063919,.167346,.432518,-.069317,.179718,.416967,-.074441,.19138,.400338,-.079272,.202287,.382698,-.08379,.212396,.364116,-.087977,.221666,.344666,-.091817,.230062,.324425,-.095294,.237549,.303471,-.098396,.244099,.281889,-.101109,.249686,.259763,-.103423,.254287,.23718,-.105329,.015736,.517685,-.008411,.03141,.515472,-.016789,.04696,.511793,-.025101,.062324,.506664,-.033313,.077443,.500103,-.041394,.092256,.492137,-.049312,.106705,.482797,-.057035,.120733,.472121,-.064533,.134285,.46015,-.071776,.147306,.446932,-.078737,.159746,.432518,-.085386,.171556,.416967,-.091698,.182688,.400338,-.097649,.1931,.382698,-.103214,.20275,.364116,-.108372,.211599,.344666,-.113102,.219613,.324425,-.117386,.226761,.303471,-.121206,.233013,.281889,-.124548,.238346,.259763,-.127399,.242739,.23718,-.129746,.014835,.517685,-.009913,.029613,.515472,-.019787,.044273,.511793,-.029583,.058759,.506664,-.039262,.073013,.500103,-.048786,.086979,.492137,-.058117,.100601,.482797,-.067219,.113826,.472121,-.076056,.126603,.46015,-.084593,.138879,.446932,-.092796,.150608,.432518,-.100633,.161742,.416967,-.108072,.172237,.400338,-.115085,.182053,.382698,-.121644,.191151,.364116,-.127723,.199494,.344666,-.133297,.20705,.324425,-.138346,.213789,.303471,-.142849,.219683,.281889,-.146788,.224711,.259763,-.150147,.228853,.23718,-.152914,.013792,.517685,-.011319,.027531,.515472,-.022594,.04116,.511793,-.03378,.054628,.506664,-.044832,.067879,.500103,-.055707,.080863,.492137,-.066363,.093528,.482797,-.076756,.105823,.472121,-.086847,.117701,.46015,-.096595,.129115,.446932,-.105962,.140019,.432518,-.11491,.15037,.416967,-.123405,.160128,.400338,-.131413,.169253,.382698,-.138903,.177711,.364116,-.145844,.185468,.344666,-.15221,.192493,.324425,-.157974,.198757,.303471,-.163116,.204238,.281889,-.167614,.208912,.259763,-.17145,.212762,.23718,-.174609,.012616,.517685,-.012617,.073969,.492137,-.073969,.196741,-.286362,-.16146,.211619,-.286362,-.141399,.22446,-.286362,-.119976,.235139,-.286362,-.097397,.243553,-.286362,-.07388,.249622,-.286362,-.049652,.253287,-.286362,-.024946,.179967,-.286362,-.179967,.196741,-.44837,-.16146,.211619,-.44837,-.141399,.22446,-.44837,-.119976,.235139,-.44837,-.097397,.243553,-.44837,-.07388,.249622,-.44837,-.049652,.253287,-.44837,-.024946,.179968,-.44837,-.179967,.283925,-.242756,-.117605,.27103,-.080014,-.144868,.283924,.060915,-.117605,.27103,.060915,-.144868,.283925,-.080014,-.117605,.27103,-.242756,-.144868,.305838,-.242756,-.030122,.294085,-.080014,-.089209,.305838,.060915,-.030122,.301413,.060915,-.059954,.301413,-.080014,-.059954,.301413,-.242756,-.059954,.294085,.060915,-.089209,.305838,-.080014,-.030122,.294085,-.242756,-.089209,.191424,.228647,-.23325,.19496,.22308,-.237559,.192113,.22854,-.23409,.192776,.228224,-.234898,.193387,.227709,-.235642,.193923,.227017,-.236295,.194363,.226173,-.236831,.19469,.22521,-.23723,.194892,.224166,-.237476,.167639,.228647,-.25089,.170736,.22308,-.255525,.168243,.22854,-.251793,.168823,.228224,-.252662,.169359,.227709,-.253463,.169828,.227017,-.254165,.170213,.226173,-.254742,.1705,.22521,-.25517,.170676,.224166,-.255435,.14224,.228647,-.266113,.144868,.223079,-.27103,.142752,.22854,-.267071,.143245,.228224,-.267993,.143699,.227709,-.268842,.144097,.227017,-.269587,.144424,.226173,-.270199,.144667,.22521,-.270654,.144817,.224166,-.270934,.115472,.228647,-.278774,.117605,.223079,-.283924,.115888,.22854,-.279777,.116288,.228224,-.280743,.116656,.227709,-.281633,.116979,.227017,-.282413,.117245,.226173,-.283054,.117442,.22521,-.28353,.117564,.224166,-.283824,.087591,.228647,-.28875,.08921,.223079,-.294084,.087907,.22854,-.289789,.08821,.228224,-.290789,.08849,.227709,-.291711,.088735,.227017,-.292519,.088936,.226173,-.293183,.089086,.22521,-.293676,.089178,.224166,-.293981,.058867,.228647,-.295945,.059955,.223079,-.301412,.059079,.22854,-.29701,.059283,.228224,-.298035,.059471,.227709,-.29898,.059636,.227017,-.299808,.059771,.226173,-.300488,.059871,.22521,-.300994,.059933,.224166,-.301306,.029576,.228647,-.30029,.030122,.223079,-.305838,.029682,.22854,-.301371,.029785,.228224,-.302411,.029879,.227709,-.303369,.029962,.227017,-.30421,.03003,.226173,-.3049,.030081,.22521,-.305413,.030112,.224166,-.30573,.194961,-.280795,-.237559,.191424,-.286363,-.23325,.194892,-.281881,-.237476,.19469,-.282926,-.23723,.194363,-.283888,-.236831,.193923,-.284732,-.236295,.193387,-.285424,-.235642,.192776,-.285939,-.234898,.192113,-.286256,-.23409,.170737,-.280795,-.255525,.16764,-.286363,-.25089,.170677,-.281881,-.255435,.1705,-.282926,-.25517,.170214,-.283888,-.254742,.169828,-.284732,-.254165,.169359,-.285424,-.253463,.168824,-.285939,-.252662,.168243,-.286256,-.251793,.144869,-.280795,-.27103,.142241,-.286363,-.266113,.144818,-.281881,-.270934,.144668,-.282926,-.270654,.144425,-.283888,-.270199,.144098,-.284732,-.269587,.1437,-.285424,-.268842,.143246,-.285939,-.267993,.142753,-.286256,-.267071,.117606,-.280795,-.283924,.115472,-.286363,-.278774,.117564,-.281881,-.283824,.117443,-.282926,-.28353,.117245,-.283888,-.283054,.11698,-.284732,-.282413,.116657,-.285424,-.281633,.116288,-.285939,-.280743,.115888,-.286256,-.279777,.08921,-.280795,-.294084,.087592,-.286363,-.28875,.089179,-.281881,-.293981,.089086,-.282926,-.293676,.088936,-.283888,-.293183,.088735,-.284732,-.292519,.08849,-.285424,-.291711,.08821,-.285939,-.290789,.087907,-.286256,-.289789,.059955,-.280795,-.301412,.058867,-.286363,-.295945,.059934,-.281881,-.301306,.059872,-.282926,-.300994,.059771,-.283888,-.300488,.059636,-.284732,-.299808,.059471,-.285424,-.29898,.059283,-.285939,-.298035,.059079,-.286256,-.29701,.030123,-.280795,-.305838,.029576,-.286363,-.30029,.030112,-.281881,-.30573,.030081,-.282926,-.305413,.03003,-.283888,-.3049,.029962,-.284732,-.30421,.02988,-.285425,-.303369,.029785,-.285939,-.302411,.029683,-.286256,-.301371,.174674,-.237188,-.259462,.179239,-.242756,-.256152,.170737,-.248324,-.255525,.165961,-.242756,-.258388,.174817,-.238274,-.259454,.175118,-.239319,-.259306,.175565,-.240281,-.259026,.176141,-.241125,-.258623,.176824,-.241817,-.258113,.177588,-.242332,-.257515,.178403,-.242649,-.256853,.178036,-.242863,-.255692,.17678,-.24318,-.255323,.175519,-.243694,-.25506,.174301,-.244387,-.254912,.173173,-.245231,-.254887,.172179,-.246193,-.254983,.171356,-.247238,-.255199,.166968,-.242159,-.257905,.168088,-.241479,-.257592,.169278,-.24074,-.257461,.170491,-.239972,-.257517,.171682,-.239204,-.257757,.172804,-.238465,-.258173,.173814,-.237784,-.258749,.173944,-.238758,-.258735,.174209,-.239695,-.258603,.174598,-.240561,-.258357,.172936,-.239311,-.258142,.173179,-.240131,-.258014,.173523,-.240894,-.257795,.171831,-.239912,-.257697,.172067,-.240609,-.257564,.172381,-.241268,-.257362,.166971,-.242281,-.257905,.168099,-.241737,-.257591,.169302,-.241145,-.257459,.166977,-.242396,-.257902,.168122,-.241983,-.25758,.169353,-.241531,-.257435,.166985,-.242502,-.257896,.168156,-.242207,-.257559,.169428,-.241884,-.257387,.177279,-.242762,-.256321,.176113,-.243064,-.255868,.17495,-.243545,-.255512,.17654,-.242483,-.256916,.175459,-.242804,-.256388,.174386,-.243285,-.255951,.175848,-.242037,-.257455,.174842,-.242411,-.256863,.173844,-.242926,-.256359,.172853,-.245213,-.255137,.171973,-.246185,-.255142,.171259,-.247236,-.255273,.172549,-.245159,-.255373,.171779,-.246161,-.255291,.171167,-.24723,-.255342,.172266,-.245072,-.255588,.171599,-.246122,-.255426,.171083,-.24722,-.255405,.17515,-.241397,-.25797,.174092,-.241771,-.257403,.173009,-.242233,-.256943,.173835,-.244185,-.255267,.171008,-.247206,-.25546,.173361,-.243907,-.255621,.17144,-.246069,-.255544,.172895,-.243562,-.255961,.172016,-.244956,-.255774,.170673,-.240537,-.257418,.166996,-.242592,-.257889,.170918,-.24111,-.257268,.1682,-.242401,-.257528,.171216,-.241669,-.257073,.169525,-.242189,-.257319,.171942,-.242764,-.256607,.165961,-.080015,-.258388,.174674,-.080015,-.259462,.166968,-.080015,-.257905,.168088,-.080015,-.257592,.169278,-.080015,-.257461,.170491,-.080015,-.257517,.171682,-.080015,-.257757,.172804,-.080015,-.258173,.173814,-.080015,-.258749,.178183,.057172,-.255135,.174674,.048431,-.259462,.165961,.060915,-.258388,.170737,.066483,-.255525,.177671,.056564,-.256152,.177141,.055739,-.257092,.176613,.05473,-.257919,.176108,.053575,-.258601,.175645,.052319,-.259113,.175242,.051009,-.259434,.174914,.049696,-.259552,.173814,.049769,-.258749,.172804,.051295,-.258173,.171682,.052951,-.257757,.170491,.054673,-.257517,.169278,.056395,-.257461,.168088,.058051,-.257592,.166968,.059577,-.257905,.171319,.065325,-.255192,.172068,.064067,-.254928,.172957,.062759,-.254743,.173951,.06145,-.254644,.175012,.06019,-.254635,.176098,.059028,-.254717,.177169,.058009,-.254886,.176673,.057486,-.255783,.176167,.056772,-.256611,.175669,.055894,-.257338,.175629,.058577,-.25548,.175154,.057961,-.256185,.17469,.057206,-.256806,.174581,.059793,-.255253,.174144,.059261,-.255829,.173715,.058615,-.256342,.171208,.065313,-.255286,.171854,.064021,-.255135,.17265,.062656,-.255079,.171112,.065297,-.255368,.171663,.063958,-.255318,.172371,.062517,-.255378,.171031,.065278,-.255436,.171501,.063881,-.255472,.172127,.062347,-.255632,.17403,.050955,-.258822,.173007,.052375,-.258215,.171885,.053904,-.257752,.174322,.052172,-.25872,.173275,.053477,-.258115,.172141,.054874,-.257641,.17468,.053379,-.258447,.173597,.054566,-.257878,.172438,.055832,-.257428,.169318,.056924,-.257476,.168106,.058397,-.257599,.166973,.059745,-.257906,.169373,.057429,-.257456,.168131,.058722,-.25759,.166979,.059899,-.257904,.169441,.057908,-.257402,.168162,.059026,-.257565,.166987,.060042,-.257898,.175121,.054727,-.257977,.174064,.056006,-.257428,.172979,.057363,-.256976,.170706,.055483,-.257452,.166996,.060174,-.257888,.170961,.05631,-.257315,.168197,.059311,-.257526,.171247,.057131,-.257113,.169519,.058358,-.257316,.173567,.06109,-.255111,.170967,.065256,-.25549,.173172,.060624,-.255556,.171367,.063794,-.255595,.17278,.060069,-.255964,.171921,.062153,-.255836,.171905,.058749,-.256636,.197726,.057192,-.240641,.19496,.066483,-.237559,.1972,.058025,-.24003,.196691,.059041,-.239445,.196218,.060199,-.238908,.195801,.061455,-.23844,.195455,.062762,-.238058,.195194,.064069,-.237777,.195027,.065325,-.237609,.194961,-.248324,-.237559,.198497,-.242756,-.241869,.195029,-.247238,-.237643,.195231,-.246193,-.237889,.195558,-.245231,-.238288,.195998,-.244387,-.238824,.196534,-.243694,-.239477,.197145,-.24318,-.240221,.197808,-.242863,-.241029,.282254,-.242756,-.359167,.277776,-.237188,-.362564,.286185,-.237188,-.363184,.281428,-.242649,-.359878,.280623,-.242332,-.36055,.279871,-.241817,-.361159,.279199,-.241125,-.361681,.278635,-.240281,-.362096,.2782,-.239319,-.362388,.277909,-.238274,-.362546,.27863,-.237188,-.363268,.279623,-.237188,-.363818,.280717,-.237188,-.364192,.28187,-.237188,-.364376,.283037,-.237188,-.364363,.284174,-.237188,-.364154,.285237,-.237188,-.363756,.286056,-.238274,-.363147,.285792,-.239319,-.362948,.285404,-.240281,-.362595,.284907,-.241125,-.362102,.284319,-.241817,-.361487,.283664,-.242332,-.360774,.282967,-.242649,-.359991,.282142,-.242563,-.36069,.281338,-.242287,-.36135,.280586,-.241832,-.361947,.28284,-.242287,-.361461,.282037,-.24207,-.362104,.281287,-.241691,-.362677,.283496,-.241832,-.362162,.282696,-.241691,-.362781,.281948,-.2414,-.36332,.278741,-.238273,-.363259,.279695,-.23827,-.363831,.280733,-.238265,-.364237,.278991,-.239314,-.363123,.279887,-.239302,-.363724,.280851,-.239283,-.364167,.279371,-.240272,-.362865,.280191,-.240245,-.363502,.281064,-.240202,-.363983,.285129,-.238273,-.363731,.284901,-.239314,-.363559,.284563,-.240272,-.363248,.284102,-.23827,-.364156,.283927,-.239302,-.364022,.283658,-.240245,-.363758,.283014,-.238265,-.364406,.282909,-.239283,-.364319,.282725,-.240202,-.364106,.27986,-.241185,-.362484,.280547,-.24115,-.36317,.281232,-.241023,-.363711,.28186,-.238253,-.364504,.281861,-.239236,-.364497,.281871,-.240098,-.364357,.284135,-.241185,-.362799,.283356,-.24115,-.363377,.282598,-.241023,-.363812,.281891,-.240807,-.364088,.277776,-.082498,-.362564,.283265,-.076272,-.360217,.286185,-.085583,-.363184,.278228,-.081503,-.362865,.278798,-.080497,-.362989,.279464,-.079521,-.362931,.2802,-.078612,-.362693,.280978,-.077803,-.362284,.281769,-.077128,-.361719,.282541,-.076611,-.361022,.283794,-.077109,-.360826,.284311,-.078128,-.361405,.284798,-.07929,-.361932,.285234,-.080549,-.362386,.285603,-.081858,-.362751,.285892,-.083167,-.363011,.286088,-.084424,-.363157,.285237,-.085252,-.363756,.284174,-.084875,-.364154,.283037,-.084466,-.364363,.28187,-.08404,-.364376,.280717,-.083615,-.364192,.279623,-.083206,-.363818,.27863,-.082829,-.363268,.279014,-.08186,-.363532,.279502,-.080876,-.363635,.280076,-.079913,-.363572,.279928,-.082266,-.364063,.280321,-.081307,-.364158,.280789,-.080364,-.364099,.280935,-.082705,-.364437,.281225,-.081775,-.364538,.281577,-.080859,-.364491,.283066,-.077403,-.361617,.283585,-.078359,-.362185,.284077,-.079441,-.362706,.2823,-.077849,-.36231,.282827,-.078715,-.36287,.283332,-.079693,-.36338,.281523,-.07843,-.362879,.282068,-.079184,-.363434,.282591,-.080037,-.363926,.285163,-.084128,-.363743,.284143,-.083795,-.364176,.283067,-.083438,-.364439,.285003,-.082914,-.363624,.284039,-.082639,-.364098,.283038,-.082352,-.364415,.284762,-.081657,-.363402,.283866,-.081451,-.363922,.282951,-.081248,-.364291,.280699,-.078994,-.36332,.281239,-.079468,-.363848,.2818,-.080016,-.364255,.284522,-.080492,-.363145,.283786,-.080484,-.36377,.283056,-.080527,-.364237,.281992,-.083184,-.364624,.282118,-.082307,-.364734,.282242,-.08144,-.364701,.28236,-.080618,-.364528,.3024,-.242756,-.344226,.305937,-.237188,-.348535,.303089,-.242649,-.345066,.303752,-.242332,-.345874,.304363,-.241817,-.346618,.304899,-.241125,-.347271,.305339,-.240281,-.347807,.305666,-.239319,-.348206,.305868,-.238274,-.348452,.303171,-.076272,-.345454,.305937,-.085583,-.348535,.303697,-.077109,-.346065,.304207,-.078128,-.34665,.304679,-.07929,-.347187,.305096,-.080549,-.347655,.305442,-.081858,-.348037,.305704,-.083167,-.348318,.305871,-.084424,-.348486,.23756,.22308,-.19496,.23325,.228647,-.191423,.237476,.224166,-.194891,.23723,.22521,-.194689,.236831,.226173,-.194362,.236295,.227017,-.193922,.235642,.227709,-.193387,.234898,.228224,-.192775,.23409,.228541,-.192113,.255525,.22308,-.170736,.25089,.228647,-.167639,.255435,.224166,-.170676,.255171,.22521,-.170499,.254742,.226173,-.170213,.254165,.227017,-.169827,.253463,.227709,-.169358,.252662,.228224,-.168823,.251793,.228541,-.168242,.27103,.22308,-.144868,.266113,.228647,-.14224,.270934,.224166,-.144817,.270654,.22521,-.144667,.270199,.226173,-.144424,.269587,.227017,-.144097,.268842,.227709,-.143699,.267993,.228224,-.143245,.267071,.228541,-.142752,.283924,.22308,-.117605,.278774,.228647,-.115472,.283824,.224166,-.117563,.28353,.22521,-.117442,.283054,.226173,-.117244,.282413,.227017,-.116979,.281633,.227709,-.116656,.280743,.228224,-.116287,.279778,.228541,-.115887,.294085,.22308,-.089209,.28875,.228648,-.087591,.293981,.224166,-.089178,.293676,.22521,-.089085,.293183,.226173,-.088936,.292519,.227017,-.088734,.291711,.227709,-.088489,.290789,.228224,-.08821,.289789,.228541,-.087906,.301412,.22308,-.059954,.295945,.228648,-.058867,.301306,.224166,-.059933,.300994,.22521,-.059871,.300489,.226173,-.05977,.299808,.227017,-.059635,.29898,.227709,-.05947,.298035,.228224,-.059282,.29701,.228541,-.059079,.305838,.22308,-.030122,.30029,.228648,-.029576,.30573,.224166,-.030111,.305413,.22521,-.03008,.3049,.226173,-.03003,.30421,.227017,-.029962,.303369,.227709,-.029879,.302411,.228224,-.029784,.301371,.228541,-.029682,.217306,.22308,-.217306,.213364,.228647,-.213364,.21723,.224166,-.21723,.217005,.22521,-.217005,.21664,.226173,-.21664,.21615,.227017,-.21615,.215553,.227709,-.215552,.214871,.228224,-.214871,.214133,.228541,-.214132,.233251,-.286363,-.191423,.23756,-.280795,-.19496,.23409,-.286256,-.192113,.234898,-.285939,-.192775,.235643,-.285424,-.193387,.236296,-.284732,-.193922,.236832,-.283888,-.194362,.23723,-.282925,-.194689,.237476,-.281881,-.194891,.25089,-.286363,-.167639,.255526,-.280795,-.170736,.251794,-.286256,-.168242,.252663,-.285939,-.168823,.253463,-.285424,-.169358,.254166,-.284732,-.169827,.254742,-.283888,-.170213,.255171,-.282925,-.170499,.255436,-.281881,-.170676,.266114,-.286363,-.14224,.27103,-.280795,-.144868,.267072,-.286256,-.142752,.267993,-.285939,-.143245,.268843,-.285424,-.143699,.269588,-.284732,-.144097,.270199,-.283888,-.144424,.270654,-.282925,-.144667,.270935,-.281881,-.144817,.278774,-.286363,-.115472,.283925,-.280795,-.117605,.279778,-.286256,-.115887,.280743,-.285939,-.116287,.281633,-.285424,-.116656,.282414,-.284732,-.116979,.283054,-.283888,-.117244,.283531,-.282925,-.117442,.283825,-.281881,-.117563,.28875,-.286363,-.087591,.294085,-.280795,-.089209,.28979,-.286256,-.087906,.29079,-.285939,-.08821,.291712,-.285424,-.088489,.29252,-.284732,-.088734,.293183,-.283888,-.088936,.293677,-.282925,-.089085,.293981,-.281881,-.089178,.295945,-.286363,-.058867,.301413,-.280795,-.059954,.297011,-.286256,-.059079,.298036,-.285939,-.059282,.29898,-.285424,-.05947,.299809,-.284732,-.059635,.300489,-.283888,-.05977,.300995,-.282925,-.059871,.301307,-.281881,-.059933,.30029,-.286363,-.029576,.305838,-.280795,-.030122,.301371,-.286256,-.029682,.302411,-.285939,-.029784,.30337,-.285424,-.029879,.30421,-.284732,-.029962,.3049,-.283888,-.03003,.305414,-.282925,-.03008,.30573,-.281881,-.030111,.213365,-.286363,-.213364,.217307,-.280795,-.217306,.214133,-.286256,-.214132,.214872,-.285939,-.214871,.215553,-.285424,-.215552,.21615,-.284732,-.21615,.216641,-.283888,-.21664,.217005,-.282926,-.217005,.21723,-.281881,-.21723,.255526,-.248324,-.170736,.256153,-.242756,-.179238,.259463,-.237188,-.174673,.258388,-.242756,-.16596,.255199,-.247238,-.171355,.254984,-.246193,-.172178,.254887,-.245231,-.173172,.254913,-.244387,-.1743,.25506,-.243694,-.175518,.255323,-.24318,-.176779,.255692,-.242863,-.178035,.256854,-.242649,-.178403,.257516,-.242332,-.177587,.258113,-.241817,-.176823,.258623,-.241125,-.17614,.259026,-.240281,-.175564,.259307,-.239319,-.175117,.259454,-.238274,-.174816,.25875,-.237784,-.173814,.258174,-.238465,-.172803,.257758,-.239204,-.171681,.257517,-.239972,-.170491,.257461,-.24074,-.169277,.257592,-.241478,-.168088,.257905,-.242159,-.166968,.256322,-.242762,-.177278,.256917,-.242483,-.17654,.257456,-.242037,-.175847,.255869,-.243064,-.176112,.256389,-.242804,-.175458,.256864,-.242411,-.174841,.255513,-.243545,-.174949,.255951,-.243285,-.174385,.256359,-.242926,-.173844,.255273,-.247236,-.171258,.255142,-.246185,-.171973,.255138,-.245212,-.172853,.255342,-.24723,-.171166,.255291,-.246161,-.171778,.255374,-.245159,-.172548,.255406,-.24722,-.171082,.255427,-.246122,-.171598,.255588,-.245072,-.172266,.258736,-.238758,-.173943,.258143,-.239311,-.172935,.257698,-.239912,-.171831,.258603,-.239695,-.174208,.258015,-.240131,-.173178,.257564,-.240608,-.172067,.258358,-.240561,-.174597,.257796,-.240894,-.173522,.257362,-.241268,-.17238,.25746,-.241145,-.169301,.257592,-.241737,-.168098,.257905,-.242281,-.16697,.257435,-.241531,-.169352,.257581,-.241983,-.168121,.257902,-.242396,-.166976,.257388,-.241884,-.169427,.257559,-.242207,-.168155,.257897,-.242501,-.166985,.255268,-.244185,-.173834,.255461,-.247206,-.171007,.255622,-.243907,-.17336,.255545,-.246069,-.171439,.255962,-.243562,-.172894,.255774,-.244956,-.172015,.25797,-.241397,-.175149,.257403,-.241771,-.174091,.256943,-.242233,-.173008,.257418,-.240537,-.170672,.257889,-.242592,-.166996,.257269,-.24111,-.170917,.257529,-.242401,-.168199,.257074,-.241669,-.171215,.25732,-.242189,-.169524,.256608,-.242764,-.171941,.259463,-.080015,-.174673,.258388,-.080015,-.16596,.25875,-.080015,-.173814,.258174,-.080015,-.172803,.257758,-.080015,-.171681,.257517,-.080015,-.170491,.257461,-.080015,-.169277,.257592,-.080015,-.168088,.257905,-.080015,-.166968,.258388,.060915,-.16596,.259463,.048431,-.174673,.255136,.057172,-.178183,.255525,.066483,-.170736,.257905,.059577,-.166968,.257592,.058051,-.168088,.257461,.056395,-.169277,.257517,.054673,-.170491,.257758,.052951,-.171681,.258174,.051295,-.172803,.258749,.049769,-.173814,.259552,.049696,-.174913,.259434,.051009,-.175241,.259113,.052319,-.175645,.258602,.053575,-.176108,.257919,.05473,-.176613,.257092,.05574,-.17714,.256152,.056564,-.177671,.254886,.05801,-.177169,.254717,.059028,-.176098,.254636,.06019,-.175011,.254645,.06145,-.173951,.254743,.062759,-.172957,.254928,.064067,-.172068,.255192,.065325,-.171318,.258823,.050955,-.17403,.258721,.052172,-.174322,.258447,.053379,-.174679,.258215,.052375,-.173007,.258115,.053477,-.173275,.257878,.054566,-.173596,.257753,.053904,-.171885,.257641,.054874,-.17214,.257428,.055832,-.172438,.257907,.059745,-.166972,.257599,.058398,-.168106,.257476,.056924,-.169318,.257904,.059899,-.166978,.25759,.058722,-.168131,.257456,.057429,-.169373,.257898,.060042,-.166986,.257565,.059026,-.168162,.257402,.057908,-.169441,.255784,.057487,-.176672,.25548,.058577,-.175629,.255254,.059793,-.17458,.256612,.056772,-.176166,.256185,.057962,-.175154,.255829,.059261,-.174143,.257339,.055894,-.175668,.256806,.057206,-.17469,.256343,.058615,-.173715,.255079,.062656,-.172649,.255136,.064021,-.171854,.255287,.065313,-.171208,.255378,.062517,-.17237,.255319,.063958,-.171663,.255368,.065297,-.171111,.255632,.062347,-.172127,.255473,.063882,-.1715,.255437,.065278,-.171031,.257452,.055483,-.170705,.257889,.060174,-.166995,.257316,.05631,-.170961,.257527,.059311,-.168197,.257113,.057131,-.171247,.257316,.058358,-.169519,.257977,.054727,-.175121,.257428,.056006,-.174064,.256976,.057363,-.172978,.255111,.06109,-.173566,.25549,.065256,-.170966,.255556,.060624,-.173171,.255596,.063794,-.171366,.255964,.060069,-.172779,.255837,.062153,-.17192,.256636,.058749,-.171904,.23756,.066483,-.19496,.240641,.057172,-.197726,.237609,.065325,-.195026,.237778,.064067,-.195193,.238058,.062759,-.195455,.23844,.06145,-.195801,.238908,.06019,-.196218,.239446,.059028,-.19669,.240031,.058009,-.197199,.24187,-.242756,-.198497,.23756,-.248324,-.19496,.24103,-.242863,-.197807,.240222,-.24318,-.197144,.239477,-.243694,-.196533,.238824,-.244387,-.195997,.238288,-.245231,-.195558,.23789,-.246193,-.19523,.237644,-.247238,-.195029,.220238,.057192,-.220238,.217307,.066483,-.217306,.219667,.058025,-.219666,.219117,.059041,-.219117,.218611,.060199,-.21861,.218167,.061455,-.218166,.217802,.062762,-.217802,.217531,.064069,-.21753,.217363,.065325,-.217363,.217307,-.248324,-.217306,.221249,-.242756,-.221248,.217383,-.247238,-.217383,.217608,-.246193,-.217608,.217973,-.245231,-.217972,.218463,-.244387,-.218463,.219061,-.243694,-.21906,.219742,-.24318,-.219741,.220481,-.242863,-.22048,.363185,-.237188,-.286185,.362565,-.237188,-.277775,.359168,-.242756,-.282253,.363756,-.237188,-.285236,.364155,-.237188,-.284173,.364364,-.237188,-.283036,.364377,-.237188,-.281869,.364193,-.237188,-.280716,.363819,-.237188,-.279622,.363269,-.237188,-.278629,.362547,-.238274,-.277909,.362389,-.239318,-.278199,.362097,-.240281,-.278634,.361682,-.241125,-.279199,.36116,-.241817,-.27987,.360551,-.242332,-.280622,.359878,-.242649,-.281427,.359992,-.242649,-.282966,.360775,-.242332,-.283663,.361488,-.241817,-.284318,.362103,-.241125,-.284906,.362596,-.240281,-.285403,.362949,-.239318,-.285791,.363148,-.238274,-.286055,.363731,-.238273,-.285128,.364156,-.23827,-.284101,.364407,-.238265,-.283014,.36356,-.239314,-.2849,.364023,-.239302,-.283926,.36432,-.239283,-.282908,.363248,-.240272,-.284562,.363758,-.240245,-.283657,.364107,-.240202,-.282724,.36326,-.238273,-.27874,.363124,-.239314,-.278991,.362865,-.240272,-.27937,.363831,-.23827,-.279694,.363725,-.239302,-.279886,.363503,-.240245,-.280191,.364238,-.238265,-.280732,.364168,-.239283,-.28085,.363984,-.240202,-.281063,.360691,-.242563,-.282141,.361462,-.242287,-.282839,.362163,-.241832,-.283496,.361351,-.242287,-.281337,.362105,-.24207,-.282037,.362782,-.241691,-.282695,.361948,-.241832,-.280585,.362678,-.241691,-.281286,.36332,-.2414,-.281947,.364505,-.238253,-.28186,.364498,-.239236,-.28186,.364358,-.240098,-.28187,.362485,-.241185,-.279859,.36317,-.24115,-.280546,.363712,-.241022,-.281231,.3628,-.241185,-.284135,.363378,-.24115,-.283355,.363813,-.241023,-.282597,.364089,-.240806,-.28189,.363185,-.085583,-.286185,.360218,-.076272,-.283264,.362564,-.082498,-.277775,.363158,-.084424,-.286088,.363012,-.083167,-.285891,.362751,-.081858,-.285603,.362387,-.080549,-.285233,.361933,-.07929,-.284797,.361406,-.078128,-.284311,.360827,-.077109,-.283793,.361022,-.076611,-.28254,.36172,-.077128,-.281768,.362284,-.077803,-.280978,.362694,-.078612,-.280199,.362932,-.079521,-.279463,.36299,-.080497,-.278797,.362866,-.081502,-.278227,.363269,-.082829,-.278629,.363819,-.083206,-.279622,.364193,-.083615,-.280716,.364377,-.08404,-.281869,.364364,-.084466,-.283036,.364154,-.084875,-.284173,.363756,-.085252,-.285236,.363744,-.084128,-.285162,.363624,-.082914,-.285002,.363403,-.081657,-.284761,.364177,-.083795,-.284142,.364098,-.082639,-.284038,.363923,-.081451,-.283866,.36444,-.083438,-.283067,.364416,-.082352,-.283038,.364292,-.081248,-.28295,.361617,-.077403,-.283066,.362311,-.077849,-.282299,.36288,-.078429,-.281523,.362186,-.078358,-.283584,.362871,-.078715,-.282827,.363434,-.079184,-.282067,.362707,-.079441,-.284076,.36338,-.079693,-.283331,.363927,-.080037,-.28259,.363533,-.08186,-.279013,.364064,-.082266,-.279927,.364438,-.082705,-.280934,.363636,-.080875,-.279501,.364158,-.081307,-.280321,.364539,-.081775,-.281225,.363573,-.079913,-.280075,.3641,-.080364,-.280789,.364492,-.080858,-.281576,.363145,-.080492,-.284521,.36377,-.080484,-.283786,.364237,-.080527,-.283056,.363321,-.078993,-.280698,.363849,-.079467,-.281238,.364256,-.080016,-.281799,.364625,-.083184,-.281991,.364735,-.082306,-.282117,.364702,-.08144,-.282241,.364529,-.080618,-.282359,.348536,-.237188,-.305936,.344227,-.242756,-.302399,.348453,-.238274,-.305867,.348207,-.239318,-.305665,.347808,-.240281,-.305338,.347272,-.241125,-.304898,.346619,-.241817,-.304363,.345874,-.242332,-.303751,.345067,-.242649,-.303088,.324341,-.242756,-.32434,.328283,-.237188,-.328282,.325109,-.242649,-.325108,.325848,-.242332,-.325847,.326529,-.241817,-.326528,.327127,-.241125,-.327126,.327617,-.240281,-.327616,.327982,-.239319,-.327981,.328206,-.238274,-.328206,.328283,-.085583,-.328282,.325351,-.076292,-.325351,.328226,-.084425,-.328225,.328059,-.083168,-.328058,.327788,-.081862,-.327787,.327423,-.080555,-.327422,.326979,-.079298,-.326978,.326472,-.07814,-.326471,.325923,-.077125,-.325922,.348536,-.085583,-.305936,.345455,-.076292,-.30317,.348486,-.084425,-.30587,.348318,-.083168,-.305703,.348038,-.081862,-.305441,.347656,-.080555,-.305095,.347188,-.079298,-.304678,.346651,-.07814,-.304206,.346065,-.077125,-.303697,.027906,.228646,-.283337,.027133,.233713,-.275488,.027795,.228744,-.282211,.02768,.229032,-.28104,.027564,.2295,-.279868,.027453,.23013,-.278742,.027351,.230898,-.277703,.027261,.231774,-.276792,.027188,.232724,-.276044,.055544,.228646,-.279237,.054005,.233713,-.271502,.055323,.228744,-.278128,.055093,.229032,-.276974,.054864,.2295,-.275819,.054643,.23013,-.274708,.054439,.230898,-.273685,.054261,.231774,-.272787,.054114,.232724,-.27205,.082646,.228646,-.272448,.080357,.233713,-.264901,.082318,.228744,-.271366,.081976,.229032,-.27024,.081635,.2295,-.269113,.081306,.23013,-.26803,.081003,.230898,-.267031,.080737,.231774,-.266155,.080519,.232724,-.265436,.108953,.228646,-.263036,.105935,.233713,-.255749,.10852,.228744,-.261991,.10807,.229032,-.260903,.107619,.2295,-.259816,.107186,.23013,-.25877,.106786,.230898,-.257805,.106436,.231774,-.25696,.106149,.232724,-.256265,.13421,.228646,-.25109,.130492,.233713,-.244134,.133677,.228744,-.250092,.133122,.229032,-.249054,.132567,.2295,-.248016,.132034,.23013,-.247017,.131542,.230898,-.246097,.13111,.231774,-.24529,.130756,.232724,-.244627,.158175,.228646,-.236726,.153793,.233713,-.230168,.157547,.228744,-.235785,.156893,.229032,-.234807,.156239,.2295,-.233828,.15561,.23013,-.232886,.15503,.230898,-.232019,.154521,.231774,-.231258,.154104,.232724,-.230633,.180617,.228646,-.220082,.175613,.233713,-.213985,.179899,.228744,-.219207,.179153,.229032,-.218298,.178406,.2295,-.217388,.177687,.23013,-.216513,.177025,.230898,-.215706,.176445,.231774,-.214998,.175968,.232724,-.214417,.201319,.228647,-.201319,.195742,.233713,-.195742,.200519,.228744,-.200519,.199687,.229032,-.199687,.198854,.2295,-.198854,.198054,.23013,-.198054,.197316,.230898,-.197316,.196669,.231774,-.196668,.196137,.232724,-.196137,.275488,.233713,-.027133,.283337,.228647,-.027906,.276044,.232725,-.027188,.276792,.231774,-.027261,.277703,.230898,-.027351,.278742,.23013,-.027453,.279868,.2295,-.027564,.28104,.229032,-.02768,.282211,.228744,-.027795,.271502,.233713,-.054005,.279237,.228647,-.055543,.27205,.232725,-.054114,.272787,.231774,-.05426,.273685,.230898,-.054439,.274708,.23013,-.054642,.275819,.2295,-.054863,.276973,.229032,-.055093,.278128,.228744,-.055323,.264901,.233713,-.080356,.272448,.228647,-.082646,.265436,.232725,-.080519,.266155,.231774,-.080737,.267031,.230898,-.081002,.26803,.23013,-.081305,.269113,.2295,-.081634,.27024,.229032,-.081976,.271366,.228744,-.082318,.255749,.233713,-.105934,.263036,.228647,-.108953,.256266,.232725,-.106148,.25696,.231774,-.106436,.257805,.230898,-.106786,.25877,.23013,-.107185,.259816,.2295,-.107619,.260903,.229032,-.108069,.261991,.228744,-.10852,.244134,.233713,-.130492,.25109,.228647,-.13421,.244627,.232725,-.130756,.24529,.231774,-.13111,.246097,.230898,-.131541,.247018,.23013,-.132033,.248016,.2295,-.132567,.249054,.229032,-.133122,.250092,.228744,-.133677,.230168,.233713,-.153793,.236726,.228647,-.158175,.230633,.232724,-.154104,.231258,.231774,-.154521,.232019,.230898,-.15503,.232887,.23013,-.15561,.233828,.2295,-.156239,.234807,.229032,-.156893,.235785,.228744,-.157547,.213986,.233713,-.175613,.220082,.228647,-.180617,.214418,.232724,-.175968,.214998,.231774,-.176444,.215706,.230898,-.177025,.216513,.23013,-.177687,.217388,.2295,-.178405,.218298,.229032,-.179152,.219208,.228744,-.179899,.001748,.517685,.017757,.00349,.515472,.035444,.005218,.511793,.052991,.006926,.506663,.070329,.008606,.500103,.087389,.010253,.492137,.104105,.011858,.482797,.12041,.013418,.472121,.136239,.014924,.46015,.151531,.016371,.446932,.166224,.017753,.432518,.180262,.019066,.416967,.193589,.020303,.400338,.206151,.02146,.382698,.2179,.022533,.364116,.228788,.023516,.344666,.238774,.024407,.324425,.247818,.025201,.303471,.255883,.025896,.281889,.262939,.026489,.259763,.268957,.026977,.23718,.273913,.00348,.517685,.0175,.006948,.515472,.034931,.010387,.511793,.052224,.013786,.506663,.069311,.017131,.500103,.086125,.020407,.492137,.102599,.023604,.482797,.118667,.026707,.472121,.134268,.029704,.46015,.149338,.032585,.446932,.163819,.035337,.432518,.177654,.037949,.416967,.190788,.040412,.400338,.203168,.042715,.382698,.214747,.04485,.364116,.225478,.046807,.344666,.235319,.04858,.324425,.244232,.050161,.303471,.252181,.051544,.281889,.259134,.052724,.259763,.265065,.053696,.23718,.26995,.005179,.517685,.017075,.010338,.515472,.034082,.015456,.511793,.050955,.020514,.506663,.067626,.02549,.500103,.084031,.030366,.492137,.100104,.035121,.482797,.115782,.039739,.472121,.131003,.044199,.46015,.145708,.048485,.446932,.159837,.05258,.432518,.173335,.056467,.416967,.186149,.060131,.400338,.198229,.063558,.382698,.209526,.066734,.364116,.219996,.069647,.344666,.229598,.072285,.324425,.238295,.074638,.303471,.24605,.076696,.281889,.252834,.078451,.259763,.258621,.079897,.23718,.263387,.006828,.517685,.016485,.013629,.515472,.032904,.020376,.511793,.049194,.027043,.506663,.06529,.033604,.500103,.081128,.040031,.492137,.096646,.046301,.482797,.111782,.052388,.472121,.126478,.058268,.46015,.140674,.063918,.446932,.154315,.069316,.432518,.167346,.074441,.416967,.179718,.079271,.400338,.19138,.083789,.382698,.202287,.087976,.364116,.212396,.091816,.344666,.221666,.095294,.324425,.230062,.098395,.303471,.237549,.101108,.281889,.244099,.103423,.259763,.249686,.105329,.23718,.254288,.008411,.517685,.015736,.016788,.515472,.03141,.0251,.511793,.04696,.033313,.506663,.062325,.041394,.500103,.077443,.049311,.492137,.092257,.057035,.482797,.106706,.064533,.472121,.120733,.071776,.46015,.134285,.078736,.446932,.147306,.085385,.432518,.159746,.091698,.416967,.171556,.097648,.400338,.182689,.103213,.382698,.1931,.108371,.364116,.20275,.113101,.344666,.211599,.117385,.324425,.219614,.121206,.303471,.226761,.124548,.281889,.233013,.127398,.259763,.238347,.129746,.23718,.242739,.009912,.517685,.014836,.019786,.515472,.029613,.029582,.511793,.044274,.039261,.506664,.058759,.048785,.500103,.073013,.058117,.492137,.086979,.067219,.482797,.100601,.076056,.472121,.113827,.084593,.46015,.126603,.092796,.446932,.138879,.100632,.432518,.150608,.108072,.416967,.161742,.115085,.400338,.172238,.121644,.382698,.182054,.127722,.364116,.191151,.133297,.344666,.199494,.138346,.324425,.20705,.142848,.303471,.213789,.146787,.281889,.219684,.150147,.259763,.224712,.152914,.23718,.228853,.011319,.517685,.013793,.022594,.515472,.027531,.033779,.511793,.041161,.044832,.506664,.054628,.055707,.500103,.06788,.066362,.492137,.080864,.076756,.482797,.093528,.086847,.472121,.105824,.096595,.46015,.117702,.105961,.446932,.129115,.11491,.432518,.140019,.123405,.416967,.15037,.131413,.400338,.160128,.138902,.382698,.169254,.145844,.364116,.177712,.152209,.344666,.185468,.157974,.324425,.192493,.163116,.303471,.198758,.167613,.281889,.204238,.171449,.259763,.208913,.174609,.23718,.212763,.16146,-.286362,.19674,.141399,-.286362,.211619,.119976,-.286362,.22446,.097397,-.286362,.235138,.073881,-.286362,.243553,.049652,-.286362,.249621,.024946,-.286362,.253286,.161461,-.44837,.19674,.141399,-.44837,.211619,.119976,-.44837,.22446,.097397,-.44837,.235138,.073881,-.44837,.243553,.049653,-.44837,.249621,.024946,-.44837,.253286,.117605,-.242756,.283925,.144868,-.080015,.27103,.117605,.060915,.283925,.144868,.060915,.27103,.117605,-.080015,.283925,.144868,-.242756,.27103,.030122,-.242756,.305838,.089209,-.080015,.294085,.030122,.060915,.305838,.059954,.060915,.301413,.059954,-.080015,.301413,.059954,-.242756,.301413,.089209,.060915,.294085,.030122,-.080015,.305838,.089209,-.242756,.294085,.025183,.515472,.025184,.037651,.511793,.037652,.04997,.506664,.049971,.062092,.500103,.062093,.085554,.482797,.085554,.096801,.472121,.096802,.107666,.46015,.107667,.118107,.446932,.118107,.128081,.432518,.128082,.13755,.416967,.13755,.146476,.400338,.146476,.154823,.382698,.154824,.16256,.364116,.162561,.169655,.344666,.169656,.176081,.324425,.176082,.181812,.303471,.181813,.186825,.281889,.186826,.191101,.259763,.191102,.194623,.23718,.194624,.017843,.517685,0,.035615,.515472,0,.053247,.511793,0,.070669,.506664,0,.087812,.500103,0,.104608,.492137,0,.120992,.482797,0,.136898,.472121,0,.152264,.46015,0,.167028,.446932,0,.181134,.432518,0,.194525,.416967,0,.207148,.400338,0,.218954,.382698,0,.229895,.364116,0,.239929,.344666,0,.249017,.324425,0,.257121,.303471,0,.264211,.281889,0,.270258,.259763,0,.275239,.23718,0,.017757,.517685,.001749,.035444,.515472,.003491,.052991,.511793,.005219,.070329,.506664,.006927,.087389,.500103,.008607,.104105,.492137,.010253,.120409,.482797,.011859,.136239,.472121,.013418,.15153,.46015,.014924,.166224,.446932,.016372,.180262,.432518,.017754,.193588,.416967,.019067,.206151,.400338,.020304,.217899,.382698,.021461,.228788,.364116,.022534,.238774,.344666,.023517,.247818,.324425,.024408,.255883,.303471,.025203,.262939,.281889,.025897,.268957,.259763,.02649,.273913,.23718,.026978,.0175,.517685,.003481,.034931,.515472,.006948,.052224,.511793,.010388,.069311,.506664,.013787,.086124,.500103,.017131,.102598,.492137,.020408,.118667,.482797,.023604,.134267,.472121,.026708,.149338,.46015,.029705,.163819,.446932,.032586,.177654,.432518,.035338,.190787,.416967,.03795,.203168,.400338,.040413,.214746,.382698,.042716,.225478,.364116,.044851,.235319,.344666,.046808,.244232,.324425,.048581,.252181,.303471,.050162,.259134,.281889,.051545,.265065,.259763,.052725,.26995,.23718,.053697,.017074,.517685,.005179,.034081,.515472,.010338,.050954,.511793,.015457,.067626,.506664,.020514,.084031,.500103,.02549,.100104,.492137,.030366,.115782,.482797,.035122,.131003,.472121,.039739,.145707,.46015,.0442,.159836,.446932,.048486,.173334,.432518,.052581,.186149,.416967,.056468,.198228,.400338,.060132,.209525,.382698,.063559,.219996,.364116,.066735,.229598,.344666,.069648,.238294,.324425,.072286,.24605,.303471,.074639,.252834,.281889,.076697,.258621,.259763,.078452,.263387,.23718,.079898,.016484,.517685,.006828,.032904,.515472,.013629,.049194,.511793,.020377,.065289,.506664,.027044,.081127,.500103,.033604,.096645,.492137,.040032,.111782,.482797,.046302,.126477,.472121,.052389,.140673,.46015,.058269,.154314,.446932,.063919,.167346,.432518,.069317,.179717,.416967,.074442,.19138,.400338,.079272,.202287,.382698,.08379,.212395,.364116,.087977,.221666,.344666,.091817,.230061,.324425,.095295,.237549,.303471,.098396,.244099,.281889,.101109,.249686,.259763,.103424,.254287,.23718,.10533,.015736,.517685,.008411,.03141,.515472,.016789,.04696,.511793,.025101,.062324,.506664,.033313,.077443,.500103,.041394,.092256,.492137,.049312,.106705,.482797,.057035,.120733,.472121,.064533,.134284,.46015,.071777,.147306,.446932,.078737,.159746,.432518,.085386,.171556,.416967,.091699,.182688,.400338,.097649,.1931,.382698,.103214,.202749,.364116,.108372,.211599,.344666,.113102,.219613,.324425,.117386,.22676,.303471,.121206,.233013,.281889,.124548,.238346,.259763,.127399,.242739,.23718,.129747,.014835,.517685,.009913,.029613,.515472,.019787,.044273,.511793,.029583,.058759,.506664,.039262,.073013,.500103,.048786,.086978,.492137,.058117,.100601,.482797,.06722,.113826,.472121,.076057,.126602,.46015,.084593,.138879,.446932,.092796,.150607,.432518,.100633,.161741,.416967,.108073,.172237,.400338,.115086,.182053,.382698,.121644,.191151,.364116,.127723,.199494,.344666,.133298,.20705,.324425,.138347,.213788,.303471,.142849,.219683,.281889,.146788,.224711,.259763,.150148,.228852,.23718,.152915,.013792,.517685,.011319,.027531,.515472,.022594,.04116,.511793,.03378,.054628,.506664,.044832,.067879,.500103,.055707,.080863,.492137,.066363,.093528,.482797,.076757,.105823,.472121,.086847,.117701,.46015,.096595,.129114,.446932,.105962,.140018,.432518,.114911,.15037,.416967,.123406,.160127,.400338,.131414,.169253,.382698,.138903,.177711,.364116,.145844,.185468,.344666,.15221,.192492,.324425,.157975,.198757,.303471,.163116,.204237,.281889,.167614,.208912,.259763,.17145,.212762,.23718,.17461,.012616,.517685,.012617,.073969,.492137,.073969,.19674,-.286362,.161461,.211619,-.286362,.141399,.224459,-.286362,.119976,.235138,-.286362,.097398,.243553,-.286362,.073881,.249622,-.286362,.049653,.253287,-.286362,.024947,.254512,-.286362,0,.179967,-.286362,.179967,.19674,-.44837,.161461,.211619,-.44837,.141399,.22446,-.44837,.119976,.235138,-.44837,.097398,.243553,-.44837,.073881,.249622,-.44837,.049653,.253287,-.44837,.024947,.254512,-.44837,0,.179967,-.44837,.179967,.283924,-.242756,.117606,.27103,-.080014,.144869,.283924,.060915,.117606,.27103,.060915,.144869,.283924,-.080014,.117606,.27103,-.242756,.144869,.305838,-.242756,.030123,.294085,-.080014,.08921,.305838,.060915,.030123,.301412,.060915,.059955,.301413,-.080014,.059955,.301413,-.242756,.059955,.294084,.060915,.08921,.305838,-.080014,.030123,.294085,-.242756,.08921,.307318,-.080014,0,.307318,-.242756,0,.307318,.060915,0,.191423,.228647,.23325,.19496,.22308,.23756,.192112,.228541,.23409,.192775,.228224,.234898,.193386,.227709,.235643,.193922,.227017,.236296,.194362,.226173,.236832,.194689,.22521,.23723,.194891,.224166,.237476,.167639,.228647,.25089,.170736,.22308,.255525,.168242,.228541,.251793,.168823,.228224,.252662,.169358,.227709,.253463,.169827,.227017,.254165,.170212,.226173,.254742,.170499,.22521,.255171,.170676,.224166,.255435,.14224,.228647,.266114,.144868,.22308,.27103,.142752,.22854,.267072,.143244,.228224,.267993,.143699,.227709,.268843,.144097,.227017,.269588,.144424,.226173,.270199,.144667,.22521,.270654,.144817,.224166,.270935,.115471,.228647,.278774,.117605,.22308,.283925,.115887,.22854,.279778,.116287,.228224,.280743,.116655,.227709,.281633,.116979,.227017,.282413,.117244,.226173,.283054,.117441,.22521,.283531,.117563,.224166,.283825,.08759,.228647,.28875,.089209,.223079,.294085,.087906,.22854,.28979,.088209,.228224,.290789,.088489,.227709,.291711,.088734,.227017,.29252,.088935,.226173,.293183,.089085,.22521,.293677,.089177,.224166,.293981,.058866,.228647,.295945,.059954,.223079,.301413,.059078,.22854,.29701,.059282,.228224,.298035,.05947,.227709,.29898,.059635,.227017,.299808,.05977,.226173,.300489,.059871,.22521,.300994,.059933,.224166,.301306,.029575,.228647,.30029,.030122,.223079,.305838,.029682,.22854,.301371,.029784,.228224,.302411,.029878,.227709,.30337,.029961,.227017,.30421,.030029,.226173,.3049,.03008,.22521,.305413,.030111,.224166,.30573,.19496,-.280795,.23756,.191423,-.286363,.23325,.194891,-.281881,.237476,.19469,-.282926,.23723,.194362,-.283888,.236832,.193922,-.284732,.236296,.193387,-.285424,.235643,.192776,-.285939,.234898,.192113,-.286256,.23409,.170736,-.280795,.255525,.167639,-.286363,.25089,.170676,-.281881,.255435,.170499,-.282926,.255171,.170213,-.283888,.254742,.169828,-.284732,.254165,.169358,-.285424,.253463,.168823,-.285939,.252662,.168243,-.286256,.251793,.144868,-.280795,.27103,.14224,-.286363,.266114,.144817,-.281881,.270935,.144667,-.282926,.270654,.144424,-.283888,.270199,.144097,-.284732,.269588,.143699,-.285424,.268843,.143245,-.285939,.267993,.142752,-.286256,.267072,.117605,-.280795,.283925,.115472,-.286363,.278774,.117564,-.281881,.283825,.117442,-.282926,.283531,.117244,-.283888,.283054,.116979,-.284732,.282413,.116656,-.285424,.281633,.116287,-.285939,.280743,.115887,-.286256,.279778,.089209,-.280795,.294085,.087591,-.286363,.28875,.089178,-.281881,.293981,.089085,-.282926,.293677,.088936,-.283888,.293183,.088734,-.284732,.29252,.088489,-.285424,.291711,.08821,-.285939,.290789,.087906,-.286256,.28979,.059954,-.280795,.301413,.058867,-.286363,.295945,.059933,-.281881,.301306,.059871,-.282926,.300994,.05977,-.283888,.300489,.059635,-.284732,.299808,.05947,-.285424,.29898,.059282,-.285939,.298035,.059079,-.286256,.29701,.030122,-.280795,.305838,.029576,-.286363,.30029,.030111,-.281881,.30573,.03008,-.282926,.305413,.03003,-.283888,.3049,.029962,-.284732,.30421,.029879,-.285425,.30337,.029784,-.285939,.302411,.029682,-.286256,.301371,.174673,-.237188,.259463,.179238,-.242756,.256153,.170736,-.248324,.255525,.16596,-.242756,.258388,.174816,-.238274,.259454,.175117,-.239319,.259307,.175564,-.240281,.259026,.17614,-.241125,.258623,.176823,-.241817,.258113,.177587,-.242332,.257515,.178403,-.242649,.256853,.178035,-.242863,.255692,.176779,-.24318,.255323,.175518,-.243694,.25506,.1743,-.244387,.254913,.173172,-.245231,.254887,.172178,-.246193,.254984,.171356,-.247238,.255199,.166968,-.242159,.257905,.168088,-.241479,.257592,.169277,-.24074,.257461,.170491,-.239972,.257517,.171681,-.239204,.257758,.172803,-.238465,.258174,.173814,-.237784,.25875,.173943,-.238758,.258736,.174208,-.239695,.258603,.174598,-.240561,.258358,.172935,-.239311,.258142,.173178,-.240131,.258015,.173523,-.240894,.257796,.171831,-.239912,.257698,.172067,-.240608,.257564,.17238,-.241268,.257362,.16697,-.242281,.257905,.168099,-.241737,.257592,.169301,-.241145,.25746,.166976,-.242396,.257902,.168121,-.241983,.25758,.169352,-.241531,.257435,.166985,-.242502,.257897,.168155,-.242207,.257559,.169427,-.241884,.257388,.177278,-.242762,.256321,.176112,-.243064,.255869,.17495,-.243545,.255513,.17654,-.242483,.256917,.175458,-.242804,.256389,.174385,-.243285,.255951,.175847,-.242037,.257456,.174841,-.242411,.256864,.173844,-.242926,.256359,.172853,-.245212,.255138,.171973,-.246185,.255142,.171258,-.247236,.255273,.172548,-.245159,.255374,.171778,-.246161,.255291,.171166,-.24723,.255342,.172266,-.245072,.255588,.171598,-.246122,.255427,.171082,-.24722,.255405,.175149,-.241397,.25797,.174092,-.241771,.257403,.173009,-.242233,.256943,.173835,-.244185,.255268,.171007,-.247206,.255461,.17336,-.243907,.255622,.171439,-.246069,.255545,.172894,-.243562,.255962,.172015,-.244956,.255774,.170672,-.240537,.257418,.166996,-.242592,.257889,.170917,-.24111,.257269,.168199,-.242401,.257528,.171215,-.241669,.257074,.169524,-.242189,.25732,.171942,-.242764,.256608,.16596,-.080015,.258388,.174673,-.080015,.259463,.166968,-.080015,.257905,.168088,-.080015,.257592,.169277,-.080015,.257461,.17049,-.080015,.257517,.171681,-.080015,.257758,.172803,-.080015,.258174,.173813,-.080015,.25875,.178182,.057172,.255136,.174673,.048431,.259463,.16596,.060915,.258388,.170736,.066483,.255525,.17767,.056564,.256152,.17714,.05574,.257092,.176613,.05473,.257919,.176107,.053575,.258602,.175644,.052319,.259113,.175241,.051009,.259434,.174913,.049696,.259552,.173813,.049769,.25875,.172803,.051295,.258174,.171681,.052951,.257758,.17049,.054673,.257517,.169277,.056395,.257461,.168087,.058051,.257592,.166967,.059577,.257905,.171318,.065325,.255192,.172068,.064067,.254928,.172957,.062759,.254743,.17395,.06145,.254645,.175011,.06019,.254636,.176098,.059028,.254717,.177169,.058009,.254886,.176672,.057486,.255784,.176166,.056772,.256612,.175668,.055894,.257339,.175629,.058577,.25548,.175154,.057961,.256185,.17469,.057206,.256806,.17458,.059793,.255254,.174143,.059261,.255829,.173715,.058615,.256343,.171207,.065313,.255287,.171853,.064021,.255136,.172649,.062656,.255079,.171111,.065297,.255369,.171663,.063958,.255319,.17237,.062517,.255378,.171031,.065278,.255437,.1715,.063881,.255473,.172126,.062347,.255632,.174029,.050955,.258823,.173007,.052375,.258215,.171885,.053904,.257753,.174322,.052172,.258721,.173275,.053477,.258115,.17214,.054874,.257641,.174679,.053379,.258447,.173596,.054566,.257878,.172438,.055832,.257428,.169317,.056924,.257476,.168106,.058397,.257599,.166972,.059745,.257907,.169373,.057429,.257456,.168131,.058722,.25759,.166978,.059899,.257905,.169441,.057908,.257402,.168161,.059026,.257566,.166986,.060042,.257898,.17512,.054727,.257978,.174064,.056006,.257429,.172978,.057363,.256976,.170705,.055483,.257452,.166995,.060174,.257889,.17096,.05631,.257316,.168197,.059311,.257527,.171246,.057131,.257113,.169519,.058358,.257316,.173566,.06109,.255111,.170966,.065256,.255491,.173171,.060624,.255556,.171366,.063794,.255596,.172779,.060069,.255964,.17192,.062153,.255837,.171904,.058749,.256636,.197726,.057192,.240641,.19496,.066483,.23756,.197199,.058025,.240031,.19669,.059041,.239446,.196218,.060199,.238908,.195801,.061455,.23844,.195455,.062762,.238058,.195193,.064069,.237778,.195026,.065325,.23761,.19496,-.248324,.23756,.198497,-.242756,.241869,.195029,-.247238,.237644,.195231,-.246193,.23789,.195558,-.245231,.238288,.195998,-.244387,.238824,.196533,-.243694,.239477,.197145,-.24318,.240222,.197807,-.242863,.24103,.282253,-.242756,.359168,.277775,-.237188,.362564,.286185,-.237188,.363185,.281427,-.242649,.359878,.280622,-.242332,.360551,.27987,-.241817,.36116,.279199,-.241125,.361682,.278634,-.240281,.362097,.278199,-.239319,.362389,.277909,-.238274,.362547,.278629,-.237188,.363269,.279622,-.237188,.363819,.280716,-.237188,.364193,.281869,-.237188,.364377,.283036,-.237188,.364364,.284173,-.237188,.364154,.285236,-.237188,.363756,.286055,-.238274,.363148,.285791,-.239319,.362949,.285403,-.240281,.362596,.284906,-.241125,.362103,.284318,-.241817,.361488,.283663,-.242332,.360775,.282966,-.242649,.359992,.282141,-.242563,.360691,.281337,-.242287,.361351,.280585,-.241832,.361948,.282839,-.242287,.361462,.282037,-.24207,.362104,.281286,-.241691,.362678,.283496,-.241832,.362163,.282695,-.241691,.362782,.281947,-.2414,.36332,.27874,-.238273,.36326,.279694,-.23827,.363831,.280732,-.238265,.364238,.278991,-.239314,.363124,.279886,-.239302,.363724,.28085,-.239283,.364168,.27937,-.240272,.362865,.28019,-.240245,.363503,.281063,-.240202,.363984,.285128,-.238273,.363731,.2849,-.239314,.36356,.284562,-.240272,.363248,.284101,-.23827,.364156,.283926,-.239302,.364023,.283657,-.240245,.363758,.283014,-.238265,.364406,.282908,-.239283,.36432,.282724,-.240202,.364106,.279859,-.241185,.362485,.280546,-.24115,.36317,.281231,-.241023,.363712,.281859,-.238253,.364505,.28186,-.239236,.364498,.28187,-.240098,.364358,.284135,-.241185,.3628,.283355,-.24115,.363378,.282597,-.241023,.363813,.28189,-.240806,.364088,.277775,-.082498,.362564,.283264,-.076272,.360218,.286184,-.085583,.363185,.278227,-.081503,.362866,.278797,-.080497,.36299,.279463,-.079521,.362932,.280199,-.078612,.362694,.280977,-.077803,.362284,.281768,-.077128,.36172,.28254,-.076611,.361022,.283793,-.077109,.360827,.284311,-.078128,.361406,.284797,-.07929,.361933,.285233,-.080549,.362387,.285602,-.081858,.362751,.285891,-.083167,.363012,.286088,-.084424,.363158,.285236,-.085252,.363756,.284173,-.084875,.364154,.283036,-.084466,.364364,.281869,-.08404,.364377,.280716,-.083615,.364193,.279622,-.083206,.363819,.278629,-.082829,.363269,.279013,-.08186,.363533,.279501,-.080876,.363636,.280075,-.079913,.363573,.279927,-.082266,.364064,.280321,-.081307,.364158,.280788,-.080364,.3641,.280934,-.082705,.364438,.281224,-.081775,.364539,.281576,-.080858,.364492,.283065,-.077403,.361617,.283584,-.078358,.362186,.284076,-.079441,.362707,.282299,-.077849,.362311,.282826,-.078715,.362871,.283331,-.079693,.36338,.281522,-.07843,.36288,.282067,-.079184,.363434,.28259,-.080037,.363927,.285162,-.084128,.363744,.284142,-.083795,.364177,.283067,-.083438,.36444,.285002,-.082914,.363624,.284038,-.082639,.364098,.283037,-.082352,.364416,.284761,-.081657,.363403,.283865,-.081451,.363923,.28295,-.081248,.364292,.280698,-.078994,.363321,.281238,-.079468,.363849,.281799,-.080016,.364256,.284521,-.080492,.363145,.283785,-.080484,.36377,.283055,-.080527,.364237,.281991,-.083184,.364625,.282117,-.082307,.364735,.282241,-.08144,.364702,.282359,-.080618,.364529,.302399,-.242756,.344227,.305936,-.237188,.348536,.303089,-.242649,.345067,.303751,-.242332,.345874,.304362,-.241817,.346619,.304898,-.241125,.347272,.305338,-.240281,.347808,.305665,-.239318,.348207,.305867,-.238274,.348453,.30317,-.076272,.345455,.305936,-.085583,.348536,.303696,-.077109,.346066,.304206,-.078128,.346651,.304678,-.07929,.347188,.305095,-.080549,.347656,.305441,-.081858,.348038,.305703,-.083167,.348318,.30587,-.084424,.348487,.237559,.22308,.194961,.23325,.228647,.191424,.237475,.224166,.194892,.23723,.22521,.19469,.236831,.226173,.194363,.236295,.227017,.193923,.235642,.227709,.193387,.234897,.228224,.192776,.23409,.228541,.192113,.255525,.22308,.170737,.25089,.228647,.167639,.255435,.224166,.170677,.25517,.22521,.1705,.254741,.226173,.170213,.254165,.227017,.169828,.253463,.227709,.169359,.252662,.228224,.168824,.251793,.228541,.168243,.27103,.22308,.144869,.266113,.228647,.142241,.270934,.224166,.144818,.270653,.22521,.144668,.270199,.226173,.144425,.269587,.227017,.144098,.268842,.227709,.1437,.267993,.228224,.143246,.267071,.228541,.142753,.283924,.22308,.117606,.278774,.228647,.115472,.283824,.224166,.117564,.28353,.22521,.117442,.283054,.226173,.117245,.282413,.227017,.11698,.281633,.227709,.116656,.280743,.228224,.116288,.279777,.228541,.115888,.294084,.22308,.08921,.288749,.228648,.087592,.293981,.224166,.089178,.293676,.22521,.089086,.293183,.226173,.088936,.292519,.227017,.088735,.291711,.227709,.08849,.290789,.228224,.08821,.289789,.228541,.087907,.301412,.22308,.059955,.295945,.228648,.058867,.301306,.224166,.059934,.300994,.22521,.059872,.300488,.226173,.059771,.299808,.227017,.059636,.29898,.227709,.059471,.298035,.228224,.059283,.29701,.228541,.059079,.305838,.22308,.030123,.30029,.228648,.029576,.30573,.224166,.030112,.305413,.22521,.030081,.3049,.226173,.03003,.30421,.227017,.029962,.303369,.227709,.02988,.302411,.228224,.029785,.301371,.228541,.029683,.307317,.22308,0,.301743,.228648,0,.30721,.224166,0,.306893,.22521,0,.306378,.226173,0,.305685,.227017,0,.30484,.227709,0,.303876,.228224,0,.30283,.228541,0,.217306,.22308,.217307,.213364,.228647,.213365,.217229,.224166,.21723,.217004,.22521,.217005,.21664,.226173,.21664,.216149,.227017,.21615,.215552,.227709,.215553,.214871,.228224,.214872,.214132,.228541,.214133,.23325,-.286363,.191424,.23756,-.280795,.194961,.23409,-.286256,.192113,.234898,-.285939,.192776,.235642,-.285424,.193387,.236295,-.284732,.193923,.236831,-.283888,.194363,.23723,-.282925,.19469,.237476,-.281881,.194892,.25089,-.286363,.167639,.255525,-.280795,.170737,.251793,-.286256,.168243,.252662,-.285939,.168824,.253463,-.285424,.169359,.254165,-.284732,.169828,.254742,-.283888,.170213,.255171,-.282925,.1705,.255435,-.281881,.170677,.266113,-.286363,.142241,.27103,-.280795,.144869,.267071,-.286256,.142753,.267993,-.285939,.143246,.268843,-.285424,.1437,.269587,-.284732,.144098,.270199,-.283888,.144425,.270654,-.282925,.144668,.270934,-.281881,.144818,.278774,-.286363,.115472,.283924,-.280795,.117606,.279778,-.286256,.115888,.280743,-.285939,.116288,.281633,-.285424,.116657,.282413,-.284732,.11698,.283054,-.283888,.117245,.283531,-.282925,.117442,.283824,-.281881,.117564,.28875,-.286363,.087592,.294085,-.280795,.08921,.28979,-.286256,.087907,.29079,-.285939,.08821,.291711,-.285424,.08849,.29252,-.284732,.088735,.293183,-.283888,.088936,.293677,-.282925,.089086,.293981,-.281881,.089178,.295945,-.286363,.058867,.301413,-.280795,.059955,.297011,-.286256,.059079,.298035,-.285939,.059283,.29898,-.285424,.059471,.299809,-.284732,.059636,.300489,-.283888,.059771,.300995,-.282925,.059872,.301307,-.281881,.059934,.30029,-.286363,.029576,.305838,-.280795,.030123,.301371,-.286256,.029683,.302411,-.285939,.029785,.30337,-.285424,.02988,.30421,-.284732,.029962,.3049,-.283888,.03003,.305414,-.282925,.030081,.30573,-.281881,.030112,.301743,-.286363,0,.307318,-.280795,0,.302831,-.286256,0,.303876,-.285939,0,.30484,-.285424,0,.305685,-.284732,0,.306378,-.283888,0,.306894,-.282925,0,.307211,-.281881,0,.213364,-.286363,.213365,.217306,-.280795,.217307,.214132,-.286256,.214133,.214871,-.285939,.214872,.215552,-.285424,.215553,.21615,-.284732,.21615,.21664,-.283888,.216641,.217005,-.282926,.217005,.21723,-.281881,.21723,.255525,-.248324,.170737,.256152,-.242756,.179239,.259462,-.237188,.174674,.258388,-.242756,.165961,.255199,-.247238,.171356,.254983,-.246193,.172179,.254887,-.245231,.173173,.254912,-.244387,.174301,.25506,-.243694,.175519,.255323,-.24318,.17678,.255692,-.242863,.178036,.256853,-.242649,.178403,.257515,-.242332,.177588,.258113,-.241817,.176824,.258623,-.241125,.176141,.259026,-.240281,.175565,.259307,-.239319,.175118,.259454,-.238274,.174817,.258749,-.237784,.173814,.258174,-.238465,.172804,.257757,-.239204,.171682,.257517,-.239972,.170491,.257461,-.24074,.169278,.257592,-.241478,.168088,.257905,-.242159,.166968,.256321,-.242762,.177279,.256916,-.242483,.17654,.257456,-.242036,.175848,.255868,-.243064,.176113,.256388,-.242804,.175459,.256863,-.242411,.174842,.255513,-.243545,.17495,.255951,-.243285,.174386,.256359,-.242926,.173844,.255273,-.247236,.171259,.255142,-.246185,.171973,.255138,-.245212,.172853,.255342,-.24723,.171167,.255291,-.246161,.171779,.255373,-.245159,.172548,.255405,-.24722,.171083,.255426,-.246122,.171599,.255588,-.245072,.172266,.258735,-.238758,.173944,.258142,-.239311,.172936,.257697,-.239912,.171831,.258603,-.239695,.174209,.258014,-.240131,.173179,.257564,-.240608,.172067,.258357,-.240561,.174598,.257795,-.240894,.173523,.257362,-.241268,.172381,.257459,-.241145,.169302,.257591,-.241737,.168099,.257905,-.242281,.166971,.257435,-.241531,.169353,.25758,-.241983,.168122,.257902,-.242396,.166977,.257387,-.241884,.169428,.257559,-.242207,.168156,.257897,-.242501,.166985,.255268,-.244185,.173835,.25546,-.247206,.171008,.255621,-.243907,.173361,.255544,-.246069,.17144,.255961,-.243562,.172895,.255774,-.244956,.172016,.25797,-.241397,.17515,.257403,-.241771,.174092,.256943,-.242233,.173009,.257418,-.240537,.170673,.257889,-.242592,.166996,.257268,-.24111,.170917,.257528,-.242401,.1682,.257074,-.241669,.171216,.257319,-.242189,.169525,.256608,-.242764,.171942,.259462,-.080014,.174674,.258388,-.080014,.165961,.258749,-.080014,.173814,.258173,-.080014,.172804,.257757,-.080014,.171682,.257517,-.080014,.170491,.257461,-.080014,.169278,.257592,-.080014,.168088,.257905,-.080014,.166968,.258387,.060915,.165961,.259462,.048431,.174674,.255135,.057172,.178183,.255525,.066483,.170737,.257905,.059577,.166968,.257592,.058051,.168088,.257461,.056395,.169278,.257516,.054673,.170491,.257757,.052951,.171682,.258173,.051295,.172804,.258749,.049769,.173814,.259552,.049696,.174914,.259434,.051009,.175242,.259113,.052319,.175645,.258601,.053575,.176108,.257919,.05473,.176613,.257092,.05574,.177141,.256152,.056564,.177671,.254886,.05801,.177169,.254717,.059028,.176099,.254635,.06019,.175012,.254644,.06145,.173951,.254743,.062759,.172958,.254928,.064067,.172069,.255192,.065325,.171319,.258822,.050955,.17403,.25872,.052172,.174323,.258446,.053379,.17468,.258215,.052375,.173008,.258115,.053477,.173276,.257878,.054566,.173597,.257752,.053904,.171885,.257641,.054874,.172141,.257428,.055832,.172438,.257906,.059745,.166973,.257598,.058398,.168107,.257476,.056924,.169318,.257904,.059899,.166979,.25759,.058722,.168131,.257456,.057429,.169373,.257898,.060042,.166987,.257565,.059026,.168162,.257402,.057908,.169441,.255783,.057487,.176673,.25548,.058577,.17563,.255253,.059793,.174581,.256611,.056772,.176167,.256185,.057962,.175155,.255829,.059261,.174144,.257338,.055894,.175669,.256806,.057206,.174691,.256342,.058615,.173716,.255079,.062656,.17265,.255135,.064021,.171854,.255286,.065313,.171208,.255378,.062517,.172371,.255318,.063958,.171664,.255368,.065297,.171112,.255632,.062347,.172127,.255472,.063882,.171501,.255436,.065278,.171031,.257452,.055483,.170706,.257888,.060174,.166996,.257315,.05631,.170961,.257526,.059311,.168197,.257113,.057131,.171247,.257316,.058358,.169519,.257977,.054727,.175121,.257428,.056006,.174065,.256976,.057363,.172979,.255111,.06109,.173567,.25549,.065256,.170967,.255556,.060624,.173172,.255595,.063794,.171367,.255964,.060069,.17278,.255836,.062153,.171921,.256636,.058749,.171905,.237559,.066483,.194961,.240641,.057172,.197726,.237609,.065325,.195027,.237777,.064067,.195194,.238058,.062759,.195455,.238439,.06145,.195801,.238908,.06019,.196218,.239445,.059028,.196691,.24003,.058009,.1972,.241869,-.242756,.198497,.23756,-.248324,.194961,.241029,-.242863,.197808,.240221,-.24318,.197145,.239477,-.243694,.196534,.238824,-.244387,.195998,.238288,-.245231,.195558,.237889,-.246193,.195231,.237643,-.247238,.195029,.220237,.057192,.220238,.217306,.066483,.217307,.219666,.058025,.219667,.219117,.059041,.219117,.21861,.060199,.218611,.218166,.061455,.218167,.217801,.062762,.217802,.21753,.064069,.217531,.217363,.065325,.217364,.217306,-.248324,.217307,.221248,-.242756,.221249,.217383,-.247238,.217383,.217608,-.246193,.217608,.217972,-.245231,.217973,.218463,-.244387,.218463,.21906,-.243694,.21906,.219741,-.24318,.219742,.22048,-.242863,.220481,.363184,-.237188,.286185,.362564,-.237188,.277776,.359168,-.242756,.282254,.363756,-.237188,.285237,.364154,-.237188,.284174,.364363,-.237188,.283037,.364376,-.237188,.28187,.364192,-.237188,.280717,.363818,-.237188,.279623,.363268,-.237188,.27863,.362546,-.238274,.277909,.362388,-.239318,.2782,.362096,-.240281,.278635,.361681,-.241125,.2792,.361159,-.241817,.279871,.36055,-.242332,.280623,.359878,-.242649,.281428,.359991,-.242649,.282967,.360774,-.242332,.283664,.361487,-.241817,.284319,.362102,-.241125,.284907,.362595,-.240281,.285404,.362948,-.239318,.285792,.363147,-.238274,.286056,.363731,-.238273,.285129,.364156,-.23827,.284102,.364406,-.238265,.283014,.363559,-.239314,.284901,.364022,-.239302,.283927,.364319,-.239283,.282909,.363248,-.240272,.284563,.363758,-.240245,.283658,.364106,-.240202,.282725,.36326,-.238273,.278741,.363123,-.239314,.278991,.362865,-.240272,.279371,.363831,-.23827,.279695,.363724,-.239302,.279887,.363502,-.240245,.280191,.364238,-.238265,.280733,.364167,-.239283,.28085,.363983,-.240202,.281064,.36069,-.242563,.282142,.361461,-.242287,.28284,.362162,-.241832,.283496,.361351,-.242287,.281338,.362104,-.24207,.282037,.362781,-.241691,.282696,.361948,-.241832,.280586,.362677,-.241691,.281287,.36332,-.2414,.281948,.364504,-.238253,.28186,.364498,-.239236,.281861,.364357,-.240098,.281871,.362484,-.241185,.27986,.36317,-.24115,.280547,.363711,-.241022,.281232,.3628,-.241185,.284135,.363377,-.24115,.283356,.363812,-.241022,.282598,.364088,-.240806,.281891,.363184,-.085583,.286185,.360217,-.076272,.283265,.362564,-.082498,.277776,.363157,-.084424,.286088,.363011,-.083167,.285892,.362751,-.081858,.285603,.362386,-.080549,.285234,.361932,-.079289,.284798,.361405,-.078128,.284312,.360826,-.077109,.283794,.361021,-.076611,.282541,.361719,-.077128,.281769,.362284,-.077803,.280978,.362693,-.078611,.2802,.362931,-.079521,.279464,.362989,-.080497,.278798,.362865,-.081502,.278228,.363268,-.082829,.27863,.363818,-.083206,.279623,.364192,-.083615,.280717,.364376,-.08404,.28187,.364363,-.084466,.283037,.364154,-.084875,.284174,.363755,-.085252,.285237,.363743,-.084128,.285163,.363623,-.082914,.285003,.363402,-.081657,.284762,.364176,-.083795,.284143,.364098,-.082639,.284039,.363922,-.081451,.283867,.364439,-.083438,.283068,.364415,-.082352,.283038,.364291,-.081248,.282951,.361617,-.077403,.283067,.36231,-.077849,.2823,.362879,-.078429,.281523,.362186,-.078358,.283585,.36287,-.078715,.282827,.363434,-.079183,.282068,.362706,-.079441,.284077,.36338,-.079693,.283332,.363926,-.080037,.282591,.363532,-.08186,.279014,.364063,-.082266,.279928,.364437,-.082705,.280935,.363635,-.080875,.279502,.364158,-.081307,.280322,.364538,-.081775,.281225,.363572,-.079913,.280076,.364099,-.080364,.28079,.364491,-.080858,.281577,.363145,-.080492,.284522,.363769,-.080484,.283787,.364237,-.080527,.283056,.36332,-.078993,.280699,.363848,-.079467,.281239,.364255,-.080016,.2818,.364624,-.083184,.281992,.364734,-.082306,.282118,.364701,-.08144,.282242,.364528,-.080618,.28236,.348536,-.237188,.305937,.344226,-.242756,.3024,.348452,-.238274,.305868,.348206,-.239318,.305666,.347807,-.240281,.305339,.347271,-.241125,.304899,.346618,-.241817,.304363,.345874,-.242332,.303752,.345066,-.242649,.303089,.32434,-.242756,.324341,.328282,-.237188,.328283,.325108,-.242649,.325109,.325847,-.242332,.325848,.326528,-.241817,.326529,.327126,-.241125,.327126,.327616,-.240281,.327617,.327981,-.239318,.327981,.328206,-.238274,.328206,.328282,-.085583,.328283,.325351,-.076292,.325352,.328225,-.084425,.328226,.328058,-.083168,.328059,.327787,-.081862,.327788,.327422,-.080555,.327423,.326978,-.079298,.326979,.326471,-.07814,.326472,.325922,-.077125,.325923,.348535,-.085583,.305937,.345454,-.076292,.303171,.348486,-.084425,.305871,.348317,-.083168,.305704,.348037,-.081862,.305442,.347655,-.080555,.305096,.347187,-.079298,.304679,.34665,-.07814,.304207,.346065,-.077125,.303697,.027905,.228646,.283337,.027132,.233713,.275488,.027794,.228744,.282211,.027679,.229032,.28104,.027564,.2295,.279869,.027453,.23013,.278742,.02735,.230898,.277703,.027261,.231774,.276792,.027187,.232724,.276044,.055543,.228646,.279237,.054004,.233713,.271502,.055322,.228744,.278128,.055093,.229032,.276974,.054863,.2295,.275819,.054642,.23013,.274709,.054439,.230898,.273685,.05426,.231774,.272787,.054113,.232724,.27205,.082646,.228646,.272449,.080356,.233713,.264901,.082317,.228744,.271366,.081976,.229032,.27024,.081634,.2295,.269113,.081305,.23013,.26803,.081002,.230898,.267031,.080737,.231774,.266155,.080518,.232724,.265436,.108952,.228646,.263036,.105934,.233713,.255749,.108519,.228744,.261991,.108069,.229032,.260904,.107619,.2295,.259816,.107185,.23013,.25877,.106786,.230898,.257806,.106436,.231774,.25696,.106148,.232724,.256266,.13421,.228646,.25109,.130492,.233713,.244134,.133677,.228744,.250092,.133122,.229032,.249054,.132567,.2295,.248016,.132033,.23013,.247018,.131541,.230898,.246097,.13111,.231774,.24529,.130755,.232724,.244627,.158175,.228646,.236726,.153793,.233713,.230169,.157546,.228744,.235786,.156892,.229032,.234807,.156238,.2295,.233828,.155609,.23013,.232887,.155029,.230898,.232019,.154521,.231774,.231258,.154103,.232724,.230633,.180616,.228647,.220082,.175613,.233713,.213986,.179899,.228744,.219208,.179152,.229032,.218298,.178405,.2295,.217388,.177687,.23013,.216513,.177025,.230898,.215706,.176444,.231774,.214999,.175967,.232724,.214418,.201318,.228647,.201319,.195742,.233713,.195742,.200518,.228744,.200519,.199686,.229032,.199687,.198854,.2295,.198855,.198053,.23013,.198054,.197315,.230898,.197316,.196668,.231774,.196669,.196137,.232724,.196137,.284708,.228647,0,.276821,.233713,0,.283576,.228744,0,.282398,.229032,0,.281221,.2295,0,.280089,.23013,0,.279045,.230898,0,.27813,.231774,0,.277379,.232725,0,.275488,.233713,.027133,.283337,.228647,.027906,.276044,.232725,.027188,.276792,.231774,.027262,.277703,.230898,.027352,.278742,.23013,.027454,.279868,.2295,.027565,.28104,.229032,.02768,.282211,.228744,.027796,.271502,.233713,.054005,.279237,.228647,.055544,.27205,.232725,.054114,.272787,.231774,.054261,.273685,.230898,.05444,.274708,.23013,.054643,.275819,.2295,.054864,.276973,.229032,.055094,.278128,.228744,.055323,.264901,.233713,.080357,.272448,.228647,.082647,.265436,.232725,.080519,.266155,.231774,.080737,.267031,.230898,.081003,.268029,.23013,.081306,.269113,.2295,.081635,.270239,.229032,.081977,.271366,.228744,.082318,.255749,.233713,.105935,.263036,.228647,.108953,.256265,.232725,.106149,.25696,.231774,.106436,.257805,.230898,.106787,.258769,.23013,.107186,.259815,.2295,.107619,.260903,.229032,.10807,.26199,.228744,.10852,.244134,.233713,.130493,.25109,.228647,.134211,.244627,.232725,.130756,.24529,.231774,.13111,.246097,.230898,.131542,.247017,.23013,.132034,.248016,.2295,.132568,.249054,.229032,.133123,.250092,.228744,.133677,.230168,.233713,.153794,.236725,.228647,.158176,.230633,.232724,.154104,.231257,.231774,.154522,.232018,.230898,.15503,.232886,.23013,.15561,.233828,.2295,.156239,.234806,.229032,.156893,.235785,.228744,.157547,.213985,.233713,.175614,.220082,.228647,.180617,.214417,.232725,.175968,.214998,.231774,.176445,.215705,.230898,.177025,.216512,.23013,.177688,.217388,.2295,.178406,.218298,.229032,.179153,.219207,.228744,.179899,-0,.517685,-.017843,-0,.515472,-.035616,-0,.511793,-.053247,-0,.506663,-.070669,-0,.500103,-.087812,-0,.492137,-.104609,-0,.482797,-.120992,-0,.472121,-.136898,-0,.46015,-.152264,-0,.446932,-.167029,-0,.432518,-.181134,-0,.416967,-.194525,-0,.400338,-.207148,-0,.382698,-.218954,-0,.364116,-.229896,0,.344666,-.23993,0,.324425,-.249017,0,.303471,-.257122,0,.281889,-.264211,0,.259763,-.270258,0,.23718,-.275239,-.001749,.517685,-.017757,-.003491,.515472,-.035444,-.005219,.511793,-.052991,-.006927,.506663,-.070329,-.008607,.500103,-.087389,-.010253,.492137,-.104105,-.011859,.482797,-.12041,-.013418,.472121,-.136239,-.014924,.46015,-.151531,-.016372,.446932,-.166224,-.017754,.432518,-.180262,-.019067,.416967,-.193589,-.020304,.400338,-.206151,-.021461,.382698,-.2179,-.022533,.364116,-.228789,-.023517,.344666,-.238774,-.024408,.324425,-.247818,-.025202,.303471,-.255883,-.025897,.281889,-.262939,-.02649,.259762,-.268957,-.026978,.23718,-.273913,-.003481,.517685,-.0175,-.006948,.515472,-.034931,-.010388,.511793,-.052224,-.013787,.506663,-.069311,-.017131,.500103,-.086125,-.020408,.492137,-.102599,-.023604,.482797,-.118667,-.026707,.472121,-.134268,-.029705,.46015,-.149338,-.032586,.446932,-.163819,-.035337,.432518,-.177654,-.03795,.416967,-.190788,-.040412,.400338,-.203168,-.042716,.382698,-.214747,-.04485,.364116,-.225478,-.046808,.344666,-.235319,-.04858,.324425,-.244232,-.050162,.303471,-.252181,-.051545,.281889,-.259134,-.052724,.259762,-.265065,-.053696,.23718,-.26995,-.00518,.517685,-.017075,-.010339,.515472,-.034082,-.015457,.511793,-.050955,-.020514,.506663,-.067626,-.025491,.500103,-.084031,-.030366,.492137,-.100104,-.035122,.482797,-.115782,-.039739,.472121,-.131003,-.0442,.46015,-.145708,-.048486,.446932,-.159837,-.05258,.432518,-.173335,-.056468,.416967,-.186149,-.060132,.400338,-.198229,-.063559,.382698,-.209526,-.066735,.364116,-.219996,-.069648,.344666,-.229598,-.072286,.324424,-.238295,-.074638,.303471,-.24605,-.076696,.281889,-.252834,-.078451,.259762,-.258621,-.079897,.23718,-.263387,-.006828,.517685,-.016485,-.01363,.515472,-.032904,-.020377,.511793,-.049194,-.027044,.506663,-.06529,-.033604,.500103,-.081128,-.040032,.492137,-.096646,-.046302,.482797,-.111782,-.052389,.472121,-.126478,-.058269,.46015,-.140674,-.063919,.446932,-.154315,-.069317,.432518,-.167347,-.074442,.416967,-.179718,-.079272,.400338,-.19138,-.08379,.382698,-.202287,-.087977,.364116,-.212396,-.091817,.344666,-.221666,-.095294,.324424,-.230062,-.098396,.303471,-.237549,-.101109,.281889,-.244099,-.103423,.259762,-.249686,-.105329,.23718,-.254288,-.008411,.517685,-.015736,-.016789,.515472,-.03141,-.025101,.511793,-.04696,-.033313,.506663,-.062325,-.041395,.500102,-.077443,-.049312,.492137,-.092257,-.057035,.482797,-.106706,-.064533,.472121,-.120734,-.071777,.46015,-.134285,-.078737,.446932,-.147306,-.085386,.432518,-.159746,-.091699,.416966,-.171556,-.097649,.400338,-.182689,-.103214,.382698,-.1931,-.108372,.364116,-.20275,-.113102,.344666,-.211599,-.117386,.324424,-.219614,-.121206,.303471,-.226761,-.124548,.281889,-.233014,-.127399,.259762,-.238347,-.129746,.23718,-.242739,-.009913,.517685,-.014836,-.019787,.515472,-.029613,-.029583,.511793,-.044274,-.039262,.506663,-.058759,-.048786,.500102,-.073013,-.058118,.492137,-.086979,-.06722,.482797,-.100601,-.076057,.472121,-.113827,-.084593,.46015,-.126603,-.092796,.446932,-.138879,-.100633,.432518,-.150608,-.108072,.416966,-.161742,-.115086,.400338,-.172238,-.121644,.382698,-.182054,-.127723,.364116,-.191151,-.133298,.344666,-.199494,-.138346,.324424,-.20705,-.142849,.303471,-.213789,-.146788,.281889,-.219684,-.150147,.259762,-.224712,-.152914,.23718,-.228853,-.01132,.517685,-.013793,-.022595,.515472,-.027531,-.03378,.511793,-.041161,-.044832,.506663,-.054628,-.055708,.500102,-.06788,-.066363,.492137,-.080864,-.076757,.482797,-.093528,-.086847,.472121,-.105824,-.096595,.46015,-.117702,-.105962,.446932,-.129115,-.114911,.432518,-.140019,-.123406,.416966,-.15037,-.131414,.400338,-.160128,-.138903,.382698,-.169254,-.145844,.364116,-.177712,-.15221,.344666,-.185468,-.157975,.324424,-.192493,-.163116,.303471,-.198758,-.167614,.281889,-.204238,-.17145,.259762,-.208913,-.174609,.23718,-.212763,-.16146,-.286362,-.19674,-.141399,-.286362,-.211619,-.119975,-.286362,-.22446,-.097397,-.286362,-.235138,-.07388,-.286362,-.243553,-.049652,-.286362,-.249621,-.024946,-.286362,-.253286,1e-6,-.286362,-.254512,-.16146,-.448371,-.19674,-.141398,-.448371,-.211619,-.119975,-.448371,-.22446,-.097397,-.448371,-.235138,-.07388,-.448371,-.243553,-.049652,-.448371,-.249621,-.024946,-.448371,-.253286,1e-6,-.44837,-.254512,-.117605,-.242756,-.283925,-.144868,-.080015,-.27103,-.117605,.060915,-.283925,-.144868,.060915,-.27103,-.117605,-.080015,-.283925,-.144868,-.242756,-.27103,-.030121,-.242756,-.305838,-.089209,-.080015,-.294085,-.030122,.060915,-.305838,-.059954,.060915,-.301413,-.059954,-.080015,-.301413,-.059954,-.242756,-.301413,-.089209,.060915,-.294085,-.030122,-.080015,-.305838,-.089209,-.242756,-.294085,0,-.080015,-.307318,1e-6,-.242756,-.307318,0,.060915,-.307318,-.025184,.515472,-.025184,-.037652,.511793,-.037652,-.049971,.506663,-.049971,-.062093,.500102,-.062093,-.085555,.482797,-.085554,-.096802,.472121,-.096802,-.107667,.46015,-.107667,-.118107,.446932,-.118107,-.128082,.432518,-.128082,-.13755,.416966,-.13755,-.146476,.400338,-.146476,-.154824,.382698,-.154824,-.162561,.364116,-.162561,-.169656,.344666,-.169656,-.176082,.324424,-.176082,-.181812,.303471,-.181813,-.186826,.281889,-.186826,-.191101,.259762,-.191102,-.194623,.23718,-.194624,-.017757,.517685,-.001749,-.035444,.515472,-.003491,-.052991,.511793,-.005219,-.070329,.506663,-.006927,-.08739,.500102,-.008607,-.104105,.492137,-.010253,-.12041,.482797,-.011859,-.136239,.472121,-.013418,-.151531,.46015,-.014924,-.166225,.446932,-.016372,-.180263,.432518,-.017754,-.193589,.416966,-.019067,-.206151,.400338,-.020304,-.2179,.382698,-.021461,-.228789,.364116,-.022534,-.238775,.344666,-.023517,-.247818,.324424,-.024408,-.255884,.303471,-.025203,-.262939,.281889,-.025897,-.268957,.259762,-.02649,-.273914,.23718,-.026978,-.017501,.517685,-.003481,-.034932,.515472,-.006948,-.052225,.511793,-.010388,-.069312,.506663,-.013787,-.086125,.500102,-.017131,-.102599,.492137,-.020408,-.118668,.482797,-.023604,-.134268,.472121,-.026708,-.149339,.46015,-.029705,-.16382,.446932,-.032586,-.177654,.432518,-.035338,-.190788,.416966,-.03795,-.203168,.400338,-.040413,-.214747,.382698,-.042716,-.225478,.364116,-.044851,-.23532,.344666,-.046808,-.244232,.324424,-.048581,-.252181,.303471,-.050162,-.259135,.281889,-.051545,-.265065,.259762,-.052725,-.26995,.23718,-.053697,-.017075,.517685,-.005179,-.034082,.515472,-.010339,-.050955,.511793,-.015457,-.067627,.506663,-.020514,-.084031,.500102,-.025491,-.100105,.492137,-.030366,-.115783,.482797,-.035122,-.131004,.472121,-.03974,-.145708,.46015,-.0442,-.159837,.446932,-.048486,-.173335,.432518,-.052581,-.186149,.416966,-.056468,-.198229,.400338,-.060132,-.209526,.382698,-.063559,-.219997,.364116,-.066735,-.229598,.344666,-.069648,-.238295,.324424,-.072286,-.24605,.303471,-.074639,-.252834,.281889,-.076697,-.258621,.259762,-.078452,-.263387,.23718,-.079898,-.016485,.517685,-.006828,-.032905,.515472,-.013629,-.049195,.511793,-.020377,-.06529,.506663,-.027044,-.081128,.500102,-.033604,-.096646,.492137,-.040032,-.111783,.482797,-.046302,-.126478,.472121,-.052389,-.140674,.46015,-.058269,-.154315,.446932,-.063919,-.167347,.432518,-.069317,-.179718,.416966,-.074442,-.191381,.400338,-.079272,-.202287,.382698,-.08379,-.212396,.364116,-.087977,-.221666,.344666,-.091817,-.230062,.324424,-.095295,-.237549,.303471,-.098396,-.244099,.281889,-.10111,-.249686,.259762,-.103424,-.254288,.23718,-.10533,-.015736,.517685,-.008411,-.03141,.515472,-.016789,-.04696,.511793,-.025101,-.062325,.506663,-.033313,-.077444,.500102,-.041394,-.092257,.492137,-.049312,-.106706,.482797,-.057035,-.120734,.472121,-.064533,-.134285,.46015,-.071777,-.147306,.446932,-.078737,-.159747,.432518,-.085386,-.171556,.416966,-.091699,-.182689,.400338,-.097649,-.1931,.382698,-.103214,-.20275,.364116,-.108372,-.211599,.344666,-.113102,-.219614,.324424,-.117386,-.226761,.303471,-.121207,-.233013,.281889,-.124549,-.238346,.259762,-.127399,-.242739,.23718,-.129747,-.014836,.517685,-.009913,-.029614,.515472,-.019787,-.044274,.511793,-.029583,-.05876,.506663,-.039262,-.073013,.500102,-.048786,-.086979,.492137,-.058117,-.100602,.482797,-.06722,-.113827,.472121,-.076057,-.126603,.46015,-.084593,-.13888,.446932,-.092796,-.150608,.432518,-.100633,-.161742,.416966,-.108073,-.172238,.400338,-.115086,-.182054,.382698,-.121644,-.191151,.364116,-.127723,-.199494,.344666,-.133298,-.20705,.324424,-.138347,-.213789,.303471,-.142849,-.219683,.281889,-.146788,-.224711,.259762,-.150148,-.228853,.23718,-.152915,-.013793,.517685,-.011319,-.027531,.515472,-.022594,-.041161,.511793,-.03378,-.054628,.506663,-.044832,-.06788,.500102,-.055708,-.080864,.492137,-.066363,-.093528,.482797,-.076757,-.105824,.472121,-.086847,-.117702,.46015,-.096595,-.129115,.446932,-.105962,-.140019,.432518,-.114911,-.15037,.416966,-.123406,-.160128,.400338,-.131414,-.169254,.382698,-.138903,-.177712,.364116,-.145844,-.185468,.344666,-.15221,-.192493,.324424,-.157975,-.198758,.303471,-.163116,-.204238,.281889,-.167614,-.208912,.259762,-.17145,-.212762,.23718,-.17461,-.012617,.517685,-.012617,-.07397,.492137,-.07397,-.19674,-.286362,-.161461,-.211618,-.286362,-.141399,-.224459,-.286362,-.119976,-.235138,-.286362,-.097398,-.243552,-.286362,-.073881,-.249621,-.286362,-.049653,-.253286,-.286362,-.024947,-.179966,-.286362,-.179967,-.19674,-.448371,-.161461,-.211618,-.448371,-.141399,-.224459,-.448371,-.119976,-.235138,-.448371,-.097398,-.243552,-.448371,-.073881,-.249621,-.448371,-.049653,-.253286,-.448371,-.024947,-.179966,-.448371,-.179967,-.283924,-.242756,-.117606,-.27103,-.080015,-.144869,-.283924,.060915,-.117606,-.27103,.060915,-.144869,-.283924,-.080015,-.117606,-.27103,-.242756,-.144869,-.305838,-.242756,-.030123,-.294084,-.080015,-.08921,-.305838,.060914,-.030123,-.301413,.060914,-.059955,-.301412,-.080015,-.059955,-.301412,-.242756,-.059955,-.294085,.060915,-.08921,-.305838,-.080015,-.030123,-.294084,-.242756,-.08921,-.191423,.228647,-.23325,-.19496,.223079,-.23756,-.192113,.22854,-.23409,-.192775,.228223,-.234898,-.193387,.227709,-.235643,-.193922,.227016,-.236296,-.194362,.226173,-.236832,-.194689,.22521,-.23723,-.194891,.224165,-.237476,-.167639,.228647,-.25089,-.170736,.223079,-.255525,-.168243,.22854,-.251793,-.168823,.228223,-.252662,-.169358,.227709,-.253463,-.169828,.227016,-.254165,-.170213,.226173,-.254742,-.170499,.22521,-.255171,-.170676,.224165,-.255435,-.14224,.228647,-.266114,-.144868,.223079,-.27103,-.142752,.22854,-.267072,-.143245,.228223,-.267993,-.143699,.227709,-.268843,-.144097,.227016,-.269588,-.144424,.226173,-.270199,-.144667,.22521,-.270654,-.144817,.224166,-.270935,-.115472,.228647,-.278774,-.117605,.223079,-.283925,-.115887,.22854,-.279778,-.116287,.228223,-.280743,-.116656,.227709,-.281633,-.116979,.227016,-.282413,-.117244,.226173,-.283054,-.117442,.22521,-.283531,-.117564,.224166,-.283825,-.087591,.228647,-.28875,-.089209,.223079,-.294085,-.087906,.22854,-.28979,-.08821,.228223,-.290789,-.088489,.227709,-.291711,-.088734,.227017,-.29252,-.088936,.226173,-.293183,-.089085,.22521,-.293677,-.089178,.224166,-.293981,-.058867,.228647,-.295945,-.059954,.223079,-.301413,-.059079,.22854,-.29701,-.059282,.228223,-.298035,-.05947,.227709,-.29898,-.059635,.227017,-.299808,-.05977,.226173,-.300489,-.059871,.22521,-.300994,-.059933,.224166,-.301306,-.029576,.228647,-.30029,-.030122,.223079,-.305838,-.029682,.22854,-.301371,-.029784,.228223,-.302411,-.029879,.227709,-.30337,-.029962,.227017,-.30421,-.03003,.226173,-.3049,-.03008,.22521,-.305413,-.030111,.224166,-.30573,0,.228647,-.301743,0,.223079,-.307318,0,.22854,-.30283,0,.228223,-.303876,0,.227709,-.30484,0,.227017,-.305685,0,.226173,-.306378,0,.22521,-.306893,0,.224166,-.30721,-.19496,-.280795,-.23756,-.191423,-.286363,-.23325,-.194891,-.281881,-.237476,-.194689,-.282926,-.23723,-.194362,-.283889,-.236832,-.193922,-.284732,-.236296,-.193386,-.285425,-.235643,-.192775,-.285939,-.234898,-.192112,-.286256,-.23409,-.170736,-.280795,-.255525,-.167639,-.286363,-.25089,-.170676,-.281881,-.255435,-.170499,-.282926,-.255171,-.170212,-.283889,-.254742,-.169827,-.284732,-.254165,-.169358,-.285425,-.253463,-.168823,-.285939,-.252662,-.168242,-.286256,-.251793,-.144868,-.280795,-.27103,-.14224,-.286363,-.266114,-.144817,-.281881,-.270935,-.144667,-.282926,-.270654,-.144424,-.283888,-.270199,-.144097,-.284732,-.269588,-.143698,-.285425,-.268843,-.143244,-.285939,-.267993,-.142752,-.286256,-.267072,-.117605,-.280795,-.283925,-.115471,-.286363,-.278774,-.117563,-.281881,-.283825,-.117441,-.282926,-.283531,-.117244,-.283888,-.283054,-.116979,-.284732,-.282413,-.116655,-.285425,-.281633,-.116287,-.285939,-.280743,-.115887,-.286256,-.279778,-.089209,-.280795,-.294085,-.08759,-.286363,-.28875,-.089177,-.281881,-.293981,-.089085,-.282926,-.293677,-.088935,-.283888,-.293183,-.088734,-.284732,-.29252,-.088489,-.285425,-.291711,-.088209,-.285939,-.290789,-.087906,-.286256,-.28979,-.059954,-.280795,-.301413,-.058866,-.286363,-.295945,-.059933,-.281881,-.301306,-.059871,-.282926,-.300994,-.05977,-.283888,-.300489,-.059635,-.284732,-.299808,-.05947,-.285425,-.29898,-.059282,-.285939,-.298035,-.059078,-.286256,-.29701,-.030121,-.280795,-.305838,-.029575,-.286363,-.30029,-.030111,-.281881,-.30573,-.03008,-.282926,-.305413,-.030029,-.283888,-.3049,-.029961,-.284732,-.30421,-.029878,-.285425,-.30337,-.029784,-.285939,-.302411,-.029682,-.286256,-.301371,1e-6,-.280795,-.307318,1e-6,-.286363,-.301743,1e-6,-.281881,-.30721,1e-6,-.282926,-.306893,1e-6,-.283888,-.306378,1e-6,-.284732,-.305685,1e-6,-.285425,-.30484,1e-6,-.285939,-.303876,1e-6,-.286256,-.30283,-.174673,-.237188,-.259463,-.179237,-.242756,-.256153,-.170736,-.248324,-.255525,-.16596,-.242756,-.258388,-.174816,-.238274,-.259454,-.175117,-.239319,-.259307,-.175564,-.240282,-.259026,-.17614,-.241125,-.258623,-.176823,-.241818,-.258113,-.177587,-.242332,-.257515,-.178402,-.242649,-.256853,-.178035,-.242863,-.255692,-.176779,-.24318,-.255323,-.175518,-.243695,-.25506,-.1743,-.244387,-.254913,-.173172,-.245231,-.254887,-.172178,-.246194,-.254984,-.171355,-.247238,-.255199,-.166967,-.24216,-.257905,-.168087,-.241479,-.257592,-.169277,-.24074,-.257461,-.17049,-.239972,-.257517,-.171681,-.239204,-.257758,-.172803,-.238465,-.258174,-.173813,-.237785,-.25875,-.173943,-.238758,-.258736,-.174208,-.239696,-.258603,-.174597,-.240561,-.258358,-.172935,-.239311,-.258142,-.173178,-.240131,-.258015,-.173522,-.240894,-.257796,-.17183,-.239912,-.257698,-.172066,-.240609,-.257564,-.17238,-.241268,-.257362,-.16697,-.242281,-.257905,-.168098,-.241737,-.257592,-.169301,-.241145,-.25746,-.166976,-.242397,-.257902,-.168121,-.241983,-.25758,-.169352,-.241531,-.257435,-.166984,-.242502,-.257897,-.168155,-.242207,-.257559,-.169427,-.241884,-.257388,-.177278,-.242762,-.256321,-.176112,-.243064,-.255869,-.174949,-.243545,-.255513,-.176539,-.242483,-.256917,-.175458,-.242805,-.256389,-.174385,-.243286,-.255951,-.175847,-.242037,-.257456,-.174841,-.242411,-.256864,-.173843,-.242926,-.256359,-.172852,-.245213,-.255138,-.171972,-.246185,-.255142,-.171258,-.247236,-.255273,-.172547,-.245159,-.255374,-.171778,-.246161,-.255291,-.171166,-.24723,-.255342,-.172265,-.245073,-.255588,-.171598,-.246122,-.255427,-.171082,-.24722,-.255405,-.175149,-.241398,-.25797,-.174091,-.241772,-.257403,-.173008,-.242233,-.256943,-.173834,-.244186,-.255268,-.171007,-.247207,-.255461,-.17336,-.243907,-.255622,-.171439,-.246069,-.255545,-.172894,-.243562,-.255962,-.172015,-.244956,-.255774,-.170672,-.240537,-.257418,-.166995,-.242592,-.257889,-.170916,-.24111,-.257269,-.168199,-.242401,-.257528,-.171215,-.241669,-.257074,-.169524,-.242189,-.25732,-.171941,-.242765,-.256608,-.16596,-.080015,-.258388,-.174673,-.080015,-.259463,-.166967,-.080015,-.257905,-.168087,-.080015,-.257592,-.169277,-.080015,-.257461,-.17049,-.080015,-.257517,-.171681,-.080015,-.257758,-.172803,-.080015,-.258174,-.173813,-.080015,-.25875,-.178182,.057172,-.255136,-.174673,.048431,-.259463,-.16596,.060915,-.258388,-.170736,.066483,-.255525,-.17767,.056564,-.256152,-.17714,.055739,-.257092,-.176613,.05473,-.257919,-.176108,.053575,-.258602,-.175644,.052318,-.259113,-.175241,.051009,-.259434,-.174913,.049696,-.259552,-.173813,.049769,-.25875,-.172803,.051295,-.258174,-.171681,.052951,-.257758,-.17049,.054673,-.257517,-.169277,.056395,-.257461,-.168087,.058051,-.257592,-.166967,.059577,-.257905,-.171318,.065325,-.255192,-.172068,.064067,-.254928,-.172957,.062759,-.254743,-.173951,.061449,-.254645,-.175011,.06019,-.254636,-.176098,.059028,-.254717,-.177169,.058009,-.254886,-.176672,.057486,-.255784,-.176166,.056772,-.256612,-.175668,.055894,-.257339,-.175629,.058577,-.25548,-.175154,.057961,-.256185,-.17469,.057206,-.256806,-.17458,.059793,-.255254,-.174143,.059261,-.255829,-.173715,.058614,-.256343,-.171208,.065313,-.255287,-.171853,.064021,-.255136,-.172649,.062656,-.255079,-.171111,.065297,-.255369,-.171663,.063958,-.255319,-.17237,.062517,-.255378,-.171031,.065278,-.255437,-.1715,.063881,-.255473,-.172126,.062347,-.255632,-.17403,.050954,-.258823,-.173007,.052375,-.258215,-.171885,.053904,-.257753,-.174322,.052172,-.258721,-.173275,.053477,-.258115,-.17214,.054874,-.257641,-.174679,.053379,-.258447,-.173596,.054565,-.257878,-.172438,.055832,-.257428,-.169317,.056924,-.257476,-.168106,.058397,-.257599,-.166972,.059745,-.257907,-.169373,.057429,-.257456,-.168131,.058722,-.25759,-.166978,.059899,-.257905,-.169441,.057907,-.257402,-.168161,.059026,-.257566,-.166986,.060041,-.257898,-.175121,.054726,-.257978,-.174064,.056005,-.257429,-.172978,.057363,-.256976,-.170705,.055482,-.257452,-.166995,.060174,-.257889,-.170961,.056309,-.257316,-.168197,.059311,-.257527,-.171246,.057131,-.257113,-.169519,.058358,-.257316,-.173566,.06109,-.255111,-.170966,.065255,-.255491,-.173171,.060623,-.255556,-.171366,.063793,-.255596,-.172779,.060068,-.255964,-.17192,.062152,-.255837,-.171904,.058748,-.256636,-.197726,.057192,-.240641,-.19496,.066483,-.23756,-.197199,.058025,-.240031,-.19669,.05904,-.239446,-.196218,.060198,-.238908,-.195801,.061455,-.23844,-.195455,.062762,-.238058,-.195193,.064069,-.237778,-.195026,.065325,-.23761,-.19496,-.248324,-.23756,-.198496,-.242756,-.241869,-.195028,-.247238,-.237644,-.19523,-.246194,-.23789,-.195557,-.245231,-.238288,-.195997,-.244387,-.238824,-.196533,-.243695,-.239477,-.197144,-.24318,-.240222,-.197807,-.242863,-.24103,-.282253,-.242756,-.359168,-.277774,-.237188,-.362564,-.286184,-.237188,-.363185,-.281427,-.242649,-.359878,-.280622,-.242332,-.360551,-.279869,-.241818,-.36116,-.279198,-.241125,-.361682,-.278634,-.240282,-.362097,-.278198,-.239319,-.362389,-.277908,-.238274,-.362547,-.278629,-.237188,-.363269,-.279622,-.237188,-.363819,-.280716,-.237188,-.364193,-.281869,-.237188,-.364377,-.283036,-.237188,-.364364,-.284173,-.237188,-.364154,-.285236,-.237188,-.363756,-.286055,-.238274,-.363148,-.285791,-.239319,-.362949,-.285403,-.240282,-.362596,-.284905,-.241125,-.362103,-.284318,-.241818,-.361488,-.283663,-.242332,-.360775,-.282966,-.242649,-.359992,-.28214,-.242563,-.360691,-.281336,-.242287,-.361351,-.280584,-.241832,-.361948,-.282839,-.242287,-.361462,-.282036,-.242071,-.362104,-.281286,-.241691,-.362678,-.283495,-.241832,-.362163,-.282694,-.241691,-.362782,-.281946,-.241401,-.36332,-.27874,-.238273,-.36326,-.279693,-.23827,-.363831,-.280732,-.238265,-.364238,-.27899,-.239315,-.363124,-.279885,-.239303,-.363724,-.280849,-.239283,-.364168,-.27937,-.240273,-.362865,-.28019,-.240246,-.363503,-.281063,-.240203,-.363984,-.285127,-.238273,-.363731,-.2849,-.239315,-.36356,-.284562,-.240273,-.363248,-.2841,-.23827,-.364156,-.283926,-.239303,-.364023,-.283657,-.240246,-.363758,-.283013,-.238265,-.364406,-.282908,-.239283,-.36432,-.282723,-.240203,-.364106,-.279859,-.241185,-.362485,-.280545,-.241151,-.36317,-.281231,-.241023,-.363712,-.281859,-.238254,-.364505,-.28186,-.239236,-.364498,-.28187,-.240098,-.364358,-.284134,-.241185,-.3628,-.283355,-.241151,-.363378,-.282597,-.241023,-.363813,-.28189,-.240807,-.364088,-.277775,-.082499,-.362564,-.283264,-.076272,-.360218,-.286184,-.085583,-.363185,-.278227,-.081503,-.362866,-.278797,-.080498,-.36299,-.279463,-.079522,-.362932,-.280199,-.078612,-.362694,-.280977,-.077804,-.362284,-.281768,-.077128,-.36172,-.28254,-.076611,-.361022,-.283793,-.077109,-.360827,-.28431,-.078128,-.361406,-.284797,-.07929,-.361933,-.285233,-.08055,-.362387,-.285602,-.081859,-.362751,-.285891,-.083167,-.363012,-.286087,-.084425,-.363158,-.285236,-.085253,-.363756,-.284173,-.084876,-.364154,-.283036,-.084466,-.364364,-.281869,-.084041,-.364377,-.280716,-.083615,-.364193,-.279622,-.083206,-.363819,-.278629,-.082829,-.363269,-.279013,-.08186,-.363533,-.279501,-.080876,-.363636,-.280075,-.079914,-.363573,-.279927,-.082266,-.364064,-.28032,-.081307,-.364158,-.280788,-.080365,-.3641,-.280934,-.082706,-.364438,-.281224,-.081776,-.364539,-.281576,-.080859,-.364492,-.283065,-.077403,-.361617,-.283584,-.078359,-.362186,-.284076,-.079441,-.362707,-.282299,-.077849,-.362311,-.282826,-.078715,-.362871,-.283331,-.079694,-.36338,-.281522,-.07843,-.36288,-.282067,-.079184,-.363434,-.28259,-.080038,-.363927,-.285162,-.084128,-.363744,-.284142,-.083795,-.364177,-.283066,-.083439,-.36444,-.285002,-.082915,-.363624,-.284038,-.082639,-.364098,-.283037,-.082352,-.364416,-.284761,-.081658,-.363403,-.283865,-.081452,-.363923,-.28295,-.081248,-.364292,-.280698,-.078994,-.363321,-.281238,-.079468,-.363849,-.281799,-.080016,-.364256,-.284521,-.080492,-.363145,-.283785,-.080485,-.36377,-.283055,-.080527,-.364237,-.281991,-.083185,-.364625,-.282117,-.082307,-.364735,-.282241,-.081441,-.364702,-.282359,-.080619,-.364529,-.302399,-.242756,-.344227,-.305936,-.237188,-.348536,-.303088,-.242649,-.345067,-.303751,-.242333,-.345874,-.304362,-.241818,-.346619,-.304898,-.241125,-.347272,-.305338,-.240282,-.347808,-.305665,-.239319,-.348207,-.305867,-.238274,-.348453,-.30317,-.076272,-.345455,-.305936,-.085583,-.348536,-.303696,-.07711,-.346066,-.304206,-.078128,-.346651,-.304678,-.07929,-.347188,-.305095,-.08055,-.347656,-.305441,-.081859,-.348038,-.305703,-.083167,-.348318,-.30587,-.084425,-.348487,-.23756,.223079,-.194961,-.23325,.228647,-.191424,-.237476,.224165,-.194892,-.23723,.22521,-.19469,-.236831,.226173,-.194363,-.236295,.227016,-.193923,-.235642,.227709,-.193387,-.234898,.228223,-.192776,-.23409,.22854,-.192113,-.255525,.223079,-.170737,-.25089,.228647,-.167639,-.255435,.224165,-.170677,-.255171,.22521,-.1705,-.254742,.226173,-.170213,-.254165,.227016,-.169828,-.253463,.227709,-.169359,-.252662,.228223,-.168824,-.251793,.22854,-.168243,-.27103,.223079,-.144869,-.266113,.228647,-.142241,-.270934,.224165,-.144818,-.270654,.22521,-.144668,-.270199,.226173,-.144425,-.269587,.227016,-.144098,-.268842,.227709,-.1437,-.267993,.228223,-.143246,-.267071,.22854,-.142753,-.283924,.223079,-.117606,-.278774,.228647,-.115472,-.283824,.224165,-.117564,-.283531,.22521,-.117442,-.283054,.226173,-.117245,-.282413,.227016,-.11698,-.281633,.227709,-.116656,-.280743,.228223,-.116288,-.279778,.22854,-.115888,-.294085,.223079,-.08921,-.28875,.228647,-.087592,-.293981,.224165,-.089178,-.293677,.22521,-.089086,-.293183,.226173,-.088936,-.29252,.227016,-.088735,-.291711,.227709,-.08849,-.29079,.228223,-.08821,-.28979,.22854,-.087907,-.301413,.223079,-.059955,-.295945,.228647,-.058867,-.301307,.224165,-.059934,-.300994,.22521,-.059872,-.300489,.226173,-.059771,-.299809,.227016,-.059636,-.29898,.227709,-.059471,-.298035,.228223,-.059283,-.297011,.22854,-.059079,-.305838,.223079,-.030123,-.30029,.228647,-.029576,-.30573,.224165,-.030112,-.305414,.22521,-.030081,-.3049,.226173,-.03003,-.30421,.227016,-.029962,-.30337,.227709,-.02988,-.302411,.228223,-.029785,-.301371,.22854,-.029683,-.217306,.223079,-.217307,-.213364,.228647,-.213365,-.21723,.224165,-.21723,-.217005,.22521,-.217005,-.21664,.226173,-.216641,-.21615,.227016,-.21615,-.215552,.227709,-.215553,-.214871,.228223,-.214872,-.214132,.22854,-.214133,-.23325,-.286363,-.191424,-.237559,-.280795,-.194961,-.23409,-.286256,-.192113,-.234897,-.285939,-.192776,-.235642,-.285425,-.193387,-.236295,-.284732,-.193923,-.236831,-.283889,-.194363,-.237229,-.282926,-.19469,-.237475,-.281881,-.194892,-.250889,-.286363,-.167639,-.255525,-.280795,-.170737,-.251793,-.286256,-.168243,-.252662,-.285939,-.168824,-.253462,-.285425,-.169359,-.254165,-.284732,-.169828,-.254741,-.283889,-.170213,-.25517,-.282926,-.1705,-.255435,-.281881,-.170677,-.266113,-.286363,-.142241,-.271029,-.280795,-.144869,-.267071,-.286256,-.142753,-.267993,-.285939,-.143246,-.268842,-.285425,-.1437,-.269587,-.284732,-.144098,-.270199,-.283889,-.144425,-.270653,-.282926,-.144668,-.270934,-.281881,-.144818,-.278774,-.286363,-.115472,-.283924,-.280795,-.117606,-.279777,-.286256,-.115888,-.280743,-.285939,-.116288,-.281633,-.285425,-.116656,-.282413,-.284732,-.11698,-.283054,-.283889,-.117245,-.28353,-.282926,-.117442,-.283824,-.281881,-.117564,-.288749,-.286363,-.087592,-.294084,-.280795,-.08921,-.289789,-.286256,-.087907,-.290789,-.285939,-.08821,-.291711,-.285425,-.08849,-.292519,-.284732,-.088735,-.293183,-.283889,-.088936,-.293676,-.282926,-.089086,-.293981,-.281881,-.089178,-.295945,-.286363,-.058867,-.301412,-.280795,-.059955,-.29701,-.286256,-.059079,-.298035,-.285939,-.059283,-.29898,-.285425,-.059471,-.299808,-.284732,-.059636,-.300488,-.283889,-.059771,-.300994,-.282926,-.059872,-.301306,-.281881,-.059934,-.30029,-.286363,-.029576,-.305838,-.280795,-.030123,-.301371,-.286256,-.029683,-.302411,-.285939,-.029785,-.303369,-.285425,-.02988,-.30421,-.284732,-.029962,-.3049,-.283889,-.03003,-.305413,-.282926,-.030081,-.30573,-.281881,-.030112,-.213364,-.286363,-.213365,-.217306,-.280795,-.217307,-.214132,-.286256,-.214133,-.214871,-.285939,-.214872,-.215552,-.285425,-.215553,-.216149,-.284732,-.21615,-.21664,-.283889,-.21664,-.217004,-.282926,-.217005,-.217229,-.281881,-.21723,-.255525,-.248324,-.170737,-.256152,-.242756,-.179238,-.259462,-.237188,-.174674,-.258387,-.242756,-.165961,-.255199,-.247238,-.171356,-.254983,-.246194,-.172179,-.254886,-.245231,-.173173,-.254912,-.244387,-.174301,-.255059,-.243695,-.175519,-.255322,-.24318,-.17678,-.255691,-.242863,-.178036,-.256853,-.242649,-.178403,-.257515,-.242332,-.177588,-.258112,-.241818,-.176824,-.258622,-.241125,-.176141,-.259026,-.240282,-.175565,-.259306,-.239319,-.175118,-.259454,-.238274,-.174817,-.258749,-.237785,-.173814,-.258173,-.238465,-.172804,-.257757,-.239204,-.171682,-.257516,-.239972,-.170491,-.25746,-.24074,-.169278,-.257592,-.241479,-.168088,-.257905,-.24216,-.166968,-.256321,-.242762,-.177279,-.256916,-.242483,-.17654,-.257455,-.242037,-.175848,-.255868,-.243065,-.176113,-.256388,-.242805,-.175459,-.256863,-.242411,-.174842,-.255512,-.243545,-.17495,-.255951,-.243286,-.174385,-.256359,-.242926,-.173844,-.255272,-.247236,-.171259,-.255141,-.246185,-.171973,-.255137,-.245213,-.172853,-.255342,-.24723,-.171167,-.25529,-.246161,-.171779,-.255373,-.245159,-.172548,-.255405,-.24722,-.171083,-.255426,-.246122,-.171599,-.255587,-.245073,-.172266,-.258735,-.238758,-.173944,-.258142,-.239311,-.172936,-.257697,-.239912,-.171831,-.258603,-.239696,-.174209,-.258014,-.240131,-.173179,-.257563,-.240609,-.172067,-.258357,-.240561,-.174598,-.257795,-.240894,-.173523,-.257362,-.241269,-.172381,-.257459,-.241145,-.169302,-.257591,-.241737,-.168099,-.257904,-.242281,-.166971,-.257434,-.241531,-.169353,-.25758,-.241983,-.168122,-.257902,-.242397,-.166977,-.257387,-.241884,-.169428,-.257558,-.242207,-.168156,-.257896,-.242502,-.166985,-.255267,-.244186,-.173835,-.25546,-.247207,-.171008,-.255621,-.243907,-.173361,-.255544,-.246069,-.17144,-.255961,-.243562,-.172895,-.255774,-.244956,-.172016,-.25797,-.241398,-.17515,-.257402,-.241772,-.174092,-.256942,-.242233,-.173009,-.257417,-.240537,-.170673,-.257888,-.242592,-.166996,-.257268,-.24111,-.170917,-.257528,-.242401,-.1682,-.257073,-.241669,-.171216,-.257319,-.24219,-.169525,-.256607,-.242765,-.171942,-.259462,-.080015,-.174674,-.258387,-.080015,-.165961,-.258749,-.080015,-.173814,-.258173,-.080015,-.172804,-.257757,-.080015,-.171682,-.257516,-.080015,-.170491,-.257461,-.080015,-.169278,-.257592,-.080015,-.168088,-.257905,-.080015,-.166968,-.258388,.060915,-.165961,-.259462,.048431,-.174674,-.255135,.057172,-.178183,-.255525,.066483,-.170737,-.257905,.059577,-.166968,-.257592,.058051,-.168088,-.257461,.056395,-.169278,-.257517,.054673,-.170491,-.257757,.052951,-.171682,-.258173,.051295,-.172804,-.258749,.049769,-.173814,-.259552,.049696,-.174914,-.259434,.051009,-.175242,-.259113,.052318,-.175645,-.258601,.053575,-.176108,-.257919,.05473,-.176613,-.257092,.055739,-.177141,-.256152,.056564,-.177671,-.254886,.058009,-.177169,-.254717,.059028,-.176099,-.254636,.06019,-.175012,-.254644,.061449,-.173951,-.254743,.062758,-.172958,-.254928,.064067,-.172069,-.255192,.065324,-.171319,-.258822,.050954,-.17403,-.25872,.052172,-.174323,-.258447,.053379,-.17468,-.258215,.052375,-.173008,-.258115,.053477,-.173276,-.257878,.054565,-.173597,-.257752,.053904,-.171885,-.257641,.054873,-.172141,-.257428,.055832,-.172438,-.257906,.059745,-.166973,-.257599,.058397,-.168107,-.257476,.056924,-.169318,-.257904,.059899,-.166979,-.25759,.058722,-.168131,-.257456,.057428,-.169373,-.257898,.060041,-.166987,-.257565,.059026,-.168162,-.257402,.057907,-.169441,-.255784,.057486,-.176673,-.25548,.058576,-.17563,-.255253,.059793,-.174581,-.256611,.056772,-.176167,-.256185,.057961,-.175155,-.255829,.059261,-.174144,-.257338,.055894,-.175669,-.256806,.057206,-.174691,-.256342,.058614,-.173716,-.255079,.062656,-.17265,-.255135,.064021,-.171854,-.255286,.065313,-.171208,-.255378,.062517,-.172371,-.255318,.063958,-.171664,-.255368,.065297,-.171112,-.255632,.062347,-.172127,-.255472,.063881,-.171501,-.255436,.065278,-.171031,-.257452,.055482,-.170706,-.257888,.060174,-.166996,-.257315,.056309,-.170961,-.257526,.059311,-.168197,-.257113,.057131,-.171247,-.257316,.058358,-.169519,-.257977,.054726,-.175121,-.257428,.056005,-.174065,-.256976,.057363,-.172979,-.255111,.06109,-.173567,-.25549,.065255,-.170967,-.255556,.060623,-.173172,-.255595,.063793,-.171367,-.255964,.060068,-.17278,-.255837,.062152,-.171921,-.256636,.058748,-.171905,-.237559,.066483,-.194961,-.240641,.057172,-.197726,-.237609,.065324,-.195027,-.237777,.064067,-.195194,-.238058,.062758,-.195455,-.23844,.061449,-.195801,-.238908,.06019,-.196218,-.239445,.059028,-.196691,-.24003,.058009,-.1972,-.241869,-.242756,-.198497,-.237559,-.248324,-.194961,-.241029,-.242863,-.197808,-.240221,-.24318,-.197145,-.239476,-.243695,-.196534,-.238823,-.244387,-.195998,-.238287,-.245231,-.195558,-.237889,-.246194,-.195231,-.237643,-.247238,-.195029,-.220238,.057192,-.220238,-.217306,.066483,-.217307,-.219666,.058025,-.219667,-.219117,.05904,-.219117,-.21861,.060198,-.218611,-.218166,.061455,-.218167,-.217801,.062762,-.217802,-.21753,.064069,-.217531,-.217363,.065325,-.217364,-.217306,-.248324,-.217307,-.221248,-.242756,-.221249,-.217382,-.247238,-.217383,-.217607,-.246194,-.217608,-.217972,-.245231,-.217973,-.218462,-.244387,-.218463,-.21906,-.243695,-.21906,-.219741,-.24318,-.219742,-.22048,-.242863,-.220481,-.363184,-.237188,-.286185,-.362563,-.237188,-.277776,-.359167,-.242756,-.282254,-.363755,-.237188,-.285237,-.364153,-.237188,-.284174,-.364363,-.237188,-.283037,-.364376,-.237188,-.28187,-.364192,-.237188,-.280717,-.363818,-.237188,-.279623,-.363268,-.237188,-.27863,-.362546,-.238274,-.277909,-.362388,-.239319,-.2782,-.362096,-.240282,-.278635,-.361681,-.241125,-.2792,-.361159,-.241818,-.279871,-.36055,-.242333,-.280623,-.359877,-.242649,-.281428,-.359991,-.242649,-.282967,-.360774,-.242333,-.283664,-.361487,-.241818,-.284319,-.362102,-.241125,-.284907,-.362595,-.240282,-.285404,-.362948,-.239319,-.285792,-.363147,-.238274,-.286056,-.36373,-.238273,-.285129,-.364155,-.23827,-.284102,-.364405,-.238265,-.283014,-.363559,-.239315,-.284901,-.364022,-.239303,-.283927,-.364318,-.239283,-.282909,-.363247,-.240273,-.284563,-.363757,-.240246,-.283658,-.364105,-.240203,-.282725,-.363259,-.238273,-.278741,-.363123,-.239315,-.278991,-.362864,-.240273,-.279371,-.36383,-.23827,-.279695,-.363723,-.239303,-.279887,-.363502,-.240246,-.280191,-.364237,-.238265,-.280733,-.364167,-.239283,-.28085,-.363983,-.240203,-.281064,-.36069,-.242563,-.282142,-.361461,-.242287,-.28284,-.362162,-.241832,-.283496,-.36135,-.242287,-.281338,-.362103,-.242071,-.282037,-.362781,-.241691,-.282696,-.361947,-.241832,-.280586,-.362677,-.241691,-.281287,-.363319,-.241401,-.281948,-.364504,-.238254,-.28186,-.364497,-.239236,-.281861,-.364357,-.240099,-.281871,-.362484,-.241185,-.27986,-.363169,-.241151,-.280547,-.363711,-.241023,-.281232,-.362799,-.241185,-.284135,-.363376,-.241151,-.283356,-.363811,-.241023,-.282598,-.364087,-.240807,-.281891,-.363184,-.085583,-.286185,-.360217,-.076272,-.283265,-.362564,-.082499,-.277776,-.363157,-.084425,-.286088,-.363011,-.083167,-.285892,-.362751,-.081859,-.285603,-.362386,-.08055,-.285234,-.361932,-.07929,-.284798,-.361405,-.078129,-.284312,-.360826,-.07711,-.283794,-.361021,-.076611,-.282541,-.361719,-.077128,-.281769,-.362284,-.077804,-.280978,-.362693,-.078612,-.2802,-.362931,-.079522,-.279464,-.362989,-.080498,-.278798,-.362865,-.081503,-.278228,-.363268,-.082829,-.27863,-.363818,-.083206,-.279623,-.364192,-.083615,-.280717,-.364376,-.084041,-.28187,-.364363,-.084466,-.283037,-.364154,-.084876,-.284174,-.363755,-.085253,-.285237,-.363743,-.084128,-.285163,-.363623,-.082915,-.285003,-.363402,-.081658,-.284762,-.364176,-.083795,-.284143,-.364098,-.08264,-.284039,-.363922,-.081452,-.283867,-.364439,-.083439,-.283068,-.364415,-.082353,-.283038,-.364291,-.081248,-.282951,-.361617,-.077404,-.283067,-.36231,-.077849,-.2823,-.362879,-.07843,-.281523,-.362185,-.078359,-.283585,-.36287,-.078715,-.282827,-.363433,-.079184,-.282068,-.362706,-.079441,-.284077,-.36338,-.079694,-.283332,-.363926,-.080038,-.282591,-.363532,-.08186,-.279014,-.364063,-.082266,-.279928,-.364437,-.082706,-.280935,-.363635,-.080876,-.279502,-.364158,-.081307,-.280322,-.364538,-.081776,-.281225,-.363572,-.079914,-.280076,-.364099,-.080365,-.28079,-.364491,-.080859,-.281577,-.363145,-.080492,-.284522,-.363769,-.080485,-.283787,-.364236,-.080527,-.283056,-.36332,-.078994,-.280699,-.363848,-.079468,-.281239,-.364255,-.080017,-.2818,-.364624,-.083185,-.281992,-.364734,-.082307,-.282118,-.364701,-.081441,-.282242,-.364528,-.080619,-.28236,-.348535,-.237188,-.305937,-.344226,-.242756,-.3024,-.348451,-.238274,-.305868,-.348206,-.239319,-.305666,-.347807,-.240282,-.305339,-.347271,-.241125,-.304899,-.346618,-.241818,-.304363,-.345873,-.242333,-.303752,-.345065,-.242649,-.303089,-.32434,-.242756,-.324341,-.328282,-.237188,-.328283,-.325108,-.242649,-.325109,-.325847,-.242333,-.325848,-.326528,-.241818,-.326529,-.327125,-.241125,-.327126,-.327616,-.240282,-.327617,-.32798,-.239319,-.327981,-.328205,-.238274,-.328206,-.328282,-.085583,-.328283,-.32535,-.076292,-.325352,-.328225,-.084425,-.328226,-.328058,-.083169,-.328059,-.327787,-.081862,-.327788,-.327422,-.080555,-.327423,-.326978,-.079299,-.326979,-.326471,-.078141,-.326472,-.325922,-.077126,-.325923,-.348535,-.085583,-.305937,-.345454,-.076292,-.303171,-.348486,-.084425,-.305871,-.348317,-.083169,-.305704,-.348037,-.081862,-.305442,-.347655,-.080556,-.305096,-.347187,-.079299,-.304679,-.34665,-.078141,-.304207,-.346064,-.077126,-.303697,0,.233713,-.276821,0,.228646,-.284708,0,.232724,-.277379,0,.231774,-.27813,0,.230898,-.279045,0,.23013,-.280089,0,.2295,-.281221,0,.229032,-.282399,0,.228744,-.283576,-.027906,.228646,-.283337,-.027133,.233713,-.275488,-.027795,.228744,-.282211,-.02768,.229032,-.28104,-.027564,.2295,-.279869,-.027453,.23013,-.278742,-.027351,.230898,-.277703,-.027261,.231774,-.276792,-.027188,.232724,-.276044,-.055543,.228646,-.279237,-.054005,.233713,-.271502,-.055323,.228744,-.278128,-.055093,.229032,-.276974,-.054863,.2295,-.275819,-.054643,.23013,-.274709,-.054439,.230898,-.273685,-.05426,.231774,-.272787,-.054114,.232724,-.27205,-.082646,.228646,-.272449,-.080357,.233713,-.264901,-.082318,.228744,-.271366,-.081976,.229032,-.27024,-.081634,.2295,-.269113,-.081306,.23013,-.26803,-.081003,.230898,-.267031,-.080737,.231774,-.266155,-.080519,.232724,-.265436,-.108953,.228646,-.263036,-.105935,.233713,-.255749,-.10852,.228744,-.261991,-.108069,.229032,-.260904,-.107619,.2295,-.259816,-.107186,.23013,-.25877,-.106786,.230898,-.257806,-.106436,.231774,-.25696,-.106148,.232724,-.256266,-.13421,.228646,-.25109,-.130492,.233713,-.244135,-.133677,.228744,-.250092,-.133122,.229032,-.249054,-.132567,.2295,-.248016,-.132033,.23013,-.247018,-.131541,.230898,-.246097,-.13111,.231774,-.24529,-.130756,.232724,-.244627,-.158175,.228646,-.236726,-.153793,.233713,-.230169,-.157546,.228744,-.235786,-.156893,.229032,-.234807,-.156239,.2295,-.233828,-.15561,.23013,-.232887,-.15503,.230898,-.232019,-.154521,.231774,-.231258,-.154104,.232724,-.230633,-.180617,.228646,-.220082,-.175613,.233713,-.213986,-.179899,.228743,-.219208,-.179152,.229032,-.218298,-.178406,.2295,-.217388,-.177687,.23013,-.216513,-.177025,.230898,-.215706,-.176445,.231774,-.214999,-.175968,.232724,-.214418,-.201319,.228646,-.201319,-.195742,.233713,-.195742,-.200519,.228743,-.200519,-.199687,.229032,-.199687,-.198854,.2295,-.198855,-.198054,.23013,-.198054,-.197316,.230898,-.197316,-.196668,.231774,-.196669,-.196137,.232724,-.196137,-.275488,.233713,-.027133,-.283337,.228646,-.027906,-.276044,.232724,-.027188,-.276792,.231774,-.027262,-.277703,.230898,-.027352,-.278742,.23013,-.027454,-.279869,.2295,-.027565,-.28104,.229032,-.02768,-.282211,.228743,-.027796,-.271502,.233712,-.054005,-.279238,.228646,-.055544,-.27205,.232724,-.054114,-.272787,.231774,-.054261,-.273685,.230898,-.05444,-.274709,.23013,-.054643,-.275819,.2295,-.054864,-.276974,.229032,-.055094,-.278128,.228743,-.055323,-.264901,.233712,-.080357,-.272449,.228646,-.082647,-.265436,.232724,-.080519,-.266155,.231774,-.080737,-.267031,.230898,-.081003,-.26803,.23013,-.081306,-.269113,.2295,-.081635,-.27024,.229032,-.081977,-.271366,.228743,-.082318,-.255749,.233713,-.105935,-.263036,.228646,-.108953,-.256266,.232724,-.106149,-.25696,.231774,-.106436,-.257805,.230898,-.106787,-.25877,.23013,-.107186,-.259816,.2295,-.107619,-.260903,.229032,-.10807,-.261991,.228743,-.10852,-.244134,.233712,-.130493,-.25109,.228646,-.134211,-.244627,.232724,-.130756,-.24529,.231774,-.13111,-.246097,.230898,-.131542,-.247018,.23013,-.132034,-.248016,.2295,-.132568,-.249054,.229032,-.133123,-.250092,.228743,-.133677,-.230168,.233713,-.153794,-.236726,.228646,-.158176,-.230633,.232724,-.154104,-.231258,.231774,-.154522,-.232019,.230898,-.15503,-.232887,.23013,-.15561,-.233828,.2295,-.156239,-.234807,.229032,-.156893,-.235785,.228743,-.157547,-.213985,.233713,-.175614,-.220082,.228646,-.180617,-.214418,.232724,-.175968,-.214998,.231774,-.176445,-.215706,.230898,-.177026,-.216513,.23013,-.177688,-.217388,.2295,-.178406,-.218298,.229032,-.179153,-.219208,.228743,-.179899,-0,.517685,.017843,-0,.515472,.035615,-0,.511793,.053247,-1e-6,.506663,.070669,-1e-6,.500103,.087812,-1e-6,.492137,.104609,-1e-6,.482797,.120992,-1e-6,.472121,.136898,-1e-6,.46015,.152264,-1e-6,.446932,.167029,-1e-6,.432518,.181134,-1e-6,.416967,.194525,-1e-6,.400338,.207148,-1e-6,.382698,.218954,-1e-6,.364116,.229896,-1e-6,.344666,.23993,-1e-6,.324425,.249017,-1e-6,.303471,.257122,-1e-6,.281889,.264211,-1e-6,.259763,.270258,-1e-6,.23718,.275239,-.001749,.517685,.017757,-.003491,.515472,.035444,-.005219,.511793,.052991,-.006927,.506663,.070329,-.008607,.500103,.087389,-.010254,.492137,.104105,-.01186,.482797,.12041,-.013419,.472121,.136239,-.014925,.46015,.151531,-.016372,.446932,.166224,-.017755,.432518,.180262,-.019067,.416967,.193588,-.020304,.400338,.206151,-.021461,.382698,.2179,-.022534,.364116,.228788,-.023518,.344666,.238774,-.024408,.324425,.247818,-.025203,.303471,.255883,-.025898,.281889,.262939,-.02649,.259762,.268957,-.026978,.23718,.273913,-.003481,.517685,.0175,-.006948,.515472,.034931,-.010388,.511793,.052224,-.013787,.506663,.069311,-.017132,.500103,.086125,-.020408,.492137,.102599,-.023605,.482797,.118667,-.026708,.472121,.134268,-.029706,.46015,.149338,-.032586,.446932,.163819,-.035338,.432518,.177654,-.03795,.416967,.190787,-.040413,.400338,.203168,-.042716,.382698,.214747,-.044851,.364116,.225478,-.046808,.344666,.235319,-.048581,.324425,.244232,-.050162,.303471,.252181,-.051545,.281889,.259134,-.052725,.259762,.265065,-.053697,.23718,.26995,-.00518,.517685,.017075,-.010339,.515472,.034082,-.015457,.511793,.050955,-.020515,.506663,.067626,-.025491,.500103,.084031,-.030367,.492137,.100104,-.035122,.482797,.115782,-.03974,.472121,.131003,-.0442,.46015,.145707,-.048486,.446932,.159836,-.052581,.432518,.173335,-.056468,.416967,.186149,-.060132,.400338,.198229,-.063559,.382698,.209526,-.066735,.364116,.219996,-.069648,.344666,.229598,-.072286,.324424,.238294,-.074639,.303471,.24605,-.076697,.281889,.252834,-.078452,.259762,.258621,-.079898,.23718,.263387,-.006828,.517685,.016485,-.01363,.515472,.032904,-.020377,.511793,.049194,-.027044,.506663,.06529,-.033605,.500103,.081128,-.040032,.492137,.096646,-.046302,.482797,.111782,-.052389,.472121,.126477,-.058269,.46015,.140673,-.06392,.446932,.154314,-.069318,.432518,.167346,-.074442,.416967,.179718,-.079273,.400338,.19138,-.08379,.382698,.202287,-.087978,.364116,.212396,-.091817,.344666,.221666,-.095295,.324424,.230062,-.098397,.303471,.237549,-.10111,.281889,.244099,-.103424,.259762,.249686,-.10533,.23718,.254287,-.008411,.517685,.015736,-.016789,.515472,.03141,-.025101,.511793,.04696,-.033314,.506663,.062325,-.041395,.500102,.077443,-.049313,.492137,.092257,-.057036,.482797,.106705,-.064534,.472121,.120733,-.071777,.46015,.134285,-.078737,.446932,.147306,-.085387,.432518,.159746,-.091699,.416966,.171556,-.09765,.400338,.182689,-.103215,.382698,.1931,-.108372,.364116,.20275,-.113102,.344666,.211599,-.117386,.324424,.219613,-.121207,.303471,.226761,-.124549,.281889,.233013,-.127399,.259762,.238346,-.129747,.23718,.242739,-.009913,.517685,.014836,-.019787,.515472,.029613,-.029583,.511793,.044274,-.039262,.506663,.058759,-.048786,.500102,.073013,-.058118,.492137,.086979,-.06722,.482797,.100601,-.076057,.472121,.113827,-.084594,.46015,.126603,-.092797,.446932,.138879,-.100633,.432518,.150608,-.108073,.416966,.161742,-.115086,.400338,.172238,-.121645,.382698,.182053,-.127724,.364116,.191151,-.133298,.344666,.199494,-.138347,.324424,.20705,-.142849,.303471,.213789,-.146788,.281889,.219683,-.150148,.259762,.224711,-.152915,.23718,.228852,-.01132,.517685,.013793,-.022595,.515472,.027531,-.03378,.511793,.041161,-.044833,.506663,.054628,-.055708,.500102,.06788,-.066363,.492137,.080863,-.076757,.482797,.093528,-.086848,.472121,.105824,-.096596,.46015,.117701,-.105962,.446932,.129115,-.114911,.432518,.140019,-.123406,.416966,.15037,-.131414,.400338,.160128,-.138903,.382698,.169253,-.145845,.364116,.177711,-.15221,.344666,.185468,-.157975,.324424,.192493,-.163117,.303471,.198757,-.167614,.281889,.204238,-.17145,.259762,.208912,-.17461,.23718,.212762,-.16146,-.286362,.19674,-.141399,-.286362,.211619,-.119976,-.286362,.224459,-.097397,-.286362,.235138,-.073881,-.286362,.243553,-.049653,-.286362,.249621,-.024946,-.286362,.253286,-0,-.286362,.254512,-.16146,-.448371,.19674,-.141399,-.448371,.211619,-.119976,-.448371,.224459,-.097397,-.448371,.235138,-.073881,-.448371,.243553,-.049652,-.448371,.249621,-.024946,-.448371,.253286,0,-.44837,.254512,-.117605,-.242756,.283924,-.144869,-.080015,.27103,-.117606,.060915,.283924,-.144869,.060915,.27103,-.117605,-.080015,.283924,-.144868,-.242756,.27103,-.030122,-.242756,.305838,-.08921,-.080015,.294084,-.030123,.060915,.305838,-.059955,.060915,.301412,-.059955,-.080015,.301412,-.059955,-.242756,.301412,-.08921,.060915,.294084,-.030122,-.080015,.305838,-.08921,-.242756,.294084,-0,-.080015,.307318,-0,-.242756,.307318,-0,.060915,.307318,-.025184,.515472,.025184,-.037652,.511793,.037652,-.049971,.506663,.049971,-.062093,.500102,.062092,-.085555,.482797,.085554,-.096802,.472121,.096801,-.107667,.46015,.107667,-.118108,.446932,.118107,-.128082,.432518,.128081,-.137551,.416966,.13755,-.146477,.400338,.146476,-.154824,.382698,.154824,-.162561,.364116,.16256,-.169656,.344666,.169656,-.176082,.324424,.176081,-.181813,.303471,.181812,-.186826,.281889,.186825,-.191102,.259762,.191101,-.194624,.23718,.194623,-.017843,.517685,-0,-.035616,.515472,-0,-.053248,.511793,-0,-.07067,.506663,-0,-.087813,.500102,-0,-.104609,.492137,-0,-.120993,.482797,-0,-.136899,.472121,-0,-.152264,.46015,-0,-.167029,.446932,-0,-.181135,.432518,-0,-.194526,.416966,-0,-.207149,.400338,-0,-.218954,.382698,-0,-.229896,.364116,-0,-.23993,.344666,-0,-.249017,.324424,-0,-.257122,.303471,-0,-.264211,.281889,-0,-.270258,.259762,-0,-.275239,.23718,-0,-.017757,.517685,.001749,-.035444,.515472,.003491,-.052992,.511793,.005219,-.070329,.506663,.006926,-.08739,.500102,.008607,-.104105,.492137,.010253,-.12041,.482797,.011859,-.136239,.472121,.013418,-.151531,.46015,.014924,-.166225,.446932,.016371,-.180263,.432518,.017754,-.193589,.416966,.019066,-.206151,.400338,.020304,-.2179,.382698,.021461,-.228789,.364116,.022533,-.238775,.344666,.023517,-.247818,.324424,.024407,-.255884,.303471,.025202,-.262939,.281889,.025897,-.268957,.259762,.026489,-.273914,.23718,.026978,-.017501,.517685,.003481,-.034932,.515472,.006948,-.052225,.511793,.010388,-.069312,.506663,.013787,-.086125,.500102,.017131,-.102599,.492137,.020408,-.118668,.482797,.023604,-.134268,.472121,.026707,-.149339,.46015,.029705,-.16382,.446932,.032585,-.177654,.432518,.035337,-.190788,.416966,.03795,-.203169,.400338,.040412,-.214747,.382698,.042715,-.225479,.364116,.04485,-.23532,.344666,.046807,-.244233,.324424,.04858,-.252181,.303471,.050162,-.259135,.281889,.051545,-.265066,.259762,.052724,-.26995,.23718,.053696,-.017075,.517685,.005179,-.034082,.515472,.010338,-.050955,.511793,.015457,-.067627,.506663,.020514,-.084031,.500102,.02549,-.100105,.492137,.030366,-.115783,.482797,.035122,-.131004,.472121,.039739,-.145708,.46015,.0442,-.159837,.446932,.048486,-.173335,.432518,.05258,-.186149,.416966,.056467,-.198229,.400338,.060132,-.209526,.382698,.063559,-.219997,.364116,.066735,-.229599,.344666,.069647,-.238295,.324424,.072285,-.24605,.303471,.074638,-.252835,.281889,.076696,-.258621,.259762,.078451,-.263387,.23718,.079897,-.016485,.517685,.006828,-.032905,.515472,.013629,-.049195,.511793,.020377,-.06529,.506663,.027044,-.081128,.500102,.033604,-.096646,.492137,.040032,-.111783,.482797,.046301,-.126478,.472121,.052388,-.140674,.46015,.058269,-.154315,.446932,.063919,-.167347,.432518,.069317,-.179718,.416966,.074441,-.191381,.400338,.079272,-.202288,.382698,.08379,-.212396,.364116,.087977,-.221666,.344666,.091817,-.230062,.324424,.095294,-.23755,.303471,.098396,-.2441,.281889,.101109,-.249686,.259762,.103423,-.254288,.23718,.105329,-.015737,.517685,.008411,-.03141,.515472,.016789,-.046961,.511793,.0251,-.062325,.506663,.033313,-.077444,.500102,.041394,-.092257,.492137,.049312,-.106706,.482797,.057035,-.120734,.472121,.064533,-.134285,.46015,.071776,-.147307,.446932,.078737,-.159747,.432518,.085386,-.171556,.416966,.091698,-.182689,.400338,.097649,-.193101,.382698,.103214,-.20275,.364116,.108372,-.211599,.344666,.113102,-.219614,.324424,.117385,-.226761,.303471,.121206,-.233014,.281889,.124548,-.238347,.259762,.127398,-.242739,.23718,.129746,-.014836,.517685,.009913,-.029614,.515472,.019787,-.044274,.511793,.029583,-.05876,.506663,.039262,-.073014,.500102,.048786,-.086979,.492137,.058117,-.100602,.482797,.067219,-.113827,.472121,.076056,-.126603,.46015,.084593,-.13888,.446932,.092796,-.150608,.432518,.100633,-.161742,.416966,.108072,-.172238,.400338,.115085,-.182054,.382698,.121644,-.191152,.364116,.127723,-.199495,.344666,.133297,-.20705,.324424,.138346,-.213789,.303471,.142849,-.219684,.281889,.146787,-.224712,.259762,.150147,-.228853,.23718,.152914,-.013793,.517685,.011319,-.027532,.515472,.022594,-.041161,.511793,.03378,-.054629,.506663,.044832,-.06788,.500102,.055707,-.080864,.492137,.066363,-.093529,.482797,.076756,-.105824,.472121,.086847,-.117702,.46015,.096595,-.129115,.446932,.105962,-.140019,.432518,.11491,-.150371,.416966,.123405,-.160128,.400338,.131413,-.169254,.382698,.138903,-.177712,.364116,.145844,-.185468,.344666,.152209,-.192493,.324424,.157974,-.198758,.303471,.163116,-.204238,.281889,.167613,-.208913,.259762,.17145,-.212763,.23718,.174609,-.012617,.517685,.012617,-.07397,.492137,.073969,-.19674,-.286362,.16146,-.211619,-.286362,.141399,-.224459,-.286362,.119976,-.235138,-.286362,.097397,-.243552,-.286362,.07388,-.249621,-.286362,.049652,-.253286,-.286362,.024946,-.254512,-.286362,-0,-.179967,-.286362,.179967,-.19674,-.448371,.16146,-.211619,-.448371,.141399,-.224459,-.448371,.119976,-.235138,-.448371,.097397,-.243552,-.448371,.073881,-.249621,-.448371,.049652,-.253286,-.448371,.024946,-.254511,-.448371,-0,-.179967,-.448371,.179967,-.283924,-.242756,.117605,-.27103,-.080015,.144868,-.283925,.060915,.117605,-.27103,.060915,.144868,-.283924,-.080015,.117605,-.27103,-.242756,.144868,-.305838,-.242756,.030122,-.294085,-.080015,.089209,-.305838,.060914,.030122,-.301413,.060915,.059954,-.301413,-.080015,.059954,-.301412,-.242756,.059954,-.294085,.060915,.089209,-.305838,-.080015,.030122,-.294085,-.242756,.089209,-.307318,-.080015,-0,-.307317,-.242756,-0,-.307318,.060914,-0,-0,.518424,-0,0,-.44837,0,-.191424,.228647,.23325,-.194961,.223079,.237559,-.192113,.22854,.23409,-.192776,.228223,.234898,-.193387,.227709,.235642,-.193923,.227016,.236295,-.194363,.226173,.236831,-.19469,.22521,.23723,-.194892,.224165,.237476,-.16764,.228647,.25089,-.170737,.223079,.255525,-.168243,.22854,.251793,-.168824,.228223,.252662,-.169359,.227709,.253463,-.169828,.227016,.254165,-.170213,.226173,.254742,-.1705,.22521,.25517,-.170677,.224166,.255435,-.142241,.228647,.266113,-.144869,.223079,.27103,-.142753,.22854,.267071,-.143245,.228223,.267993,-.1437,.227709,.268842,-.144098,.227016,.269587,-.144425,.226173,.270199,-.144668,.22521,.270654,-.144818,.224166,.270934,-.115472,.228647,.278774,-.117606,.223079,.283924,-.115888,.22854,.279777,-.116288,.228223,.280743,-.116657,.227709,.281633,-.11698,.227017,.282413,-.117245,.226173,.283054,-.117443,.22521,.28353,-.117564,.224166,.283824,-.087592,.228647,.28875,-.08921,.223079,.294084,-.087907,.22854,.289789,-.08821,.228223,.290789,-.08849,.227709,.291711,-.088735,.227017,.292519,-.088936,.226173,.293183,-.089086,.22521,.293676,-.089178,.224166,.293981,-.058867,.228647,.295945,-.059955,.223079,.301412,-.059079,.22854,.29701,-.059283,.228223,.298035,-.059471,.227709,.29898,-.059636,.227017,.299808,-.059771,.226173,.300488,-.059872,.22521,.300994,-.059934,.224166,.301306,-.029576,.228647,.30029,-.030123,.223079,.305838,-.029683,.22854,.301371,-.029785,.228223,.302411,-.02988,.227709,.303369,-.029962,.227017,.30421,-.03003,.226173,.3049,-.030081,.22521,.305413,-.030112,.224166,.30573,-1e-6,.228647,.301743,-1e-6,.223079,.307318,-1e-6,.22854,.30283,-1e-6,.228224,.303876,-1e-6,.227709,.30484,-1e-6,.227017,.305685,-1e-6,.226173,.306378,-1e-6,.22521,.306893,-1ee-6,.233713,.276821,-1e-6,.228646,.284708,-1e-6,.232724,.277379,-1e-6,.231774,.27813,-1e-6,.230898,.279045,-1e-6,.23013,.280089,-1e-6,.2295,.281221,-1e-6,.229032,.282399,-1e-6,.228744,.283576,-.027906,.228646,.283337,-.027133,.233713,.275488,-.027796,.228744,.282211,-.02768,.229032,.28104,-.027565,.2295,.279868,-.027454,.23013,.278742,-.027352,.230898,.277703,-.027262,.231774,.276792,-.027188,.232724,.276044,-.055544,.228646,.279237,-.054006,.233713,.271502,-.055323,.228744,.278128,-.055094,.229032,.276974,-.054864,.2295,.275819,-.054643,.23013,.274708,-.05444,.230898,.273685,-.054261,.231774,.272787,-.054115,.232724,.27205,-.082647,.228646,.272448,-.080357,.233713,.264901,-.082318,.228744,.271366,-.081977,.229032,.27024,-.081635,.2295,.269113,-.081306,.23013,.26803,-.081003,.230898,.267031,-.080738,.231774,.266155,-.08052,.232724,.265436,-.108953,.228646,.263036,-.105935,.233713,.255749,-.10852,.228744,.261991,-.10807,.229032,.260903,-.10762,.2295,.259816,-.107186,.23013,.25877,-.106787,.230898,.257805,-.106437,.231774,.25696,-.106149,.232724,.256265,-.134211,.228646,.25109,-.130493,.233713,.244134,-.133678,.228744,.250092,-.133123,.229032,.249054,-.132568,.2295,.248016,-.132034,.23013,.247017,-.131542,.230898,.246097,-.131111,.231774,.24529,-.130756,.232724,.244627,-.158176,.228646,.236726,-.153794,.233713,.230168,-.157547,.228744,.235785,-.156893,.229032,.234807,-.156239,.2295,.233828,-.15561,.23013,.232886,-.15503,.230898,.232019,-.154522,.231774,.231258,-.154104,.232724,.230633,-.180617,.228646,.220082,-.175614,.233713,.213985,-.179899,.228744,.219207,-.179153,.229032,.218298,-.178406,.2295,.217388,-.177688,.23013,.216513,-.177026,.230898,.215706,-.176445,.231774,.214998,-.175968,.232724,.214417,-.201319,.228646,.201319,-.195742,.233713,.195742,-.200519,.228743,.200519,-.199687,.229032,.199687,-.198855,.2295,.198854,-.198054,.23013,.198054,-.197316,.230898,.197316,-.196669,.231774,.196668,-.196138,.232724,.196137,-.284708,.228646,-0,-.276821,.233713,-0,-.283576,.228743,-0,-.282399,.229032,-0,-.281221,.2295,-0,-.280089,.23013,-0,-.279045,.230898,-0,-.27813,.231774,-0,-.277379,.232724,-0,-.275488,.233713,.027133,-.283337,.228646,.027906,-.276045,.232724,.027188,-.276792,.231774,.027261,-.277703,.230898,.027351,-.278742,.23013,.027453,-.279869,.2295,.027564,-.28104,.229032,.02768,-.282211,.228743,.027795,-.271502,.233712,.054005,-.279238,.228646,.055543,-.27205,.232724,.054114,-.272787,.231774,.05426,-.273685,.230898,.054439,-.274709,.23013,.054642,-.275819,.2295,.054863,-.276974,.229032,.055093,-.278128,.228743,.055323,-.264901,.233712,.080356,-.272449,.228646,.082646,-.265436,.232724,.080519,-.266155,.231774,.080737,-.267031,.230898,.081002,-.26803,.23013,.081305,-.269114,.2295,.081634,-.27024,.229032,.081976,-.271366,.228743,.082318,-.25575,.233713,.105934,-.263036,.228646,.108953,-.256266,.232724,.106148,-.25696,.231774,.106436,-.257806,.230898,.106786,-.25877,.23013,.107185,-.259816,.2295,.107619,-.260904,.229032,.108069,-.261991,.228743,.10852,-.244135,.233712,.130492,-.25109,.228646,.13421,-.244628,.232724,.130756,-.24529,.231774,.13111,-.246097,.230898,.131541,-.247018,.23013,.132033,-.248017,.2295,.132567,-.249055,.229032,.133122,-.250093,.228743,.133677,-.230169,.233713,.153793,-.236726,.228646,.158175,-.230633,.232724,.154104,-.231258,.231774,.154521,-.232019,.230898,.15503,-.232887,.23013,.15561,-.233828,.2295,.156239,-.234807,.229032,.156893,-.235786,.228743,.157547,-.213986,.233713,.175613,-.220083,.228646,.180616,-.214418,.232724,.175968,-.214999,.231774,.176444,-.215706,.230898,.177025,-.216513,.23013,.177687,-.217388,.2295,.178405,-.218298,.229032,.179152,-.219208,.228743,.179899],
colors:[],bones:[],influencesPerVertex:2,metadata:{uvs:0,colors:0,generator:"io_three",normals:5944,vertices:6046,materials:2,bones:0,type:"Geometry",version:3,faces:6256},normals:[.554888,.049562,-.830439,.633595,.049593,-.772057,.633808,.034577,-.772698,.535295,.037843,-.843776,.382183,.049562,-.922727,.470809,.049562,-.880825,.471389,0,-.881893,.382672,0,-.923856,0,.049287,-.998779,.097873,.04944,-.993957,.097995,0,-.995178,0,0,-1,.19483,.049562,-.979553,.195074,0,-.980773,.289926,.049562,-.955748,.290262,0,-.956938,.471511,.029817,-.881314,0,.918973,-.394269,0,.946959,-.321299,.031465,.946959,-.319742,.038636,.918973,-.392376,0,.999115,-.041475,.004059,.999115,-.041292,.004944,.998718,-.050264,0,.998718,-.050478,0,.628376,-.777886,0,.675802,-.737053,.072237,.675802,-.733512,.076235,.628376,-.774132,.008209,.99646,-.083407,.016175,.986236,-.164464,0,.986236,-.165258,0,.99646,-.083804,0,.287729,-.957701,0,.336253,-.94174,.092288,.336253,-.937223,.093844,.287729,-.953093,0,.766869,-.641774,0,.809564,-.587024,.057527,.809564,-.584185,.062899,.766869,-.638691,0,.433821,-.900967,0,.482742,-.875729,.085818,.482742,-.871517,.08829,.433821,-.896634,0,.886288,-.463118,.045381,.886288,-.460891,0,.580218,-.814447,.079806,.580218,-.810511,0,.969573,-.244728,.023988,.969573,-.243538,0,.239387,-.970916,.095157,.239387,-.966247,0,.722098,-.691763,.067782,.722098,-.688406,0,.384991,-.92291,.090457,.384991,-.918455,0,.849574,-.527421,.051698,.849574,-.524888,0,.531602,-.84698,.08301,.531602,-.842891,0,.318003,-.948057,.092898,.318003,-.94351,.076907,.918973,-.3867,.090335,.886288,-.454207,.151738,.628376,-.762932,.158879,.580218,-.798791,.032228,.986236,-.162084,.047731,.969573,-.240028,.186834,.287729,-.939299,.189398,.239387,-.952239,.125187,.766869,-.629444,.134953,.722098,-.678457,.175756,.433821,-.883663,.180029,.384991,-.905179,.102878,.849574,-.517289,.165227,.531602,-.830714,.184942,.318003,-.929838,.062655,.946959,-.315134,.143773,.675802,-.722892,.183721,.336253,-.923643,.114505,.809564,-.575732,.170843,.482742,-.858913,.008087,.999115,-.040712,.009827,.998718,-.049532,.016327,.99646,-.082186,.134434,.886288,-.443159,.153081,.849574,-.504715,.236396,.580218,-.779382,.245857,.531602,-.810511,.281838,.239387,-.929106,.275185,.318003,-.907254,.071017,.969573,-.234169,.093265,.946959,-.307474,.200781,.722098,-.661977,.213935,.675802,-.705313,.267891,.384991,-.883175,.273354,.336253,-.901212,.170385,.809564,-.561724,.254189,.482742,-.838038,.114444,.918973,-.3773,.012024,.999115,-.039735,.014649,.998718,-.048341,.225806,.628376,-.744377,.277993,.287729,-.916471,.024323,.99646,-.080203,.047975,.986236,-.158147,.186285,.766869,-.614154,.261513,.433821,-.862178,.201819,.849574,-.487289,.224616,.809564,-.542314,.324107,.531602,-.782495,.335124,.482742,-.809076,.122959,.946959,-.296854,.150884,.918973,-.364269,.01587,.999115,-.038362,.019318,.998718,-.046663,.282052,.675802,-.68096,.297678,.628376,-.71865,.360393,.336253,-.870052,.366497,.287729,-.884793,.032075,.99646,-.077425,.063234,.986236,-.152684,.245582,.766869,-.592914,.344768,.433821,-.832392,.177221,.886288,-.427869,.311655,.580218,-.752434,.093631,.969573,-.226081,.371532,.239387,-.897,.264718,.722098,-.639088,.35316,.384991,-.852657,.362804,.318003,-.875912,.276711,.809564,-.517685,.30253,.766869,-.565996,.412824,.482742,-.772332,.424696,.433821,-.79458,.185858,.918973,-.347728,.218299,.886288,-.408429,.36668,.628376,-.686026,.383923,.580218,-.718253,.077914,.986236,-.145756,.11536,.969573,-.215827,.45146,.287729,-.8446,.457686,.239387,-.856258,.32609,.722098,-.610065,.435041,.384991,-.813929,.248634,.849574,-.465163,.399243,.531602,-.746971,.151433,.946959,-.283364,.446913,.318003,-.836116,.347453,.675802,-.650014,.443922,.336253,-.830561,.019562,.999115,-.036592,.023804,.998718,-.044557,.039491,.99646,-.073916,.356548,.766869,-.533616,.38432,.722098,-.575182,.500534,.433821,-.749138,.512742,.384991,-.767357,.257271,.886288,-.385052,.293008,.849574,-.438551,.452467,.580218,-.677175,.470534,.531602,-.704245,.13596,.969573,-.203467,.178503,.946959,-.267129,.539415,.239387,-.807276,.526719,.318003,-.788293,.409467,.675802,-.612842,.523209,.336253,-.783044,.326121,.809564,-.488083,.486526,.482742,-.728141,.219031,.918973,-.32783,.023041,.999115,-.034516,.028047,.998718,-.041993,.432173,.628376,-.646779,.046541,.99646,-.069674,.0918,.986236,-.137425,.53206,.287729,-.796289,.706229,.049593,-.706229,.706656,.034913,-.706656,.59743,.336253,-.727989,.607562,.287729,-.740318,.053163,.99646,-.064791,.104831,.986236,-.12775,.372387,.809564,-.453749,.407147,.766869,-.496109,.555559,.482742,-.676962,.571551,.433821,-.696463,.25013,.918973,-.304788,.293802,.886288,-.357982,.493484,.628376,-.601306,.516678,.580218,-.629566,.155248,.969573,-.189154,.615925,.239387,-.750511,.438826,.722098,-.534715,.585467,.384991,-.713401,.334605,.849574,-.407697,.537309,.531602,-.654714,.601428,.318003,-.732871,.203833,.946959,-.24836,.467574,.675802,-.56975,.026337,.999115,-.032075,.032044,.998718,-.039033,0,.999969,0,.116855,.986236,-.116855,.17304,.969573,-.17304,.677175,.287729,-.677175,.686544,.239387,-.686544,.45381,.766869,-.45381,.489151,.722098,-.489151,.637074,.433821,-.637074,.652577,.384991,-.652577,.327464,.886288,-.327464,.372936,.849574,-.372936,.575884,.580218,-.575884,.598895,.531602,-.598895,.22718,.946959,-.22718,.67037,.318003,-.67037,.521165,.675802,-.521165,.059267,.99646,-.059236,.665914,.336253,-.665914,.415082,.809564,-.415082,.619221,.482742,-.619221,.278787,.918973,-.278787,.029359,.999115,-.029328,.035707,.998718,-.035707,.550035,.628376,-.550035,.633595,-.049593,-.772057,.706229,-.049715,-.706229,.706229,-.049562,-.706229,.633595,-.049562,-.772057,.019318,-.998718,-.046632,.023804,-.998718,-.044527,.327952,-.718314,-.613544,.266213,-.718314,-.64272,.004944,-.998718,-.050233,.009827,-.998718,-.049532,.135716,-.718314,-.682333,.068178,-.718314,-.692343,.014649,-.998718,-.048341,.201941,-.718314,-.665731,0,-.998718,-.050478,0,-.718314,-.6957,.028047,-.998718,-.041993,.032044,-.998718,-.039033,.441328,-.718314,-.537767,.386486,-.718314,-.578448,.097873,-.049409,-.993957,0,-.049287,-.998779,.473647,0,-.880703,.472365,-.028657,-.880917,.52739,-.05237,-.847987,.554888,-.049562,-.830439,.470809,-.049562,-.880825,.382214,-.049562,-.922727,.289926,-.049562,-.955748,.19483,-.049562,-.979553,.274697,-.696219,-.663167,.20835,-.696219,-.686911,.140019,-.696219,-.704001,.070345,-.696219,-.714347,0,-.696219,-.717795,.491928,-.718314,-.491928,.507553,-.696219,-.507553,.455367,-.696219,-.554857,.398785,-.696219,-.59682,.338359,-.696219,-.633045,.494827,.454634,-.740562,.56502,.454634,-.688498,.340831,.454634,-.822871,.419843,.454634,-.785485,.087283,.454573,-.88641,.173742,.454634,-.873531,.258522,.454634,-.85229,.035707,-.998718,-.035707,.62978,.454604,-.62978,-.665731,-.039705,-.745109,-.673452,0,-.739219,-.666402,.024964,-.74514,-.674276,-.045137,-.737053,.439863,.719596,-.537248,.49028,.720756,-.489975,.491073,.719657,-.490768,.441877,.718223,-.537431,.033631,-.99884,-.033601,.030152,-.99884,-.036744,.032075,-.998718,-.039094,.035768,-.998718,-.035768,.399274,.706992,-.583667,.380779,.717704,-.582965,0,-1,0,.634205,.034516,-.772362,.706656,.034852,-.706656,.706229,-.049593,-.706229,.633595,-.04944,-.772057,.004669,-.997131,-.075289,-.004883,-.997742,-.066652,.561327,.028352,-.827082,.558855,-.045259,-.827998,-.647786,.032044,-.761101,.890713,.454512,0,.88641,.454573,-.087283,.94351,.318003,-.092898,.948057,.318003,0,.922727,.049593,-.382214,.923856,0,-.382672,.881893,0,-.471389,.880825,.049593,-.470809,.998779,.049287,0,1,0,0,.995178,0,-.097995,.993957,.049409,-.097873,.980773,0,-.195074,.979553,.049562,-.19483,.955748,.049593,-.289926,.956938,0,-.290262,.843776,.037843,-.535295,.830439,.049593,-.554857,.881314,.029817,-.471541,.394269,.918973,0,.392376,.918973,-.038636,.319742,.946959,-.031465,.321299,.946959,0,.041475,.999115,0,.050478,.998718,0,.050264,.998718,-.004944,.041292,.999115,-.004059,.777886,.628376,0,.774132,.628376,-.076235,.733512,.675802,-.072237,.737053,.675802,0,.165258,.986236,0,.164464,.986236,-.016175,.083407,.99646,-.008209,.083804,.99646,0,.957701,.287729,0,.953093,.287729,-.093844,.937223,.336253,-.092288,.94174,.336253,0,.641774,.766869,0,.638691,.766869,-.062899,.584185,.809564,-.057527,.587024,.809564,0,.900967,.433851,0,.896634,.433851,-.08829,.871517,.482742,-.085818,.875729,.482742,0,.463118,.886288,0,.460891,.886288,-.045381,.814447,.580218,0,.810511,.580218,-.079806,.244728,.969573,0,.243538,.969573,-.023957,.970916,.239387,0,.966216,.239387,-.095157,.691763,.722098,0,.688406,.722098,-.067782,.92291,.384991,0,.918455,.384991,-.090457,.527421,.849574,0,.524888,.849574,-.051668,.84698,.531602,0,.842891,.531602,-.08301,.454207,.886288,-.090335,.3867,.918973,-.076907,.798791,.580218,-.158879,.762932,.628376,-.151738,.240028,.969573,-.047731,.162084,.986236,-.032228,.952239,.239387,-.189398,.939299,.287729,-.186834,.678457,.722098,-.134953,.629444,.766869,-.125187,.905179,.384991,-.180029,.883663,.433851,-.175756,.517289,.849574,-.102878,.830714,.531602,-.165227,.929838,.318003,-.184942,.315134,.946959,-.062685,.722892,.675802,-.143773,.923643,.336253,-.183721,.575732,.809564,-.114505,.858913,.482742,-.170843,.049532,.998718,-.009827,.040712,.999115,-.008087,.082186,.99646,-.016358,.504715,.849574,-.153081,.443159,.886288,-.134434,.810511,.531602,-.245857,.779382,.580218,-.236396,.907254,.318003,-.275185,.929106,.239387,-.281838,.307474,.946959,-.093265,.234169,.969573,-.071017,.705313,.675802,-.213935,.661977,.722098,-.200781,.901212,.336253,-.273354,.883175,.384991,-.267891,.561724,.809564,-.170385,.838038,.482742,-.254189,.3773,.918973,-.114444,.048341,.998718,-.014649,.039705,.999115,-.012024,.744377,.628376,-.225806,.916471,.287729,-.277993,.158147,.986236,-.047975,.080203,.99646,-.024323,.614154,.766869,-.186285,.862178,.433821,-.261513,.542314,.809564,-.224616,.487289,.849574,-.201819,.809076,.482742,-.335124,.782495,.531602,-.324107,.364269,.918973,-.150884,.296823,.946959,-.122929,.046663,.998718,-.019318,.038331,.999115,-.01587,.71865,.628376,-.297678,.68096,.675802,-.282052,.884793,.287729,-.366497,.870052,.336253,-.360393,.152684,.986236,-.063234,.077425,.99646,-.032075,.592914,.766869,-.245582,.832392,.433851,-.344768,.427869,.886288,-.177221,.752434,.580218,-.311655,.226081,.969573,-.093631,.897,.239387,-.371532,.639088,.722098,-.264718,.852657,.384991,-.35316,.875912,.318003,-.362804,.565996,.766869,-.30253,.517685,.809564,-.276711,.79458,.433851,-.424696,.772332,.482742,-.412824,.408429,.886288,-.218299,.347728,.918973,-.185858,.718253,.580218,-.383923,.686026,.628376,-.36668,.215827,.969573,-.11536,.145756,.986236,-.077914,.856258,.239387,-.457686,.8446,.287729,-.45146,.610065,.722098,-.32609,.813929,.384991,-.435041,.465163,.849574,-.248634,.746971,.531602,-.399243,.283364,.946959,-.151463,.836116,.318003,-.446913,.650014,.675802,-.347453,.830561,.336253,-.443922,.044527,.998718,-.023804,.036592,.999115,-.019562,.073916,.99646,-.039491,.575152,.722098,-.38432,.533616,.766869,-.356548,.767357,.384991,-.512742,.749138,.433821,-.500534,.438551,.849574,-.293008,.385052,.886288,-.257271,.704245,.531602,-.470534,.677175,.580218,-.452467,.267159,.946959,-.178503,.203467,.969573,-.13596,.788293,.318003,-.526719,.807276,.239387,-.539415,.612842,.675802,-.409467,.783044,.336253,-.523209,.488083,.809564,-.326121,.728141,.482742,-.486526,.32783,.918973,-.219031,.041993,.998718,-.028047,.034516,.999115,-.023041,.646779,.628376,-.432173,.137425,.986236,-.0918,.069674,.99646,-.046541,.796289,.287729,-.53206,.772698,.034547,-.633808,.772057,.049593,-.633595,.740318,.287729,-.607532,.727989,.336253,-.59743,.12775,.986236,-.104831,.064791,.99646,-.053163,.496109,.766869,-.407117,.453749,.809564,-.372387,.696463,.433821,-.571551,.676962,.482742,-.555559,.357982,.886288,-.293802,.304788,.918973,-.25013,.629566,.580218,-.516678,.601306,.628376,-.493484,.189154,.969573,-.155248,.750511,.239387,-.615925,.534715,.722098,-.438826,.713401,.384991,-.585467,.407697,.849574,-.334605,.654714,.531602,-.537309,.732871,.318003,-.601428,.24836,.946959,-.203833,.56975,.675802,-.467574,.039033,.998718,-.032044,.032075,.999115,-.026307,.039033,-.998718,-.032044,.537767,-.718314,-.441328,.048341,-.998718,-.014649,.665731,-.718314,-.201941,.64275,-.718314,-.266213,.046663,-.998718,-.019318,.050478,-.998718,0,.6957,-.718314,0,.692343,-.718314,-.068178,.050264,-.998718,-.004944,.682333,-.718314,-.135716,.049532,-.998718,-.009857,.036744,-.99884,-.030152,.039094,-.998718,-.032075,.066652,-.997742,.004883,.075289,-.997131,-.004639,.041993,-.998718,-.028047,.578448,-.718314,-.386486,.613544,-.718314,-.327952,.044557,-.998718,-.023804,.993957,-.049409,-.097873,.979553,-.049562,-.19483,.998779,-.049287,0,.847987,-.05237,-.52739,.830439,-.049562,-.554857,.772027,-.049562,-.633595,.772057,-.049593,-.633595,.880917,-.028657,-.472335,.880825,-.049593,-.470809,.922727,-.049593,-.382214,.955748,-.049562,-.289926,.686911,-.696219,-.20835,.663167,-.696219,-.274697,.704001,-.696219,-.140019,.714347,-.696219,-.070345,.717795,-.696219,0,.554857,-.696219,-.455367,.59682,-.696219,-.398785,.633045,-.696219,-.338359,.822871,.454634,-.340831,.785485,.454634,-.419843,.873562,.454634,-.173742,.852321,.454634,-.258522,.740562,.454634,-.494827,.688498,.454634,-.56502,.745109,-.039705,.665731,.737053,-.045137,.674306,.74514,.024964,.666402,.739219,0,.673452,.583697,.706778,-.39967,.582598,.717948,-.380902,.537095,.718619,-.441633,.537522,.71923,-.440168,.761101,.032044,.647816,.772362,.034516,-.634205,.772057,-.04944,-.633595,.880703,0,-.473647,.827082,.028352,-.561327,.827998,-.045259,-.558885,-.634205,-.175573,-.752922,-.495254,-.172765,-.851375,-.548418,-.043794,-.835017,-.571795,-.360118,-.737083,-.419324,-.334239,-.84405,-.492416,-.531999,-.688803,-.337779,-.485092,-.806543,-.398785,-.690298,-.603687,-.239448,-.644887,-.725761,.096988,-.973662,-.206275,.029481,-.940794,-.337626,-.078738,-.977966,-.193243,.20481,-.909909,-.360668,.130711,-.867275,-.4803,.297617,-.803735,-.515183,.21015,-.750175,-.626942,.387707,-.658528,-.644948,.328806,-.590716,-.736808,.480483,-.518082,-.707572,.466994,-.473769,-.746605,.551805,-.383282,-.740654,.54268,-.374096,-.752007,.587176,-.197607,-.784936,.584704,-.195135,-.787408,.350352,.003967,-.936583,.352519,-.001068,-.935789,.189642,.002136,-.981842,.197333,-.013001,-.980224,.062899,-.030457,-.997528,.103732,-.067507,-.992309,-.075076,-.06531,-.995025,-.01648,-.164251,-.986267,-.352245,-.173742,-.919614,-.399884,-.048036,-.915281,-.298471,-.314127,-.901212,-.238838,-.446211,-.862453,-.142796,-.603778,-.784234,-.061251,-.870357,-.488571,-.192358,-.917051,-.349284,.040498,-.804559,-.592456,.124973,-.707572,-.695456,.284951,-.540178,-.791803,.445814,-.429121,-.785516,.521714,-.355815,-.775353,.574755,-.187902,-.796442,.359081,-.017487,-.933134,.213263,-.047121,-.975829,.144261,-.112461,-.983123,.025605,-.237007,-.97116,-.197058,-.194067,-.960967,-.241249,-.063906,-.968322,-.170141,-.306803,-.93643,-.135868,-.409986,-.901883,-.050813,-.547594,-.83517,-.145573,-.777184,-.612171,-.298715,-.820673,-.487014,-.042482,-.730125,-.681967,.04709,-.658254,-.751274,.232093,-.494583,-.83755,.415479,-.389874,-.821772,.497452,-.337474,-.799127,.563097,-.180761,-.80636,.365368,-.036897,-.930113,.228553,-.086001,-.969695,.176153,-.161412,-.971007,.060762,-.306131,-.950041,.119083,-.414075,-.902402,.353832,-.308145,-.883053,.417402,-.263283,-.869716,.456587,-.183233,-.870602,.356426,-.118137,-.926817,.286599,-.150243,-.946165,.246895,-.211249,-.945708,.314707,.683859,-.658193,.39079,.623005,-.677572,.449934,.640095,-.62273,.182684,.629597,-.75512,.284555,.569597,-.771081,.030366,.558977,-.828608,.141057,.501114,-.853786,-.135289,.472945,-.870632,-.032655,.414502,-.909452,-.540391,.025361,-.840999,-.458632,.111881,-.881527,-.567248,.130284,-.813135,-.399701,.020569,-.91641,-.325144,.101077,-.940214,-.245308,.025697,-.969085,-.172735,.107639,-.979064,-.080905,.029786,-.996246,-.010132,.089938,-.99588,.057375,.009247,-.998291,.091891,.027009,-.995392,.170873,-.014496,-.985168,.179327,-.004517,-.983764,.336589,-.012757,-.941557,.338542,-.009461,-.940886,.61742,.146001,-.772942,.635853,.164586,-.754021,.609821,.255684,-.750114,.626453,.278695,-.727897,.586352,.332743,-.738548,.596149,.338359,-.72808,.552141,.404126,-.729209,.528672,.398846,-.74926,.443525,.561296,-.698691,.494186,.564623,-.661,.339335,.520432,-.783563,.194311,.458907,-.86697,.022401,.369427,-.928983,-.321451,.232398,-.917936,-.433576,.26072,-.862545,-.209326,.208594,-.955321,-.089938,.196722,-.976318,.070193,.156346,-.985198,.160253,.078005,-.983978,.225349,.037385,-.97354,.362804,.015564,-.9317,.625477,.161016,-.763421,.603931,.271035,-.749504,.565386,.311441,-.763726,.467238,.365398,-.805078,.470931,.491379,-.732627,.521378,.486923,-.700705,.372021,.463942,-.803919,.237739,.41435,-.878506,.081332,.331248,-.940001,-.185125,.33021,-.925565,-.28898,.375988,-.880398,-.106357,.290414,-.950957,-.021119,.261818,-.964873,.124607,.206061,-.97055,.212775,.125309,-.969024,.268654,.080508,-.959838,.386029,.042604,-.921476,.610248,.156041,-.776666,.572954,.260567,-.777032,.514023,.282144,-.810022,.362743,.320231,-.875118,.159581,.32255,-.932981,.28309,.134037,-.949644,.334758,.11417,-.935331,.392407,.091647,-.915189,.490829,.148564,-.858486,.463118,.201788,-.862972,.435896,.201086,-.877224,.91522,.091433,-.392438,.949858,.156529,-.270577,.892361,.205298,-.401898,.863033,.201788,-.463057,.858577,.148534,-.490616,.935362,.114109,-.334666,-.111423,-.981506,-.155431,-.017151,-.97235,-.232826,.087436,-.981506,-.170141,-.257759,-.928129,-.268532,-.177435,-.9317,-.316843,-.398083,-.840388,-.367718,-.337443,-.859096,-.384747,-.524003,-.705954,-.476424,-.508469,-.694449,-.509049,-.569597,-.031129,-.821314,-.580981,-.150609,-.799829,-.669088,-.185095,-.719718,-.415876,-.007904,-.90936,-.441939,-.094852,-.891995,-.256355,.022217,-.966308,-.300607,-.026154,-.953368,-.073489,.039552,-.99649,-.07355,.013031,-.997192,.556261,-.185278,-.810053,.45735,-.150609,-.876431,.442946,-.031129,-.895993,.539323,-.371227,-.755852,.470656,-.328745,-.818751,.5103,-.542009,-.667684,.482925,-.48909,-.72631,.448469,-.705954,-.548143,.428297,-.694449,-.578143,.129032,-.9317,-.339457,.215613,-.928098,-.303476,-.030122,-.912259,-.408429,-.195318,-.863369,-.465194,-.412519,-.667714,-.619617,-.585711,-.328715,-.740837,-.644398,-.371075,-.668599,-.470138,-.259896,-.84344,-.355724,-.177923,-.917478,-.072909,-.132054,-.988556,.306253,-.094821,-.947203,.277932,-.007874,-.96054,.341288,-.259896,-.903287,.378704,-.405866,-.831751,.317148,-.667714,-.673452,.277322,-.859127,-.430067,.339854,-.840388,-.422163,.124943,-.863369,-.488815,-.040254,-.836879,-.545885,-.294931,-.6292,-.719077,-.584246,-.48912,-.647572,-.602741,-.541948,-.58562,-.496597,-.405896,-.767174,-.398724,-.321207,-.858943,-.070559,-.283029,-.956481,.157476,-.026124,-.987152,.111789,.022217,-.993469,.217261,-.177923,-.959746,.268349,-.321177,-.90817,.186224,-.62917,-.754601,-.062075,-.536424,-.841639,-.611988,.127262,-.780541,-.55092,.086734,-.830012,-.576739,.001556,-.816919,-.525864,.28077,-.80285,-.502731,.254616,-.826075,-.427808,.42259,-.798975,-.442915,.411176,-.796686,-.268807,.554064,-.787866,-.250099,.596637,-.762505,.432081,.657369,-.617359,.339915,.659536,-.67037,.271584,.702933,-.657338,.496384,.574267,-.65096,.438154,.58739,-.68038,.553026,.498978,-.667165,.524644,.531693,-.664815,.597491,.406201,-.691336,.599353,.401502,-.692465,.448195,.019349,-.893704,.485458,.090579,-.869533,.573107,.114261,-.811457,.277871,-.004517,-.960601,.326395,.038392,-.944426,.104556,-.048189,-.993347,.187292,-.051485,-.980926,-.092196,-.097507,-.990936,-.047609,-.132725,-.98999,-.431013,-.005615,-.90231,-.435408,-.045259,-.899075,-.393567,.159703,-.905301,-.34196,.318674,-.883999,-.105655,.556719,-.823908,.167516,.654225,-.73748,.10361,.668905,-.736076,.286142,.598682,-.7481,.378002,.577197,-.723808,.484603,.388226,-.783837,.536302,.195379,-.82107,.586383,.221412,-.779168,.402417,.142064,-.904355,.327403,.062349,-.942808,.05417,-183e-6,-.998505,-.303415,-.094607,-.948119,-.287545,-.089785,-.95352,-.27195,.066042,-.960021,-.218665,.227851,-.94882,.011353,.506088,-.862392,-.002319,.662191,-.74929,-.073397,.626911,-.775597,.172613,.630696,-.756554,.27488,.622059,-.733116,.393506,.375561,-.839076,.591144,.266732,-.761162,.600238,.309702,-.737419,.478378,.183325,-.858791,.420209,.096622,-.902249,.126377,.111728,-.985656,.186041,.344279,-.920225,.784936,-.197577,-.587207,.787469,-.195135,-.584582,.740654,-.383251,-.551836,.751976,-.374065,-.542711,.707602,-.518082,-.480483,.746635,-.473739,-.466994,.644948,-.658528,-.387707,.736808,-.590716,-.328806,.193243,-.977966,.078738,.337626,-.940794,-.029511,.206275,-.973662,-.096988,.349284,-.91702,.192358,.488601,-.870327,.061251,.487045,-.820673,.298715,.612171,-.777184,.145573,.603687,-.690298,.398785,.725761,-.644887,.239448,.835017,-.043794,.548448,.851375,-.172765,.495285,.752922,-.175573,.634236,.915281,-.048036,.399915,.919614,-.173711,.352245,.968322,-.063906,.24131,.960967,-.194067,.197089,.995025,-.06531,.075137,.986267,-.164251,.01648,.997528,-.030427,-.062868,.992309,-.067446,-.103702,.981842,.002197,-.189611,.980255,-.012879,-.197272,.936613,.003937,-.350291,.93585,-916e-6,-.352336,.796503,-.187872,-.574694,.775353,-.355815,-.521714,.785516,-.429121,-.445845,.791803,-.540178,-.284982,.48027,-.867306,-.130711,.360637,-.909909,-.20481,.592486,-.804529,-.040468,.681967,-.730094,.042512,.784234,-.603778,.142796,.84402,-.334269,.419324,.737083,-.360118,.571825,.901242,-.314127,.298441,.936399,-.306833,.170141,.97116,-.236976,-.025605,.983123,-.11243,-.144261,.97586,-.04709,-.213233,.933134,-.017365,-.35902,.806299,-.180761,-.563158,.799127,-.337504,-.497452,.821741,-.389904,-.415509,.837519,-.494583,-.232124,.626881,-.750206,-.21015,.515122,-.803735,-.297617,.695456,-.707602,-.124943,.751305,-.658254,-.04706,.8352,-.547563,.050844,.806543,-.485092,.337809,.688803,-.531999,.492447,.862453,-.446181,.238838,.901883,-.409986,.135838,.950041,-.30607,-.060762,.971038,-.161382,-.176153,.969695,-.086001,-.228553,.930113,-.036836,-.365398,.870571,-.183294,-.456557,.869716,-.263314,-.417371,.883084,-.308176,-.353771,.902402,-.414045,-.119053,.945708,-.211219,-.246895,.946196,-.150151,-.286599,.926847,-.117771,-.356395,.941557,-.012848,-.336528,.940886,-.0094,-.338542,.985198,-.014588,-.170721,.983764,-.004608,-.179266,.998291,.009156,-.057314,.995392,.026948,-.0918,.996246,.029756,.080935,.99588,.089908,.010163,.813135,.130284,.567278,.881527,.111881,.458663,.840999,.025361,.540391,.862545,.26075,.433546,.917936,.232398,.321451,.880367,.375988,.28898,.925565,.33021,.185156,.870632,.472915,.135319,.909452,.414472,.032685,.622852,.63976,-.45024,.677572,.623005,-.39079,.658223,.683859,-.314707,.661061,.564348,-.4944,.698691,.561296,-.443525,.700766,.486709,-.5215,.732627,.491379,-.470901,.72927,.403943,-.552202,.74929,.398816,-.528642,.738578,.332621,-.586352,.72808,.338328,-.596118,.750145,.255654,-.609821,.727928,.278695,-.626423,.772881,.146031,-.617481,.754021,.164617,-.635853,.931608,.015809,-.363048,.97351,.037538,-.225471,.983947,.078036,-.160314,.985168,.156377,-.070193,.940214,.101077,.325175,.916379,.020569,.399731,.955321,.208594,.209326,.950957,.290414,.106357,.928983,.369396,-.022401,.771081,.569567,-.284585,.755089,.629597,-.182684,.783563,.520432,-.339335,.803919,.463942,-.372021,.805048,.365398,-.467269,.763695,.311472,-.565416,.749474,.271035,-.603961,.76339,.161016,-.625507,.921476,.042573,-.386059,.959838,.080447,-.268654,.968993,.12534,-.212806,.97055,.206061,-.124607,.979064,.107639,.172735,.969085,.025666,.245338,.976318,.196722,.089938,.964873,.261849,.021119,.940031,.331217,-.081332,.853786,.501114,-.141057,.828608,.558977,-.030396,.86697,.458876,-.194342,.878506,.41435,-.237739,.875118,.320261,-.362743,.810022,.282174,-.513993,.777032,.260567,-.572954,.776666,.156041,-.610248,.942717,.265267,-.202185,.895962,-.031129,-.442976,.876431,-.150609,-.45735,.810053,-.185308,-.556261,.96054,-.007904,-.277963,.947172,-.094852,-.306284,.993469,.022187,-.111789,.987152,-.026154,-.157476,.99649,.039552,.073489,.997192,.013001,.07355,.719687,-.185095,.669118,.799829,-.150609,.581011,.821284,-.031129,.569628,.668569,-.371105,.644398,.740837,-.328745,.585711,.58562,-.541948,.602741,.647572,-.48912,.584277,.476424,-.705954,.524033,.509049,-.694449,.508499,.170141,-.981506,-.087436,.232826,-.97235,.017151,.155461,-.981506,.111423,.303446,-.928098,-.215613,.339457,-.9317,-.129032,.422163,-.840388,-.339854,.430097,-.859096,-.277322,.548143,-.705924,-.448469,.578143,-.694449,-.428297,.818751,-.328715,-.470656,.755852,-.371227,-.539293,.903287,-.259896,-.341319,.959746,-.177892,-.217231,.988556,-.132023,.072909,.891995,-.094852,.441908,.90936,-.007904,.415876,.84341,-.259896,.470138,.767174,-.405896,.496628,.619617,-.667714,.412519,.316874,-.9317,.177435,.268502,-.928129,.257759,.40846,-.912259,.030122,.488845,-.863369,-.124943,.673421,-.667714,-.317148,.726279,-.48912,-.482925,.667684,-.542009,-.5103,.831751,-.405896,-.378674,.90817,-.321207,-.268349,.956511,-.282968,.070559,.953368,-.026154,.300607,.966308,.022217,.256355,.917478,-.177923,.355724,.858974,-.321177,.398694,.719108,-.62917,.294931,.384747,-.859096,.337443,.367718,-.840388,.398083,.465194,-.863369,.195318,.545885,-.836879,.040254,.75457,-.6292,-.186224,.841639,-.536424,.062044,.811426,.114292,-.573107,.869503,.090579,-.485488,.893674,.019379,-.448225,.779138,.221442,-.586383,.82107,.195349,-.536302,.737358,.309793,-.600238,.761162,.266732,-.591144,.691214,.406384,-.597522,.692465,.401502,-.599353,.657338,.702933,-.271584,.67037,.659566,-.339915,.616962,.657765,-.432051,.736076,.668905,-.103641,.73748,.654256,-.167516,.775628,.626881,.073366,.74929,.662221,.002319,.787866,.554033,.268838,.762505,.596637,.25013,.816889,.001526,.576769,.830012,.086703,.550951,.780541,.127232,.611988,.899045,-.045259,.435438,.90228,-.005615,.431043,.95352,-.089785,.287545,.948119,-.094607,.303446,.990936,-.097507,.092166,.98999,-.132725,.047578,.944426,.038423,-.326426,.960601,-.004486,-.277871,.904355,.142033,-.402417,.858791,.183325,-.478378,.783837,.388256,-.484573,.68038,.58742,-.438154,.650685,.574602,-.496353,.7481,.598682,-.286111,.756554,.630696,-.172613,.823939,.556719,.105625,.826044,.254616,.502762,.80285,.280801,.525864,.905271,.159734,.393597,.960021,.066073,.271981,.998505,-183e-6,-.054201,.980926,-.051454,-.187323,.993347,-.048158,-.104587,.942808,.062319,-.327433,.902249,.096622,-.420209,.839076,.375561,-.393506,.664815,.531693,-.524674,.666982,.499222,-.553026,.723808,.577197,-.377972,.733116,.622028,-.27488,.862392,.506058,-.011383,.796655,.411176,.442946,.798944,.42262,.427839,.883999,.318674,.34196,.94879,.227882,.218635,.985656,.111728,-.126408,.920225,.34431,-.186041,.62212,.195624,-.758049,.693411,.195624,-.693442,.586138,.38255,-.714194,.65331,.382519,-.65331,.527757,.554857,-.643086,.588244,.554857,-.588244,.449263,.706015,-.54741,.500748,.706015,-.500748,.353557,.830287,-.430799,.394086,.830287,-.394086,.24427,.92288,-.297678,.272286,.92288,-.272286,.125553,.980193,-.152989,.139958,.980193,-.139927,.109958,.980193,-.164556,.213935,.92288,-.32017,.30961,.830256,-.463393,.393445,.706015,-.588824,.462172,.554857,-.691702,.513291,.38255,-.768212,.544816,.195593,-.815394,.462264,.195624,-.864864,.43553,.38255,-.814814,.392163,.554857,-.733696,.333811,.706015,-.624561,.262703,.830287,-.491501,.181524,.92288,-.33961,.093295,.980193,-.174535,.075716,.980193,-.182867,.147343,.922849,-.355754,.213263,.830287,-.514878,.271004,.706015,-.654256,.318339,.554857,-.768609,.353557,.38255,-.853572,.375286,.195624,-.906003,.284677,.195593,-.938444,.268197,.38255,-.884121,.241493,.554857,-.796106,.205573,.706015,-.677664,.161779,.830287,-.533311,.111759,.922849,-.368511,.057436,.980193,-.189398,.191321,.195593,-.961821,.180242,.382519,-.906156,.162297,.554857,-.815943,.138157,.706015,-.694571,.108707,.830287,-.546617,.075106,.922849,-.377667,.038606,.980193,-.194128,.019379,.980193,-.196936,.037751,.92288,-.38316,.054628,.830287,-.554613,.06943,.706015,-.704764,.081576,.554796,-.827967,.090579,.382397,-.919523,.096133,.195379,-.975982,0,.195166,-.980743,0,.382244,-.924039,0,.554735,-.831996,0,.706015,-.708182,0,.830317,-.557237,0,.92291,-.38496,0,.980224,-.197851,.125553,-.980193,-.152989,.139927,-.980193,-.139927,.244301,-.922849,-.297678,.272317,-.922849,-.272317,.353587,-.830256,-.43083,.394086,-.830256,-.394086,.449263,-.706015,-.547441,.500748,-.706015,-.500748,.527757,-.554857,-.643086,.588244,-.554857,-.588275,.586138,-.382519,-.714194,.65331,-.382519,-.65331,.62212,-.195624,-.758049,.693442,-.195624,-.693442,.544816,-.195593,-.815394,.513291,-.382519,-.768212,.462203,-.554857,-.691702,.393445,-.706015,-.588824,.309641,-.830256,-.463424,.213935,-.922849,-.3202,.109958,-.980193,-.164556,.093295,-.980193,-.174535,.181524,-.922849,-.33964,.262734,-.830256,-.491531,.333811,-.706015,-.624561,.392163,-.554857,-.733696,.43553,-.382519,-.814814,.462264,-.195593,-.864864,.375286,-.195624,-.906003,.353557,-.382519,-.853603,.318369,-.554857,-.768609,.271004,-.706015,-.654256,.213263,-.830256,-.514908,.147374,-.922849,-.355815,.075747,-.980193,-.182867,.057436,-.980193,-.189428,.111789,-.922849,-.368542,.161779,-.830256,-.533341,.205573,-.706015,-.677694,.241493,-.554826,-.796106,.268197,-.38255,-.884121,.284646,-.195593,-.938444,.038606,-.980193,-.194128,.075137,-.922849,-.377728,.108707,-.830256,-.546617,.138157,-.706015,-.694571,.162297,-.554826,-.815943,.180242,-.382519,-.906186,.191321,-.195593,-.961821,.096133,-.195379,-.975982,.090579,-.382397,-.919523,.081576,-.554765,-.827967,.06943,-.706015,-.704764,.054628,-.830287,-.554613,.037751,-.92288,-.38319,.019379,-.980193,-.196936,0,-.980224,-.197851,0,-.92288,-.385022,0,-.830317,-.557268,0,-.706015,-.708182,0,-.554704,-.832026,0,-.382244,-.924039,0,-.195166,-.980743,.35197,0,-.936003,.189917,0,-.98178,.031861,0,-.999481,-.122379,0,-.992462,-.273751,0,-.961791,-.422773,0,-.906217,-.568834,0,-.822413,.480392,.652791,-.585711,.522324,.567217,-.636708,.554125,.486618,-.675344,.579424,.407056,-.706076,.600085,.32429,-.731223,.616871,.233314,-.751671,.629231,.127201,-.766717,.621998,-.19657,-.757927,.585559,-.384564,-.713584,.526566,-.557604,-.641682,.44731,-.709037,-.545091,.350841,-.833094,-.427564,.240944,-.925047,-.293619,.12183,-.981353,-.148473,.535386,.653401,-.535142,.58208,.567888,-.581896,.617481,.48735,-.617389,.64565,.407788,-.645589,.668691,.325053,-.668661,.68746,.234046,-.687429,.701285,.127903,-.701285,.693258,-.196783,-.693258,.652669,-.384716,-.652669,.586932,-.557665,-.586932,.498611,-.709037,-.498611,.391095,-.833064,-.391095,.268593,-.925016,-.268593,.135838,-.981353,-.135838,.125553,-.980193,-.152959,.24427,-.92288,-.297647,.353587,-.830256,-.430799,.449293,-.705985,-.54741,.527818,-.554765,-.643086,.5862,-.382397,-.714225,.62215,-.195379,-.75808,.139958,-.980193,-.139958,.394116,-.830256,-.394116,.500748,-.705985,-.500748,.588275,-.554857,-.588244,.693442,-.195593,-.693442,.629261,.126713,-.766778,.701315,.127476,-.701315,.616993,.23249,-.751823,.687582,.233345,-.687551,.600299,.323222,-.731529,.668905,.324198,-.668874,.579821,.405713,-.706534,.645955,.406781,-.645924,.554796,.484939,-.676015,.617969,.486129,-.617878,.523362,.565172,-.637654,.582781,.566424,-.582629,.481979,.650288,-.587176,.536485,.651601,-.536241,.152989,.980193,-.125553,.297678,.922849,-.244301,.430799,.830287,-.353557,.54741,.706015,-.449263,.643086,.554826,-.527757,.714194,.382519,-.586138,.758049,.195624,-.62212,.815394,.195624,-.544816,.768212,.382519,-.513291,.691733,.554857,-.462203,.588824,.706015,-.393445,.463393,.830287,-.30961,.32017,.922849,-.213935,.164556,.980193,-.109958,.174535,.980193,-.093295,.33961,.922849,-.181524,.491531,.830256,-.262703,.624561,.705985,-.333811,.733696,.554857,-.392163,.814814,.38255,-.43553,.864864,.195624,-.462264,.906003,.195624,-.375286,.853572,.38255,-.353557,.768609,.554857,-.318339,.654286,.705985,-.271004,.514908,.830256,-.213263,.355754,.922849,-.147374,.182836,.980193,-.075716,.189398,.980193,-.057436,.36848,.922849,-.111759,.533311,.830287,-.161779,.677694,.705985,-.205573,.796106,.554826,-.241493,.884121,.38255,-.268197,.938444,.195624,-.284646,.194098,.980193,-.038606,.377667,.92288,-.075106,.546617,.830287,-.108707,.694571,.706015,-.138157,.815943,.554826,-.162297,.906156,.38255,-.180242,.961821,.195624,-.191321,.975982,.19541,-.096133,.919523,.382427,-.090579,.827967,.554796,-.081576,.704764,.706015,-.06943,.554582,.830287,-.054628,.38316,.92288,-.037751,.196936,.980193,-.019379,.197851,.980224,0,.384991,.92291,0,.557268,.830317,0,.708182,.706015,0,.831996,.554735,0,.924039,.382275,0,.980743,.195166,0,.758049,-.195624,-.62212,.714194,-.382519,-.586108,.643086,-.554826,-.527757,.54741,-.706015,-.449263,.43083,-.830256,-.353557,.297678,-.922849,-.244301,.152989,-.980193,-.125553,.164556,-.980193,-.109958,.3202,-.922849,-.213935,.463424,-.830256,-.309641,.588824,-.706015,-.393414,.691733,-.554857,-.462172,.768212,-.382519,-.513291,.815394,-.195624,-.544816,.864864,-.195624,-.462264,.814814,-.382519,-.43553,.733696,-.554857,-.392163,.624561,-.706015,-.333811,.491531,-.830256,-.262734,.33964,-.922849,-.181524,.174535,-.980193,-.093295,.182836,-.980193,-.075747,.355815,-.922849,-.147374,.514939,-.830256,-.213294,.654256,-.706015,-.271004,.768609,-.554857,-.318369,.853603,-.382519,-.353557,.906003,-.195593,-.375286,.938444,-.195593,-.284646,.884152,-.382519,-.268197,.796106,-.554857,-.241493,.677694,-.705985,-.205573,.533341,-.830256,-.161779,.368542,-.922849,-.111789,.189398,-.980193,-.057436,.961821,-.195593,-.19129,.906156,-.382519,-.180242,.815943,-.554826,-.162297,.694571,-.705985,-.138157,.546648,-.830256,-.108707,.377697,-.922849,-.075106,.194128,-.980193,-.038606,.196936,-.980193,-.019379,.38319,-.92288,-.037751,.554613,-.830287,-.054628,.704764,-.706015,-.06943,.827967,-.554796,-.081576,.919523,-.382397,-.090579,.975982,-.19541,-.096133,.980743,-.195166,0,.924039,-.382275,0,.831996,-.554735,0,.708182,-.705985,0,.557268,-.830287,0,.384991,-.92291,0,.197851,-.980224,0,.822413,0,.568865,.906186,0,.422803,.961791,0,.273782,.992462,0,.12241,.999481,0,-.031861,.98178,0,-.189947,.936003,0,-.35197,.766717,.12714,-.629231,.751671,.233192,-.616901,.731284,.324076,-.600116,.706198,.40669,-.579516,.675527,.486129,-.554308,.637013,.566607,-.522629,.586169,.652058,-.480819,.148473,-.981353,-.12183,.293619,-.925047,-.240944,.427564,-.833094,-.350841,.545091,-.709037,-.44731,.641682,-.557604,-.526566,.713584,-.384564,-.585559,.757927,-.196539,-.621998,.75808,-.195379,-.62215,.714225,-.382397,-.5862,.643086,-.554796,-.527818,.54741,-.705985,-.449293,.430799,-.830256,-.353587,.297617,-.92288,-.24427,.586627,.651021,-.481613,.637318,.565783,-.523118,.675802,.485427,-.554643,.706412,.406049,-.57973,.731437,.323466,-.600269,.751793,.232612,-.616962,.766778,.126743,-.629261,0,.987121,-.159886,.015656,.987121,-.159124,0,.953154,-.302438,.029633,.953154,-.301004,0,.904172,-.427107,.041841,.904172,-.425062,0,.84225,-.539048,.052797,.84225,-.536454,0,.766533,-.64217,.062899,.766564,-.639058,0,.67391,-.738792,.07239,.67394,-.735191,0,.558794,-.829279,.08124,.558885,-.82522,0,.454512,-.890713,.161748,.558977,-.813227,.144108,.674001,-.724509,.125248,.766564,-.62978,.105136,.84225,-.528703,.083316,.904172,-.418928,.058992,.953124,-.29667,.03119,.987121,-.156835,.046419,.987121,-.15305,.087802,.953124,-.289468,.123966,.904172,-.408734,.156468,.84225,-.515824,.186377,.766564,-.61446,.214423,.674001,-.7069,.240699,.558977,-.793451,.06119,.987121,-.14774,.115757,.953124,-.279458,.163457,.904172,-.394604,.206275,.84225,-.498001,.245735,.766564,-.593249,.282693,.674001,-.682455,.317301,.558977,-.766045,.390851,.558977,-.731254,.348216,.674001,-.651479,.302683,.766564,-.566301,.254097,.84225,-.475387,.201331,.904172,-.37669,.142582,.953124,-.266762,.075381,.987121,-.141026,.088839,.987121,-.132969,.168035,.953124,-.251503,.237281,.904172,-.355144,.299478,.84225,-.448195,.356731,.766564,-.533921,.410382,.674001,-.614215,.460646,.558977,-.689413,.526017,.558977,-.64095,.468612,.674001,-.571032,.407361,.766564,-.496353,.34196,.84225,-.4167,.270974,.904172,-.33018,.1919,.953124,-.233833,.101444,.987121,-.12363,.113071,.987121,-.113071,.213874,.953124,-.213904,.302011,.904172,-.302011,.381146,.84225,-.381146,.454054,.766564,-.454054,.522324,.674001,-.522324,.586291,.558946,-.586322,.829279,.558794,0,.82522,.558885,-.08124,.738792,.67391,0,.735191,.67394,-.07239,.64217,.766533,0,.639058,.766564,-.062899,.539048,.84225,0,.536454,.84225,-.052797,.427107,.904172,0,.425062,.904172,-.041841,.302438,.953154,0,.301004,.953154,-.029633,.159886,.987121,0,.159124,.987121,-.015656,.156865,.987121,-.03119,.29667,.953124,-.058992,.418928,.904172,-.083316,.528672,.84225,-.105136,.62978,.766564,-.125248,.724509,.674001,-.144108,.813227,.558977,-.161748,.793451,.558977,-.240669,.7069,.674001,-.214423,.61449,.766564,-.186377,.515824,.84225,-.156468,.408734,.904172,-.123966,.289468,.953124,-.087802,.15305,.987121,-.046419,.766045,.558977,-.317301,.682485,.674001,-.282662,.593249,.766564,-.245735,.498001,.84225,-.206275,.394604,.904172,-.163457,.279458,.953124,-.115757,.14774,.987121,-.06119,.141026,.987121,-.075381,.266762,.953124,-.142582,.37669,.904172,-.201331,.475387,.84225,-.254097,.566301,.766564,-.302683,.651479,.674001,-.348216,.731254,.558977,-.390851,.689413,.558977,-.460646,.614215,.674001,-.410382,.533891,.766564,-.356731,.448195,.84225,-.299478,.355144,.904172,-.237281,.251503,.953124,-.168035,.132969,.987121,-.088839,.12363,.987121,-.101444,.233833,.953124,-.1919,.33018,.904172,-.270974,.416669,.84225,-.34196,.496353,.766564,-.407361,.571032,.674001,-.468612,.64095,.558977,-.526017,.554857,.049562,.830439,.535295,.037843,.843806,.633808,.034547,.772698,.633595,.049593,.772057,.382183,.049562,.922727,.382672,0,.923856,.471389,0,.881893,.470809,.049562,.880825,0,.049287,.998779,0,0,1,.097995,0,.995178,.097873,.04944,.993957,.195074,0,.980773,.19483,.049562,.979553,.289926,.049562,.955748,.290262,0,.956938,.471511,.029817,.881314,0,.918973,.394269,.038636,.918973,.392376,.031465,.946959,.319742,0,.946959,.321299,0,.999115,.041505,0,.998718,.050478,.004944,.998718,.050264,.004059,.999115,.041292,0,.628376,.777886,.076235,.628376,.774132,.072237,.675802,.733512,0,.675802,.737053,0,.986236,.165258,.016175,.986236,.164464,.008209,.99646,.083407,0,.99646,.083804,0,.287729,.957701,.093844,.287729,.953093,.092288,.336253,.937223,0,.336253,.94174,0,.766869,.641774,.062899,.766869,.638691,.057527,.809564,.584185,0,.809564,.587024,0,.433821,.900967,.08829,.433821,.896634,.085818,.482742,.871517,0,.482742,.875729,0,.886288,.463118,.045381,.886288,.460891,0,.580218,.814447,.079806,.580218,.810511,0,.969573,.244728,.023988,.969573,.243538,0,.239387,.970916,.095157,.239387,.966247,0,.722098,.691763,.067782,.722098,.688406,0,.384991,.92291,.090457,.384991,.918455,0,.849574,.527421,.051668,.849574,.524888,0,.531602,.84698,.08301,.531602,.842891,0,.318003,.948057,.092898,.318003,.94351,.090335,.886288,.454207,.076907,.918973,.3867,.158879,.580218,.798791,.151738,.628376,.762932,.047731,.969573,.240028,.032228,.986236,.162084,.189398,.239387,.952239,.186834,.287729,.939299,.134953,.722098,.678457,.125187,.766869,.629444,.180029,.384991,.905179,.175756,.433821,.883663,.102878,.849574,.517289,.165227,.531602,.830714,.184942,.318003,.929838,.062655,.946959,.315134,.143773,.675802,.722892,.183721,.336253,.923643,.114505,.809564,.575732,.170843,.482742,.858913,.009827,.998718,.049532,.008087,.999115,.040712,.016327,.99646,.082186,.153081,.849574,.504715,.134434,.886288,.443159,.245857,.531602,.810511,.236396,.580218,.779382,.275185,.318003,.907254,.281838,.239387,.929106,.093265,.946959,.307474,.071017,.969573,.234169,.213935,.675802,.705313,.200781,.722098,.661977,.273354,.336253,.901212,.267891,.384991,.883175,.170385,.809564,.561724,.254189,.482742,.838038,.114444,.918973,.3773,.014649,.998718,.048341,.012024,.999115,.039735,.225806,.628376,.744377,.277993,.287729,.916471,.047975,.986236,.158147,.024323,.99646,.080203,.186285,.766869,.614154,.261513,.433821,.862178,.224616,.809564,.542314,.201819,.849574,.487289,.335124,.482742,.809076,.324107,.531602,.782495,.150884,.918973,.364269,.122929,.946959,.296854,.019318,.998718,.046663,.01587,.999115,.038362,.297678,.628376,.71868,.282052,.675802,.68096,.366497,.287729,.884793,.360393,.336253,.870052,.063234,.986236,.152684,.032075,.99646,.077425,.245582,.766869,.592914,.344768,.433851,.832392,.177221,.886288,.427869,.311655,.580218,.752434,.093631,.969573,.226081,.371532,.239387,.897,.264718,.722098,.639088,.35316,.384991,.852657,.362804,.318003,.875912,.30253,.766869,.565996,.276711,.809564,.517685,.424696,.433821,.79458,.412824,.482742,.772332,.218299,.886288,.408429,.185858,.918973,.347728,.383923,.580218,.718284,.36668,.628376,.686026,.11536,.969573,.215827,.077914,.986236,.145756,.457686,.239387,.856258,.45146,.287729,.8446,.32609,.722098,.610065,.435041,.384991,.813929,.248634,.849574,.465163,.399243,.531602,.746971,.151433,.946959,.283364,.446913,.318003,.836116,.347423,.675802,.650014,.443922,.336253,.830561,.023804,.998718,.044527,.019562,.999115,.036592,.039491,.99646,.073916,.38432,.722098,.575182,.356548,.766869,.533616,.512742,.384991,.767357,.500534,.433821,.749138,.293008,.849574,.438551,.257271,.886288,.385052,.470534,.531602,.704245,.452467,.580218,.677175,.178503,.946959,.267159,.13596,.969573,.203467,.526719,.318003,.788293,.539384,.239387,.807276,.409467,.675802,.612842,.523209,.336253,.783044,.326121,.809564,.488083,.486526,.482742,.728141,.219031,.918973,.32783,.028047,.998718,.041993,.023041,.999115,.034516,.432142,.628376,.646779,.0918,.986236,.137425,.046541,.99646,.069674,.53206,.287729,.796289,.706656,.034913,.706656,.706229,.049593,.706229,.607532,.287729,.740318,.59743,.336253,.727989,.104831,.986236,.12775,.053163,.99646,.064791,.407117,.766869,.496109,.372387,.809564,.453749,.571551,.433821,.696463,.555559,.482742,.676962,.293802,.886288,.357982,.25013,.918973,.304788,.516678,.580218,.629566,.493484,.628376,.601306,.155248,.969573,.189154,.615925,.239387,.750511,.438826,.722098,.534715,.585467,.384991,.713401,.334605,.849574,.407697,.537309,.531602,.654714,.601428,.318003,.732871,.203833,.946959,.24836,.467574,.675802,.56975,.032044,.998718,.039033,.026337,.999115,.032075,.17304,.969573,.17304,.116855,.986236,.116855,.686514,.239387,.686544,.677175,.287729,.677175,.48912,.722098,.489151,.45381,.766869,.45381,.652577,.384991,.652577,.637074,.433821,.637074,.372936,.849574,.372936,.327464,.886288,.327464,.598895,.531602,.598895,.575884,.580218,.575884,.22718,.946959,.22718,.67037,.318003,.67037,.521165,.675802,.521165,.059267,.99646,.059267,.665914,.336253,.665914,.415082,.809564,.415082,.619221,.482742,.619251,.278787,.918973,.278787,.035707,.998718,.035707,.029328,.999115,.029328,.550035,.628376,.550035,.633595,-.049593,.772057,.633595,-.049562,.772057,.706229,-.049562,.706229,.706229,-.049715,.706229,.019318,-.998718,.046663,.266213,-.718314,.64275,.327952,-.718314,.613544,.023804,-.998718,.044527,.004944,-.998718,.050233,.068178,-.718314,.692343,.135716,-.718314,.682333,.009827,-.998718,.049532,.201941,-.718314,.665731,.014649,-.998718,.048341,0,-.998718,.050478,0,-.718314,.6957,.028047,-.998718,.041993,.386486,-.718314,.578448,.441328,-.718314,.537767,.032044,-.998718,.039033,0,-.049287,.998779,.097873,-.04944,.993957,.472365,-.028657,.880917,.473647,0,.880703,.52739,-.05237,.847987,.554857,-.049562,.830439,.470809,-.049562,.880825,.382183,-.049562,.922727,.289926,-.049562,.955748,.19483,-.049562,.979553,.20835,-.696219,.686911,.274697,-.696219,.663167,.140019,-.696219,.704001,.070345,-.696219,.714347,0,-.696219,.717795,.455367,-.696219,.554857,.507553,-.696219,.507553,.491928,-.718314,.491928,.398785,-.696219,.59682,.338359,-.696219,.633045,.494827,.454634,.740562,.56502,.454604,.688498,.340831,.454634,.822871,.419843,.454634,.785485,.087283,.454573,.88641,.173742,.454634,.873531,.258522,.454634,.85229,.035707,-.998718,.035707,.62978,.454604,.62978,-.665731,-.039705,.745109,-.674306,-.045137,.737053,-.666402,.024995,.74514,-.673421,0,.739219,.439863,.719596,.537248,.441877,.718223,.537431,.491073,.719657,.490768,.49028,.720756,.489975,.033631,-.99884,.033631,.035768,-.998718,.035768,.032075,-.998718,.039094,.030152,-.99884,.036744,.399274,.706992,.583667,.38081,.717704,.582934,.634205,.034486,.772362,.633595,-.04944,.772057,.706229,-.049593,.706229,.706656,.034852,.706656,-.004883,-.997742,.066652,.004669,-.997131,.075289,.561296,.028352,.827082,.558855,-.045259,.827998,-.647786,.032044,.761132,.94351,.318003,.092929,.88641,.454573,.087283,.922727,.049562,.382214,.880825,.049593,.470809,.881893,0,.471389,.923856,0,.382672,.993957,.04944,.097873,.995178,0,.097995,.979553,.049562,.19483,.980773,0,.195074,.955748,.049562,.289926,.956938,0,.290262,.881314,.029817,.471541,.830439,.049593,.554857,.843776,.037843,.535295,.319742,.946959,.031465,.392376,.918973,.038636,.041292,.999115,.004059,.050264,.998718,.004944,.733512,.675802,.072237,.774132,.628376,.076235,.083407,.99646,.008209,.164464,.986236,.016175,.937223,.336253,.092288,.953093,.287729,.093844,.584185,.809564,.057527,.638691,.766869,.062899,.871517,.482742,.085818,.896634,.433851,.08829,.460891,.886288,.045381,.810511,.580218,.079806,.243538,.969573,.023957,.966216,.239387,.095157,.688406,.722098,.067782,.918455,.384991,.090457,.524888,.849574,.051698,.842891,.531602,.08301,.3867,.918973,.076907,.454207,.886288,.090335,.762932,.628376,.151738,.798791,.580218,.158879,.162084,.986236,.032228,.240028,.969573,.047731,.939299,.287729,.186834,.952239,.239387,.189398,.629444,.766869,.125187,.678457,.722098,.134953,.883663,.433851,.175756,.905179,.384991,.180029,.517289,.849574,.102878,.830714,.531602,.165227,.929838,.318003,.184942,.315134,.946959,.062685,.722892,.675802,.143773,.923643,.336253,.183721,.575732,.809564,.114505,.858913,.482742,.170843,.040712,.999115,.008087,.049532,.998718,.009827,.082186,.99646,.016327,.443159,.886288,.134434,.504715,.849574,.153081,.779382,.580218,.236396,.810511,.531602,.245857,.929106,.239387,.281838,.907254,.318003,.275216,.234169,.969573,.071047,.307474,.946959,.093265,.661977,.722098,.200781,.705313,.675802,.213935,.883175,.384991,.267891,.901212,.336253,.273354,.561724,.809564,.170385,.838038,.482742,.254189,.3773,.918973,.114444,.039705,.999115,.012024,.048341,.998718,.014649,.744377,.628376,.225806,.916471,.287729,.277993,.080203,.99646,.024323,.158147,.986236,.047975,.614154,.766869,.186285,.862178,.433821,.261513,.487289,.849574,.201819,.542314,.809564,.224647,.782495,.531602,.324107,.809076,.482742,.335124,.296823,.946959,.122959,.364269,.918973,.150884,.038331,.999115,.01587,.046663,.998718,.019318,.68096,.675802,.282052,.71865,.628376,.297678,.870052,.336253,.360393,.884793,.287729,.366497,.077425,.99646,.032075,.152684,.986236,.063234,.592914,.766869,.245582,.832392,.433821,.344768,.427869,.886288,.177221,.752434,.580218,.311655,.226081,.969573,.093631,.897,.239387,.371532,.639088,.722098,.264718,.852657,.384991,.35316,.875912,.318003,.362804,.517685,.809564,.276711,.565996,.766869,.30253,.772332,.482742,.412824,.79458,.433851,.424696,.347728,.918973,.185858,.408429,.886288,.218299,.686026,.628376,.36668,.718253,.580218,.383923,.145756,.986236,.077883,.215827,.969573,.11536,.8446,.287729,.45146,.856258,.239387,.457686,.610065,.722098,.32609,.813929,.384991,.435041,.465163,.849574,.248634,.746971,.531602,.399243,.283364,.946959,.151463,.836116,.318003,.446913,.650014,.675802,.347453,.830561,.336253,.443922,.036592,.999115,.019562,.044527,.998718,.023804,.073916,.99646,.039491,.533616,.766869,.356548,.575152,.722098,.38432,.749138,.433851,.500534,.767357,.384991,.512742,.385052,.886288,.257271,.438551,.849574,.293008,.677175,.580218,.452467,.704215,.531602,.470534,.203467,.969573,.13596,.267159,.946959,.178503,.807276,.239387,.539415,.788293,.318003,.526719,.612842,.675802,.409467,.783044,.336253,.523209,.488083,.809564,.326121,.728141,.482742,.486526,.32783,.918973,.219031,.034516,.999115,.023041,.041993,.998718,.028047,.646779,.628376,.432173,.069674,.99646,.046541,.137425,.986236,.0918,.796289,.287729,.53206,.772057,.049562,.633595,.772698,.034547,.633808,.727989,.336253,.59743,.740318,.287729,.607562,.064791,.99646,.053163,.12775,.986236,.104831,.453749,.809564,.372387,.496109,.766869,.407147,.676962,.482742,.555559,.696463,.433821,.571551,.304788,.918973,.25013,.357982,.886288,.293802,.601306,.628376,.493484,.629566,.580218,.516678,.189154,.969573,.155248,.750511,.239387,.615925,.534715,.722098,.438826,.713401,.384991,.585467,.407697,.849574,.334605,.654714,.531602,.537309,.732871,.318003,.601428,.24836,.946959,.203833,.56975,.675802,.467574,.032075,.999115,.026337,.039033,.998718,.032044,.039033,-.998718,.032044,.537767,-.718314,.441328,.048341,-.998718,.014649,.046663,-.998718,.019318,.64272,-.718314,.266213,.665731,-.718314,.201941,.050264,-.998718,.004944,.692343,-.718314,.068178,.049532,-.998718,.009857,.682333,-.718314,.135716,.036744,-.99884,.030152,.075289,-.997131,.004639,.066652,-.997742,-.004883,.039094,-.998718,.032075,.041993,-.998718,.028047,.578448,-.718314,.386486,.044557,-.998718,.023804,.613544,-.718314,.327952,.979553,-.049562,.19483,.993957,-.049409,.097903,.847987,-.05237,.52739,.772057,-.049593,.633595,.772027,-.049562,.633595,.830439,-.049562,.554857,.880825,-.049562,.470809,.880917,-.028657,.472335,.922727,-.049593,.382214,.955748,-.049562,.289926,.663167,-.696219,.274697,.686911,-.696219,.20835,.704001,-.696219,.140019,.714347,-.696219,.070345,.554857,-.696219,.455367,.59682,-.696219,.398785,.633045,-.696219,.338359,.822871,.454604,.340831,.785485,.454634,.419843,.873531,.454634,.173742,.852321,.454634,.258522,.740562,.454634,.494827,.688498,.454634,.56502,.745079,-.039705,-.665731,.739189,0,-.673452,.74514,.024964,-.666402,.737053,-.045137,-.674306,.583667,.706778,.39967,.537522,.71923,.440168,.537095,.718619,.441633,.582598,.717948,.380871,.761101,.032044,-.647816,.772362,.034516,.634205,.772057,-.049471,.633595,.880703,0,.473647,.827082,.028352,.561327,.827998,-.045289,.558885,-.548418,-.043794,.835017,-.495254,-.172765,.851375,-.634205,-.175573,.752922,-.419294,-.334239,.84405,-.571825,-.360118,.737083,-.337779,-.485092,.806543,-.492447,-.531968,.688803,-.239448,-.644887,.725761,-.398785,-.690298,.603687,-.078738,-.977966,.193243,.029481,-.940794,.337626,.096988,-.973662,.206275,.130711,-.867275,.4803,.20481,-.909909,.360668,.21015,-.750175,.626911,.297617,-.803705,.515183,.328837,-.590716,.736808,.387707,-.658528,.644948,.466994,-.473769,.746605,.480514,-.518082,.707572,.542741,-.374065,.751976,.551836,-.383251,.740654,.584674,-.195135,.787408,.587176,-.197577,.784936,.352428,-946e-6,.93582,.350261,.004028,.936613,.197272,-.01297,.980255,.189581,.002136,.981842,.103702,-.067507,.992309,.062868,-.030488,.997528,-.016449,-.164281,.986267,-.075106,-.06534,.995025,-.399884,-.048067,.915281,-.352245,-.173742,.919614,-.298471,-.314097,.901242,-.238838,-.446181,.862453,-.142796,-.603778,.784234,-.192358,-.917051,.349284,-.061281,-.870357,.488571,.040468,-.804559,.592456,.125004,-.707572,.695456,.284982,-.540178,.791803,.445784,-.429121,.785546,.521653,-.355846,.775384,.574755,-.187964,.796411,.359081,-.017426,.933134,.213233,-.04709,.97586,.144261,-.1124,.983123,.025636,-.236976,.97116,-.241249,-.063936,.968322,-.197058,-.194098,.960967,-.170171,-.306803,.93643,-.135868,-.409986,.901883,-.050844,-.547594,.83517,-.298715,-.820704,.487014,-.145573,-.777184,.612171,-.042482,-.730125,.681967,.04709,-.658254,.751274,.232124,-.494583,.83755,.415448,-.389874,.821802,.497391,-.337474,.799158,.563066,-.180761,.80636,.365337,-.036897,.930113,.228523,-.086062,.969695,.176122,-.161412,.971038,.060762,-.306131,.950041,.119083,-.414075,.902402,.353832,-.308145,.883053,.417402,-.263283,.869716,.456496,-.183203,.870632,.356426,-.118168,.926786,.286599,-.150273,.946165,.246895,-.211249,.945708,.449934,.640095,.62273,.39079,.623005,.677572,.314707,.683859,.658193,.284555,.569567,.771081,.182684,.629597,.755089,.141026,.501114,.853786,.030366,.558977,.828608,-.032655,.414502,.909452,-.135319,.472945,.870602,-.567278,.130284,.813135,-.458632,.111881,.881527,-.540361,.025361,.841029,-.325144,.101077,.940214,-.39967,.020569,.91641,-.172704,.107669,.979064,-.245308,.025697,.969085,-.010132,.089969,.99588,-.080905,.029786,.996246,.091861,.027009,.995392,.057375,.009247,.998291,.179296,-.004517,.983764,.170782,-.014496,.985198,.33842,-.009522,.940916,.336497,-.012818,.941588,.635914,.164586,.75399,.61745,.146001,.772912,.626453,.278726,.727866,.609821,.255715,.750114,.596149,.338328,.72808,.586352,.332743,.738548,.528672,.398816,.74926,.552141,.404126,.72924,.494186,.564623,.661,.443525,.561327,.698691,.339305,.520432,.783563,.194311,.458876,.86697,.022401,.369427,.928983,-.433546,.26072,.862545,-.321421,.232398,.917936,-.209357,.208594,.955321,-.089969,.196722,.976318,.070193,.156346,.985198,.160283,.078005,.983978,.225349,.037416,.97354,.362774,.015625,.93173,.625385,.161016,.763482,.60387,.271035,.749535,.565386,.311441,.763726,.467238,.365398,.805078,.521409,.486923,.700705,.470931,.491379,.732627,.37199,.463942,.803949,.237739,.41435,.878506,.081362,.331248,.940001,-.28898,.375988,.880398,-.185125,.33021,.925565,-.106326,.290414,.950957,-.021149,.261849,.964873,.124607,.206061,.97055,.212745,.125309,.969024,.268563,.080477,.959868,.386059,.042604,.921476,.610157,.156041,.776727,.572863,.260567,.777093,.513962,.282144,.810053,.362712,.320261,.875118,.159551,.32255,.932981,.283029,.134007,.949675,.334727,.114139,.935362,.39256,.091647,.915128,.490707,.148564,.858547,.463118,.201788,.863002,.435835,.201086,.877255,.892361,.205267,.401898,.949858,.156529,.270577,.935362,.114139,.334727,.915159,.091556,.392468,.858577,.148534,.490646,.863033,.201758,.463057,.087436,-.981506,.170141,-.017151,-.97235,.232826,-.111423,-.981506,.155431,-.177465,-.9317,.316874,-.257759,-.928129,.268532,-.337443,-.859096,.384747,-.398083,-.840388,.367718,-.508469,-.694449,.509049,-.524003,-.705954,.476424,-.669118,-.185095,.719718,-.581011,-.150639,.799799,-.569659,-.031129,.821284,-.441939,-.094852,.891995,-.415906,-.007904,.90936,-.300607,-.026154,.953368,-.256355,.022217,.966308,-.07355,.013031,.997192,-.073519,.039552,.99649,.442946,-.031129,.895993,.45735,-.150609,.876431,.556261,-.185308,.810053,.470656,-.328745,.818751,.539293,-.371227,.755852,.482925,-.48909,.72631,.5103,-.542009,.667653,.428297,-.694449,.578143,.448469,-.705954,.548143,.215613,-.928098,.303476,.129032,-.9317,.339488,-.030122,-.912259,.40846,-.195318,-.863369,.465194,-.412519,-.667714,.619617,-.644398,-.371075,.668569,-.585711,-.328715,.740837,-.470138,-.259896,.84344,-.355724,-.177923,.917478,-.072909,-.132054,.988525,.277963,-.007874,.96054,.306253,-.094821,.947203,.341288,-.259896,.903287,.378674,-.405866,.831751,.317179,-.667714,.673452,.339854,-.840388,.422163,.277322,-.859127,.430067,.124943,-.863369,.488815,-.040254,-.836879,.545854,-.2949,-.6292,.719077,-.602741,-.541948,.58562,-.584277,-.48909,.647572,-.496597,-.405896,.767205,-.398694,-.321207,.858974,-.070559,-.283029,.956481,.111789,.022217,.993469,.157476,-.026154,.987152,.217261,-.177923,.959746,.268349,-.321177,.90817,.186224,-.62917,.754601,-.062075,-.536424,.841639,-.576739,.001556,.816889,-.55092,.086734,.830012,-.611988,.127262,.780541,-.502762,.254585,.826044,-.525895,.28077,.80285,-.442946,.411145,.796686,-.427808,.42259,.798975,-.25013,.596637,.762505,-.268807,.554064,.787835,.271584,.702933,.657338,.339946,.659536,.67037,.432081,.657369,.617359,.438154,.58739,.68038,.496384,.574267,.65096,.524644,.531693,.664815,.553026,.498978,.667165,.599353,.401502,.692465,.597522,.406171,.691336,.573138,.114261,.811426,.485458,.090579,.869533,.448195,.019379,.893704,.326395,.038392,.944426,.27784,-.004517,.960601,.187292,-.051485,.980926,.104556,-.048189,.993347,-.047578,-.132725,.98999,-.092196,-.097507,.990936,-.435438,-.045259,.899075,-.431043,-.005615,.90228,-.393597,.159703,.905271,-.34199,.318674,.883999,-.105655,.556719,.823908,.10358,.668905,.736076,.167516,.654225,.73748,.286142,.598682,.7481,.378002,.577197,.723808,.484603,.388226,.783837,.586383,.221381,.779168,.536271,.195349,.8211,.402417,.142033,.904355,.327433,.062349,.942808,.054201,-183e-6,.998505,-.287515,-.089785,.95352,-.303415,-.094607,.948119,-.271981,.066042,.960021,-.218665,.227851,.94882,.011353,.506088,.862392,-.073397,.626911,.775597,-.002319,.662191,.74929,.172613,.630696,.756554,.27488,.622059,.733116,.393506,.375561,.839106,.600238,.309671,.737419,.591144,.266732,.761162,.478378,.183355,.858791,.420209,.096622,.902249,.126377,.111728,.985656,.186041,.344279,.920225,.7875,-.195044,.584582,.784936,-.197577,.587176,.752007,-.374035,.542741,.740623,-.383282,.551836,.746635,-.473739,.466964,.707572,-.518082,.480483,.736808,-.590716,.328806,.644917,-.658559,.387707,.206275,-.973662,.096988,.337626,-.940794,.029511,.193243,-.977966,-.078768,.488601,-.870327,-.061251,.349284,-.91702,-.192358,.612201,-.777154,-.145543,.487045,-.820673,-.298715,.725761,-.644887,-.239448,.603687,-.690298,-.398755,.752922,-.175573,-.634236,.851344,-.172735,-.495285,.835017,-.043794,-.548448,.919614,-.173711,-.352275,.915281,-.048006,-.399915,.960967,-.194037,-.197089,.968322,-.063845,-.24131,.986267,-.16422,-.016511,.995025,-.065279,-.075137,.992309,-.067415,.103732,.997528,-.030396,.062868,.980224,-.01294,.197302,.981842,.002228,.189611,.93582,-916e-6,.352428,.936613,.003937,.350322,.796442,-.187872,.574755,.775353,-.355785,.521744,.785516,-.42909,.445845,.791803,-.540178,.284982,.360637,-.909909,.20481,.48027,-.867306,.130741,.592486,-.804529,.040468,.681967,-.730094,-.042512,.784234,-.603778,-.142796,.737083,-.360118,-.571825,.84402,-.334269,-.419324,.901212,-.314158,-.298441,.936399,-.306864,-.170141,.97116,-.237007,.025605,.983123,-.112461,.144261,.975829,-.047121,.213263,.933134,-.017518,.359081,.806299,-.180761,.563189,.799097,-.337504,.497452,.821741,-.389904,.415509,.837519,-.494583,.232124,.515122,-.803766,.297617,.626881,-.750206,.21015,.695456,-.707572,.124943,.751274,-.658284,.04706,.83517,-.547563,-.050844,.688803,-.531999,-.492447,.806543,-.485092,-.337809,.862453,-.446181,-.238838,.901914,-.409955,-.135868,.950041,-.306101,.060762,.971038,-.161321,.176153,.969695,-.08594,.228584,.930113,-.037019,.365368,.87054,-.183203,.456648,.869747,-.263253,.417371,.883084,-.308145,.353801,.902402,-.414045,.119083,.945738,-.211188,.246895,.946196,-.150121,.286599,.926847,-.117924,.356395,.940886,-.009522,.338511,.941557,-.012879,.336528,.983764,-.004578,.179266,.985198,-.014557,.170751,.995392,.026917,.0918,.998291,.009217,.057314,.99588,.089938,-.010163,.996246,.029756,-.080935,.840999,.025391,-.540391,.881527,.111911,-.458632,.813135,.130284,-.567278,.917936,.232398,-.321451,.862545,.26075,-.433546,.925565,.33021,-.185156,.880367,.375988,-.28898,.909452,.414472,-.032685,.870632,.472915,-.135319,.658223,.683859,.314707,.677572,.623005,.39079,.622852,.63976,.45024,.698691,.561296,.443525,.661061,.564348,.4944,.732627,.491379,.470931,.700766,.48674,.521531,.74926,.398846,.528642,.72927,.403974,.552202,.72808,.338328,.596118,.738578,.332621,.586352,.727928,.278695,.626423,.750145,.255623,.609821,.754051,.164586,.635823,.772942,.146001,.61742,.931608,.015839,.363048,.97351,.037568,.225501,.983947,.078036,.160314,.985168,.156377,.070193,.916379,.020569,-.399701,.940214,.101077,-.325144,.955321,.208594,-.209326,.950957,.290414,-.106357,.928983,.369396,.022401,.755089,.629597,.182684,.771081,.569567,.284585,.783563,.520432,.339335,.803949,.463942,.372021,.805048,.365398,.467269,.763695,.311472,.565447,.749443,.271096,.603992,.763329,.161046,.625568,.921445,.042665,.38612,.959838,.080538,.268685,.968993,.12537,.212806,.97055,.206061,.124607,.969085,.025666,-.245338,.979064,.107639,-.172735,.976318,.196722,-.089938,.964873,.261849,-.021119,.940031,.331217,.081332,.828608,.558977,.030396,.853786,.501114,.141057,.866939,.458876,.194342,.878506,.41435,.237739,.875118,.320261,.362743,.810022,.282174,.513993,.777001,.260628,.572954,.776635,.156133,.610279,.942717,.265267,.202185,.810053,-.185308,.556261,.8764,-.150639,.45735,.895962,-.031159,.442976,.947172,-.094852,.306284,.96054,-.007904,.277963,.987152,-.026154,.157476,.993469,.022217,.111789,.997192,.013001,-.07355,.99649,.039521,-.073489,.821284,-.031129,-.569628,.799829,-.150609,-.580981,.719687,-.185095,-.669118,.740837,-.328745,-.585681,.668569,-.371105,-.644398,.647572,-.48912,-.584277,.58562,-.541948,-.602741,.509049,-.694449,-.508499,.476424,-.705954,-.524033,.155461,-.981506,-.111423,.232826,-.97235,-.017151,.170171,-.981506,.087436,.339457,-.9317,.129032,.303446,-.928098,.215613,.430097,-.859096,.277352,.422132,-.840388,.339854,.578143,-.694449,.428297,.548143,-.705954,.4485,.755852,-.371227,.539293,.818751,-.328715,.470687,.903287,-.259865,.341319,.959746,-.177923,.217231,.988556,-.132023,-.072909,.90936,-.007904,-.415876,.892026,-.094821,-.441908,.84344,-.259865,-.470138,.767205,-.405866,-.496628,.619617,-.667714,-.412519,.268532,-.928129,-.257759,.316874,-.9317,-.177435,.40846,-.912259,-.030122,.488845,-.863369,.124943,.673421,-.667745,.317148,.667653,-.542009,.5103,.726279,-.48912,.482955,.831751,-.405896,.378674,.90817,-.321207,.268319,.956511,-.282998,-.070559,.966308,.022187,-.256355,.953368,-.026154,-.300607,.917478,-.177892,-.355724,.858974,-.321177,-.398694,.719077,-.6292,-.294931,.367718,-.840388,-.398083,.384716,-.859127,-.337443,.465194,-.863369,-.195318,.545854,-.836879,-.040254,.75457,-.629231,.186193,.841639,-.536424,-.062075,.893674,.01941,.448225,.869503,.090609,.485488,.811426,.114292,.573107,.82107,.195349,.536302,.779138,.221442,.586383,.761132,.266732,.591144,.737358,.309793,.600238,.692465,.401502,.599353,.691214,.406384,.597522,.616932,.657796,.432051,.67037,.659566,.339915,.657308,.702933,.271584,.73748,.654225,.167516,.736045,.668905,.10361,.74929,.662191,-.002319,.775597,.626911,-.073366,.762474,.596637,-.25013,.787835,.554064,-.268838,.780541,.127232,-.611988,.830012,.086703,-.55092,.816889,.001556,-.576739,.90231,-.005615,-.431043,.899075,-.045259,-.435408,.948119,-.094607,-.303446,.95352,-.089785,-.287545,.98999,-.132725,-.047578,.990936,-.097507,-.092166,.960601,-.004486,.277871,.944426,.038423,.326426,.904355,.142033,.402417,.858791,.183325,.478378,.783837,.388226,.484603,.650685,.574602,.496384,.68038,.58739,.438154,.7481,.598682,.286111,.756554,.630696,.172613,.823939,.556719,-.105625,.80285,.28077,-.525864,.826075,.254616,-.502731,.905301,.159734,-.393567,.960021,.066042,-.27195,.998505,-214e-6,.054201,.993316,-.048189,.104587,.980926,-.051454,.187323,.942778,.062349,.327433,.902249,.096622,.420209,.839106,.375561,.393475,.666982,.499222,.553026,.664815,.531693,.524674,.723838,.577197,.378002,.733116,.622028,.27488,.862392,.506058,.011383,.798944,.42262,-.427808,.796686,.411176,-.442946,.883999,.318674,-.34196,.94882,.227851,-.218635,.985656,.111728,.126408,.920225,.34431,.186041,.693411,.195624,.693442,.62212,.195624,.758049,.65331,.382519,.65331,.586108,.382519,.714194,.588244,.554857,.588244,.527757,.554857,.643086,.500748,.706015,.500748,.449263,.706015,.54741,.394086,.830287,.394086,.353557,.830256,.43083,.272286,.92288,.272286,.24427,.92288,.297647,.139927,.980193,.139958,.125553,.980193,.152989,.109958,.980193,.164556,.213935,.922849,.32017,.30961,.830256,.463393,.393445,.706015,.588824,.462172,.554857,.691702,.513291,.38255,.768212,.544816,.195593,.815394,.462264,.195593,.864864,.43553,.38255,.814814,.392163,.554857,.733696,.333811,.706015,.624561,.262703,.830287,.491501,.181524,.922849,.33961,.093295,.980193,.174535,.075716,.980193,.182867,.147343,.922849,.355754,.213263,.830287,.514908,.271004,.706015,.654256,.318339,.554857,.768609,.353557,.382519,.853603,.375286,.195593,.906003,.284677,.195593,.938444,.268197,.382519,.884152,.241493,.554857,.796106,.205573,.706015,.677694,.161779,.830287,.533311,.111759,.922849,.368511,.057436,.980193,.189398,.19129,.195624,.961821,.180242,.382519,.906156,.162297,.554857,.815943,.138157,.706015,.694571,.108707,.830287,.546617,.075106,.922849,.377667,.038606,.980193,.194128,.019379,.980193,.196936,.037751,.92288,.38316,.054628,.830287,.554582,.06943,.706015,.704764,.081576,.554796,.827967,.090579,.382397,.919523,.096133,.195379,.975982,0,.195166,.980743,0,.382244,.924039,0,.554735,.831996,0,.706015,.708182,0,.830317,.557237,0,.92291,.38496,0,.980224,.197851,.139927,-.980193,.139927,.125553,-.980193,.152989,.272317,-.922849,.272317,.244301,-.922849,.297678,.394086,-.830256,.394086,.353587,-.830256,.43083,.500748,-.706015,.500748,.449263,-.706015,.547441,.588244,-.554857,.588275,.527757,-.554857,.643086,.65331,-.382519,.65331,.586108,-.382519,.714194,.693442,-.195624,.693442,.62212,-.195624,.758049,.544816,-.195593,.815394,.513291,-.382519,.768212,.462172,-.554857,.691702,.393445,-.706015,.588824,.309641,-.830256,.463424,.213935,-.922849,.3202,.109958,-.980193,.164556,.093295,-.980193,.174535,.181524,-.922849,.33964,.262734,-.830256,.491531,.333811,-.706015,.624561,.392163,-.554857,.733696,.43553,-.382519,.814814,.462264,-.195593,.864864,.375286,-.195593,.906003,.353557,-.382519,.853603,.318369,-.554857,.768609,.271004,-.706015,.654256,.213263,-.830256,.514908,.147374,-.922849,.355815,.075747,-.980193,.182867,.057436,-.980193,.189428,.111789,-.922849,.368542,.161779,-.830256,.533341,.205542,-.706015,.677694,.241493,-.554857,.796106,.268197,-.382519,.884152,.284646,-.195593,.938444,.038606,-.980193,.194128,.075106,-.922849,.377728,.108707,-.830256,.546617,.138157,-.706015,.694571,.162297,-.554826,.815943,.180242,-.382519,.906186,.19129,-.195624,.961821,.096133,-.195379,.975982,.090579,-.382397,.919523,.081576,-.554765,.827967,.06943,-.706015,.704764,.054628,-.830287,.554613,.037751,-.92288,.38319,.019379,-.980193,.196936,0,-.980224,.197851,0,-.92288,.385022,0,-.830317,.557268,0,-.706015,.708182,0,-.554704,.832026,0,-.382244,.924039,0,-.195166,.980743,.351939,0,.936003,.189886,0,.98178,.031831,0,.999481,-.12241,0,.992462,-.273751,0,.961791,-.422773,0,.906217,-.568834,0,.822413,.480392,.652791,.585711,.522355,.567217,.636708,.554125,.486618,.675344,.579424,.407056,.706076,.600085,.32432,.731223,.616871,.233314,.751671,.629231,.127201,.766717,.621967,-.19657,.757927,.585559,-.384564,.713584,.526566,-.557604,.641682,.44731,-.709037,.545091,.350841,-.833094,.427564,.240944,-.925047,.293619,.12183,-.981353,.148473,.535417,.653401,.535142,.58208,.567888,.581927,.617481,.48735,.617389,.64565,.407819,.645589,.668691,.325053,.668661,.68746,.234046,.687429,.701285,.127903,.701285,.693258,-.196783,.693258,.652669,-.384686,.652669,.586932,-.557665,.586932,.498611,-.709037,.498611,.391095,-.833064,.391095,.268593,-.925016,.268624,.135838,-.981353,.135838,.244301,-.92288,.297647,.353587,-.830256,.430799,.449293,-.705985,.54741,.527818,-.554796,.643086,.5862,-.382397,.714225,.62215,-.195379,.75808,.139958,-.980193,.139958,.394116,-.830226,.394116,.500748,-.705985,.500748,.588275,-.554857,.588244,.701315,.127476,.701315,.629261,.126713,.766778,.687582,.233345,.687551,.616962,.23249,.751823,.668905,.324198,.668874,.600299,.323222,.731529,.645955,.406781,.645924,.579821,.405683,.706534,.617969,.486129,.617878,.554796,.484939,.676015,.582781,.566424,.582629,.523362,.565172,.637654,.536485,.651601,.536241,.481979,.650288,.587176,.152989,.980193,.125553,.297678,.922849,.24427,.430799,.830287,.353557,.54741,.706015,.449263,.643086,.554857,.527757,.714194,.382519,.586138,.758049,.195593,.62212,.815394,.195624,.544816,.768212,.382519,.513291,.691702,.554857,.462172,.588824,.706015,.393445,.463393,.830256,.309641,.32017,.922849,.213935,.164556,.980193,.109958,.174535,.980193,.093295,.33961,.922849,.181524,.491531,.830256,.262734,.624561,.706015,.333842,.733696,.554857,.392163,.814814,.382519,.43553,.864864,.195624,.462264,.906003,.195624,.375286,.853603,.38255,.353557,.768609,.554857,.318369,.654286,.706015,.271004,.514908,.830287,.213263,.355754,.922849,.147343,.182836,.980193,.075716,.189398,.980193,.057436,.36848,.922849,.111759,.533311,.830287,.161779,.677694,.706015,.205573,.796106,.554857,.241493,.884121,.38255,.268197,.938444,.195593,.284646,.194128,.980193,.038606,.377667,.92288,.075106,.546617,.830287,.108707,.694571,.706015,.138157,.815943,.554857,.162297,.906156,.38255,.180242,.961821,.195593,.191321,.975982,.195379,.096133,.919523,.382397,.090579,.827967,.554796,.081576,.704764,.706015,.06943,.554613,.830287,.054628,.38316,.92288,.037751,.196936,.980193,.019379,.758049,-.195593,.62212,.714194,-.382519,.586108,.643086,-.554857,.527757,.54741,-.706015,.449263,.43083,-.830256,.353557,.297678,-.922849,.244301,.152989,-.980193,.125553,.164556,-.980193,.109958,.3202,-.922849,.213935,.463424,-.830256,.309641,.588824,-.706015,.393445,.691733,-.554857,.462172,.768212,-.382519,.513291,.815394,-.195593,.544816,.864864,-.195593,.462264,.814814,-.382519,.43553,.733696,-.554857,.392163,.624561,-.706015,.333842,.491531,-.830256,.262734,.33964,-.922849,.181524,.174535,-.980193,.093295,.182867,-.980193,.075716,.355785,-.922849,.147374,.514939,-.830256,.213294,.654286,-.706015,.271004,.768578,-.554857,.318369,.853603,-.382519,.353557,.906003,-.195624,.375286,.938444,-.195624,.284646,.884121,-.38255,.268197,.796106,-.554857,.241493,.677694,-.706015,.205573,.533341,-.830256,.161779,.368542,-.922849,.111789,.189398,-.980193,.057436,.961821,-.195624,.191321,.906156,-.38255,.180242,.815943,-.554857,.162297,.694571,-.706015,.138157,.546648,-.830256,.108707,.377697,-.922849,.075106,.194128,-.980193,.038606,.196936,-.980193,.019379,.38319,-.92288,.037751,.554613,-.830287,.054628,.704764,-.706015,.06943,.827967,-.554796,.081576,.919523,-.382397,.090579,.975982,-.195379,.096133,.822413,0,-.568865,.906186,0,-.422803,.961791,0,-.273751,.992462,0,-.12241,.999481,0,.031861,.98178,0,.189947,.935972,0,.35197,.766717,.12714,.629231,.751671,.233161,.616901,.731284,.324076,.600146,.706198,.40669,.579516,.675527,.48616,.554308,.637013,.566607,.522629,.586169,.652058,.480819,.148473,-.981353,.12183,.293619,-.925047,.240944,.427564,-.833094,.350841,.545091,-.709037,.44731,.641682,-.557604,.526566,.713584,-.384533,.585559,.757927,-.196539,.621998,.75808,-.195379,.622181,.714225,-.382366,.5862,.643086,-.554796,.527818,.54741,-.705985,.449293,.430799,-.830256,.353587,.297617,-.92288,.24427,.586627,.651051,.481613,.637318,.565783,.523118,.675802,.485427,.554643,.706412,.406049,.57973,.731437,.323466,.600269,.751793,.232612,.616962,.766747,.126743,.629261,.015656,.987121,.159124,0,.987121,.159886,.029633,.953154,.301004,0,.953154,.302438,.041841,.904172,.425062,0,.904172,.427107,.052797,.84225,.536454,0,.84225,.539048,.062899,.766564,.639058,0,.766533,.64217,.07239,.67394,.735191,0,.67391,.738792,.08124,.558885,.82522,0,.558794,.829279,0,.454512,.890713,.161748,.558977,.813227,.144108,.674001,.724509,.125248,.766564,.62978,.105136,.84225,.528703,.083316,.904172,.418928,.058992,.953124,.29667,.03119,.987121,.156865,.046419,.987121,.15305,.087802,.953124,.289468,.123966,.904172,.408734,.156468,.84225,.515824,.186377,.766564,.61449,.214423,.674001,.7069,.240669,.558977,.793451,.06119,.987121,.14774,.115757,.953124,.279458,.163457,.904172,.394604,.206275,.84225,.498001,.245735,.766564,.593249,.282693,.674001,.682485,.317301,.558977,.766045,.390851,.558977,.731254,.348216,.674001,.651479,.302683,.766564,.566301,.254097,.84225,.475387,.201331,.904172,.37669,.142582,.953124,.266762,.075381,.987121,.141026,.088839,.987121,.132969,.168035,.953124,.251503,.237281,.904172,.355144,.299478,.84225,.448195,.356731,.766564,.533921,.410382,.674001,.614215,.460646,.558977,.689413,.526017,.558946,.64095,.468612,.674001,.571032,.407361,.766564,.496353,.34196,.84225,.4167,.270974,.904172,.33018,.1919,.953124,.233833,.101444,.987121,.12363,.113071,.987121,.113071,.213874,.953124,.213904,.302011,.904172,.302011,.381146,.84225,.381176,.454054,.766564,.454054,.522324,.674001,.522324,.586291,.558977,.586291,.82522,.558885,.08124,.735191,.67394,.07239,.639058,.766564,.062899,.536454,.84225,.052797,.425062,.904172,.041841,.301004,.953154,.029633,.159124,.987121,.015656,.156865,.987121,.03119,.29667,.953124,.058992,.418928,.904172,.083316,.528672,.84225,.105136,.62978,.766564,.125248,.724509,.674001,.144108,.813227,.558977,.161748,.793451,.558977,.240669,.7069,.674001,.214423,.61449,.766564,.186377,.515824,.84225,.156468,.408734,.904172,.123966,.289468,.953124,.087802,.15305,.987121,.046419,.766045,.558977,.317301,.682485,.674001,.282693,.593249,.766564,.245735,.498001,.84225,.206275,.394604,.904172,.163457,.279458,.953124,.115757,.14774,.987121,.06119,.141026,.987121,.075381,.266762,.953124,.142582,.37669,.904172,.201331,.475387,.84225,.254097,.566301,.766564,.302683,.651479,.674001,.348216,.731254,.558977,.390851,.689413,.558977,.460646,.614215,.674001,.410382,.533891,.766564,.356731,.448195,.84225,.299478,.355144,.904172,.237281,.251503,.953124,.168035,.132969,.987121,.088839,.12363,.987121,.101444,.233833,.953124,.1919,.33018,.904172,.270974,.416669,.84225,.34196,.496353,.766564,.407361,.571032,.674001,.468612,.64095,.558977,.526017,-.554857,.049562,-.830439,-.535295,.037843,-.843806,-.633778,.034547,-.772698,-.633595,.049593,-.772057,-.382183,.049562,-.922727,-.382672,0,-.923856,-.471389,0,-.881893,-.470809,.049562,-.880825,-.097995,0,-.995178,-.097873,.04944,-.993957,-.195074,0,-.980773,-.19483,.049562,-.979553,-.289926,.049562,-.955748,-.290262,0,-.956938,-.471541,.029817,-.881314,-.038636,.918973,-.392376,-.031465,.946959,-.319742,-.004944,.998718,-.050264,-.004059,.999115,-.041292,-.076235,.628376,-.774132,-.072237,.675802,-.733512,-.016175,.986236,-.164464,-.008209,.99646,-.083407,-.093844,.287729,-.953093,-.092288,.336253,-.937223,-.062899,.766869,-.638691,-.057527,.809564,-.584185,-.08829,.433821,-.896634,-.085818,.482742,-.871517,-.045381,.886288,-.460891,-.079806,.580218,-.810511,-.023988,.969573,-.243538,-.095157,.239387,-.966247,-.067782,.722098,-.688406,-.090457,.384991,-.918455,-.051698,.849574,-.524888,-.08301,.531602,-.842891,-.092898,.318003,-.94351,-.090335,.886288,-.454207,-.076907,.918973,-.3867,-.158879,.580218,-.798791,-.151738,.628376,-.762932,-.047731,.969573,-.240028,-.032228,.986236,-.162084,-.189398,.239387,-.952239,-.186834,.287729,-.939299,-.134953,.722098,-.678457,-.125187,.766869,-.629444,-.180029,.384991,-.905179,-.175756,.433821,-.883663,-.102878,.849574,-.517289,-.165227,.531602,-.830714,-.184942,.318003,-.929838,-.062655,.946959,-.315134,-.143773,.675802,-.722892,-.183721,.336253,-.923643,-.114505,.809564,-.575732,-.170843,.482742,-.858913,-.009827,.998718,-.049532,-.008087,.999115,-.040712,-.016327,.99646,-.082186,-.153081,.849574,-.504715,-.134434,.886288,-.443159,-.245857,.531602,-.810511,-.236396,.580218,-.779382,-.275185,.318003,-.907254,-.281838,.239387,-.929106,-.093265,.946959,-.307474,-.071017,.969573,-.234169,-.213935,.675802,-.705313,-.200781,.722098,-.661977,-.273354,.336253,-.901212,-.267891,.384991,-.883175,-.170385,.809564,-.561724,-.254189,.482742,-.838038,-.114444,.918973,-.3773,-.014649,.998718,-.048341,-.012024,.999115,-.039735,-.225806,.628376,-.744377,-.277993,.287729,-.916471,-.047975,.986236,-.158147,-.024323,.99646,-.080203,-.186285,.766869,-.614154,-.261513,.433821,-.862178,-.224616,.809564,-.542314,-.201819,.849574,-.487289,-.335124,.482742,-.809076,-.324107,.531602,-.782495,-.150884,.918973,-.364269,-.122959,.946959,-.296823,-.019318,.998718,-.046663,-.01587,.999115,-.038362,-.297678,.628376,-.71868,-.282052,.675802,-.68096,-.366497,.287729,-.884793,-.360393,.336253,-.870052,-.063234,.986236,-.152684,-.032075,.99646,-.077425,-.245582,.766869,-.592914,-.344768,.433821,-.832392,-.177221,.886288,-.427869,-.311655,.580218,-.752434,-.093631,.969573,-.226081,-.371532,.239387,-.897,-.264718,.722098,-.639088,-.35316,.384991,-.852657,-.362804,.318003,-.875912,-.30253,.766869,-.565996,-.276711,.809564,-.517685,-.424696,.433821,-.79458,-.412824,.482742,-.772332,-.218299,.886288,-.408429,-.185858,.918973,-.347728,-.383923,.580218,-.718253,-.36668,.628376,-.686026,-.11536,.969573,-.215827,-.077914,.986236,-.145756,-.457686,.239387,-.856258,-.45146,.287729,-.8446,-.32609,.722098,-.610065,-.435041,.384991,-.813929,-.248634,.849574,-.465163,-.399243,.531602,-.746971,-.151463,.946959,-.283364,-.446913,.318003,-.836116,-.347453,.675802,-.650014,-.443922,.336253,-.830561,-.023804,.998718,-.044527,-.019562,.999115,-.036592,-.039491,.99646,-.073885,-.38432,.722098,-.575182,-.356548,.766869,-.533616,-.512742,.384991,-.767357,-.500534,.433821,-.749138,-.293008,.849574,-.438551,-.257271,.886288,-.385052,-.470534,.531602,-.704245,-.452467,.580218,-.677175,-.178503,.946959,-.267159,-.13596,.969573,-.203467,-.526719,.318003,-.788293,-.539384,.239387,-.807276,-.409467,.675802,-.612842,-.523209,.336253,-.783044,-.326121,.809564,-.488083,-.486526,.482742,-.728141,-.219031,.918973,-.32783,-.028047,.998718,-.041993,-.023041,.999115,-.034516,-.432173,.628376,-.646779,-.0918,.986236,-.137425,-.046541,.99646,-.069674,-.53206,.287729,-.796289,-.706656,.034913,-.706656,-.706229,.049593,-.706229,-.607532,.287729,-.740318,-.59743,.336253,-.727989,-.104831,.986236,-.12775,-.053163,.99646,-.06476,-.407147,.766869,-.496109,-.372387,.809564,-.453749,-.571551,.433821,-.696463,-.555559,.482742,-.676962,-.293802,.886288,-.357982,-.25013,.918973,-.304788,-.516678,.580218,-.629566,-.493484,.628376,-.601306,-.155248,.969573,-.189154,-.615925,.239387,-.750511,-.438826,.722098,-.534715,-.585467,.384991,-.713401,-.334605,.849574,-.407697,-.537309,.531602,-.654714,-.601428,.318003,-.732871,-.203833,.946959,-.24836,-.467574,.675802,-.56975,-.032044,.998718,-.039033,-.026337,.999115,-.032075,-.17304,.969573,-.17304,-.116855,.986236,-.116855,-.686544,.239387,-.686544,-.677175,.287729,-.677175,-.489151,.722098,-.489151,-.45381,.766869,-.45381,-.652577,.384991,-.652577,-.637074,.433821,-.637074,-.372936,.849574,-.372936,-.327464,.886288,-.327464,-.598895,.531602,-.598895,-.575884,.580218,-.575884,-.22718,.946959,-.22718,-.67037,.318003,-.67037,-.521165,.675802,-.521165,-.059267,.99646,-.059267,-.665914,.336253,-.665914,-.415082,.809564,-.415082,-.619221,.482742,-.619251,-.278787,.918973,-.278787,-.035707,.998718,-.035707,-.029359,.999115,-.029359,-.550035,.628376,-.550035,-.633595,-.049593,-.772057,-.633595,-.049562,-.772057,-.706229,-.049593,-.706229,-.706229,-.049745,-.706229,-.019318,-.998718,-.046663,-.266213,-.718314,-.64275,-.327952,-.718314,-.613544,-.023804,-.998718,-.044557,-.004944,-.998718,-.050233,-.068178,-.718314,-.692343,-.135716,-.718314,-.682333,-.009827,-.998718,-.049562,-.201941,-.718314,-.665731,-.014649,-.998718,-.048341,-.028047,-.998718,-.041993,-.386486,-.718314,-.578448,-.441328,-.718314,-.537767,-.032044,-.998718,-.039033,-.097873,-.04944,-.993957,-.472335,-.028657,-.880917,-.473647,0,-.880703,-.52739,-.05237,-.847987,-.554857,-.049562,-.830439,-.470809,-.049562,-.880825,-.382183,-.049562,-.922727,-.289926,-.049562,-.955748,-.19483,-.049562,-.979553,-.20835,-.696219,-.686911,-.274667,-.696219,-.663167,-.140019,-.696219,-.704001,-.070345,-.696219,-.714347,-.455367,-.696219,-.554857,-.507553,-.696219,-.507553,-.491928,-.718314,-.491928,-.398785,-.696219,-.59682,-.338359,-.696219,-.633045,-.494827,.454634,-.740562,-.56502,.454634,-.688498,-.340831,.454634,-.822871,-.419843,.454634,-.785485,-.087283,.454573,-.88641,-.173742,.454634,-.873531,-.258522,.454634,-.85229,-.035707,-.998718,-.035707,-.62978,.454604,-.62978,.665731,-.039705,-.745109,.674306,-.045137,-.737053,.666402,.024995,-.74514,.673421,0,-.739219,-.439863,.719596,-.537248,-.441877,.718223,-.537431,-.491073,.719657,-.490768,-.49028,.720756,-.489975,-.033631,-.99884,-.033631,-.035768,-.998718,-.035768,-.032075,-.998718,-.039094,-.030152,-.99884,-.036744,-.399274,.706992,-.583667,-.38081,.717704,-.582934,-.634205,.034486,-.772362,-.633595,-.04944,-.772057,-.706656,.034852,-.706656,.004883,-.997742,-.066652,-.004669,-.997131,-.075289,-.561296,.028321,-.827082,-.558855,-.045259,-.827998,.647786,.032044,-.761132,-.890713,.454512,0,-.948057,.318003,0,-.94351,.318003,-.092929,-.88641,.454573,-.087283,-.922727,.049562,-.382214,-.880825,.049593,-.470809,-.881893,0,-.471389,-.923856,0,-.382672,-.998779,.049318,0,-.993957,.049409,-.097903,-.995178,0,-.097995,-1,0,0,-.979553,.049562,-.19483,-.980773,0,-.195074,-.955748,.049562,-.289926,-.956938,0,-.290262,-.881314,.029817,-.471541,-.830439,.049593,-.554857,-.843776,.037843,-.535295,-.394269,.918973,0,-.321299,.946959,0,-.319742,.946959,-.031465,-.392376,.918973,-.038636,-.041505,.999115,0,-.041292,.999115,-.004059,-.050264,.998718,-.004944,-.050478,.998718,0,-.777886,.628376,0,-.737053,.675802,0,-.733512,.675802,-.072237,-.774132,.628376,-.076235,-.165258,.986236,0,-.083804,.99646,0,-.083407,.99646,-.008209,-.164464,.986236,-.016205,-.957701,.287729,0,-.94174,.336253,0,-.937223,.336253,-.092288,-.953093,.287729,-.093844,-.641774,.766869,0,-.587024,.809564,0,-.584185,.809564,-.057527,-.638691,.766869,-.062899,-.900967,.433821,0,-.875729,.482742,0,-.871517,.482742,-.085818,-.896634,.433821,-.08829,-.463118,.886288,0,-.460891,.886288,-.045381,-.814447,.580218,0,-.810511,.580218,-.079806,-.244728,.969573,0,-.243538,.969573,-.023988,-.970916,.239387,0,-.966247,.239387,-.095157,-.691763,.722098,0,-.688406,.722098,-.067782,-.92291,.384991,0,-.918455,.384991,-.090457,-.527421,.849574,0,-.524888,.849574,-.051698,-.84698,.531602,0,-.842891,.531602,-.08301,-.3867,.918973,-.076907,-.454207,.886288,-.090335,-.762932,.628376,-.151738,-.798791,.580218,-.158879,-.162084,.986236,-.032228,-.240028,.969573,-.047731,-.939299,.287729,-.186834,-.952239,.239387,-.189398,-.629444,.766869,-.125187,-.678457,.722098,-.134953,-.883663,.433821,-.175756,-.905179,.384991,-.180029,-.517289,.849574,-.102878,-.830714,.531602,-.165227,-.929838,.318003,-.184942,-.315134,.946959,-.062655,-.722892,.675802,-.143773,-.923643,.336253,-.183721,-.575732,.809564,-.114505,-.858913,.482742,-.170843,-.040712,.999115,-.008087,-.049532,.998718,-.009827,-.082186,.99646,-.016327,-.443159,.886288,-.134434,-.504715,.849574,-.153081,-.779382,.580218,-.236396,-.810511,.531602,-.245857,-.929106,.239387,-.281838,-.907254,.318003,-.275216,-.234169,.969573,-.071017,-.307474,.946959,-.093265,-.661977,.722098,-.200781,-.705313,.675802,-.213935,-.883175,.384991,-.267891,-.901212,.336253,-.273354,-.561724,.809564,-.170385,-.838038,.482742,-.254189,-.3773,.918973,-.114444,-.039705,.999115,-.012055,-.048341,.998718,-.014649,-.744377,.628376,-.225806,-.916471,.287729,-.277993,-.080203,.99646,-.024323,-.158147,.986236,-.047945,-.614154,.766869,-.186285,-.862178,.433821,-.261513,-.487289,.849574,-.201819,-.542314,.809564,-.224616,-.782495,.531602,-.324107,-.809076,.482742,-.335124,-.296823,.946959,-.122959,-.364269,.918973,-.150884,-.038331,.999115,-.01587,-.046663,.998718,-.019318,-.68096,.675802,-.282052,-.71865,.628376,-.297678,-.870052,.336253,-.360393,-.884793,.287729,-.366497,-.077425,.99646,-.032075,-.152684,.986236,-.063234,-.592914,.766869,-.245582,-.832392,.433821,-.344768,-.427869,.886288,-.177221,-.752434,.580218,-.311655,-.226081,.969573,-.093631,-.897,.239387,-.371532,-.639088,.722098,-.264718,-.852657,.384991,-.35316,-.875912,.318003,-.362804,-.517685,.809564,-.276711,-.565996,.766869,-.30253,-.772332,.482742,-.412824,-.79458,.433821,-.424696,-.347728,.918973,-.185858,-.408429,.886288,-.218299,-.686026,.628376,-.36668,-.718253,.580218,-.383923,-.145756,.986236,-.077914,-.215827,.969573,-.11536,-.8446,.287729,-.45146,-.856258,.239387,-.457686,-.610065,.722098,-.32609,-.813929,.384991,-.435041,-.465163,.849574,-.248634,-.746971,.531602,-.399243,-.283364,.946959,-.151463,-.836116,.318003,-.446913,-.650014,.675802,-.347453,-.830561,.336253,-.443922,-.036592,.999115,-.019562,-.044527,.998718,-.023804,-.073916,.99646,-.039521,-.533616,.766869,-.356548,-.575152,.722098,-.38432,-.749138,.433821,-.500534,-.767357,.384991,-.512742,-.385052,.886288,-.257302,-.438551,.849574,-.293008,-.677175,.580218,-.452467,-.704245,.531602,-.470534,-.203467,.969573,-.13596,-.267159,.946959,-.178503,-.807276,.239387,-.539415,-.788293,.318003,-.526719,-.612842,.675802,-.409467,-.783044,.336253,-.523209,-.488083,.809564,-.326121,-.728141,.482742,-.486526,-.32783,.918973,-.219031,-.034516,.999115,-.023041,-.041993,.998718,-.028047,-.646779,.628376,-.432173,-.069674,.99646,-.046571,-.137425,.986236,-.09183,-.796289,.287729,-.53206,-.772057,.049562,-.633595,-.772698,.034577,-.633808,-.727989,.336253,-.59743,-.740318,.287729,-.607562,-.064791,.99646,-.053163,-.12775,.986236,-.104831,-.453749,.809564,-.372387,-.496109,.766869,-.407147,-.676962,.482742,-.555559,-.696463,.433821,-.571551,-.304788,.918973,-.25013,-.357982,.886288,-.293802,-.601306,.628376,-.493484,-.629566,.580218,-.516678,-.189184,.969573,-.155248,-.750511,.239387,-.615925,-.534715,.722098,-.438826,-.713401,.384991,-.585467,-.407697,.849574,-.334605,-.654714,.531602,-.537309,-.732871,.318003,-.601428,-.24836,.946959,-.203833,-.56975,.675802,-.467574,-.032075,.999115,-.026337,-.039033,.998718,-.032044,-.039033,-.998718,-.032044,-.537767,-.718314,-.441328,-.048341,-.998718,-.014649,-.046663,-.998718,-.019318,-.64272,-.718314,-.266213,-.665731,-.718314,-.201941,-.050478,-.998718,0,-.050264,-.998718,-.004944,-.692343,-.718314,-.068178,-.6957,-.718314,0,-.049532,-.998718,-.009827,-.682333,-.718314,-.135716,-.036744,-.99884,-.030152,-.075259,-.997131,-.004669,-.066622,-.997742,.004883,-.039094,-.998718,-.032075,-.041993,-.998718,-.028047,-.578448,-.718314,-.386486,-.044557,-.998718,-.023804,-.613544,-.718314,-.327952,-.979553,-.049562,-.19483,-.993957,-.049409,-.097873,-.998779,-.049287,0,-.847987,-.05237,-.52739,-.772057,-.049593,-.633595,-.772057,-.049562,-.633595,-.830439,-.049562,-.554888,-.880825,-.049593,-.470809,-.880917,-.028657,-.472335,-.922727,-.049593,-.382183,-.955748,-.049562,-.289926,-.663167,-.696219,-.274697,-.68688,-.696219,-.20835,-.704001,-.696219,-.140019,-.714347,-.696219,-.070345,-.717795,-.696219,0,-.554857,-.696219,-.455367,-.59682,-.696219,-.398785,-.633045,-.696219,-.338359,-.822871,.454634,-.340831,-.785485,.454634,-.419843,-.873531,.454634,-.173742,-.852321,.454634,-.258522,-.740562,.454634,-.494827,-.688498,.454634,-.56502,-.745109,-.039705,.665731,-.739189,0,.673452,-.74514,.024964,.666402,-.737053,-.045137,.674306,-.583697,.706778,-.39967,-.537522,.71923,-.440168,-.537095,.718619,-.441633,-.582598,.717948,-.380871,-.761101,.032044,.647816,-.772362,.034486,-.634205,-.772057,-.04944,-.633595,-.880703,0,-.473647,-.827082,.028352,-.561327,-.827998,-.045289,-.558885,.548418,-.043794,-.835017,.495254,-.172765,-.851375,.634205,-.175573,-.752922,.419324,-.334239,-.84405,.571825,-.360088,-.737083,.337809,-.485092,-.806543,.492447,-.531968,-.688803,.239448,-.644887,-.725761,.398785,-.690298,-.603687,.078738,-.977966,-.193243,-.029481,-.940794,-.337626,-.096988,-.973662,-.206275,-.130711,-.867306,-.48027,-.20481,-.909909,-.360668,-.21015,-.750175,-.626942,-.297617,-.803735,-.515152,-.328837,-.590716,-.736808,-.387707,-.658528,-.644948,-.466994,-.473769,-.746605,-.480483,-.518082,-.707572,-.542741,-.374065,-.751976,-.551836,-.383282,-.740623,-.584704,-.195166,-.787408,-.587207,-.197607,-.784906,-.352397,-946ee-6,-.998505,.287545,-.089785,-.95352,.303446,-.094607,-.948119,.271981,.066042,-.960021,.218665,.227851,-.94879,-.011322,.506088,-.862392,.073397,.626911,-.775597,.002319,.662191,-.74929,-.172613,.630726,-.756554,-.27488,.622028,-.733116,-.393475,.37553,-.839106,-.600238,.309671,-.737419,-.591144,.266732,-.761162,-.478378,.183325,-.858791,-.420179,.096622,-.902249,-.126377,.111728,-.985656,-.186041,.344279,-.920225,-.787469,-.195135,-.584613,-.784936,-.197577,-.587176,-.752007,-.374035,-.542711,-.740654,-.383251,-.551836,-.746605,-.473739,-.466994,-.707572,-.518082,-.480483,-.736808,-.590716,-.328806,-.644948,-.658528,-.387707,-.206275,-.973662,-.096988,-.337596,-.940794,-.029511,-.193213,-.977966,.078738,-.488571,-.870327,.061251,-.349284,-.917051,.192358,-.612171,-.777184,.145543,-.487014,-.820704,.298685,-.725761,-.644887,.239448,-.603687,-.690298,.398755,-.752922,-.175573,.634236,-.851344,-.172735,.495285,-.835017,-.043794,.548448,-.919614,-.173711,.352275,-.915281,-.048036,.399915,-.960967,-.194067,.197089,-.968322,-.063906,.24131,-.986267,-.16422,.01648,-.995025,-.065279,.075137,-.992309,-.067385,-.103702,-.997528,-.030366,-.062868,-.980255,-.012757,-.197272,-.981842,.002258,-.189611,-.93585,-732ee-6,-.054201,-.993316,-.048189,-.104587,-.980926,-.051485,-.187323,-.942778,.062349,-.327433,-.902249,.096652,-.420209,-.839076,.375591,-.393475,-.666982,.499222,-.553026,-.664815,.531663,-.524674,-.723838,.577197,-.378002,-.733116,.622059,-.27485,-.862392,.506088,-.011383,-.798944,.42262,.427808,-.796686,.411176,.442946,-.883999,.318674,.34196,-.94882,.227851,.218635,-.985656,.111759,-.126408,-.920194,.34434,-.186041,-.693442,.195624,-.693442,-.62212,.195624,-.758049,-.65331,.382519,-.65331,-.586108,.382519,-.714194,-.588244,.554857,-.588244,-.527757,.554857,-.643086,-.500748,.706015,-.500748,-.449263,.706015,-.54741,-.394086,.830287,-.394086,-.353557,.830256,-.43083,-.272286,.92288,-.272286,-.24427,.92288,-.297647,-.139958,.980193,-.139958,-.125553,.980193,-.152989,-.109958,.980193,-.164556,-.213935,.922849,-.32017,-.309641,.830256,-.463393,-.393445,.706015,-.588824,-.462172,.554857,-.691702,-.513291,.38255,-.768212,-.544816,.195593,-.815394,-.462264,.195593,-.864864,-.43553,.38255,-.814814,-.392163,.554857,-.733696,-.333811,.706015,-.624561,-.262703,.830287,-.491501,-.181524,.922849,-.33961,-.093295,.980193,-.174535,-.075716,.980193,-.182836,-.147343,.922849,-.355754,-.213263,.830287,-.514878,-.271004,.706015,-.654256,-.318369,.554857,-.768609,-.353557,.38255,-.853603,-.375286,.195593,-.906003,-.284646,.195593,-.938444,-.268197,.382519,-.884152,-.241493,.554857,-.796106,-.205573,.706015,-.677664,-.161779,.830287,-.533311,-.111759,.922849,-.368511,-.057436,.980193,-.189398,-.191321,.195624,-.961821,-.180242,.382519,-.906156,-.162297,.554857,-.815943,-.138157,.706015,-.694571,-.108707,.830287,-.546617,-.075106,.92288,-.377667,-.038606,.980193,-.194128,-.019379,.980193,-.196936,-.037751,.92288,-.38316,-.054628,.830287,-.554582,-.06943,.706015,-.704764,-.081576,.554796,-.827967,-.090579,.382397,-.919523,-.096133,.195379,-.975982,-.139958,-.980193,-.139958,-.125553,-.980193,-.152989,-.272317,-.922849,-.272317,-.244301,-.922849,-.297678,-.394086,-.830256,-.394086,-.353557,-.830256,-.43083,-.500748,-.706015,-.500748,-.449263,-.706015,-.547441,-.588275,-.554826,-.588275,-.527757,-.554826,-.643086,-.65331,-.382519,-.65331,-.586108,-.38255,-.714194,-.693411,-.195624,-.693442,-.62212,-.195624,-.758049,-.544816,-.195624,-.815394,-.513291,-.382519,-.768212,-.462172,-.554857,-.691733,-.393445,-.706015,-.588824,-.309641,-.830256,-.463393,-.213935,-.922849,-.3202,-.109958,-.980193,-.164556,-.093295,-.980193,-.174566,-.181524,-.922849,-.33964,-.262703,-.830256,-.491531,-.333811,-.706015,-.624561,-.392163,-.554857,-.733696,-.43553,-.382519,-.814814,-.462264,-.195593,-.864864,-.375286,-.195593,-.906003,-.353557,-.38255,-.853603,-.318369,-.554857,-.768609,-.271004,-.706015,-.654256,-.213263,-.830256,-.514908,-.147374,-.922849,-.355815,-.075716,-.980193,-.182867,-.057436,-.980193,-.189398,-.111789,-.922849,-.368542,-.161779,-.830256,-.533341,-.205573,-.706015,-.677664,-.241493,-.554857,-.796106,-.268197,-.382519,-.884152,-.284646,-.195593,-.938444,-.038606,-.980193,-.194128,-.075106,-.922849,-.377697,-.108707,-.830256,-.546617,-.138157,-.706015,-.694571,-.162297,-.554826,-.815943,-.180242,-.382519,-.906186,-.19129,-.195624,-.961821,-.096133,-.195379,-.975982,-.090579,-.382397,-.919523,-.081576,-.554765,-.827967,-.06943,-.706015,-.704764,-.054628,-.830287,-.554613,-.037751,-.92288,-.38319,-.019379,-.980193,-.196936,-.35197,0,-.936003,-.189917,0,-.98178,-.031831,0,-.999481,.12241,0,-.992462,.273751,0,-.961791,.422773,0,-.906217,.568834,0,-.822413,-.480392,.652791,-.585711,-.522355,.567217,-.636708,-.554125,.486587,-.675344,-.579424,.407056,-.706076,-.600085,.32432,-.731223,-.616871,.233314,-.751671,-.629231,.127201,-.766717,-.621967,-.19657,-.757927,-.585559,-.384564,-.713584,-.526566,-.557604,-.641682,-.44731,-.709037,-.545091,-.350841,-.833094,-.427564,-.240944,-.925047,-.293619,-.12183,-.981353,-.148473,-.535386,.653401,-.535142,-.58211,.567888,-.581927,-.617481,.48732,-.617389,-.64565,.407819,-.645589,-.668691,.325053,-.668661,-.68746,.234046,-.687429,-.701285,.127903,-.701285,-.693258,-.196783,-.693258,-.652669,-.384686,-.652669,-.586932,-.557665,-.586932,-.498611,-.709037,-.498611,-.391095,-.833064,-.391125,-.268593,-.925016,-.268624,-.135838,-.981353,-.135838,-.125553,-.980193,-.152959,-.24427,-.92288,-.297617,-.353587,-.830256,-.430799,-.449293,-.705985,-.54741,-.527818,-.554796,-.643086,-.5862,-.382397,-.714225,-.622181,-.195379,-.75808,-.272286,-.922849,-.272286,-.394116,-.830256,-.394116,-.693442,-.195624,-.693442,-.701315,.127445,-.701315,-.629261,.126682,-.766778,-.687582,.233345,-.687551,-.616962,.23249,-.751823,-.668905,.324198,-.668874,-.600299,.323222,-.731529,-.645955,.406781,-.645924,-.579821,.405683,-.706534,-.617969,.486129,-.617878,-.554796,.484939,-.676015,-.582781,.566424,-.582629,-.523362,.565172,-.637654,-.536485,.651601,-.536271,-.481979,.650288,-.587176,-.152989,.980193,-.125553,-.297678,.922849,-.24427,-.430799,.830287,-.353557,-.54741,.706015,-.449263,-.643086,.554857,-.527757,-.714194,.38255,-.586108,-.758049,.195624,-.62212,-.815394,.195624,-.544816,-.768212,.38255,-.513291,-.691733,.554857,-.462172,-.588824,.706015,-.393445,-.463393,.830287,-.30961,-.32017,.922849,-.213935,-.164556,.980193,-.109958,-.174535,.980193,-.093295,-.33961,.922849,-.181524,-.491531,.830256,-.262703,-.624561,.706015,-.333811,-.733696,.554857,-.392163,-.814814,.38255,-.43553,-.864864,.195624,-.462264,-.906003,.195593,-.375286,-.853603,.382519,-.353557,-.768578,.554857,-.318339,-.654256,.706015,-.271004,-.514908,.830256,-.213263,-.355754,.922849,-.147343,-.182867,.980193,-.075747,-.189398,.980193,-.057436,-.36848,.922849,-.111759,-.533311,.830256,-.161779,-.677694,.706015,-.205573,-.796106,.554857,-.241493,-.884152,.382519,-.268197,-.938444,.195593,-.284677,-.194128,.980193,-.038606,-.377667,.922849,-.075106,-.546617,.830256,-.108707,-.694571,.706015,-.138157,-.815943,.554826,-.162297,-.906156,.38255,-.180242,-.961821,.195624,-.191321,-.975982,.195379,-.096133,-.919523,.382397,-.090579,-.827967,.554796,-.081576,-.704764,.706015,-.06943,-.554613,.830287,-.054628,-.38316,.92288,-.037751,-.196936,.980224,-.019379,-.197851,.980224,0,-.38496,.92291,0,-.557237,.830317,0,-.708182,.705985,0,-.832026,.554735,0,-.924039,.382275,0,-.980743,.195196,0,-.758049,-.195624,-.62212,-.714194,-.382519,-.586138,-.643086,-.554826,-.527757,-.54741,-.706015,-.449263,-.43083,-.830256,-.353557,-.297678,-.922849,-.244301,-.152989,-.980193,-.125553,-.164556,-.980193,-.109958,-.3202,-.922849,-.213965,-.463393,-.830256,-.309641,-.588824,-.706015,-.393445,-.691733,-.554826,-.462203,-.768212,-.38255,-.513291,-.815394,-.195624,-.544816,-.864864,-.195624,-.462264,-.814814,-.382519,-.43553,-.733696,-.554826,-.392163,-.624561,-.706015,-.333842,-.491531,-.830256,-.262734,-.33964,-.922849,-.181524,-.174535,-.980193,-.093295,-.182867,-.980193,-.075716,-.355785,-.922849,-.147374,-.514908,-.830256,-.213294,-.654286,-.706015,-.271004,-.768609,-.554857,-.318369,-.853603,-.382519,-.353557,-.906003,-.195593,-.375286,-.938444,-.195593,-.284677,-.884152,-.382519,-.268197,-.796106,-.554826,-.241493,-.677694,-.705985,-.205573,-.533341,-.830256,-.161779,-.368511,-.922849,-.111789,-.189398,-.980193,-.057436,-.961821,-.195624,-.191321,-.906156,-.382519,-.180242,-.815943,-.554826,-.162297,-.694571,-.706015,-.138157,-.546617,-.830256,-.108707,-.377697,-.922849,-.075106,-.194128,-.980193,-.038606,-.196936,-.980193,-.019379,-.38319,-.92288,-.037751,-.554613,-.830287,-.054628,-.704764,-.706015,-.06943,-.827967,-.554765,-.081576,-.919523,-.382397,-.090579,-.975982,-.195379,-.096133,-.980743,-.195166,0,-.924039,-.382275,0,-.832026,-.554735,0,-.708182,-.706015,0,-.557268,-.830317,0,-.385022,-.92288,0,-.197851,-.980224,0,-.822413,0,.568865,-.906217,0,.422803,-.961791,0,.273751,-.992462,0,.12241,-.999481,0,-.031861,-.98178,0,-.189947,-.935972,0,-.35197,-.766717,.12714,-.629231,-.751671,.233161,-.616901,-.731284,.324076,-.600146,-.706198,.40669,-.579516,-.675527,.486129,-.554308,-.637013,.566607,-.522629,-.586169,.652058,-.480819,-.148473,-.981353,-.12183,-.293619,-.925047,-.240944,-.427564,-.833094,-.350841,-.545091,-.709037,-.44731,-.641682,-.557573,-.526566,-.713584,-.384533,-.585559,-.757927,-.19657,-.621967,-.75808,-.195379,-.622181,-.714225,-.382397,-.5862,-.643086,-.554796,-.527818,-.54741,-.705985,-.449293,-.430799,-.830256,-.353587,-.297617,-.92288,-.24427,-.152959,-.980193,-.125553,-.586627,.651021,-.481613,-.637318,.565783,-.523118,-.675771,.485427,-.554643,-.706412,.406049,-.57973,-.731437,.323435,-.600269,-.751793,.232612,-.616962,-.766778,.126743,-.629261,-.015656,.987121,-.159124,-.029633,.953154,-.301004,-.041841,.904172,-.425062,-.052797,.84225,-.536454,-.062899,.766564,-.639058,-.07239,.67394,-.735191,-.08124,.558885,-.82522,-.161748,.558977,-.813227,-.144108,.674001,-.724509,-.125248,.766564,-.62978,-.105136,.84225,-.528703,-.083316,.904172,-.418928,-.058992,.953124,-.29667,-.03119,.987121,-.156865,-.046419,.987121,-.15305,-.087802,.953124,-.289468,-.123966,.904172,-.408734,-.156468,.84225,-.515824,-.186377,.766564,-.61446,-.214423,.674001,-.7069,-.240669,.558977,-.793451,-.06119,.987121,-.14774,-.115757,.953124,-.279458,-.163457,.904172,-.394604,-.206275,.84225,-.498001,-.245735,.766564,-.593249,-.282693,.674001,-.682485,-.317301,.558977,-.766045,-.390851,.558977,-.731254,-.348216,.674001,-.651479,-.302683,.766564,-.566301,-.254097,.84225,-.475387,-.201331,.904172,-.37669,-.142582,.953124,-.266762,-.075381,.987121,-.141026,-.088839,.987121,-.132969,-.168035,.953124,-.251503,-.237281,.904172,-.355144,-.299478,.84225,-.448195,-.356731,.766564,-.533921,-.410382,.674001,-.614215,-.460646,.558977,-.689413,-.526017,.558977,-.64095,-.468612,.674001,-.571032,-.407361,.766564,-.496384,-.34196,.84225,-.416669,-.270974,.904172,-.33018,-.1919,.953124,-.233833,-.101444,.987121,-.12363,-.113071,.987121,-.113071,-.213904,.953124,-.213874,-.302011,.904172,-.302011,-.381146,.84225,-.381146,-.454054,.766564,-.454054,-.522355,.674001,-.522355,-.586291,.558946,-.586322,-.82522,.558885,-.08124,-.829279,.558794,0,-.735191,.67394,-.07239,-.738792,.67391,0,-.639058,.766564,-.062899,-.64217,.766533,0,-.536454,.84225,-.052797,-.539048,.84225,0,-.425062,.904172,-.041841,-.427107,.904172,0,-.301004,.953154,-.029633,-.302438,.953154,0,-.159154,.987121,-.015656,-.159886,.987121,0,-.156865,.987121,-.03119,-.29667,.953124,-.058992,-.418928,.904172,-.083316,-.528703,.84225,-.105167,-.62978,.766564,-.125248,-.724509,.674001,-.144108,-.813227,.558977,-.161748,-.793451,.558977,-.240669,-.7069,.674001,-.214423,-.61449,.766564,-.186407,-.515824,.84225,-.156468,-.408734,.904172,-.123966,-.289468,.953124,-.087802,-.15305,.987121,-.046419,-.766045,.558977,-.317301,-.682485,.674001,-.282693,-.593249,.766564,-.245735,-.498001,.84225,-.206275,-.394604,.904172,-.163457,-.279458,.953124,-.115757,-.14774,.987121,-.06119,-.141026,.987121,-.075381,-.266762,.953124,-.142582,-.37669,.904172,-.201331,-.475387,.84225,-.254097,-.566301,.766564,-.302683,-.651479,.674001,-.348216,-.731254,.558977,-.390851,-.689413,.558977,-.460646,-.614215,.674001,-.410382,-.533921,.766564,-.356731,-.448195,.84225,-.299478,-.355144,.904172,-.237281,-.251503,.953124,-.168065,-.132969,.987121,-.088839,-.12363,.987121,-.101444,-.233833,.953124,-.1919,-.33018,.904172,-.270943,-.416669,.84225,-.34196,-.496384,.766564,-.407361,-.571032,.674001,-.468612,-.64095,.558977,-.526017,-.554888,.049562,.830439,-.633595,.049562,.772057,-.633808,.034547,.772698,-.535295,.037843,.843776,-.382183,.049562,.922727,-.470809,.049562,.880825,-.471389,0,.881893,-.382672,0,.923856,-.097873,.04944,.993957,-.097995,0,.995178,-.19483,.049562,.979553,-.195074,0,.980773,-.289926,.049562,.955748,-.290262,0,.956938,-.471541,.029817,.881314,-.031465,.946959,.319742,-.038636,.918973,.392376,-.004059,.999115,.041292,-.004944,.998718,.050233,-.072237,.675802,.733512,-.076235,.628376,.774132,-.008209,.99646,.083407,-.016175,.986236,.164464,-.092288,.336253,.937223,-.093844,.287729,.953093,-.057527,.809564,.584185,-.062899,.766869,.638691,-.085818,.482742,.871517,-.08829,.433821,.896634,-.045381,.886288,.460891,-.079806,.580218,.810511,-.023988,.969573,.243538,-.095157,.239387,.966247,-.067782,.722098,.688406,-.090457,.384991,.918455,-.051698,.849574,.524888,-.08301,.531602,.842891,-.092929,.318003,.94351,-.076907,.918973,.3867,-.090335,.886288,.454207,-.151738,.628376,.762932,-.158879,.580218,.798791,-.032228,.986236,.162084,-.047731,.969573,.240028,-.186834,.287729,.939299,-.189398,.239387,.952239,-.125187,.766869,.629444,-.134953,.722098,.678457,-.175756,.433821,.883663,-.180029,.384991,.905179,-.102878,.849574,.517289,-.165227,.531602,.830714,-.184942,.318003,.929838,-.062655,.946959,.315134,-.143773,.675802,.722892,-.183721,.336253,.923643,-.114505,.809564,.575732,-.170843,.482742,.858913,-.008087,.999115,.040712,-.009857,.998718,.049532,-.016327,.99646,.082186,-.134434,.886288,.443159,-.153111,.849574,.504715,-.236396,.580218,.779382,-.245857,.531602,.810511,-.281838,.239387,.929106,-.275185,.318003,.907254,-.071017,.969573,.234169,-.093265,.946959,.307474,-.200781,.722098,.661977,-.213935,.675802,.705313,-.267891,.384991,.883175,-.273354,.336253,.901212,-.170385,.809564,.561724,-.254189,.482742,.838038,-.114444,.918973,.3773,-.012024,.999115,.039705,-.014649,.998718,.048341,-.225806,.628376,.744377,-.277993,.287729,.916471,-.024323,.99646,.080203,-.047975,.986236,.158147,-.186285,.766869,.614154,-.261513,.433821,.862178,-.201819,.849574,.487289,-.224616,.809564,.542314,-.324107,.531602,.782495,-.335124,.482742,.809076,-.122959,.946959,.296823,-.150884,.918973,.364269,-.01587,.999115,.038362,-.019318,.998718,.046663,-.282052,.675802,.68096,-.297678,.628376,.71865,-.360393,.336253,.870052,-.366497,.287729,.884793,-.032075,.99646,.077425,-.063234,.986236,.152684,-.245582,.766869,.592914,-.344768,.433821,.832392,-.177221,.886288,.427869,-.311655,.580218,.752434,-.093631,.969573,.226081,-.371532,.239387,.897,-.264718,.722098,.639088,-.35316,.384991,.852657,-.362804,.318003,.875912,-.276711,.809564,.517685,-.30253,.766869,.565996,-.412824,.482742,.772332,-.424696,.433821,.79458,-.185858,.918973,.347728,-.218299,.886288,.408429,-.36668,.628376,.686026,-.383923,.580218,.718253,-.077914,.986236,.145756,-.11536,.969573,.215827,-.45146,.287729,.8446,-.457686,.239387,.856258,-.32609,.722098,.610065,-.435041,.384991,.813929,-.248634,.849574,.465163,-.399243,.531602,.746971,-.151463,.946959,.283364,-.446913,.318003,.836116,-.347453,.675802,.650014,-.443922,.336253,.830561,-.019562,.999115,.036592,-.023804,.998718,.044557,-.039491,.99646,.073885,-.356548,.766869,.533616,-.38432,.722098,.575152,-.500534,.433821,.749138,-.512742,.384991,.767357,-.257271,.886288,.385052,-.293008,.849574,.438551,-.452467,.580218,.677175,-.470534,.531602,.704245,-.13596,.969573,.203467,-.178503,.946959,.267159,-.539415,.239387,.807276,-.526719,.318003,.788293,-.409467,.675802,.612842,-.523209,.336253,.783044,-.326121,.809564,.488083,-.486526,.482742,.728141,-.219031,.918973,.32783,-.023041,.999115,.034516,-.028047,.998718,.041993,-.432173,.628376,.646779,-.046541,.99646,.069674,-.0918,.986236,.137425,-.53206,.287729,.796289,-.706229,.049562,.706229,-.706656,.034913,.706656,-.59743,.336253,.727989,-.607562,.287729,.740318,-.053163,.99646,.064791,-.104831,.986236,.12775,-.372387,.809564,.453749,-.407147,.766869,.496109,-.555559,.482742,.676962,-.571551,.433821,.696463,-.25013,.918973,.304788,-.293802,.886288,.357982,-.493484,.628376,.601306,-.516678,.580218,.629566,-.155248,.969573,.189154,-.615925,.239387,.750511,-.438826,.722098,.534715,-.585467,.384991,.713401,-.334605,.849574,.407697,-.537309,.531602,.654714,-.601428,.318003,.732871,-.203833,.946959,.24836,-.467574,.675802,.56975,-.026337,.999115,.032075,-.032044,.998718,.039033,-.116855,.986236,.116855,-.17304,.969573,.17304,-.677175,.287729,.677175,-.686544,.239387,.686544,-.45381,.766869,.45381,-.489151,.722098,.489151,-.637074,.433821,.637074,-.652577,.384991,.652577,-.327464,.886288,.327464,-.372936,.849574,.372936,-.575884,.580218,.575884,-.598895,.531602,.598895,-.22718,.946959,.22718,-.67037,.318003,.67037,-.521165,.675802,.521165,-.059267,.99646,.059236,-.665914,.336253,.665914,-.415082,.809564,.415082,-.619251,.482742,.619221,-.278787,.918973,.278787,-.029359,.999115,.029328,-.035707,.998718,.035707,-.550035,.628376,.550035,-.633595,-.049593,.772057,-.706229,-.049745,.706198,-.706229,-.049562,.706229,-.633595,-.049562,.772057,-.019318,-.998718,.046663,-.023804,-.998718,.044557,-.327952,-.718314,.613544,-.266213,-.718314,.64272,-.004944,-.998718,.050233,-.009827,-.998718,.049562,-.135716,-.718314,.682333,-.068178,-.718314,.692343,-.014649,-.998718,.048341,-.201941,-.718314,.665731,-.028047,-.998718,.041993,-.032044,-.998718,.039033,-.441328,-.718314,.537767,-.386486,-.718314,.578448,-.097903,-.04944,.993957,-.473647,0,.880703,-.472335,-.028657,.880917,-.52739,-.05237,.847987,-.554888,-.049562,.830439,-.470809,-.049562,.880825,-.382183,-.049562,.922727,-.289926,-.049562,.955748,-.19483,-.049562,.979553,-.274697,-.696219,.663167,-.20835,-.696219,.686911,-.140019,-.696219,.704001,-.070345,-.696219,.714347,-.491928,-.718314,.491928,-.507553,-.696219,.507553,-.455367,-.696219,.554857,-.398785,-.696219,.59682,-.338359,-.696219,.633045,-.494827,.454634,.740562,-.56502,.454634,.688498,-.340831,.454634,.822871,-.419843,.454634,.785485,-.087283,.454573,.88641,-.173742,.454634,.873531,-.258522,.454634,.85229,-.035707,-.998718,.035707,-.62978,.454604,.62978,.665731,-.039705,.745109,.673452,0,.739219,.666402,.024964,.74514,.674306,-.045137,.737053,-.439863,.719596,.537248,-.49031,.720756,.489975,-.491073,.719657,.490768,-.441877,.718223,.537431,-.033631,-.99884,.033631,-.030152,-.99884,.036744,-.032075,-.998718,.039094,-.035768,-.998718,.035768,-.399274,.706992,.583667,-.380779,.717704,.582965,-.634205,.034486,.772362,-.706656,.034852,.706656,-.706229,-.049593,.706229,-.633595,-.04944,.772057,-.004669,-.997131,.075259,.004883,-.997742,.066652,-.561296,.028321,.827082,-.558855,-.045259,.827998,.647786,.032044,.761101,-.88641,.454573,.087283,-.94351,.318003,.092898,-.922727,.049593,.382183,-.923856,0,.382672,-.881893,0,.471389,-.880825,.049593,.470809,-.995178,0,.097995,-.993957,.049409,.097873,-.980773,0,.195074,-.979553,.049562,.19483,-.955748,.049562,.289926,-.956938,0,.290262,-.843776,.037843,.535295,-.830439,.049562,.554857,-.881314,.029817,.471511,-.392376,.918973,.038636,-.319742,.946959,.031465,-.050264,.998718,.004944,-.041292,.999115,.004059,-.774132,.628376,.076235,-.733512,.675802,.072237,-.164464,.986236,.016175,-.083407,.99646,.008209,-.953093,.287729,.093844,-.937223,.336253,.092288,-.638691,.766869,.062899,-.584185,.809564,.057527,-.896634,.433821,.08829,-.871517,.482742,.085818,-.460891,.886288,.045381,-.810511,.580218,.079806,-.243538,.969573,.023957,-.966247,.239387,.095157,-.688406,.722098,.067782,-.918455,.384991,.090457,-.524888,.849574,.051668,-.842891,.531602,.08301,-.454207,.886288,.090335,-.3867,.918973,.076907,-.798791,.580218,.158879,-.762932,.628376,.151738,-.240028,.969573,.047731,-.162084,.986236,.032228,-.952239,.239387,.189398,-.939299,.287729,.186834,-.678457,.722098,.134953,-.629444,.766869,.125187,-.905179,.384991,.180029,-.883663,.433821,.175756,-.517289,.849574,.102878,-.830714,.531602,.165227,-.929838,.318003,.184942,-.315134,.946959,.062655,-.722892,.675802,.143773,-.923643,.336253,.183721,-.575732,.809564,.114505,-.858913,.482742,.170843,-.049532,.998718,.009827,-.040712,.999115,.008087,-.082186,.99646,.016327,-.504715,.849574,.153081,-.443159,.886288,.134434,-.810511,.531602,.245857,-.779382,.580218,.236396,-.907254,.318003,.275185,-.929106,.239387,.281838,-.307474,.946959,.093265,-.234199,.969573,.071017,-.705313,.675802,.213935,-.661977,.722098,.200781,-.901212,.336253,.273354,-.883175,.384991,.267891,-.561724,.809564,.170385,-.838038,.482742,.254189,-.3773,.918973,.114444,-.048341,.998718,.014649,-.039705,.999115,.012024,-.744377,.628376,.225806,-.916471,.287729,.277993,-.158147,.986236,.047975,-.080203,.99646,.024323,-.614154,.766869,.186285,-.862178,.433821,.261513,-.542314,.809564,.224616,-.487289,.849574,.201819,-.809076,.482742,.335124,-.782495,.531602,.324107,-.364269,.918973,.150884,-.296823,.946959,.122959,-.046663,.998718,.019318,-.038331,.999115,.01587,-.71868,.628376,.297678,-.68096,.675802,.282052,-.884793,.287729,.366497,-.870052,.336253,.360393,-.152684,.986236,.063234,-.077425,.99646,.032075,-.592914,.766869,.245582,-.832392,.433821,.344768,-.427869,.886288,.177221,-.752434,.580218,.311655,-.226081,.969573,.093631,-.897,.239387,.371532,-.639088,.722098,.264718,-.852657,.384991,.35316,-.875912,.318003,.362804,-.565996,.766869,.30253,-.517685,.809564,.276711,-.79458,.433821,.424696,-.772332,.482742,.412824,-.408429,.886288,.218299,-.347728,.918973,.185858,-.718284,.580218,.383923,-.686026,.628376,.36668,-.215827,.969573,.11536,-.145756,.986236,.077914,-.856258,.239387,.457686,-.8446,.287729,.45146,-.610065,.722098,.32609,-.813929,.384991,.435041,-.465163,.849574,.248634,-.746971,.531602,.399243,-.283364,.946959,.151463,-.836116,.318003,.446913,-.650014,.675802,.347423,-.830561,.336253,.443922,-.044527,.998718,.023804,-.036592,.999115,.019562,-.073916,.99646,.039491,-.575182,.722098,.38432,-.533616,.766869,.356548,-.767357,.384991,.512742,-.749138,.433821,.500534,-.438551,.849574,.293008,-.385052,.886288,.257271,-.704245,.531602,.470534,-.677175,.580218,.452467,-.267159,.946959,.178503,-.203467,.969573,.13596,-.788293,.318003,.526719,-.807276,.239387,.539415,-.612842,.675802,.409467,-.783044,.336253,.523209,-.488083,.809564,.326121,-.728141,.482742,.486526,-.32783,.918973,.219031,-.041993,.998718,.028047,-.034516,.999115,.023041,-.646779,.628376,.432173,-.137425,.986236,.0918,-.069674,.99646,.046571,-.796289,.287729,.53206,-.772698,.034547,.633808,-.772057,.049562,.633595,-.740318,.287729,.607532,-.727989,.336253,.59743,-.12775,.986236,.104831,-.064791,.99646,.053163,-.496109,.766869,.407117,-.453749,.809564,.372387,-.696463,.433821,.571551,-.676962,.482742,.555559,-.357982,.886288,.293802,-.304788,.918973,.25013,-.629566,.580218,.516678,-.601306,.628376,.493484,-.189184,.969573,.155248,-.750511,.239387,.615925,-.534715,.722098,.438826,-.713401,.384991,.585467,-.407697,.849574,.334605,-.654714,.531602,.537309,-.732871,.318003,.601428,-.24836,.946959,.203833,-.56975,.675802,.467574,-.039033,.998718,.032044,-.032075,.999115,.026337,-.039033,-.998718,.032044,-.537767,-.718314,.441328,-.048341,-.998718,.014649,-.665731,-.718314,.201941,-.64272,-.718314,.266213,-.046663,-.998718,.019318,-.692343,-.718314,.068178,-.050264,-.998718,.004944,-.682333,-.718314,.135716,-.049532,-.998718,.009827,-.036744,-.99884,.030152,-.039094,-.998718,.032075,-.066622,-.997742,-.004883,-.075259,-.997131,.004669,-.041993,-.998718,.028047,-.578448,-.718314,.386486,-.613544,-.718314,.327952,-.044557,-.998718,.023804,-.993957,-.04944,.097873,-.979553,-.049532,.19483,-.847987,-.05237,.52739,-.830439,-.049562,.554857,-.772057,-.049562,.633595,-.772057,-.049593,.633595,-.880917,-.028657,.472335,-.880825,-.049562,.470809,-.922727,-.049562,.382183,-.955748,-.049562,.289926,-.686911,-.696219,.20835,-.663167,-.696219,.274697,-.704001,-.696219,.140019,-.714347,-.696219,.070345,-.554857,-.696219,.455367,-.59682,-.696219,.398785,-.633045,-.696219,.338359,-.822871,.454604,.340831,-.785485,.454634,.419843,-.873531,.454634,.173742,-.852321,.454634,.258522,-.740562,.454634,.494797,-.688498,.454634,.56502,-.745079,-.039705,-.665731,-.737053,-.045137,-.674306,-.74514,.024964,-.666402,-.739189,0,-.673452,-.583667,.706778,.39967,-.582598,.717948,.380902,-.537095,.718619,.441633,-.537522,.71923,.440168,-.761101,.032044,-.647816,-.772362,.034486,.634205,-.772057,-.04944,.633595,-.880703,0,.473647,-.827082,.028352,.561327,-.827998,-.045259,.558885,.634205,-.175573,.752922,.495254,-.172765,.851375,.548418,-.043794,.835017,.571795,-.360118,.737083,.419324,-.334269,.84405,.492447,-.531999,.688803,.337779,-.485092,.806543,.398785,-.690298,.603687,.239448,-.644887,.725761,-.096988,-.973662,.206275,-.029481,-.940794,.337626,.078738,-.977966,.193243,-.20481,-.909909,.360668,-.130711,-.867306,.48027,-.297617,-.803735,.515183,-.21015,-.750175,.626911,-.387707,-.658528,.644978,-.328806,-.590716,.736808,-.480483,-.518082,.707602,-.466994,-.473769,.746605,-.551805,-.383282,.740654,-.54268,-.374096,.752007,-.587146,-.197607,.784936,-.584674,-.195135,.787408,-.350291,.003967,.936613,-.352458,-.001038,.935789,-.189642,.002136,.981842,-.197302,-.013001,.980224,-.062899,-.030457,.997528,-.103732,-.067507,.992309,.075076,-.06531,.995025,.016449,-.164251,.986267,.352245,-.173742,.919614,.399884,-.048036,.915281,.298471,-.314127,.901212,.238838,-.446211,.862453,.142796,-.603778,.784234,.061251,-.870357,.488571,.192358,-.917051,.349284,-.040498,-.804559,.592456,-.125004,-.707572,.695456,-.284951,-.540178,.791803,-.445814,-.429121,.785516,-.521714,-.355785,.775353,-.574694,-.187902,.796472,-.359081,-.017487,.933134,-.213263,-.047121,.975829,-.144261,-.112461,.983123,-.025605,-.237007,.97116,.197028,-.194067,.960967,.241249,-.063906,.968322,.170141,-.306803,.93643,.135868,-.409986,.901883,.050844,-.547594,.83517,.145573,-.777184,.612171,.298715,-.820673,.487014,.042482,-.730125,.681967,-.04709,-.658254,.751305,-.232093,-.494552,.83755,-.415479,-.389874,.821802,-.497452,-.337474,.799127,-.563097,-.180761,.80636,-.365368,-.036958,.930113,-.228584,-.086032,.969695,-.176153,-.161412,.971007,-.060762,-.306131,.950041,-.119053,-.414075,.902402,-.353832,-.308145,.883084,-.417402,-.263283,.869716,-.456618,-.183233,.870571,-.356487,-.118137,.926786,-.28663,-.150212,.946165,-.246895,-.211249,.945708,-.314707,.683859,.658193,-.39079,.623005,.677572,-.449904,.640095,.62273,-.182684,.629597,.755089,-.284555,.569597,.771081,-.030366,.558977,.828608,-.141057,.501114,.853786,.135289,.472945,.870632,.032655,.414502,.909452,.540391,.025361,.841029,.458632,.111881,.881527,.567248,.130284,.813135,.399701,.020569,.916379,.325144,.101077,.940214,.245308,.025697,.969085,.172735,.107639,.979064,.080905,.029786,.996246,.010132,.089938,.99588,-.057375,.009247,.998291,-.091891,.027009,.995392,-.170843,-.014496,.985168,-.179296,-.004517,.983764,-.336558,-.012757,.941557,-.338481,-.009491,.940916,-.61742,.146001,.772942,-.635823,.164586,.754051,-.609821,.255684,.750114,-.626453,.278726,.727897,-.586352,.332743,.738548,-.596149,.338328,.72808,-.552141,.404126,.72924,-.528672,.398846,.74926,-.443525,.561296,.698691,-.494186,.564623,.661,-.339335,.520432,.783563,-.194311,.458907,.86697,-.022401,.369427,.928983,.321451,.232398,.917936,.433546,.26072,.862545,.209326,.208594,.955321,.089969,.196722,.976318,-.070193,.156346,.985198,-.160253,.078005,.983978,-.225349,.037385,.97354,-.362896,.015564,.931669,-.625446,.161016,.763451,-.603931,.271065,.749504,-.565386,.311441,.763726,-.467208,.365398,.805078,-.470931,.491379,.732627,-.521378,.486923,.700705,-.372021,.463942,.803919,-.237739,.41435,.878506,-.081362,.331248,.940001,.185125,.33021,.925565,.288949,.375988,.880398,.106357,.290414,.950957,.021119,.261818,.964873,-.124607,.206061,.97055,-.212775,.125309,.969024,-.268654,.080508,.959838,-.386029,.042604,.921476,-.61037,.156041,.776574,-.572954,.260567,.777032,-.513993,.282174,.810022,-.362743,.320231,.875118,-.159581,.32255,.932981,-.28309,.134037,.949644,-.334788,.11417,.935331,-.392499,.091678,.915159,-.490951,.148564,.858394,-.463149,.201788,.862972,-.435865,.201086,.877224,-.915189,.091464,.392468,-.949858,.15656,.270577,-.892361,.205267,.401898,-.863033,.201758,.463057,-.858577,.148534,.490646,-.935362,.11417,.334697,.111423,-.981536,.155431,.017151,-.97235,.232826,-.087436,-.981506,.170141,.257759,-.928129,.268502,.177435,-.9317,.316874,.398083,-.840388,.367718,.337443,-.859096,.384747,.524003,-.705954,.476424,.508469,-.694449,.509049,.569628,-.031129,.821284,.580981,-.150609,.799829,.669118,-.185095,.719718,.415876,-.007904,.90936,.441939,-.094852,.891995,.256355,.022217,.966308,.300607,-.026124,.953368,.073519,.039552,.99649,.07355,.013031,.997192,-.556261,-.185308,.810053,-.45735,-.150609,.876431,-.442946,-.031129,.895993,-.539323,-.371227,.755852,-.470656,-.328745,.818751,-.5103,-.542009,.667684,-.482925,-.48909,.726279,-.448469,-.705954,.548143,-.428297,-.694449,.578143,-.129032,-.9317,.339488,-.215613,-.928098,.303476,.030122,-.912259,.40846,.195318,-.863369,.465194,.412519,-.667714,.619617,.585711,-.328715,.740837,.644398,-.371105,.668599,.470138,-.259896,.84344,.355724,-.177923,.917478,.072909,-.132054,.988525,-.306253,-.094821,.947203,-.277932,-.007874,.96054,-.341288,-.259896,.903287,-.378674,-.405866,.831751,-.317148,-.667714,.673421,-.277322,-.859127,.430067,-.339854,-.840388,.422163,-.124943,-.863369,.488815,.040254,-.836879,.545854,.294931,-.6292,.719077,.584246,-.48912,.647572,.602741,-.541948,.58562,.496597,-.405896,.767174,.398724,-.321207,.858974,.070559,-.283029,.956481,-.157476,-.026124,.987152,-.111789,.022217,.993469,-.217261,-.177923,.959746,-.268349,-.321177,.90817,-.186224,-.62917,.754601,.062075,-.536424,.841639,.611988,.127262,.780541,.55092,.086734,.830012,.576739,.001556,.816919,.525864,.28077,.80285,.502731,.254616,.826075,.427808,.42259,.798975,.442946,.411176,.796686,.268807,.554064,.787866,.250099,.596637,.762505,-.432081,.657369,.617359,-.339915,.659536,.67037,-.271584,.702933,.657338,-.496384,.574267,.65096,-.438154,.58739,.68038,-.553026,.498978,.667165,-.524644,.531693,.664815,-.597491,.406201,.691336,-.599353,.401502,.692465,-.448195,.019349,.893704,-.485458,.090579,.869533,-.573107,.114231,.811457,-.277871,-.004517,.960601,-.326395,.038392,.944426,-.104556,-.048189,.993347,-.187292,-.051485,.980926,.092196,-.097537,.990936,.047639,-.132725,.98999,.431013,-.005615,.90231,.435408,-.045259,.899075,.393567,.159703,.905301,.34199,.318674,.883999,.105655,.556749,.823908,-.167516,.654225,.73748,-.10361,.668905,.736076,-.286142,.598682,.7481,-.378002,.577197,.723808,-.484603,.388226,.783837,-.536302,.195349,.82107,-.586383,.221381,.779168,-.402417,.142064,.904355,-.327403,.062349,.942808,-.05417,-183e-6,.998505,.303415,-.094607,.948119,.287545,-.089785,.95352,.27195,.066042,.960021,.218665,.227851,.94882,-.011353,.506088,.862392,.002319,.662191,.74929,.073428,.626911,.775597,-.172613,.630696,.756554,-.27488,.622059,.733116,-.393506,.375561,.839106,-.591144,.266762,.761162,-.600238,.309671,.737419,-.478378,.183325,.858791,-.420209,.096622,.902249,-.126377,.111728,.985656,-.18601,.344279,.920225,-.784967,-.197577,.587146,-.7875,-.195105,.584552,-.740654,-.383251,.551836,-.752007,-.374004,.542711,-.707602,-.518082,.480453,-.746635,-.473739,.466994,-.644948,-.658559,.387707,-.736808,-.590716,.328806,-.193213,-.977966,-.078738,-.337596,-.940794,.029511,-.206275,-.973662,.096988,-.349254,-.917051,-.192358,-.488571,-.870357,-.061251,-.487014,-.820673,-.298715,-.612171,-.777184,-.145573,-.603687,-.690298,-.398785,-.725761,-.644887,-.239448,-.835017,-.043794,-.548448,-.851344,-.172735,-.495285,-.752892,-.175542,-.634236,-.915281,-.048036,-.399915,-.919614,-.173711,-.352275,-.968322,-.063875,-.24131,-.960967,-.194037,-.197089,-.995025,-.065279,-.075137,-.986267,-.16422,-.01648,-.997528,-.030396,.062868,-.992309,-.067446,.103732,-.981842,.002258,.189611,-.980255,-.012879,.197272,-.936613,.004028,.350322,-.93582,-885e-6,.352428,-.796442,-.187902,.574725,-.775353,-.355785,.521744,-.785516,-.42909,.445875,-.791803,-.540178,.284982,-.480239,-.867306,.130741,-.360637,-.909909,.20481,-.592456,-.804559,.040468,-.681936,-.730125,-.042512,-.784234,-.603778,-.142796,-.84402,-.334239,-.419324,-.737083,-.360088,-.571856,-.901242,-.314127,-.298441,-.936399,-.306833,-.170171,-.97116,-.237007,.025605,-.983093,-.112461,.144292,-.975829,-.047212,.213233,-.933164,-.017609,.358989,-.806299,-.180731,.563189,-.799097,-.337504,.497452,-.821741,-.389904,.415509,-.837519,-.494583,.232124,-.626881,-.750206,.21015,-.515122,-.803735,.297617,-.695456,-.707602,.124943,-.751274,-.658284,.04709,-.83517,-.547594,-.050844,-.806543,-.485092,-.337809,-.688803,-.531968,-.492447,-.862453,-.446181,-.238838,-.901883,-.409986,-.135868,-.950041,-.306131,.060762,-.971038,-.161321,.176153,-.969726,-.08591,.228553,-.930113,-.036958,.365368,-.870571,-.183203,.456618,-.869716,-.263283,.417371,-.883084,-.308145,.353801,-.902402,-.414075,.119083,-.945738,-.211188,.246895,-.946226,-.150029,.286569,-.926847,-.117832,.356426,-.941588,-.012818,.336497,-.940916,-.00943,.338481,-.985198,-.014557,.170751,-.983764,-.004547,.179266,-.998291,.009186,.057314,-.995392,.026948,.0918,-.996246,.029756,-.080935,-.99588,.089908,-.010163,-.813135,.130284,-.567278,-.881527,.111881,-.458663,-.840999,.025361,-.540391,-.862545,.26072,-.433576,-.917936,.232368,-.321451,-.880398,.375988,-.28898,-.925565,.33018,-.185156,-.870632,.472945,-.135319,-.909452,.414502,-.032685,-.622852,.63976,.45024,-.677572,.623005,.39079,-.658223,.683859,.314707,-.661061,.564348,.4944,-.698691,.561296,.443525,-.700766,.486709,.521531,-.732627,.491379,.470931,-.72927,.403943,.552202,-.74929,.398816,.528642,-.738578,.332621,.586352,-.728111,.338328,.596118,-.750145,.255654,.609821,-.727928,.278695,.626423,-.772912,.14597,.61745,-.754021,.164556,.635853,-.931639,.015839,.363018,-.97351,.037507,.22544,-.983947,.078036,.160314,-.985168,.156377,.070193,-.940214,.101047,-.325175,-.916379,.020539,-.399701,-.955321,.208594,-.209326,-.950957,.290414,-.106357,-.928983,.369396,.022401,-.771081,.569567,.284585,-.755089,.629597,.182684,-.783563,.520432,.339335,-.803919,.463942,.372021,-.805048,.365398,.467238,-.763695,.311472,.565416,-.749474,.271035,.603992,-.763329,.161077,.625568,-.921445,.042665,.38609,-.959838,.080538,.268654,-.968993,.12534,.212806,-.97055,.206061,.124607,-.979064,.107639,-.172735,-.969085,.025666,-.245338,-.976318,.196722,-.089938,-.964873,.261849,-.021119,-.940031,.331217,.081332,-.853786,.501114,.141057,-.828608,.558977,.030396,-.86697,.458876,.194311,-.878506,.41435,.237739,-.875118,.320261,.362743,-.810022,.282144,.514023,-.777032,.260567,.572954,-.776635,.156041,.610279,-.942717,.265267,.202185,-.895962,-.031129,.442976,-.876431,-.150609,.45735,-.810053,-.185278,.556261,-.96054,-.007904,.277963,-.947172,-.094852,.306284,-.993469,.022217,.11182,-.987152,-.026154,.157476,-.99649,.039552,-.073519,-.997192,.013001,-.07355,-.719687,-.185095,-.669118,-.799829,-.150609,-.580981,-.821284,-.031129,-.569628,-.668599,-.371075,-.644398,-.740837,-.328715,-.585711,-.58562,-.541948,-.602741,-.647572,-.48909,-.584277,-.476424,-.705954,-.524033,-.509049,-.694449,-.508499,-.170141,-.981506,.087436,-.232795,-.97235,-.017151,-.155431,-.981536,-.111423,-.303446,-.928098,.215613,-.339457,-.9317,.129032,-.422163,-.840388,.339854,-.430097,-.859096,.277322,-.548143,-.705924,.448469,-.578143,-.694449,.428297,-.818751,-.328715,.470656,-.755852,-.371227,.539293,-.903287,-.259896,.341319,-.959746,-.177923,.217231,-.988556,-.132023,-.072909,-.891995,-.094852,-.441939,-.90936,-.007904,-.415876,-.84344,-.259896,-.470138,-.767205,-.405866,-.496628,-.619617,-.667714,-.412519,-.316874,-.9317,-.177435,-.268502,-.928129,-.257759,-.40846,-.912259,-.030122,-.488815,-.863369,.124943,-.673421,-.667745,.317148,-.726279,-.48909,.482925,-.667684,-.542009,.5103,-.831751,-.405896,.378674,-.90817,-.321207,.268349,-.956511,-.282998,-.070559,-.953368,-.026154,-.300607,-.966308,.022217,-.256355,-.917478,-.177892,-.355724,-.858974,-.321177,-.398694,-.719108,-.6292,-.294931,-.384747,-.859096,-.337443,-.367718,-.840419,-.398083,-.465194,-.863369,-.195318,-.545854,-.836879,-.040254,-.75454,-.629231,.186224,-.841639,-.536454,-.062044,-.811426,.114261,.573107,-.869503,.090579,.485488,-.893674,.019379,.448225,-.779138,.221442,.586383,-.82107,.195349,.536302,-.737358,.309793,.600238,-.761162,.266701,.591144,-.691214,.406384,.597522,-.692465,.401532,.599353,-.657338,.702933,.271584,-.67037,.659536,.339915,-.616962,.657765,.432051,-.736076,.668874,.10361,-.73748,.654225,.167516,-.775597,.626881,-.073366,-.74929,.662221,-.002319,-.787835,.554064,-.268838,-.762505,.596637,-.25013,-.816889,.001556,-.576739,-.830012,.086734,-.550951,-.780541,.127262,-.611988,-.899075,-.045259,-.435438,-.90228,-.005615,-.431043,-.95352,-.089785,-.287545,-.948119,-.094607,-.303446,-.990936,-.097507,-.092166,-.98999,-.132725,-.047578,-.944426,.038423,.326426,-.960601,-.004486,.277871,-.904355,.142033,.402417,-.858791,.183294,.478378,-.783837,.388226,.484603,-.68038,.58739,.438154,-.650685,.574602,.496384,-.7481,.598682,.286111,-.756554,.630696,.172613,-.823939,.556719,-.105625,-.826044,.254616,-.502762,-.80285,.280801,-.525864,-.905301,.159703,-.393567,-.960021,.066042,-.27195,-.998505,-183e-6,.05417,-.980926,-.051454,.187323,-.993316,-.048189,.104587,-.942808,.062349,.327433,-.902249,.096622,.420209,-.839076,.375561,.393506,-.664815,.531663,.524674,-.666982,.499222,.553026,-.723838,.577197,.378002,-.733116,.622059,.27488,-.862362,.506119,.011383,-.796686,.411145,-.442946,-.798944,.42262,-.427839,-.883999,.318674,-.34196,-.94882,.227851,-.218635,-.985656,.111728,.126408,-.920225,.34431,.186041,-.62212,.195624,.758049,-.693411,.195624,.693442,-.586108,.38255,.714194,-.65331,.382519,.65331,-.527757,.554857,.643086,-.588244,.554857,.588244,-.449263,.706015,.54741,-.500748,.706015,.500748,-.353557,.830256,.430799,-.394086,.830287,.394086,-.24427,.92288,.297647,-.272286,.92288,.272286,-.125553,.980193,.152989,-.139958,.980193,.139958,-.109958,.980193,.164556,-.213935,.92288,.32017,-.309641,.830256,.463393,-.393445,.706015,.588824,-.462172,.554857,.691702,-.513291,.38255,.768212,-.544816,.195624,.815394,-.462264,.195624,.864864,-.43553,.38255,.814814,-.392163,.554857,.733696,-.333811,.706015,.624561,-.262703,.830287,.491501,-.181524,.922849,.33961,-.093295,.980193,.174535,-.075716,.980193,.182867,-.147343,.922849,.355754,-.213263,.830287,.514878,-.271004,.706015,.654256,-.318369,.554857,.768609,-.353557,.38255,.853572,-.375286,.195624,.906003,-.284677,.195593,.938444,-.268197,.38255,.884121,-.241493,.554857,.796106,-.205573,.706015,.677694,-.161779,.830287,.533311,-.111759,.922849,.368511,-.057436,.980193,.189398,-.191321,.195593,.961821,-.180242,.382519,.906156,-.162297,.554857,.815943,-.138157,.706015,.694571,-.108707,.830287,.546587,-.075106,.92288,.377667,-.038606,.980193,.194128,-.019379,.980224,.196905,-.037751,.92288,.38316,-.054628,.830287,.554582,-.06943,.706015,.704764,-.081576,.554796,.827967,-.090579,.382397,.919523,-.096133,.195379,.975982,-.125553,-.980193,.152989,-.139958,-.980193,.139927,-.244301,-.922849,.297678,-.272317,-.922849,.272317,-.353557,-.830256,.43083,-.394086,-.830256,.394086,-.449263,-.706015,.54741,-.500748,-.706015,.500748,-.527757,-.554857,.643086,-.588275,-.554826,.588275,-.586138,-.38255,.714194,-.65331,-.38255,.65331,-.62212,-.195624,.758049,-.693442,-.195624,.693411,-.544816,-.195624,.815394,-.513291,-.382519,.768212,-.462172,-.554857,.691733,-.393445,-.706015,.588824,-.309641,-.830256,.463393,-.213935,-.922849,.3202,-.109958,-.980193,.164556,-.093295,-.980193,.174535,-.181524,-.922849,.33964,-.262703,-.830256,.491501,-.333811,-.706015,.624531,-.392163,-.554857,.733696,-.43553,-.38255,.814814,-.462264,-.195624,.864864,-.375286,-.195624,.906003,-.353557,-.38255,.853572,-.318369,-.554826,.768609,-.271004,-.706015,.654256,-.213263,-.830256,.514908,-.147374,-.922849,.355785,-.075716,-.980193,.182836,-.057436,-.980193,.189398,-.111789,-.922849,.368511,-.161779,-.830256,.533341,-.205573,-.706015,.677664,-.241493,-.554826,.796106,-.268197,-.382519,.884152,-.284646,-.195593,.938444,-.038606,-.980193,.194128,-.075106,-.922849,.377697,-.108707,-.830256,.546617,-.138157,-.706015,.694571,-.162297,-.554826,.815943,-.180242,-.382519,.906186,-.191321,-.195593,.961821,-.096133,-.195379,.975982,-.090579,-.382366,.919523,-.081576,-.554765,.827967,-.06943,-.706015,.704764,-.054628,-.830287,.554613,-.037751,-.92288,.38319,-.019379,-.980193,.196936,-.35197,0,.935972,-.189917,0,.98178,-.031861,0,.999481,.122379,0,.992462,.273751,0,.961791,.422773,0,.906217,.568834,0,.822413,-.480392,.652791,.585711,-.522355,.567217,.636708,-.554155,.486587,.675344,-.579424,.407056,.706076,-.600085,.32429,.731223,-.616871,.233314,.751671,-.629231,.127201,.766717,-.621967,-.19657,.757927,-.585559,-.384533,.713584,-.526566,-.557604,.641682,-.44731,-.709037,.545091,-.350841,-.833094,.427564,-.240944,-.925047,.293619,-.12183,-.981353,.148442,-.535417,.653401,.535142,-.58211,.567888,.581927,-.617481,.48732,.617389,-.64565,.407788,.645589,-.668691,.325053,.668661,-.68746,.234046,.687429,-.701285,.127903,.701285,-.693258,-.196783,.693258,-.652669,-.384686,.652669,-.586932,-.557665,.586932,-.498611,-.709037,.498611,-.391095,-.833094,.391095,-.268593,-.925016,.268593,-.135838,-.981353,.135838,-.125553,-.980193,.152959,-.24427,-.92288,.297617,-.353587,-.830287,.430799,-.449293,-.705985,.54741,-.527818,-.554765,.643086,-.5862,-.382397,.714225,-.62215,-.195379,.75808,-.139958,-.980193,.139958,-.272286,-.922849,.272286,-.394116,-.830256,.394116,-.500748,-.705985,.500748,-.65331,-.382519,.65331,-.693442,-.195624,.693442,-.629261,.126682,.766778,-.701315,.127445,.701315,-.616993,.23249,.751823,-.687582,.233345,.687551,-.600299,.323222,.731529,-.668905,.324198,.668874,-.579821,.405683,.706534,-.645955,.406781,.645924,-.554796,.484939,.676015,-.617969,.486129,.617847,-.523362,.565172,.637654,-.582781,.566424,.582629,-.481979,.650288,.587176,-.536485,.651601,.536241,-.152989,.980193,.125553,-.297678,.922849,.24427,-.430799,.830287,.353557,-.54741,.706015,.449263,-.643086,.554857,.527757,-.714194,.382519,.586108,-.758049,.195624,.62212,-.815394,.195624,.544816,-.768212,.38255,.513291,-.691733,.554857,.462172,-.588824,.706015,.393414,-.463393,.830256,.30961,-.3202,.922849,.213935,-.164556,.980193,.109958,-.174535,.980193,.093295,-.33961,.922849,.181524,-.491531,.830256,.262703,-.624561,.706015,.333811,-.733696,.554857,.392163,-.814814,.38255,.43553,-.864864,.195624,.462264,-.906003,.195624,.375286,-.853603,.38255,.353557,-.768609,.554857,.318369,-.654286,.705985,.271004,-.514908,.830256,.213263,-.355785,.922849,.147343,-.182867,.980193,.075716,-.189398,.980193,.057436,-.368511,.922849,.111759,-.533341,.830256,.161779,-.677694,.706015,.205573,-.796106,.554857,.241493,-.884121,.38255,.268197,-.938444,.195624,.284646,-.194098,.980193,.038606,-.377667,.922849,.075106,-.546617,.830256,.108707,-.694571,.706015,.138157,-.815943,.554857,.162297,-.906156,.38255,.180242,-.961821,.195593,.191321,-.975982,.195379,.096133,-.919523,.382397,.090579,-.827967,.554796,.081576,-.704764,.706015,.06943,-.554582,.830287,.054628,-.38316,.92288,.037751,-.196936,.980224,.019379,-.758049,-.195624,.62212,-.714194,-.38255,.586108,-.643086,-.554826,.527757,-.54741,-.706015,.449263,-.43083,-.830256,.353557,-.297678,-.922849,.244301,-.152989,-.980193,.125553,-.164556,-.980193,.109958,-.3202,-.922849,.213965,-.463424,-.830256,.309641,-.588824,-.706015,.393445,-.691733,-.554857,.462203,-.768212,-.38255,.513291,-.815394,-.195624,.544816,-.864864,-.195624,.462264,-.814814,-.382519,.43553,-.733696,-.554857,.392163,-.624561,-.706015,.333811,-.491531,-.830256,.262703,-.33964,-.922849,.181524,-.174535,-.980193,.093295,-.182867,-.980193,.075747,-.355785,-.922849,.147374,-.514908,-.830256,.213263,-.654256,-.706015,.271004,-.768609,-.554857,.318339,-.853603,-.382519,.353557,-.906003,-.195624,.375286,-.938444,-.195593,.284646,-.884152,-.382519,.268197,-.796106,-.554826,.241493,-.677694,-.706015,.205573,-.533341,-.830256,.161779,-.368511,-.922849,.111789,-.189398,-.980193,.057436,-.961821,-.195593,.19129,-.906156,-.382519,.180242,-.815943,-.554826,.162297,-.694571,-.706015,.138157,-.546617,-.830256,.108707,-.377697,-.922849,.075106,-.194128,-.980193,.038606,-.196905,-.980224,.019379,-.38319,-.92288,.037751,-.554613,-.830287,.054628,-.704764,-.706015,.06943,-.827967,-.554765,.081576,-.919523,-.382397,.090579,-.975982,-.195379,.096133,-.822413,0,-.568865,-.906217,0,-.422803,-.961791,0,-.273751,-.992462,0,-.12241,-.999481,0,.031861,-.98178,0,.189947,-.936003,0,.35197,-.766717,.12714,.629231,-.751671,.233192,.616901,-.731284,.324076,.600116,-.706198,.40669,.579516,-.675527,.486129,.554308,-.637013,.566607,.522629,-.586169,.652058,.480819,-.148473,-.981353,.12183,-.293619,-.925047,.240944,-.427564,-.833094,.350841,-.545091,-.709037,.44731,-.641682,-.557604,.526566,-.713584,-.384564,.585559,-.757927,-.196539,.621998,-.75808,-.195379,.62215,-.714225,-.382397,.586169,-.643086,-.554796,.527818,-.54741,-.706015,.449293,-.430799,-.830256,.353587,-.297617,-.92288,.24427,-.152959,-.980193,.125553,-.586657,.651021,.481613,-.637318,.565783,.523118,-.675771,.485427,.554643,-.706412,.406049,.57973,-.731437,.323466,.600269,-.751793,.232612,.616962,-.766778,.126743,.629261,-.015656,.987121,.159124,-.029633,.953154,.301004,-.041841,.904172,.425062,-.052797,.84225,.536454,-.062899,.766564,.639058,-.07239,.67394,.735191,-.08124,.558885,.82522,-.161748,.558977,.813227,-.144108,.674001,.724509,-.125248,.766564,.62978,-.105167,.84225,.528703,-.083316,.904172,.418928,-.058992,.953124,.29667,-.03119,.987121,.156835,-.046419,.987121,.15305,-.087802,.953124,.289468,-.123966,.904172,.408734,-.156468,.84225,.515824,-.186377,.766564,.61446,-.214423,.674001,.7069,-.240699,.558977,.793451,-.06119,.987121,.14774,-.115757,.953124,.279458,-.163457,.904172,.394604,-.206275,.84225,.498001,-.245735,.766564,.593249,-.282693,.674001,.682485,-.317301,.558977,.766045,-.390851,.558977,.731254,-.348216,.674001,.651479,-.302683,.766564,.566301,-.254097,.84225,.475387,-.201331,.904172,.37669,-.142582,.953124,.266762,-.075381,.987121,.141026,-.088839,.987121,.132969,-.168035,.953124,.251503,-.237281,.904172,.355144,-.299478,.84225,.448195,-.356731,.766564,.533921,-.410413,.674001,.614215,-.460646,.558977,.689413,-.526017,.558977,.64095,-.468642,.674001,.571032,-.407361,.766564,.496353,-.34196,.84225,.416669,-.270974,.904172,.33018,-.1919,.953124,.233833,-.101444,.987121,.12363,-.113071,.987121,.113071,-.213904,.953124,.213874,-.302011,.904172,.302011,-.381146,.84225,.381146,-.454054,.766564,.454054,-.522355,.674001,.522324,-.586291,.558946,.586322,-.82522,.558885,.08124,-.735191,.67394,.07239,-.639058,.766533,.062899,-.536454,.84225,.052797,-.425062,.904172,.041841,-.301004,.953154,.029633,-.159154,.987121,.015656,-.156865,.987121,.03119,-.29667,.953124,.058992,-.418928,.904172,.083316,-.528703,.84225,.105167,-.62981,.766564,.125278,-.724509,.674001,.144108,-.813227,.558977,.161748,-.793451,.558977,.240669,-.7069,.674001,.214423,-.61449,.766564,.186377,-.515824,.84225,.156468,-.408734,.904172,.123966,-.289468,.953124,.087802,-.15305,.987121,.046419,-.766045,.558977,.317301,-.682455,.674001,.282662,-.593249,.766564,.245735,-.498001,.84225,.206275,-.394604,.904172,.163457,-.279458,.953124,.115757,-.14774,.987121,.06119,-.141026,.987121,.075381,-.266762,.953124,.142582,-.37669,.904172,.201331,-.475387,.84225,.254097,-.566301,.766564,.302683,-.651479,.674001,.348216,-.731254,.558977,.390851,-.689413,.558977,.460646,-.614215,.674001,.410413,-.533921,.766564,.356731,-.448195,.84225,.299478,-.355144,.904172,.237281,-.251503,.953124,.168035,-.132969,.987121,.088839,-.12363,.987121,.101444,-.233833,.953124,.1919,-.33018,.904172,.270943,-.416669,.84225,.34196,-.496384,.766564,.407361,-.571032,.674001,.468612,-.64095,.558977,.526017],
faces:[35,385,376,665,590,1,0,1,2,3,35,403,394,164,163,1,4,5,6,7,35,3434,430,169,3170,1,8,9,10,11,35,430,421,170,169,1,9,12,13,10,35,412,403,163,173,1,14,4,7,15,34,394,589,164,1,5,16,6,34,385,590,589,1,0,3,16,34,394,385,589,1,5,0,16,35,2973,2972,3,4,0,17,18,19,20,35,4337,1323,429,3433,1,21,22,23,24,35,2980,2979,10,11,0,25,26,27,28,35,0,1,2970,2969,0,29,30,31,32,35,2987,2986,17,18,0,33,34,35,36,35,2977,2976,7,8,0,37,38,39,40,35,2984,2983,14,15,0,41,42,43,44,35,421,412,173,170,1,12,14,15,13,35,2974,2973,4,5,0,45,17,20,46,35,2981,2980,11,12,0,47,25,28,48,35,2971,2970,1,2,0,49,31,30,50,35,2988,2987,18,19,0,51,33,36,52,35,2978,2977,8,9,0,53,37,40,54,35,2985,2984,15,16,0,55,41,44,56,35,2975,2974,5,6,0,57,45,46,58,35,2982,2981,12,13,0,59,47,48,60,35,2972,2971,2,3,0,18,49,50,19,35,2989,2988,19,20,0,61,51,52,62,35,2979,2978,9,10,0,26,53,54,27,35,2986,2985,16,17,0,34,55,56,35,35,2976,2975,6,7,0,38,57,58,39,35,2983,2982,13,14,0,42,59,60,43,35,5,4,25,26,0,46,20,63,64,35,12,11,32,33,0,48,28,65,66,35,2,1,22,23,0,50,30,67,68,35,19,18,39,40,0,52,36,69,70,35,9,8,29,30,0,54,40,71,72,35,16,15,36,37,0,56,44,73,74,35,6,5,26,27,0,58,46,64,75,35,13,12,33,34,0,60,48,66,76,35,20,19,40,41,0,62,52,70,77,35,3,2,23,24,0,19,50,68,78,35,10,9,30,31,0,27,54,72,79,35,17,16,37,38,0,35,56,74,80,35,7,6,27,28,0,39,58,75,81,35,14,13,34,35,0,43,60,76,82,35,4,3,24,25,0,20,19,78,63,35,1323,1332,420,429,1,22,83,84,23,35,11,10,31,32,0,28,27,79,65,35,1,0,21,22,0,30,29,85,67,35,18,17,38,39,0,36,35,80,69,35,8,7,28,29,0,40,39,81,71,35,15,14,35,36,0,44,43,82,73,35,27,26,47,48,0,75,64,86,87,35,34,33,54,55,0,76,66,88,89,35,41,40,61,62,0,77,70,90,91,35,24,23,44,45,0,78,68,92,93,35,31,30,51,52,0,79,72,94,95,35,38,37,58,59,0,80,74,96,97,35,28,27,48,49,0,81,75,87,98,35,35,34,55,56,0,82,76,89,99,35,25,24,45,46,0,63,78,93,100,35,1332,1341,411,420,1,83,101,102,84,35,32,31,52,53,0,65,79,95,103,35,39,38,59,60,0,69,80,97,104,35,22,21,42,43,0,67,85,105,106,35,29,28,49,50,0,71,81,98,107,35,36,35,56,57,0,73,82,99,108,35,26,25,46,47,0,64,63,100,86,35,33,32,53,54,0,66,65,103,88,35,23,22,43,44,0,68,67,106,92,35,40,39,60,61,0,70,69,104,90,35,30,29,50,51,0,72,71,107,94,35,37,36,57,58,0,74,73,108,96,35,49,48,69,70,0,98,87,109,110,35,56,55,76,77,0,99,89,111,112,35,46,45,66,67,0,100,93,113,114,35,1341,1350,402,411,1,101,115,116,102,35,53,52,73,74,0,103,95,117,118,35,60,59,80,81,0,104,97,119,120,35,43,42,63,64,0,106,105,121,122,35,50,49,70,71,0,107,98,110,123,35,57,56,77,78,0,108,99,112,124,35,47,46,67,68,0,86,100,114,125,35,54,53,74,75,0,88,103,118,126,35,44,43,64,65,0,92,106,122,127,35,61,60,81,82,0,90,104,120,128,35,51,50,71,72,0,94,107,123,129,35,58,57,78,79,0,96,108,124,130,35,48,47,68,69,0,87,86,125,109,35,55,54,75,76,0,89,88,126,111,35,62,61,82,83,0,91,90,128,131,35,45,44,65,66,0,93,92,127,113,35,52,51,72,73,0,95,94,129,117,35,59,58,79,80,0,97,96,130,119,35,71,70,91,92,0,123,110,132,133,35,78,77,98,99,0,124,112,134,135,35,68,67,88,89,0,125,114,136,137,35,75,74,95,96,0,126,118,138,139,35,65,64,85,86,0,127,122,140,141,35,82,81,102,103,0,128,120,142,143,35,72,71,92,93,0,129,123,133,144,35,79,78,99,100,0,130,124,135,145,35,69,68,89,90,0,109,125,137,146,35,76,75,96,97,0,111,126,139,147,35,66,65,86,87,0,113,127,141,148,35,83,82,103,104,0,131,128,143,149,35,73,72,93,94,0,117,129,144,150,35,80,79,100,101,0,119,130,145,151,35,70,69,90,91,0,110,109,146,132,35,77,76,97,98,0,112,111,147,134,35,67,66,87,88,0,114,113,148,136,35,1350,1359,393,402,1,115,152,153,116,35,74,73,94,95,0,118,117,150,138,35,81,80,101,102,0,120,119,151,142,35,64,63,84,85,0,122,121,154,140,35,93,92,113,114,0,144,133,155,156,35,100,99,120,121,0,145,135,157,158,35,90,89,110,111,0,146,137,159,160,35,97,96,117,118,0,147,139,161,162,35,87,86,107,108,0,148,141,163,164,35,104,103,124,125,0,149,143,165,166,35,94,93,114,115,0,150,144,156,167,35,101,100,121,122,0,151,145,158,168,35,91,90,111,112,0,132,146,160,169,35,98,97,118,119,0,134,147,162,170,35,88,87,108,109,0,136,148,164,171,35,1359,1368,384,393,1,152,172,173,153,35,95,94,115,116,0,138,150,167,174,35,85,84,105,106,0,140,154,175,176,35,102,101,122,123,0,142,151,168,177,35,92,91,112,113,0,133,132,169,155,35,99,98,119,120,0,135,134,170,157,35,89,88,109,110,0,137,136,171,159,35,376,885,1148,665,1,1,178,179,2,35,96,95,116,117,0,139,138,174,161,35,86,85,106,107,0,141,140,176,163,35,103,102,123,124,0,143,142,177,165,35,123,122,143,144,0,177,168,180,181,35,106,105,126,127,0,176,175,182,183,35,113,112,133,134,0,155,169,184,185,35,120,119,140,141,0,157,170,186,187,35,110,109,130,131,0,159,171,188,189,35,117,116,137,138,0,161,174,190,191,35,107,106,127,128,0,163,176,183,192,35,124,123,144,145,0,165,177,181,193,35,114,113,134,135,0,156,155,185,194,35,121,120,141,142,0,158,157,187,195,35,111,110,131,132,0,160,159,189,196,35,118,117,138,139,0,162,161,191,197,35,125,124,145,146,0,166,165,193,198,35,108,107,128,129,0,164,163,192,199,35,115,114,135,136,0,167,156,194,200,35,122,121,142,143,0,168,158,195,180,35,112,111,132,133,0,169,160,196,184,35,119,118,139,140,0,170,162,197,186,35,109,108,129,130,0,171,164,199,188,35,1368,1377,375,384,1,172,201,202,173,35,116,115,136,137,0,174,167,200,190,34,2969,4907,0,0,32,203,29,34,0,4907,21,0,29,203,85,34,21,4907,42,0,85,203,105,34,42,4907,63,0,105,203,121,34,63,4907,84,0,121,203,154,34,84,4907,105,0,154,203,175,34,105,4907,126,0,175,203,182,35,128,127,176,177,0,192,183,204,205,35,145,144,192,193,0,193,181,206,207,35,135,134,182,183,0,194,185,208,209,35,142,141,189,190,0,195,187,210,211,35,132,131,343,180,0,196,189,212,213,35,139,138,186,187,0,197,191,214,215,35,129,128,177,178,0,199,192,205,216,35,146,145,193,194,0,198,193,207,217,35,136,135,183,184,0,200,194,209,218,34,126,4907,342,0,182,203,219,35,143,142,190,191,0,180,195,211,220,35,133,132,180,181,0,184,196,213,221,35,140,139,187,188,0,186,197,215,222,35,130,129,178,179,0,188,199,216,223,35,1377,1386,886,375,1,201,224,225,202,35,137,136,184,185,0,190,200,218,226,35,144,143,191,192,0,181,180,220,206,35,127,126,342,176,0,183,182,219,204,35,134,133,181,182,0,185,184,221,208,35,141,140,188,189,0,187,186,222,210,35,131,130,179,343,0,189,188,223,212,35,138,137,185,186,0,191,190,226,214,35,673,1156,958,438,1,227,228,229,230,35,466,457,149,150,1,231,232,233,234,35,493,484,152,153,1,235,236,237,238,35,484,475,151,152,1,236,239,240,237,35,3506,493,153,3144,1,241,235,238,242,35,475,466,150,151,1,239,231,234,240,35,448,439,147,148,1,243,244,245,246,35,457,448,148,149,1,232,243,246,233,35,3169,167,492,3505,1,11,10,247,248,35,162,578,504,166,1,6,249,250,6,35,503,673,438,447,1,251,227,230,252,34,166,447,456,1,6,252,253,34,504,503,447,1,250,251,252,34,166,504,447,1,6,250,252,35,161,166,456,465,1,7,6,253,254,35,175,161,465,474,1,15,7,254,255,35,172,175,474,483,1,13,15,255,256,35,167,172,483,492,1,10,13,256,247,35,151,150,157,158,1,240,234,257,258,35,152,151,158,159,1,237,240,258,259,35,153,152,159,160,1,238,237,259,260,35,3144,153,160,3152,1,242,238,260,261,35,147,351,359,154,1,245,262,263,264,35,148,147,154,155,1,246,245,264,265,35,149,148,155,156,1,233,246,265,266,35,150,149,156,157,1,234,233,266,257,35,1369,125,146,1378,0,267,166,198,268,35,1351,83,104,1360,0,269,131,149,270,35,173,163,165,168,1,15,7,7,15,35,170,173,168,171,1,13,15,15,13,35,1324,20,41,1333,0,271,62,77,272,35,169,170,171,174,1,10,13,13,10,35,3170,169,174,3168,1,11,10,10,11,35,1333,41,62,1342,0,272,77,91,273,35,439,957,351,147,1,244,274,262,245,35,1342,62,83,1351,0,273,91,131,269,35,1378,146,194,1387,0,268,198,217,275,35,1360,104,125,1369,0,270,149,166,267,35,3168,174,167,3169,1,11,10,10,11,35,174,171,172,167,1,10,13,13,10,35,171,168,175,172,1,13,15,15,13,35,168,165,161,175,1,15,7,7,15,35,165,162,166,161,1,7,6,6,7,35,501,579,743,683,0,276,277,278,279,35,164,589,578,162,1,6,16,249,6,35,664,1147,1306,813,0,280,281,282,283,35,1157,674,804,1296,0,284,285,286,287,35,587,664,813,744,0,288,280,283,289,35,163,164,162,165,1,7,6,6,7,34,3152,160,4908,1,261,260,290,34,159,4908,160,1,259,290,260,34,159,158,4908,1,259,258,290,34,158,157,4908,1,258,257,290,34,156,4908,157,1,266,290,257,34,156,155,4908,1,266,265,290,34,154,4908,155,1,264,290,265,34,154,359,4908,1,264,263,290,35,814,1305,1297,805,0,291,292,293,294,35,674,502,682,804,0,285,295,296,286,35,745,814,805,684,0,297,291,294,298,34,579,588,743,0,277,299,278,35,2898,1395,215,1673,0,300,301,302,303,35,849,362,363,840,1,304,305,306,307,35,2369,1858,368,876,1,308,309,310,311,35,876,368,369,867,1,311,310,312,313,35,858,372,362,849,1,314,315,305,304,34,840,1055,831,1,307,316,317,34,363,1052,1055,1,306,318,316,34,840,363,1055,1,307,306,316,35,1657,199,198,1656,0,319,320,321,322,35,2897,2370,877,1396,1,323,324,325,326,35,1664,206,205,1663,0,327,328,329,330,35,1654,196,195,1653,0,331,332,333,334,35,1671,213,212,1670,0,335,336,337,338,35,1661,203,202,1660,0,339,340,341,342,35,1668,210,209,1667,0,343,344,345,346,35,867,369,372,858,1,313,312,315,314,35,1658,200,199,1657,0,347,348,320,319,35,1665,207,206,1664,0,349,350,328,327,35,1655,197,196,1654,0,351,352,332,331,35,1672,214,213,1671,0,353,354,336,335,35,1662,204,203,1661,0,355,356,340,339,35,1669,211,210,1668,0,357,358,344,343,35,1659,201,200,1658,0,359,360,348,347,35,1666,208,207,1665,0,361,362,350,349,35,1656,198,197,1655,0,322,321,352,351,35,1673,215,214,1672,0,303,302,354,353,35,1663,205,204,1662,0,330,329,356,355,35,1670,212,211,1669,0,338,337,358,357,35,1660,202,201,1659,0,342,341,360,359,35,1667,209,208,1666,0,346,345,362,361,35,200,221,220,199,0,348,363,364,320,35,207,228,227,206,0,350,365,366,328,35,197,218,217,196,0,352,367,368,332,35,214,235,234,213,0,354,369,370,336,35,204,225,224,203,0,356,371,372,340,35,211,232,231,210,0,358,373,374,344,35,201,222,221,200,0,360,375,363,348,35,208,229,228,207,0,362,376,365,350,35,215,236,235,214,0,302,377,369,354,35,198,219,218,197,0,321,378,367,352,35,205,226,225,204,0,329,379,371,356,35,212,233,232,211,0,337,380,373,358,35,202,223,222,201,0,341,381,375,360,35,209,230,229,208,0,345,382,376,362,35,199,220,219,198,0,320,364,378,321,35,1396,877,868,1405,1,326,325,383,384,35,206,227,226,205,0,328,366,379,329,35,196,217,216,195,0,332,368,385,333,35,213,234,233,212,0,336,370,380,337,35,203,224,223,202,0,340,372,381,341,35,210,231,230,209,0,344,374,382,345,35,222,243,242,221,0,375,386,387,363,35,229,250,249,228,0,376,388,389,365,35,236,257,256,235,0,377,390,391,369,35,219,240,239,218,0,378,392,393,367,35,226,247,246,225,0,379,394,395,371,35,233,254,253,232,0,380,396,397,373,35,223,244,243,222,0,381,398,386,375,35,230,251,250,229,0,382,399,388,376,35,220,241,240,219,0,364,400,392,378,35,1405,868,859,1414,1,384,383,401,402,35,227,248,247,226,0,366,403,394,379,35,234,255,254,233,0,370,404,396,380,35,217,238,237,216,0,368,405,406,385,35,224,245,244,223,0,372,407,398,381,35,231,252,251,230,0,374,408,399,382,35,221,242,241,220,0,363,387,400,364,35,228,249,248,227,0,365,389,403,366,35,218,239,238,217,0,367,393,405,368,35,235,256,255,234,0,369,391,404,370,35,225,246,245,224,0,371,395,407,372,35,232,253,252,231,0,373,397,408,374,35,244,265,264,243,0,398,409,410,386,35,251,272,271,250,0,399,411,412,388,35,241,262,261,240,0,400,413,414,392,35,1414,859,850,1423,1,402,401,415,416,35,248,269,268,247,0,403,417,418,394,35,255,276,275,254,0,404,419,420,396,35,238,259,258,237,0,405,421,422,406,35,245,266,265,244,0,407,423,409,398,35,252,273,272,251,0,408,424,411,399,35,242,263,262,241,0,387,425,413,400,35,249,270,269,248,0,389,426,417,403,35,239,260,259,238,0,393,427,421,405,35,256,277,276,255,0,391,428,419,404,35,246,267,266,245,0,395,429,423,407,35,253,274,273,252,0,397,430,424,408,35,243,264,263,242,0,386,410,425,387,35,250,271,270,249,0,388,412,426,389,35,257,278,277,256,0,390,431,428,391,35,240,261,260,239,0,392,414,427,393,35,247,268,267,246,0,394,418,429,395,35,254,275,274,253,0,396,420,430,397,35,266,287,286,265,0,423,432,433,409,35,273,294,293,272,0,424,434,435,411,35,263,284,283,262,0,425,436,437,413,35,270,291,290,269,0,426,438,439,417,35,260,281,280,259,0,427,440,441,421,35,277,298,297,276,0,428,442,443,419,35,267,288,287,266,0,429,444,432,423,35,274,295,294,273,0,430,445,434,424,35,264,285,284,263,0,410,446,436,425,35,271,292,291,270,0,412,447,438,426,35,261,282,281,260,0,414,448,440,427,35,278,299,298,277,0,431,449,442,428,35,268,289,288,267,0,418,450,444,429,35,275,296,295,274,0,420,451,445,430,35,265,286,285,264,0,409,433,446,410,35,272,293,292,271,0,411,435,447,412,35,262,283,282,261,0,413,437,448,414,35,1423,850,841,1432,1,416,415,452,453,35,269,290,289,268,0,417,439,450,418,35,276,297,296,275,0,419,443,451,420,35,259,280,279,258,0,421,441,454,422,35,288,309,308,287,0,444,455,456,432,35,295,316,315,294,0,445,457,458,434,35,285,306,305,284,0,446,459,460,436,35,292,313,312,291,0,447,461,462,438,35,282,303,302,281,0,448,463,464,440,35,299,320,319,298,0,449,465,466,442,35,289,310,309,288,0,450,467,455,444,35,296,317,316,295,0,451,468,457,445,35,286,307,306,285,0,433,469,459,446,35,293,314,313,292,0,435,470,461,447,35,283,304,303,282,0,437,471,463,448,35,1432,841,832,1441,1,453,452,472,473,35,290,311,310,289,0,439,474,467,450,35,280,301,300,279,0,441,475,476,454,35,297,318,317,296,0,443,477,468,451,35,287,308,307,286,0,432,456,469,433,35,294,315,314,293,0,434,458,470,435,35,284,305,304,283,0,436,460,471,437,35,831,1055,1129,822,1,317,316,478,479,35,291,312,311,290,0,438,462,474,439,35,281,302,301,280,0,440,464,475,441,35,298,319,318,297,0,442,466,477,443,35,318,339,338,317,0,477,480,481,468,35,301,322,321,300,0,475,482,483,476,35,308,329,328,307,0,456,484,485,469,35,315,336,335,314,0,458,486,487,470,35,305,326,325,304,0,460,488,489,471,35,312,333,332,311,0,462,490,491,474,35,302,323,322,301,0,464,492,482,475,35,319,340,339,318,0,466,493,480,477,35,309,330,329,308,0,455,494,484,456,35,316,337,336,315,0,457,495,486,458,35,306,327,326,305,0,459,496,488,460,35,313,334,333,312,0,461,497,490,462,35,320,341,340,319,0,465,498,493,466,35,303,324,323,302,0,463,499,492,464,35,310,331,330,309,0,467,500,494,455,35,317,338,337,316,0,468,481,495,457,35,307,328,327,306,0,469,485,496,459,35,314,335,334,313,0,470,487,497,461,35,304,325,324,303,0,471,489,499,463,35,1441,832,823,1450,1,473,472,501,502,35,311,332,331,310,0,474,491,500,467,34,1653,195,4907,0,334,333,203,34,195,216,4907,0,333,385,203,34,216,237,4907,0,385,406,203,34,237,258,4907,0,406,422,203,34,258,279,4907,0,422,454,203,34,279,300,4907,0,454,476,203,34,300,321,4907,0,476,483,203,35,323,177,176,322,0,492,205,204,482,35,340,193,192,339,0,493,207,206,480,35,330,183,182,329,0,494,209,208,484,35,337,190,189,336,0,495,211,210,486,35,327,180,343,326,0,496,213,212,488,35,334,187,186,333,0,497,215,214,490,35,324,178,177,323,0,499,216,205,492,35,341,194,193,340,0,498,217,207,493,35,331,184,183,330,0,500,218,209,494,34,321,342,4907,0,483,219,203,35,338,191,190,337,0,481,220,211,495,35,328,181,180,327,0,485,221,213,496,35,335,188,187,334,0,487,222,215,497,35,325,179,178,324,0,489,223,216,499,35,1450,823,886,1386,1,502,501,225,224,35,332,185,184,331,0,491,226,218,500,35,339,192,191,338,0,480,206,220,481,35,322,176,342,321,0,482,204,219,483,35,329,182,181,328,0,484,208,221,485,35,336,189,188,335,0,486,210,222,487,35,326,343,179,325,0,488,212,223,489,35,333,186,185,332,0,490,214,226,491,35,894,344,351,957,1,503,504,262,274,35,930,348,347,921,1,505,506,507,508,35,2450,1830,350,948,1,509,510,511,512,35,948,350,349,939,1,512,511,513,514,35,1138,1288,1167,967,0,515,516,517,518,35,939,349,348,930,1,514,513,506,505,35,903,345,344,894,1,519,520,504,503,35,921,347,346,912,1,508,507,521,522,35,366,949,940,371,1,310,523,524,312,35,1857,2451,949,366,1,309,525,523,310,35,912,346,345,903,1,522,521,520,519,35,966,904,895,1139,1,526,527,528,529,34,365,966,969,1,306,526,530,34,913,904,966,1,531,527,526,34,365,913,966,1,306,531,526,35,360,922,913,365,1,305,532,531,306,35,374,931,922,360,1,315,533,532,305,35,371,940,931,374,1,312,524,533,315,35,348,356,355,347,1,506,534,535,507,35,349,357,356,348,1,513,536,534,506,35,350,358,357,349,1,511,537,536,513,35,1830,1839,358,350,1,510,538,537,511,35,344,352,359,351,1,504,539,263,262,35,345,353,352,344,1,520,540,539,504,35,346,354,353,345,1,521,541,540,520,35,347,355,354,346,1,507,535,541,521,35,822,1129,1148,885,1,479,478,179,178,35,1422,1431,299,278,0,542,543,449,431,35,372,367,364,362,1,315,315,305,305,35,369,370,367,372,1,312,312,315,315,35,1395,1404,236,215,0,301,544,377,302,35,368,373,370,369,1,310,310,312,312,35,1858,1856,373,368,1,309,309,310,310,35,1404,1413,257,236,0,544,545,390,377,35,1139,895,958,1156,1,529,528,229,228,35,1413,1422,278,257,0,545,542,431,390,35,1440,1449,341,320,0,546,547,498,465,35,1431,1440,320,299,0,543,546,465,449,35,1856,1857,366,373,1,309,309,310,310,35,373,366,371,370,1,310,310,312,312,35,370,371,374,367,1,312,312,315,315,35,367,374,360,364,1,315,315,305,305,35,364,360,365,361,1,305,305,306,306,35,968,1166,1228,1043,0,548,549,550,551,35,1054,1227,1315,1130,0,552,553,554,555,35,1130,1315,1306,1147,0,555,554,282,281,35,1157,1296,1288,1138,0,284,287,516,515,34,1043,1228,1053,0,551,550,556,35,362,364,361,363,1,305,305,306,306,34,1839,4908,358,1,538,290,537,34,357,358,4908,1,536,537,290,34,357,4908,356,1,536,290,534,34,356,4908,355,1,534,290,535,34,354,355,4908,1,541,535,290,34,354,4908,353,1,541,290,540,34,352,353,4908,1,539,540,290,34,352,4908,359,1,539,290,263,35,1314,1287,1297,1305,0,557,558,293,292,35,363,361,1044,1052,1,306,306,559,318,35,1226,1165,1287,1314,0,560,561,558,557,35,361,365,969,1044,1,306,306,530,559,35,501,505,526,525,0,276,562,563,564,35,505,506,527,526,0,562,565,566,563,35,506,507,528,527,0,565,567,568,566,35,507,508,562,528,0,567,569,570,568,35,502,512,544,511,0,295,571,572,573,35,512,513,545,544,0,571,574,575,572,35,513,514,546,545,0,574,576,577,575,35,514,515,565,546,0,576,578,579,577,35,515,516,553,565,0,578,580,581,579,35,516,517,554,553,1,580,582,583,581,35,517,518,555,554,1,582,584,585,583,34,518,503,555,1,584,251,585,34,504,519,535,1,250,586,587,35,519,520,536,535,1,586,588,589,587,35,520,521,537,536,1,588,590,591,589,35,521,522,571,537,0,590,592,593,591,35,525,526,529,524,0,564,563,594,595,35,526,527,530,529,0,563,566,596,594,35,527,528,531,530,0,566,568,597,596,35,528,562,563,531,0,568,570,598,597,35,511,544,547,510,0,573,572,599,600,35,544,545,548,547,0,572,575,601,599,35,545,546,549,548,0,575,577,602,601,35,546,565,567,549,0,577,579,603,602,35,565,553,556,567,0,579,581,604,603,35,553,554,557,556,1,581,583,605,604,35,554,555,558,557,1,583,585,606,605,34,555,503,558,1,585,251,606,34,504,535,538,1,250,587,607,35,535,536,539,538,1,587,589,608,607,35,536,537,540,539,1,589,591,609,608,35,537,571,573,540,0,591,593,610,609,35,524,529,532,523,0,595,594,611,612,35,529,530,533,532,0,594,596,613,611,35,530,531,534,533,0,596,597,614,613,35,531,563,564,534,0,597,598,615,614,35,510,547,550,509,0,600,599,616,617,35,547,548,551,550,0,599,601,618,616,35,548,549,552,551,0,601,602,619,618,35,549,567,569,552,0,602,603,620,619,35,567,556,559,569,0,603,604,621,620,35,556,557,560,559,1,604,605,622,621,35,557,558,561,560,1,605,606,623,622,34,558,503,561,1,606,251,623,34,504,538,541,1,250,607,624,35,538,539,542,541,1,607,608,625,624,35,539,540,543,542,1,608,609,626,625,35,540,573,575,543,0,609,610,627,626,35,523,532,571,522,0,612,611,593,592,35,532,533,573,571,0,611,613,610,593,35,533,534,575,573,0,613,614,627,610,35,534,564,577,575,0,614,615,628,627,35,509,550,562,508,0,617,616,570,569,35,550,551,563,562,0,616,618,598,570,35,551,552,564,563,0,618,619,615,598,35,552,569,577,564,0,619,620,628,615,35,569,559,570,577,0,620,621,629,628,35,559,560,568,570,1,621,622,630,629,35,560,561,566,568,1,622,623,631,630,34,561,503,566,1,623,251,631,34,504,541,572,1,250,624,632,35,541,542,574,572,1,624,625,633,632,35,542,543,576,574,1,625,626,634,633,35,543,575,577,576,0,626,627,628,634,34,577,570,576,0,628,629,634,35,587,591,612,611,0,288,635,636,637,35,591,592,613,612,0,635,638,639,636,35,592,593,614,613,0,638,640,641,639,35,593,594,648,614,0,640,642,643,641,35,588,598,630,597,0,299,644,645,646,35,598,599,631,630,0,644,647,648,645,35,599,600,632,631,0,647,649,650,648,35,600,601,651,632,0,649,651,652,650,35,601,602,639,651,0,651,653,654,652,35,602,603,640,639,1,653,655,656,654,35,603,604,641,640,1,655,657,658,656,34,604,589,641,1,657,16,658,34,590,605,621,1,3,659,660,35,605,606,622,621,1,659,661,662,660,35,606,607,623,622,1,661,663,664,662,35,607,608,657,623,0,663,665,666,664,35,611,612,615,610,0,637,636,667,668,35,612,613,616,615,0,636,639,669,667,35,613,614,617,616,0,639,641,670,669,35,614,648,649,617,0,641,643,671,670,35,597,630,633,596,0,646,645,672,673,35,630,631,634,633,0,645,648,674,672,35,631,632,635,634,0,648,650,675,674,35,632,651,653,635,0,650,652,676,675,35,651,639,642,653,0,652,654,677,676,35,639,640,643,642,1,654,656,678,677,35,640,641,644,643,1,656,658,679,678,34,641,589,644,1,658,16,679,34,590,621,624,1,3,660,680,35,621,622,625,624,1,660,662,681,680,35,622,623,626,625,1,662,664,682,681,35,623,657,659,626,0,664,666,683,682,35,610,615,618,609,0,668,667,684,685,35,615,616,619,618,0,667,669,686,684,35,616,617,620,619,0,669,670,687,686,35,617,649,650,620,0,670,671,688,687,35,596,633,636,595,0,673,672,689,690,35,633,634,637,636,0,672,674,691,689,35,634,635,638,637,0,674,675,692,691,35,635,653,655,638,0,675,676,693,692,35,653,642,645,655,0,676,677,694,693,35,642,643,646,645,1,677,678,695,694,35,643,644,647,646,1,678,679,696,695,34,644,589,647,1,679,16,696,34,590,624,627,1,3,680,697,35,624,625,628,627,1,680,681,698,697,35,625,626,629,628,1,681,682,699,698,35,626,659,661,629,0,682,683,700,699,35,609,618,657,608,0,685,684,666,665,35,618,619,659,657,0,684,686,683,666,35,619,620,661,659,0,686,687,700,683,35,620,650,663,661,0,687,688,701,700,35,595,636,648,594,0,690,689,643,642,35,636,637,649,648,0,689,691,671,643,35,637,638,650,649,0,691,692,688,671,35,638,655,663,650,0,692,693,701,688,35,655,645,656,663,0,693,694,702,701,35,645,646,654,656,1,694,695,703,702,35,646,647,652,654,1,695,696,704,703,34,647,589,652,1,696,16,704,34,590,627,658,1,3,697,705,35,627,628,660,658,1,697,698,706,705,35,628,629,662,660,1,698,699,707,706,35,629,661,663,662,0,699,700,701,707,34,1114,1055,1052,1,708,316,318,34,1118,1127,1125,1,709,710,711,34,1114,1123,1055,1,708,712,316,34,1118,1125,1123,1,709,711,712,34,1114,1116,1123,1,708,713,712,34,1116,1118,1123,1,713,709,712,35,682,685,706,705,0,296,714,715,716,35,685,686,707,706,0,714,717,718,715,35,686,687,708,707,0,717,719,720,718,35,687,688,733,708,0,719,721,722,720,35,683,692,715,691,0,279,723,724,725,35,692,693,716,715,0,723,726,727,724,35,693,694,717,716,0,726,728,729,727,35,694,695,736,717,0,728,730,731,729,35,684,699,724,698,0,298,732,733,734,35,699,700,725,724,0,732,735,736,733,35,700,701,726,725,0,735,737,738,736,35,701,702,739,726,0,737,739,740,738,35,705,706,709,704,0,716,715,741,742,35,706,707,710,709,0,715,718,743,741,35,707,708,711,710,0,718,720,744,743,35,708,733,734,711,0,720,722,745,744,35,691,715,718,690,0,725,724,746,747,35,715,716,719,718,0,724,727,748,746,35,716,717,720,719,0,727,729,749,748,35,717,736,737,720,0,729,731,750,749,35,698,724,727,697,0,734,733,751,752,35,724,725,728,727,0,733,736,753,751,35,725,726,729,728,0,736,738,754,753,35,726,739,740,729,0,738,740,755,754,35,704,709,712,703,0,742,741,756,757,35,709,710,713,712,0,741,743,758,756,35,710,711,714,713,0,743,744,759,758,35,711,734,735,714,0,744,745,760,759,35,690,718,721,689,0,747,746,761,762,35,718,719,722,721,0,746,748,763,761,35,719,720,723,722,0,748,749,764,763,35,720,737,738,723,0,749,750,765,764,35,697,727,730,696,0,752,751,766,767,35,727,728,731,730,0,751,753,768,766,35,728,729,732,731,0,753,754,769,768,35,729,740,741,732,0,754,755,770,769,35,703,712,739,702,0,757,756,740,739,35,712,713,740,739,0,756,758,755,740,35,713,714,741,740,0,758,759,770,755,35,714,735,742,741,0,759,760,771,770,35,689,721,733,688,0,762,761,722,721,35,721,722,734,733,0,761,763,745,722,35,722,723,735,734,0,763,764,760,745,35,723,738,742,735,0,764,765,771,760,35,696,730,736,695,0,767,766,731,730,35,730,731,737,736,0,766,768,750,731,35,731,732,738,737,0,768,769,765,750,35,732,741,742,738,0,769,770,771,765,35,743,746,767,766,0,278,772,773,774,35,746,747,768,767,0,772,775,776,773,35,747,748,769,768,0,775,777,778,776,35,748,749,794,769,0,777,779,780,778,35,744,753,776,752,0,289,781,782,783,35,753,754,777,776,0,781,784,785,782,35,754,755,778,777,0,784,786,787,785,35,755,756,797,778,0,786,788,789,787,35,745,760,785,759,0,297,790,791,792,35,760,761,786,785,0,790,793,794,791,35,761,762,787,786,0,793,795,796,794,35,762,763,800,787,0,795,797,798,796,35,766,767,770,765,0,774,773,799,800,35,767,768,771,770,0,773,776,801,799,35,768,769,772,771,0,776,778,802,801,35,769,794,795,772,0,778,780,803,802,35,752,776,779,751,0,783,782,804,805,35,776,777,780,779,0,782,785,806,804,35,777,778,781,780,0,785,787,807,806,35,778,797,798,781,0,787,789,808,807,35,759,785,788,758,0,792,791,809,810,35,785,786,789,788,0,791,794,811,809,35,786,787,790,789,0,794,796,812,811,35,787,800,801,790,0,796,798,813,812,35,765,770,773,764,0,800,799,814,815,35,770,771,774,773,0,799,801,816,814,35,771,772,775,774,0,801,802,817,816,35,772,795,796,775,0,802,803,818,817,35,751,779,782,750,0,805,804,819,820,35,779,780,783,782,0,804,806,821,819,35,780,781,784,783,0,806,807,822,821,35,781,798,799,784,0,807,808,823,822,35,758,788,791,757,0,810,809,824,825,35,788,789,792,791,0,809,811,826,824,35,789,790,793,792,0,811,812,827,826,35,790,801,802,793,0,812,813,828,827,35,764,773,800,763,0,815,814,798,797,35,773,774,801,800,0,814,816,813,798,35,774,775,802,801,0,816,817,828,813,35,775,796,803,802,0,817,818,829,828,35,750,782,794,749,0,820,819,780,779,35,782,783,795,794,0,819,821,803,780,35,783,784,796,795,0,821,822,818,803,35,784,799,803,796,0,822,823,829,818,35,757,791,797,756,0,825,824,789,788,35,791,792,798,797,0,824,826,808,789,35,792,793,799,798,0,826,827,823,808,35,793,802,803,799,0,827,828,829,823,34,966,970,1e3,1,526,830,831,35,970,971,1001,1e3,1,830,832,833,831,35,971,972,1002,1001,1,832,834,835,833,35,972,973,1027,1002,0,834,836,837,835,35,967,977,991,976,0,518,838,839,840,35,977,978,992,991,0,838,841,842,839,35,978,979,993,992,0,841,843,844,842,35,979,980,1033,993,0,843,845,846,844,35,968,984,1009,983,0,548,847,848,849,35,984,985,1010,1009,0,847,850,851,848,35,985,986,1011,1010,0,850,852,853,851,35,986,987,1036,1011,0,852,854,855,853,35,987,988,1018,1036,0,854,856,857,855,35,988,989,1019,1018,1,856,858,859,857,35,989,990,1020,1019,1,858,860,861,859,34,990,969,1020,1,860,530,861,34,966,1e3,1003,1,526,831,862,35,1e3,1001,1004,1003,1,831,833,863,862,35,1001,1002,1005,1004,1,833,835,864,863,35,1002,1027,1029,1005,0,835,837,865,864,35,976,991,994,975,0,840,839,866,867,35,991,992,995,994,0,839,842,868,866,35,992,993,996,995,0,842,844,869,868,35,993,1033,1034,996,0,844,846,870,869,35,983,1009,1012,982,0,849,848,871,872,35,1009,1010,1013,1012,0,848,851,873,871,35,1010,1011,1014,1013,0,851,853,874,873,35,1011,1036,1038,1014,0,853,855,875,874,35,1036,1018,1021,1038,0,855,857,876,875,35,1018,1019,1022,1021,1,857,859,877,876,35,1019,1020,1023,1022,1,859,861,878,877,34,1020,969,1023,1,861,530,878,34,966,1003,1006,1,526,862,879,35,1003,1004,1007,1006,1,862,863,880,879,35,1004,1005,1008,1007,1,863,864,881,880,35,1005,1029,1031,1008,0,864,865,882,881,35,975,994,997,974,0,867,866,883,884,35,994,995,998,997,0,866,868,885,883,35,995,996,999,998,0,868,869,886,885,35,996,1034,1035,999,0,869,870,887,886,35,982,1012,1015,981,0,872,871,888,889,35,1012,1013,1016,1015,0,871,873,890,888,35,1013,1014,1017,1016,0,873,874,891,890,35,1014,1038,1040,1017,0,874,875,892,891,35,1038,1021,1024,1040,0,875,876,893,892,35,1021,1022,1025,1024,1,876,877,894,893,35,1022,1023,1026,1025,1,877,878,895,894,34,1023,969,1026,1,878,530,895,34,966,1006,1028,1,526,879,896,35,1006,1007,1030,1028,1,879,880,897,896,35,1007,1008,1032,1030,1,880,881,898,897,35,1008,1031,1042,1032,0,881,882,899,898,35,974,997,1027,973,0,884,883,837,836,35,997,998,1029,1027,0,883,885,865,837,35,998,999,1031,1029,0,885,886,882,865,35,999,1035,1042,1031,0,886,887,899,882,35,981,1015,1033,980,0,889,888,846,845,35,1015,1016,1034,1033,0,888,890,870,846,35,1016,1017,1035,1034,0,890,891,887,870,35,1017,1040,1042,1035,0,891,892,899,887,35,1040,1024,1041,1042,0,892,893,900,899,35,1024,1025,1039,1041,1,893,894,901,900,35,1025,1026,1037,1039,1,894,895,902,901,34,1026,969,1037,1,895,530,902,34,1042,1041,1032,0,899,900,898,34,1052,1056,1086,1,318,903,904,35,1056,1057,1087,1086,1,903,905,906,904,35,1057,1058,1088,1087,1,905,907,908,906,35,1058,1059,1113,1088,0,907,909,910,908,35,1053,1063,1077,1062,0,556,911,912,913,35,1063,1064,1078,1077,0,911,914,915,912,35,1064,1065,1079,1078,0,914,916,917,915,35,1065,1066,1119,1079,0,916,918,919,917,35,1054,1070,1095,1069,0,552,920,921,922,35,1070,1071,1096,1095,0,920,923,924,921,35,1071,1072,1097,1096,0,923,925,926,924,35,1072,1073,1122,1097,0,925,927,928,926,35,1073,1074,1104,1122,0,927,929,930,928,35,1074,1075,1105,1104,1,929,931,932,930,35,1075,1076,1106,1105,1,931,933,934,932,34,1076,1055,1106,1,933,316,934,34,1052,1086,1089,1,318,904,935,35,1086,1087,1090,1089,1,904,906,936,935,35,1087,1088,1091,1090,1,906,908,937,936,35,1088,1113,1115,1091,0,908,910,938,937,35,1062,1077,1080,1061,0,913,912,939,940,35,1077,1078,1081,1080,0,912,915,941,939,35,1078,1079,1082,1081,0,915,917,942,941,35,1079,1119,1120,1082,0,917,919,943,942,35,1069,1095,1098,1068,0,922,921,944,945,35,1095,1096,1099,1098,0,921,924,946,944,35,1096,1097,1100,1099,0,924,926,947,946,35,1097,1122,1124,1100,0,926,928,948,947,35,1122,1104,1107,1124,0,928,930,949,948,35,1104,1105,1108,1107,1,930,932,950,949,35,1105,1106,1109,1108,1,932,934,951,950,34,1106,1055,1109,1,934,316,951,34,1052,1089,1092,1,318,935,952,35,1089,1090,1093,1092,1,935,936,953,952,35,1090,1091,1094,1093,1,936,937,954,953,35,1091,1115,1117,1094,0,937,938,955,954,35,1061,1080,1083,1060,0,940,939,956,957,35,1080,1081,1084,1083,0,939,941,958,956,35,1081,1082,1085,1084,0,941,942,959,958,35,1082,1120,1121,1085,0,942,943,960,959,35,1068,1098,1101,1067,0,945,944,961,962,35,1098,1099,1102,1101,0,944,946,963,961,35,1099,1100,1103,1102,0,946,947,964,963,35,1100,1124,1126,1103,0,947,948,965,964,35,1124,1107,1110,1126,0,948,949,966,965,35,1107,1108,1111,1110,1,949,950,967,966,35,1108,1109,1112,1111,1,950,951,968,967,34,1109,1055,1112,1,951,316,968,34,1052,1092,1114,1,318,952,708,35,1092,1093,1116,1114,1,952,953,713,708,35,1093,1094,1118,1116,1,953,954,709,713,35,1094,1117,1128,1118,0,954,955,969,709,35,1060,1083,1113,1059,0,957,956,910,909,35,1083,1084,1115,1113,0,956,958,938,910,35,1084,1085,1117,1115,0,958,959,955,938,35,1085,1121,1128,1117,0,959,960,969,955,35,1067,1101,1119,1066,0,962,961,919,918,35,1101,1102,1120,1119,0,961,963,943,919,35,1102,1103,1121,1120,0,963,964,960,943,35,1103,1126,1128,1121,0,964,965,969,960,35,1126,1110,1127,1128,0,965,966,710,969,35,1110,1111,1125,1127,1,966,967,711,710,35,1111,1112,1123,1125,1,967,968,712,711,34,1112,1055,1123,1,968,316,712,34,1128,1127,1118,0,969,710,709,35,1165,1168,1189,1188,0,561,970,971,972,35,1168,1169,1190,1189,0,970,973,974,971,35,1169,1170,1191,1190,0,973,975,976,974,35,1170,1171,1216,1191,0,975,977,978,976,35,1166,1175,1198,1174,0,549,979,980,981,35,1175,1176,1199,1198,0,979,982,983,980,35,1176,1177,1200,1199,0,982,984,985,983,35,1177,1178,1219,1200,0,984,986,987,985,35,1167,1182,1207,1181,0,517,988,989,990,35,1182,1183,1208,1207,0,988,991,992,989,35,1183,1184,1209,1208,0,991,993,994,992,35,1184,1185,1222,1209,0,993,995,996,994,35,1188,1189,1192,1187,0,972,971,997,998,35,1189,1190,1193,1192,0,971,974,999,997,35,1190,1191,1194,1193,0,974,976,1e3,999,35,1191,1216,1217,1194,0,976,978,1001,1e3,35,1174,1198,1201,1173,0,981,980,1002,1003,35,1198,1199,1202,1201,0,980,983,1004,1002,35,1199,1200,1203,1202,0,983,985,1005,1004,35,1200,1219,1220,1203,0,985,987,1006,1005,35,1181,1207,1210,1180,0,990,989,1007,1008,35,1207,1208,1211,1210,0,989,992,1009,1007,35,1208,1209,1212,1211,0,992,994,1010,1009,35,1209,1222,1223,1212,0,994,996,1011,1010,35,1187,1192,1195,1186,0,998,997,1012,1013,35,1192,1193,1196,1195,0,997,999,1014,1012,35,1193,1194,1197,1196,0,999,1e3,1015,1014,35,1194,1217,1218,1197,0,1ee3,35,1791,1790,1811,1812,0,1972,1985,2001,2002,35,1781,1780,1801,1802,0,1974,1987,1994,2003,35,1798,1797,1818,1819,0,1976,1988,1992,2004,35,1788,1787,1808,1809,0,1967,1966,1996,2005,35,1795,1794,1815,1816,0,1969,1968,1998,2006,35,1785,1784,1805,1806,0,1971,1970,2e3,2007,35,1792,1791,1812,1813,0,1973,1972,2002,2008,35,1799,1798,1819,1820,0,1977,1976,2004,2009,35,1782,1781,1802,1803,0,1975,1974,2003,2010,35,1789,1788,1809,1810,0,1978,1967,2005,2011,35,1796,1795,1816,1817,0,1979,1969,2006,1991,35,1786,1785,1806,1807,0,1980,1971,2007,1995,35,1793,1792,1813,1814,0,1981,1973,2008,1997,35,1783,1782,1803,1804,0,1982,1975,2010,1999,35,2952,2961,2307,2316,1,1983,2012,2013,1984,35,1790,1789,1810,1811,0,1985,1978,2011,2001,34,1653,4907,1674,0,334,203,1858,34,1674,4907,1695,0,1858,203,1896,34,1695,4907,1716,0,1896,203,1916,34,1716,4907,1737,0,1916,203,1932,34,1737,4907,1758,0,1932,203,1965,34,1758,4907,1779,0,1965,203,1986,34,1779,4907,1800,0,1986,203,1993,35,1802,1801,1634,1635,0,2003,1994,1743,1742,35,1819,1818,1650,1651,0,2004,1992,1745,1744,35,1809,1808,1640,1641,0,2005,1996,1747,1746,35,1816,1815,1647,1648,0,2006,1998,1749,1748,35,1806,1805,1822,1638,0,2007,2e3,1751,1750,35,1813,1812,1644,1645,0,2008,2002,1753,1752,35,1803,1802,1635,1636,0,2010,2003,1742,1754,35,1820,1819,1651,1652,0,2009,2004,1744,1755,35,1810,1809,1641,1642,0,2011,2005,1746,1756,34,1800,4907,1821,0,1993,203,1757,35,1817,1816,1648,1649,0,1991,2006,1748,1758,35,1807,1806,1638,1639,0,1995,2007,1750,1759,35,1814,1813,1645,1646,0,1997,2008,1752,1760,35,1804,1803,1636,1637,0,1999,2010,1754,1761,35,2961,2888,2379,2307,1,2012,1763,1762,2013,35,1811,1810,1642,1643,0,2001,2011,1756,1764,35,1818,1817,1649,1650,0,1992,1991,1758,1745,35,1801,1800,1821,1634,0,1994,1993,1757,1743,35,1808,1807,1639,1640,0,1996,1995,1759,1747,35,1815,1814,1646,1647,0,1998,1997,1760,1749,35,1805,1804,1637,1822,0,2e3,1999,1761,1751,35,1812,1811,1643,1644,0,2002,2001,1764,1753,35,2387,2459,1831,1823,1,2014,1812,1802,2015,35,2423,2414,1826,1827,1,2016,2017,2018,2019,35,2450,2441,1829,1830,1,509,2020,2021,510,35,2441,2432,1828,1829,1,2020,2022,2023,2021,35,2640,2469,2669,2790,0,2024,2025,2026,2027,35,2432,2423,1827,1828,1,2022,2016,2019,2023,35,2396,2387,1823,1824,1,2028,2014,2015,2029,35,2414,2405,1825,1826,1,2017,2030,2031,2018,35,1847,1852,2433,2442,1,1844,1846,2032,2033,35,1857,1847,2442,2451,1,309,1844,2033,525,35,2405,2396,1824,1825,1,2030,2028,2029,2031,35,2468,2641,2388,2397,1,2034,2035,2036,2037,34,1846,2397,2406,1,1841,2037,2038,34,2471,2468,2397,1,2039,2034,2037,34,1846,2471,2397,1,1841,2039,2037,35,1841,1846,2406,2415,1,1842,1841,2038,2040,35,1855,1841,2415,2424,1,1848,1842,2040,2041,35,1852,1855,2424,2433,1,1846,1848,2041,2032,35,1827,1826,1835,1836,1,2019,2018,2042,2043,35,1828,1827,1836,1837,1,2023,2019,2043,2044,35,1829,1828,1837,1838,1,2021,2023,2044,2045,35,1830,1829,1838,1839,1,510,2021,2045,538,35,1823,1831,1840,1832,1,2015,1802,1801,2046,35,1824,1823,1832,1833,1,2029,2015,2046,2047,35,1825,1824,1833,1834,1,2031,2029,2047,2048,35,1826,1825,1834,1835,1,2018,2031,2048,2042,35,2306,2378,2650,2631,1,1989,1718,1717,1990,35,2933,1757,1778,2942,0,2049,1942,1960,2050,35,1853,1843,1845,1848,1,1848,1842,1842,1848,35,1850,1853,1848,1851,1,1846,1848,1848,1846,35,2906,1694,1715,2915,0,1838,1837,1888,2051,35,1849,1850,1851,1854,1,1844,1846,1846,1844,35,1858,1849,1854,1856,1,309,1844,1844,309,35,2915,1715,1736,2924,0,2051,1888,1902,2052,35,2641,2658,2460,2388,1,2035,1768,1767,2036,35,2924,1736,1757,2933,0,2052,1902,1942,2049,35,2951,1799,1820,2960,0,2053,1977,2009,2054,35,2942,1778,1799,2951,0,2050,1960,1977,2053,35,1856,1854,1847,1857,1,309,1844,1844,309,35,1854,1851,1852,1847,1,1844,1846,1846,1844,35,1851,1848,1855,1852,1,1846,1848,1848,1846,35,1848,1845,1841,1855,1,1848,1842,1842,1848,35,1845,1842,1846,1841,1,1842,1841,1841,1842,35,2470,2545,2730,2668,0,2055,2056,2057,2058,35,2556,2632,2817,2729,0,2059,2060,2061,2062,35,2632,2649,2808,2817,0,2060,1821,1820,2061,35,2659,2640,2790,2798,0,1822,2024,2027,1823,34,2545,2555,2730,0,2056,2063,2057,35,1843,1844,1842,1845,1,1842,1841,1841,1842,34,1839,1838,4908,1,538,2045,290,34,1837,4908,1838,1,2044,290,2045,34,1837,1836,4908,1,2044,2043,290,34,1836,1835,4908,1,2043,2042,290,34,1834,4908,1835,1,2048,290,2042,34,1834,1833,4908,1,2048,2047,290,34,1832,4908,1833,1,2046,290,2047,34,1832,1840,4908,1,2046,1801,290,35,2816,2807,2799,2789,0,2064,1831,1830,2065,35,1844,2554,2546,1842,1,1841,1849,2066,1841,35,2728,2816,2789,2667,0,2067,2064,2065,2068,35,1842,2546,2471,1846,1,1841,2066,2039,1841,35,1985,2009,2010,1989,0,1814,2069,2070,2071,35,1989,2010,2011,1990,0,2071,2070,2072,2073,35,1990,2011,2012,1991,0,2073,2072,2074,2075,35,1991,2012,2046,1992,0,2075,2074,2076,2077,35,1986,1995,2028,1996,0,1833,2078,2079,2080,35,1996,2028,2029,1997,0,2080,2079,2081,2082,35,1997,2029,2030,1998,0,2082,2081,2083,2084,35,1998,2030,2049,1999,0,2084,2083,2085,2086,35,1999,2049,2037,2e3,0,2086,2085,2087,2088,35,2e3,2037,2038,2001,1,2088,2087,2089,2090,35,2001,2038,2039,2002,1,2090,2089,2091,2092,34,2002,2039,1987,1,2092,2091,1789,34,1988,2019,2003,1,1787,2093,2094,35,2003,2019,2020,2004,1,2094,2093,2095,2096,35,2004,2020,2021,2005,1,2096,2095,2097,2098,35,2005,2021,2055,2006,0,2098,2097,2099,2100,35,2009,2008,2013,2010,0,2069,2101,2102,2070,35,2010,2013,2014,2011,0,2070,2102,2103,2072,35,2011,2014,2015,2012,0,2072,2103,2104,2074,35,2012,2015,2047,2046,0,2074,2104,2105,2076,35,1995,1994,2031,2028,0,2078,2106,2107,2079,35,2028,2031,2032,2029,0,2079,2107,2108,2081,35,2029,2032,2033,2030,0,2081,2108,2109,2083,35,2030,2033,2051,2049,0,2083,2109,2110,2085,35,2049,2051,2040,2037,0,2085,2110,2111,2087,35,2037,2040,2041,2038,1,2087,2111,2112,2089,35,2038,2041,2042,2039,1,2089,2112,2113,2091,34,2039,2042,1987,1,2091,2113,1789,34,1988,2022,2019,1,1787,2114,2093,35,2019,2022,2023,2020,1,2093,2114,2115,2095,35,2020,2023,2024,2021,1,2095,2115,2116,2097,35,2021,2024,2057,2055,0,2097,2116,2117,2099,35,2008,2007,2016,2013,0,2101,2118,2119,2102,35,2013,2016,2017,2014,0,2102,2119,2120,2103,35,2014,2017,2018,2015,0,2103,2120,2121,2104,35,2015,2018,2048,2047,0,2104,2121,2122,2105,35,1994,1993,2034,2031,0,2106,2123,2124,2107,35,2031,2034,2035,2032,0,2107,2124,2125,2108,35,2032,2035,2036,2033,0,2108,2125,2126,2109,35,2033,2036,2053,2051,0,2109,2126,2127,2110,35,2051,2053,2043,2040,0,2110,2127,2128,2111,35,2040,2043,2044,2041,1,2111,2128,2129,2112,35,2041,2044,2045,2042,1,2112,2129,2130,2113,34,2042,2045,1987,1,2113,2130,1789,34,1988,2025,2022,1,1787,2131,2114,35,2022,2025,2026,2023,1,2114,2131,2132,2115,35,2023,2026,2027,2024,1,2115,2132,2133,2116,35,2024,2027,2059,2057,0,2116,2133,2134,2117,35,2007,2006,2055,2016,0,2118,2100,2099,2119,35,2016,2055,2057,2017,0,2119,2099,2117,2120,35,2017,2057,2059,2018,0,2120,2117,2134,2121,35,2018,2059,2061,2048,0,2121,2134,2135,2122,35,1993,1992,2046,2034,0,2123,2077,2076,2124,35,2034,2046,2047,2035,0,2124,2076,2105,2125,35,2035,2047,2048,2036,0,2125,2105,2122,2126,35,2036,2048,2061,2053,0,2126,2122,2135,2127,35,2053,2061,2054,2043,0,2127,2135,2136,2128,35,2043,2054,2052,2044,1,2128,2136,2137,2129,35,2044,2052,2050,2045,1,2129,2137,2138,2130,34,2045,2050,1987,1,2130,2138,1789,34,1988,2056,2025,1,1787,2139,2131,35,2025,2056,2058,2026,1,2131,2139,2140,2132,35,2026,2058,2060,2027,1,2132,2140,2141,2133,35,2027,2060,2061,2059,0,2133,2141,2135,2134,34,2061,2060,2054,0,2135,2141,2136,35,2071,2095,2096,2075,0,1826,2142,2143,2144,35,2075,2096,2097,2076,0,2144,2143,2145,2146,35,2076,2097,2098,2077,0,2146,2145,2147,2148,35,2077,2098,2132,2078,0,2148,2147,2149,2150,35,2072,2081,2114,2082,0,1836,2151,2152,2153,35,2082,2114,2115,2083,0,2153,2152,2154,2155,35,2083,2115,2116,2084,0,2155,2154,2156,2157,35,2084,2116,2135,2085,0,2157,2156,2158,2159,35,2085,2135,2123,2086,0,2159,2158,2160,2161,35,2086,2123,2124,2087,1,2161,2160,2162,2163,35,2087,2124,2125,2088,1,2163,2162,2164,2165,34,2088,2125,2073,1,2165,2164,1555,34,2074,2105,2089,1,1540,2166,2167,35,2089,2105,2106,2090,1,2167,2166,2168,2169,35,2090,2106,2107,2091,1,2169,2168,2170,2171,35,2091,2107,2141,2092,0,2171,2170,2172,2173,35,2095,2094,2099,2096,0,2142,2174,2175,2143,35,2096,2099,2100,2097,0,2143,2175,2176,2145,35,2097,2100,2101,2098,0,2145,2176,2177,2147,35,2098,2101,2133,2132,0,2147,2177,2178,2149,35,2081,2080,2117,2114,0,2151,2179,2180,2152,35,2114,2117,2118,2115,0,2152,2180,2181,2154,35,2115,2118,2119,2116,0,2154,2181,2182,2156,35,2116,2119,2137,2135,0,2156,2182,2183,2158,35,2135,2137,2126,2123,0,2158,2183,2184,2160,35,2123,2126,2127,2124,1,2160,2184,2185,2162,35,2124,2127,2128,2125,1,2162,2185,2186,2164,34,2125,2128,2073,1,2164,2186,1555,34,2074,2108,2105,1,1540,2187,2166,35,2105,2108,2109,2106,1,2166,2187,2188,2168,35,2106,2109,2110,2107,1,2168,2188,2189,2170,35,2107,2110,2143,2141,0,2170,2189,2190,2172,35,2094,2093,2102,2099,0,2174,2191,2192,2175,35,2099,2102,2103,2100,0,2175,2192,2193,2176,35,2100,2103,2104,2101,0,2176,2193,2194,2177,35,2101,2104,2134,2133,0,2177,2194,2195,2178,35,2080,2079,2120,2117,0,2179,2196,2197,2180,35,2117,2120,2121,2118,0,2180,2197,2198,2181,35,2118,2121,2122,2119,0,2181,2198,2199,2182,35,2119,2122,2139,2137,0,2182,2199,2200,2183,35,2137,2139,2129,2126,0,2183,2200,2201,2184,35,2126,2129,2130,2127,1,2184,2201,2202,2185,35,2127,2130,2131,2128,1,2185,2202,2203,2186,34,2128,2131,2073,1,2186,2203,1555,34,2074,2111,2108,1,1540,2204,2187,35,2108,2111,2112,2109,1,2187,2204,2205,2188,35,2109,2112,2113,2110,1,2188,2205,2206,2189,35,2110,2113,2145,2143,0,2189,2206,2207,2190,35,2093,2092,2141,2102,0,2191,2173,2172,2192,35,2102,2141,2143,2103,0,2192,2172,2190,2193,35,2103,2143,2145,2104,0,2193,2190,2207,2194,35,2104,2145,2147,2134,0,2194,2207,2208,2195,35,2079,2078,2132,2120,0,2196,2150,2149,2197,35,2120,2132,2133,2121,0,2197,2149,2178,2198,35,2121,2133,2134,2122,0,2198,2178,2195,2199,35,2122,2134,2147,2139,0,2199,2195,2208,2200,35,2139,2147,2140,2129,0,2200,2208,2209,2201,35,2129,2140,2138,2130,1,2201,2209,2210,2202,35,2130,2138,2136,2131,1,2202,2210,2211,2203,34,2131,2136,2073,1,2203,2211,1555,34,2074,2142,2111,1,1540,2212,2204,35,2111,2142,2144,2112,1,2204,2212,2213,2205,35,2112,2144,2146,2113,1,2205,2213,2214,2206,35,2113,2146,2147,2145,0,2206,2214,2208,2207,34,2629,2620,2618,1,2215,2216,2217,34,2616,2554,2557,1,2218,1849,1851,34,2616,2629,2618,1,2218,2215,2217,34,2616,2557,2625,1,2218,1851,2219,34,2616,2627,2629,1,2218,2220,2215,34,2616,2625,2627,1,2218,2219,2220,35,2166,2189,2190,2169,0,1832,2221,2222,2223,35,2169,2190,2191,2170,0,2223,2222,2224,2225,35,2170,2191,2192,2171,0,2225,2224,2226,2227,35,2171,2192,2217,2172,0,2227,2226,2228,2229,35,2167,2175,2199,2176,0,1815,2230,2231,2232,35,2176,2199,2200,2177,0,2232,2231,2233,2234,35,2177,2200,2201,2178,0,2234,2233,2235,2236,35,2178,2201,2220,2179,0,2236,2235,2237,2238,35,2168,2182,2208,2183,0,1835,2239,2240,2241,35,2183,2208,2209,2184,0,2241,2240,2242,2243,35,2184,2209,2210,2185,0,2243,2242,2244,2245,35,2185,2210,2223,2186,0,2245,2244,2246,2247,35,2189,2188,2193,2190,0,2221,2248,2249,2222,35,2190,2193,2194,2191,0,2222,2249,2250,2224,35,2191,2194,2195,2192,0,2224,2250,2251,2226,35,2192,2195,2218,2217,0,2226,2251,2252,2228,35,2175,2174,2202,2199,0,2230,2253,2254,2231,35,2199,2202,2203,2200,0,2231,2254,2255,2233,35,2200,2203,2204,2201,0,2233,2255,2256,2235,35,2201,2204,2221,2220,0,2235,2256,2257,2237,35,2182,2181,2211,2208,0,2239,2258,2259,2240,35,2208,2211,2212,2209,0,2240,2259,2260,2242,35,2209,2212,2213,2210,0,2242,2260,2261,2244,35,2210,2213,2224,2223,0,2244,2261,2262,2246,35,2188,2187,2196,2193,0,2248,2263,2264,2249,35,2193,2196,2197,2194,0,2249,2264,2265,2250,35,2194,2197,2198,2195,0,2250,2265,2266,2251,35,2195,2198,2219,2218,0,2251,2266,2267,2252,35,2174,2173,2205,2202,0,2253,2268,2269,2254,35,2202,2205,2206,2203,0,2254,2269,2270,2255,35,2203,2206,2207,2204,0,2255,2270,2271,2256,35,2204,2207,2222,2221,0,2256,2271,2272,2257,35,2181,2180,2214,2211,0,2258,2273,2274,2259,35,2211,2214,2215,2212,0,2259,2274,2275,2260,35,2212,2215,2216,2213,0,2260,2275,2276,2261,35,2213,2216,2225,2224,0,2261,2276,2277,2262,35,2187,2186,2223,2196,0,2263,2247,2246,2264,35,2196,2223,2224,2197,0,2264,2246,2262,2265,35,2197,2224,2225,2198,0,2265,2262,2277,2266,35,2198,2225,2226,2219,0,2266,2277,2278,2267,35,2173,2172,2217,2205,0,2268,2229,2228,2269,35,2205,2217,2218,2206,0,2269,2228,2252,2270,35,2206,2218,2219,2207,0,2270,2252,2267,2271,35,2207,2219,2226,2222,0,2271,2267,2278,2272,35,2180,2179,2220,2214,0,2273,2238,2237,2274,35,2214,2220,2221,2215,0,2274,2237,2257,2275,35,2215,2221,2222,2216,0,2275,2257,2272,2276,35,2216,2222,2226,2225,0,2276,2272,2278,2277,35,2227,2250,2251,2230,0,1816,2279,2280,2281,35,2230,2251,2252,2231,0,2281,2280,2282,2283,35,2231,2252,2253,2232,0,2283,2282,2284,2285,35,2232,2253,2278,2233,0,2285,2284,2286,2287,35,2228,2236,2260,2237,0,1827,2288,2289,2290,35,2237,2260,2261,2238,0,2290,2289,2291,2292,35,2238,2261,2262,2239,0,2292,2291,2293,2294,35,2239,2262,2281,2240,0,2294,2293,2295,2296,35,2229,2243,2269,2244,0,1834,2297,2298,2299,35,2244,2269,2270,2245,0,2299,2298,2300,2301,35,2245,2270,2271,2246,0,2301,2300,2302,2303,35,2246,2271,2284,2247,0,2303,2302,2304,2305,35,2250,2249,2254,2251,0,2279,2306,2307,2280,35,2251,2254,2255,2252,0,2280,2307,2308,2282,35,2252,2255,2256,2253,0,2282,2308,2309,2284,35,2253,2256,2279,2278,0,2284,2309,2310,2286,35,2236,2235,2263,2260,0,2288,2311,2312,2289,35,2260,2263,2264,2261,0,2289,2312,2313,2291,35,2261,2264,2265,2262,0,2291,2313,2314,2293,35,2262,2265,2282,2281,0,2293,2314,2315,2295,35,2243,2242,2272,2269,0,2297,2316,2317,2298,35,2269,2272,2273,2270,0,2298,2317,2318,2300,35,2270,2273,2274,2271,0,2300,2318,2319,2302,35,2271,2274,2285,2284,0,2302,2319,2320,2304,35,2249,2248,2257,2254,0,2306,2321,2322,2307,35,2254,2257,2258,2255,0,2307,2322,2323,2308,35,2255,2258,2259,2256,0,2308,2323,2324,2309,35,2256,2259,2280,2279,0,2309,2324,2325,2310,35,2235,2234,2266,2263,0,2311,2326,2327,2312,35,2263,2266,2267,2264,0,2312,2327,2328,2313,35,2264,2267,2268,2265,0,2313,2328,2329,2314,35,2265,2268,2283,2282,0,2314,2329,2330,2315,35,2242,2241,2275,2272,0,2316,2331,2332,2317,35,2272,2275,2276,2273,0,2317,2332,2333,2318,35,2273,2276,2277,2274,0,2318,2333,2334,2319,35,2274,2277,2286,2285,0,2319,2334,2335,2320,35,2248,2247,2284,2257,0,2321,2305,2304,2322,35,2257,2284,2285,2258,0,2322,2304,2320,2323,35,2258,2285,2286,2259,0,2323,2320,2335,2324,35,2259,2286,2287,2280,0,2324,2335,2336,2325,35,2234,2233,2278,2266,0,2326,2287,2286,2327,35,2266,2278,2279,2267,0,2327,2286,2310,2328,35,2267,2279,2280,2268,0,2328,2310,2325,2329,35,2268,2280,2287,2283,0,2329,2325,2336,2330,35,2241,2240,2281,2275,0,2331,2296,2295,2332,35,2275,2281,2282,2276,0,2332,2295,2315,2333,35,2276,2282,2283,2277,0,2333,2315,2330,2334,35,2277,2283,2287,2286,0,2334,2330,2336,2335,34,2468,2502,2472,1,2034,2337,2338,35,2472,2502,2503,2473,1,2338,2337,2339,2340,35,2473,2503,2504,2474,1,2340,2339,2341,2342,35,2474,2504,2529,2475,0,2342,2341,2343,2344,35,2469,2478,2493,2479,0,2025,2345,2346,2347,35,2479,2493,2494,2480,0,2347,2346,2348,2349,35,2480,2494,2495,2481,0,2349,2348,2350,2351,35,2481,2495,2535,2482,0,2351,2350,2352,2353,35,2470,2485,2511,2486,0,2055,2354,2355,2356,35,2486,2511,2512,2487,0,2356,2355,2357,2358,35,2487,2512,2513,2488,0,2358,2357,2359,2360,35,2488,2513,2538,2489,0,2360,2359,2361,2362,35,2489,2538,2520,2490,0,2362,2361,2363,2364,35,2490,2520,2521,2491,1,2364,2363,2365,2366,35,2491,2521,2522,2492,1,2366,2365,2367,2368,34,2492,2522,2471,1,2368,2367,2039,34,2468,2505,2502,1,2034,2369,2337,35,2502,2505,2506,2503,1,2337,2369,2370,2339,35,2503,2506,2507,2504,1,2339,2370,2371,2341,35,2504,2507,2531,2529,0,2341,2371,2372,2343,35,2478,2477,2496,2493,0,2345,2373,2374,2346,35,2493,2496,2497,2494,0,2346,2374,2375,2348,35,2494,2497,2498,2495,0,2348,2375,2376,2350,35,2495,2498,2536,2535,0,2350,2376,2377,2352,35,2485,2484,2514,2511,0,2354,2378,2379,2355,35,2511,2514,2515,2512,0,2355,2379,2380,2357,35,2512,2515,2516,2513,0,2357,2380,2381,2359,35,2513,2516,2540,2538,0,2359,2381,2382,2361,35,2538,2540,2523,2520,0,2361,2382,2383,2363,35,2520,2523,2524,2521,1,2363,2383,2384,2365,35,2521,2524,2525,2522,1,2365,2384,2385,2367,34,2522,2525,2471,1,2367,2385,2039,34,2468,2508,2505,1,2034,2386,2369,35,2505,2508,2509,2506,1,2369,2386,2387,2370,35,2506,2509,2510,2507,1,2370,2387,2388,2371,35,2507,2510,2533,2531,0,2371,2388,2389,2372,35,2477,2476,2499,2496,0,2373,2390,2391,2374,35,2496,2499,2500,2497,0,2374,2391,2392,2375,35,2497,2500,2501,2498,0,2375,2392,2393,2376,35,2498,2501,2537,2536,0,2376,2393,2394,2377,35,2484,2483,2517,2514,0,2378,2395,2396,2379,35,2514,2517,2518,2515,0,2379,2396,2397,2380,35,2515,2518,2519,2516,0,2380,2397,2398,2381,35,2516,2519,2542,2540,0,2381,2398,2399,2382,35,2540,2542,2526,2523,0,2382,2399,2400,2383,35,2523,2526,2527,2524,1,2383,2400,2401,2384,35,2524,2527,2528,2525,1,2384,2401,2402,2385,34,2525,2528,2471,1,2385,2402,2039,34,2468,2530,2508,1,2034,2403,2386,35,2508,2530,2532,2509,1,2386,2403,2404,2387,35,2509,2532,2534,2510,1,2387,2404,2405,2388,35,2510,2534,2544,2533,0,2388,2405,2406,2389,35,2476,2475,2529,2499,0,2390,2344,2343,2391,35,2499,2529,2531,2500,0,2391,2343,2372,2392,35,2500,2531,2533,2501,0,2392,2372,2389,2393,35,2501,2533,2544,2537,0,2393,2389,2406,2394,35,2483,2482,2535,2517,0,2395,2353,2352,2396,35,2517,2535,2536,2518,0,2396,2352,2377,2397,35,2518,2536,2537,2519,0,2397,2377,2394,2398,35,2519,2537,2544,2542,0,2398,2394,2406,2399,35,2542,2544,2543,2526,0,2399,2406,2407,2400,35,2526,2543,2541,2527,1,2400,2407,2408,2401,35,2527,2541,2539,2528,1,2401,2408,2409,2402,34,2528,2539,2471,1,2402,2409,2039,34,2544,2534,2543,0,2406,2405,2407,34,2554,2588,2558,1,1849,2410,2411,35,2558,2588,2589,2559,1,2411,2410,2412,2413,35,2559,2589,2590,2560,1,2413,2412,2414,2415,35,2560,2590,2615,2561,0,2415,2414,2416,2417,35,2555,2564,2579,2565,0,2063,2418,2419,2420,35,2565,2579,2580,2566,0,2420,2419,2421,2422,35,2566,2580,2581,2567,0,2422,2421,2423,2424,35,2567,2581,2621,2568,0,2424,2423,2425,2426,35,2556,2571,2597,2572,0,2059,2427,2428,2429,35,2572,2597,2598,2573,0,2429,2428,2430,2431,35,2573,2598,2599,2574,0,2431,2430,2432,2433,35,2574,2599,2624,2575,0,2433,2432,2434,2435,35,2575,2624,2606,2576,0,2435,2434,2436,2437,35,2576,2606,2607,2577,1,2437,2436,2438,2439,35,2577,2607,2608,2578,1,2439,2438,2440,2441,34,2578,2608,2557,1,2441,2440,1851,34,2554,2591,2588,1,1849,2442,2410,35,2588,2591,2592,2589,1,2410,2442,2443,2412,35,2589,2592,2593,2590,1,2412,2443,2444,2414,35,2590,2593,2617,2615,0,2414,2444,2445,2416,35,2564,2563,2582,2579,0,2418,2446,2447,2419,35,2579,2582,2583,2580,0,2419,2447,2448,2421,35,2580,2583,2584,2581,0,2421,2448,2449,2423,35,2581,2584,2622,2621,0,2423,2449,2450,2425,35,2571,2570,2600,2597,0,2427,2451,2452,2428,35,2597,2600,2601,2598,0,2428,2452,2453,2430,35,2598,2601,2602,2599,0,2430,2453,2454,2432,35,2599,2602,2626,2624,0,2432,2454,2455,2434,35,2624,2626,2609,2606,0,2434,2455,2456,2436,35,2606,2609,2610,2607,1,2436,2456,2457,2438,35,2607,2610,2611,2608,1,2438,2457,2458,2440,34,2608,2611,2557,1,2440,2458,1851,34,2554,2594,2591,1,1849,2459,2442,35,2591,2594,2595,2592,1,2442,2459,2460,2443,35,2592,2595,2596,2593,1,2443,2460,2461,2444,35,2593,2596,2619,2617,0,2444,2461,2462,2445,35,2563,2562,2585,2582,0,2446,2463,2464,2447,35,2582,2585,2586,2583,0,2447,2464,2465,2448,35,2583,2586,2587,2584,0,2448,2465,2466,2449,35,2584,2587,2623,2622,0,2449,2466,2467,2450,35,2570,2569,2603,2600,0,2451,2468,2469,2452,35,2600,2603,2604,2601,0,2452,2469,2470,2453,35,2601,2604,2605,2602,0,2453,2470,2471,2454,35,2602,2605,2628,2626,0,2454,2471,2472,2455,35,2626,2628,2612,2609,0,2455,2472,2473,2456,35,2609,2612,2613,2610,1,2456,2473,2474,2457,35,2610,2613,2614,2611,1,2457,2474,2475,2458,34,2611,2614,2557,1,2458,2475,1851,34,2554,2616,2594,1,1849,2218,2459,35,2594,2616,2618,2595,1,2459,2218,2217,2460,35,2595,2618,2620,2596,1,2460,2217,2216,2461,35,2596,2620,2630,2619,0,2461,2216,2476,2462,35,2562,2561,2615,2585,0,2463,2417,2416,2464,35,2585,2615,2617,2586,0,2464,2416,2445,2465,35,2586,2617,2619,2587,0,2465,2445,2462,2466,35,2587,2619,2630,2623,0,2466,2462,2476,2467,35,2569,2568,2621,2603,0,2468,2426,2425,2469,35,2603,2621,2622,2604,0,2469,2425,2450,2470,35,2604,2622,2623,2605,0,2470,2450,2467,2471,35,2605,2623,2630,2628,0,2471,2467,2476,2472,35,2628,2630,2629,2612,0,2472,2476,2215,2473,35,2612,2629,2627,2613,1,2473,2215,2220,2474,35,2613,2627,2625,2614,1,2474,2220,2219,2475,34,2614,2625,2557,1,2475,2219,1851,34,2630,2620,2629,0,2476,2216,2215,35,2667,2690,2691,2670,0,2068,2477,2478,2479,35,2670,2691,2692,2671,0,2479,2478,2480,2481,35,2671,2692,2693,2672,0,2481,2480,2482,2483,35,2672,2693,2718,2673,0,2483,2482,2484,2485,35,2668,2676,2700,2677,0,2058,2486,2487,2488,35,2677,2700,2701,2678,0,2488,2487,2489,2490,35,2678,2701,2702,2679,0,2490,2489,2491,2492,35,2679,2702,2721,2680,0,2492,2491,2493,2494,35,2669,2683,2709,2684,0,2026,2495,2496,2497,35,2684,2709,2710,2685,0,2497,2496,2498,2499,35,2685,2710,2711,2686,0,2499,2498,2500,2501,35,2686,2711,2724,2687,0,2501,2500,2502,2503,35,2690,2689,2694,2691,0,2477,2504,2505,2478,35,2691,2694,2695,2692,0,2478,2505,2506,2480,35,2692,2695,2696,2693,0,2480,2506,2507,2482,35,2693,2696,2719,2718,0,2482,2507,2508,2484,35,2676,2675,2703,2700,0,2486,2509,2510,2487,35,2700,2703,2704,2701,0,2487,2510,2511,2489,35,2701,2704,2705,2702,0,2489,2511,2512,2491,35,2702,2705,2722,2721,0,2491,2512,2513,2493,35,2683,2682,2712,2709,0,2495,2514,2515,2496,35,2709,2712,2713,2710,0,2496,2515,2516,2498,35,2710,2713,2714,2711,0,2498,2516,2517,2500,35,2711,2714,2725,2724,0,2500,2517,2518,2502,35,2689,2688,2697,2694,0,2504,2519,2520,2505,35,2694,2697,2698,2695,0,2505,2520,2521,2506,35,2695,2698,2699,2696,0,2506,2521,2522,2507,35,2696,2699,2720,2719,0,2507,2522,2523,2508,35,2675,2674,2706,2703,0,2509,2524,2525,2510,35,2703,2706,2707,2704,0,2510,2525,2526,2511,35,2704,2707,2708,2705,0,2511,2526,2527,2512,35,2705,2708,2723,2722,0,2512,2527,2528,2513,35,2682,2681,2715,2712,0,2514,2529,2530,2515,35,2712,2715,2716,2713,0,2515,2530,2531,2516,35,2713,2716,2717,2714,0,2516,2531,2532,2517,35,2714,2717,2726,2725,0,2517,2532,2533,2518,35,2688,2687,2724,2697,0,2519,2503,2502,2520,35,2697,2724,2725,2698,0,2520,2502,2518,2521,35,2698,2725,2726,2699,0,2521,2518,2533,2522,35,2699,2726,2727,2720,0,2522,2533,2534,2523,35,2674,2673,2718,2706,0,2524,2485,2484,2525,35,2706,2718,2719,2707,0,2525,2484,2508,2526,35,2707,2719,2720,2708,0,2526,2508,2523,2527,35,2708,2720,2727,2723,0,2527,2523,2534,2528,35,2681,2680,2721,2715,0,2529,2494,2493,2530,35,2715,2721,2722,2716,0,2530,2493,2513,2531,35,2716,2722,2723,2717,0,2531,2513,2528,2532,35,2717,2723,2727,2726,0,2532,2528,2534,2533,35,2728,2751,2752,2731,0,2067,2535,2536,2537,35,2731,2752,2753,2732,0,2537,2536,2538,2539,35,2732,2753,2754,2733,0,2539,2538,2540,2541,35,2733,2754,2779,2734,0,2541,2540,2542,2543,35,2729,2737,2761,2738,0,2062,2544,2545,2546,35,2738,2761,2762,2739,0,2546,2545,2547,2548,35,2739,2762,2763,2740,0,2548,2547,2549,2550,35,2740,2763,2782,2741,0,2550,2549,2551,2552,35,2730,2744,2770,2745,0,2057,2553,2554,2555,35,2745,2770,2771,2746,0,2555,2554,2556,2557,35,2746,2771,2772,2747,0,2557,2556,2558,2559,35,2747,2772,2785,2748,0,2559,2558,2560,2561,35,2751,2750,2755,2752,0,2535,2562,2563,2536,35,2752,2755,2756,2753,0,2536,2563,2564,2538,35,2753,2756,2757,2754,0,2538,2564,2565,2540,35,2754,2757,2780,2779,0,2540,2565,2566,2542,35,2737,2736,2764,2761,0,2544,2567,2568,2545,35,2761,2764,2765,2762,0,2545,2568,2569,2547,35,2762,2765,2766,2763,0,2547,2569,2570,2549,35,2763,2766,2783,2782,0,2549,2570,2571,2551,35,2744,2743,2773,2770,0,2553,2572,2573,2554,35,2770,2773,2774,2771,0,2554,2573,2574,2556,35,2771,2774,2775,2772,0,2556,2574,2575,2558,35,2772,2775,2786,2785,0,2558,2575,2576,2560,35,2750,2749,2758,2755,0,2562,2577,2578,2563,35,2755,2758,2759,2756,0,2563,2578,2579,2564,35,2756,2759,2760,2757,0,2564,2579,2580,2565,35,2757,2760,2781,2780,0,2565,2580,2581,2566,35,2736,2735,2767,2764,0,2567,2582,2583,2568,35,2764,2767,2768,2765,0,2568,2583,2584,2569,35,2765,2768,2769,2766,0,2569,2584,2585,2570,35,2766,2769,2784,2783,0,2570,2585,2586,2571,35,2743,2742,2776,2773,0,2572,2587,2588,2573,35,2773,2776,2777,2774,0,2573,2588,2589,2574,35,2774,2777,2778,2775,0,2574,2589,2590,2575,35,2775,2778,2787,2786,0,2575,2590,2591,2576,35,2749,2748,2785,2758,0,2577,2561,2560,2578,35,2758,2785,2786,2759,0,2578,2560,2576,2579,35,2759,2786,2787,2760,0,2579,2576,2591,2580,35,2760,2787,2788,2781,0,2580,2591,2592,2581,35,2735,2734,2779,2767,0,2582,2543,2542,2583,35,2767,2779,2780,2768,0,2583,2542,2566,2584,35,2768,2780,2781,2769,0,2584,2566,2581,2585,35,2769,2781,2788,2784,0,2585,2581,2592,2586,35,2742,2741,2782,2776,0,2587,2552,2551,2588,35,2776,2782,2783,2777,0,2588,2551,2571,2589,35,2777,2783,2784,2778,0,2589,2571,2586,2590,35,2778,2784,2788,2787,0,2590,2586,2592,2591,35,2378,2380,1867,1860,1,1718,2593,2594,1542,35,2380,2381,1866,1867,1,2593,2595,2596,2594,35,2381,2382,1865,1866,1,2595,2597,2598,2596,35,2382,2383,1864,1865,1,2597,2599,2600,2598,35,2383,2384,1863,1864,1,2599,2601,2602,2600,35,2384,2385,1862,1863,1,2601,2603,2604,2602,35,2385,2386,1861,1862,1,2603,2605,2606,2604,35,2386,2379,1859,1861,1,2605,1762,1740,2606,35,1868,1870,1861,1859,1,1711,2607,2606,1740,35,1870,1871,1862,1861,1,2607,2608,2604,2606,35,1871,1872,1863,1862,1,2608,2609,2602,2604,35,1872,1873,1864,1863,1,2609,2610,2600,2602,35,1873,1874,1865,1864,1,2610,2611,2598,2600,35,1874,1875,1866,1865,1,2611,2612,2596,2598,35,1875,1876,1867,1866,1,2612,2613,2594,2596,35,1876,1869,1860,1867,1,2613,1539,1542,2594,35,1869,1876,1885,1878,1,1539,2613,2614,1546,35,1876,1875,1884,1885,1,2613,2612,2615,2614,35,1875,1874,1883,1884,1,2612,2611,2616,2615,35,1874,1873,1882,1883,1,2611,2610,2617,2616,35,1873,1872,1881,1882,1,2610,2609,2618,2617,35,1872,1871,1880,1881,1,2609,2608,2619,2618,35,1871,1870,1879,1880,1,2608,2607,2620,2619,35,1870,1868,1877,1879,1,2607,1711,1691,2620,35,1886,1888,1879,1877,1,1654,2621,2620,1691,35,1888,1889,1880,1879,1,2621,2622,2619,2620,35,1889,1890,1881,1880,1,2622,2623,2618,2619,35,1890,1891,1882,1881,1,2623,2624,2617,2618,35,1891,1892,1883,1882,1,2624,2625,2616,2617,35,1892,1893,1884,1883,1,2625,2626,2615,2616,35,1893,1894,1885,1884,1,2626,2627,2614,2615,35,1894,1887,1878,1885,1,2627,1543,1546,2614,35,1887,1894,1903,1896,1,1543,2627,2628,1553,35,1894,1893,1902,1903,1,2627,2626,2629,2628,35,1893,1892,1901,1902,1,2626,2625,2630,2629,35,1892,1891,1900,1901,1,2625,2624,2631,2630,35,1891,1890,1899,1900,1,2624,2623,2632,2631,35,1890,1889,1898,1899,1,2623,2622,2633,2632,35,1889,1888,1897,1898,1,2622,2621,2634,2633,35,1888,1886,1895,1897,1,2621,1654,1640,2634,35,1896,1903,1912,1905,1,1553,2628,2635,1552,35,1903,1902,1911,1912,1,2628,2629,2636,2635,35,1902,1901,1910,1911,1,2629,2630,2637,2636,35,1901,1900,1909,1910,1,2630,2631,2638,2637,35,1900,1899,1908,1909,1,2631,2632,2639,2638,35,1899,1898,1907,1908,1,2632,2633,2640,2639,35,1898,1897,1906,1907,1,2633,2634,2641,2640,35,1897,1895,1904,1906,1,2634,1640,1622,2641,35,1913,1915,1906,1904,1,1562,2642,2641,1622,35,1915,1916,1907,1906,1,2642,2643,2640,2641,35,1916,1917,1908,1907,1,2643,2644,2639,2640,35,1917,1918,1909,1908,1,2644,2645,2638,2639,35,1918,1919,1910,1909,1,2645,2646,2637,2638,35,1919,1920,1911,1910,1,2646,2647,2636,2637,35,1920,1921,1912,1911,1,2647,2648,2635,2636,35,1921,1914,1905,1912,1,2648,1550,1552,2635,35,1914,1921,4980,4973,1,1550,2648,2649,1547,35,1921,1920,4979,4980,1,2648,2647,2650,2649,35,1920,1919,4978,4979,1,2647,2646,2651,2650,35,1919,1918,4977,4978,1,2646,2645,2652,2651,35,1918,1917,4976,4977,1,2645,2644,2653,2652,35,1917,1916,4975,4976,1,2644,2643,2654,2653,35,1916,1915,4974,4975,1,2643,2642,2655,2654,35,1915,1913,4972,4974,1,2642,1562,1561,2655,35,2459,2461,1930,1923,1,1812,2656,2657,1784,35,2461,2462,1929,1930,1,2656,2658,2659,2657,35,2462,2463,1928,1929,1,2658,2660,2661,2659,35,2463,2464,1927,1928,1,2660,2662,2663,2661,35,2464,2465,1926,1927,1,2662,2664,2665,2663,35,2465,2466,1925,1926,1,2664,2666,2667,2665,35,2466,2467,1924,1925,1,2666,2668,2669,2667,35,2467,2460,1922,1924,1,2668,1767,1766,2669,35,1931,1933,1924,1922,1,1790,2670,2669,1766,35,1933,1934,1925,1924,1,2670,2671,2667,2669,35,1934,1935,1926,1925,1,2671,2672,2665,2667,35,1935,1936,1927,1926,1,2672,2673,2663,2665,35,1936,1937,1928,1927,1,2673,2674,2661,2663,35,1937,1938,1929,1928,1,2674,2675,2659,2661,35,1938,1939,1930,1929,1,2675,2676,2657,2659,35,1939,1932,1923,1930,1,2676,1781,1784,2657,35,1932,1939,1948,1941,1,1781,2676,2677,1772,35,1939,1938,1947,1948,1,2676,2675,2678,2677,35,1938,1937,1946,1947,1,2675,2674,2679,2678,35,1937,1936,1945,1946,1,2674,2673,2680,2679,35,1936,1935,1944,1945,1,2673,2672,2681,2680,35,1935,1934,1943,1944,1,2672,2671,2682,2681,35,1934,1933,1942,1943,1,2671,2670,2683,2682,35,1933,1931,1940,1942,1,2670,1790,1791,2683,35,1949,1951,1942,1940,1,1792,2684,2683,1791,35,1951,1952,1943,1942,1,2684,2685,2682,2683,35,1952,1953,1944,1943,1,2685,2686,2681,2682,35,1953,1954,1945,1944,1,2686,2687,2680,2681,35,1954,1955,1946,1945,1,2687,2688,2679,2680,35,1955,1956,1947,1946,1,2688,2689,2678,2679,35,1956,1957,1948,1947,1,2689,2690,2677,2678,35,1957,1950,1941,1948,1,2690,1769,1772,2677,35,1950,1957,1966,1959,1,1769,2690,2691,1778,35,1957,1956,1965,1966,1,2690,2689,2692,2691,35,1956,1955,1964,1965,1,2689,2688,2693,2692,35,1955,1954,1963,1964,1,2688,2687,2694,2693,35,1954,1953,1962,1963,1,2687,2686,2695,2694,35,1953,1952,1961,1962,1,2686,2685,2696,2695,35,1952,1951,1960,1961,1,2685,2684,2697,2696,35,1951,1949,1958,1960,1,2684,1792,1793,2697,35,1959,1966,1975,1968,1,1778,2691,2698,1776,35,1966,1965,1974,1975,1,2691,2692,2699,2698,35,1965,1964,1973,1974,1,2692,2693,2700,2699,35,1964,1963,1972,1973,1,2693,2694,2701,2700,35,1963,1962,1971,1972,1,2694,2695,2702,2701,35,1962,1961,1970,1971,1,2695,2696,2703,2702,35,1961,1960,1969,1970,1,2696,2697,2704,2703,35,1960,1958,1967,1969,1,2697,1793,1794,2704,35,1976,1978,1969,1967,1,1786,2705,2704,1794,35,1978,1979,1970,1969,1,2705,2706,2703,2704,35,1979,1980,1971,1970,1,2706,2707,2702,2703,35,1980,1981,1972,1971,1,2707,2708,2701,2702,35,1981,1982,1973,1972,1,2708,2709,2700,2701,35,1982,1983,1974,1973,1,2709,2710,2699,2700,35,1983,1984,1975,1974,1,2710,2711,2698,2699,35,1984,1977,1968,1975,1,2711,1773,1776,2698,35,1977,1984,5052,5045,1,1773,2711,2712,1779,35,1984,1983,5051,5052,1,2711,2710,2713,2712,35,1983,1982,5050,5051,1,2710,2709,2714,2713,35,1982,1981,5049,5050,1,2709,2708,2715,2714,35,1981,1980,5048,5049,1,2708,2707,2716,2715,35,1980,1979,5047,5048,1,2707,2706,2717,2716,35,1979,1978,5046,5047,1,2706,2705,2718,2717,35,1978,1976,5044,5046,1,2705,1786,1785,2718,35,2062,2064,2088,2073,1,1788,2719,2165,1555,35,2064,2065,2087,2088,1,2719,2720,2163,2165,35,2065,2066,2086,2087,1,2720,2721,2161,2163,35,2066,2067,2085,2086,0,2721,2722,2159,2161,35,2067,2068,2084,2085,0,2722,2723,2157,2159,35,2068,2069,2083,2084,0,2723,2724,2155,2157,35,2069,2070,2082,2083,0,2724,2725,2153,2155,35,2070,2063,2072,2082,0,2725,1817,1836,2153,35,2148,2150,2095,2071,0,1818,2726,2142,1826,35,2150,2151,2094,2095,0,2726,2727,2174,2142,35,2151,2152,2093,2094,0,2727,2728,2191,2174,35,2152,2153,2092,2093,0,2728,2729,2173,2191,35,2153,2154,2091,2092,0,2729,2730,2171,2173,35,2154,2155,2090,2091,1,2730,2731,2169,2171,35,2155,2156,2089,2090,1,2731,2732,2167,2169,35,2156,2149,2074,2089,1,2732,1541,1540,2167,35,2157,2159,2002,1987,1,1765,2733,2092,1789,35,2159,2160,2001,2002,1,2733,2734,2090,2092,35,2160,2161,2e3,2001,1,2734,2735,2088,2090,35,2161,2162,1999,2e3,0,2735,2736,2086,2088,35,2162,2163,1998,1999,0,2736,2737,2084,2086,35,2163,2164,1997,1998,0,2737,2738,2082,2084,35,2164,2165,1996,1997,0,2738,2739,2080,2082,35,2165,2158,1986,1996,0,2739,1825,1833,2080,35,2649,2651,2150,2148,0,1821,2740,2726,1818,35,2651,2652,2151,2150,0,2740,2741,2727,2726,35,2652,2653,2152,2151,0,2741,2742,2728,2727,35,2653,2654,2153,2152,0,2742,2743,2729,2728,35,2654,2655,2154,2153,0,2743,2744,2730,2729,35,2655,2656,2155,2154,1,2744,2745,2731,2730,35,2656,2657,2156,2155,1,2745,2746,2732,2731,35,2657,2650,2149,2156,1,2746,1717,1541,2732,35,2658,2660,2159,2157,1,1768,2747,2733,1765,35,2660,2661,2160,2159,1,2747,2748,2734,2733,35,2661,2662,2161,2160,1,2748,2749,2735,2734,35,2662,2663,2162,2161,0,2749,2750,2736,2735,35,2663,2664,2163,2162,0,2750,2751,2737,2736,35,2664,2665,2164,2163,0,2751,2752,2738,2737,35,2665,2666,2165,2164,0,2752,2753,2739,2738,35,2666,2659,2158,2165,0,2753,1822,1825,2739,35,2063,2070,2009,1985,0,1817,2725,2069,1814,35,2070,2069,2008,2009,0,2725,2724,2101,2069,35,2069,2068,2007,2008,0,2724,2723,2118,2101,35,2068,2067,2006,2007,0,2723,2722,2100,2118,35,2067,2066,2005,2006,0,2722,2721,2098,2100,35,2066,2065,2004,2005,1,2721,2720,2096,2098,35,2065,2064,2003,2004,1,2720,2719,2094,2096,35,2064,2062,1988,2003,1,2719,1788,1787,2094,35,2166,2169,1995,1986,0,1832,2223,2078,1833,35,2169,2170,1994,1995,0,2223,2225,2106,2078,35,2170,2171,1993,1994,0,2225,2227,2123,2106,35,2171,2172,1992,1993,0,2227,2229,2077,2123,35,2172,2173,1991,1992,0,2229,2268,2075,2077,35,2173,2174,1990,1991,0,2268,2253,2073,2075,35,2174,2175,1989,1990,0,2253,2230,2071,2073,35,2175,2167,1985,1989,0,2230,1815,1814,2071,35,2071,2075,2236,2228,0,1826,2144,2288,1827,35,2075,2076,2235,2236,0,2144,2146,2311,2288,35,2076,2077,2234,2235,0,2146,2148,2326,2311,35,2077,2078,2233,2234,0,2148,2150,2287,2326,35,2078,2079,2232,2233,0,2150,2196,2285,2287,35,2079,2080,2231,2232,0,2196,2179,2283,2285,35,2080,2081,2230,2231,0,2179,2151,2281,2283,35,2081,2072,2227,2230,0,2151,1836,1816,2281,35,2288,2290,2189,2166,0,1824,2657,2221,1832,35,2290,2291,2188,2189,0,2657,2754,2248,2221,35,2291,2292,2187,2188,0,2754,2755,2263,2248,35,2292,2293,2186,2187,0,2755,2756,2247,2263,35,2293,2294,2185,2186,0,2756,2757,2245,2247,35,2294,2295,2184,2185,0,2757,2758,2243,2245,35,2295,2296,2183,2184,0,2758,2759,2241,2243,35,2296,2289,2168,2183,0,2759,1829,1835,2241,35,2798,2800,2290,2288,0,1823,2760,2657,1824,35,2800,2801,2291,2290,0,2760,2658,2754,2657,35,2801,2802,2292,2291,0,2658,2761,2755,2754,35,2802,2803,2293,2292,0,2761,2762,2756,2755,35,2803,2804,2294,2293,0,2762,2763,2757,2756,35,2804,2805,2295,2294,0,2763,2666,2758,2757,35,2805,2806,2296,2295,0,2666,2668,2759,2758,35,2806,2799,2289,2296,0,2668,1830,1829,2759,35,2229,2244,2182,2168,0,1834,2299,2239,1835,35,2244,2245,2181,2182,0,2299,2301,2258,2239,35,2245,2246,2180,2181,0,2301,2303,2273,2258,35,2246,2247,2179,2180,0,2303,2305,2238,2273,35,2247,2248,2178,2179,0,2305,2321,2236,2238,35,2248,2249,2177,2178,0,2321,2306,2234,2236,35,2249,2250,2176,2177,0,2306,2279,2232,2234,35,2250,2227,2167,2176,0,2279,1816,1815,2232,35,2807,2809,2305,2298,0,1831,2764,2765,1828,35,2809,2810,2304,2305,0,2764,2766,2767,2765,35,2810,2811,2303,2304,0,2766,2768,2769,2767,35,2811,2812,2302,2303,0,2768,2770,2771,2769,35,2812,2813,2301,2302,0,2770,2772,2773,2771,35,2813,2814,2300,2301,0,2772,2774,2775,2773,35,2814,2815,2299,2300,0,2774,2776,2777,2775,35,2815,2808,2297,2299,0,2776,1820,1819,2777,35,2298,2305,2243,2229,0,1828,2765,2297,1834,35,2305,2304,2242,2243,0,2765,2767,2316,2297,35,2304,2303,2241,2242,0,2767,2769,2331,2316,35,2303,2302,2240,2241,0,2769,2771,2296,2331,35,2302,2301,2239,2240,0,2771,2773,2294,2296,35,2301,2300,2238,2239,0,2773,2775,2292,2294,35,2300,2299,2237,2238,0,2775,2777,2290,2292,35,2299,2297,2228,2237,0,2777,1819,1827,2290,35,2379,2386,2314,2307,1,1762,2605,2778,2013,35,2386,2385,2313,2314,1,2605,2603,2779,2778,35,2385,2384,2312,2313,1,2603,2601,2780,2779,35,2384,2383,2311,2312,1,2601,2599,2781,2780,35,2383,2382,2310,2311,1,2599,2597,2782,2781,35,2382,2381,2309,2310,1,2597,2595,2783,2782,35,2381,2380,2308,2309,1,2595,2593,2784,2783,35,2380,2378,2306,2308,1,2593,1718,1989,2784,35,2315,2317,2308,2306,1,1850,2785,2784,1989,35,2317,2318,2309,2308,1,2785,2786,2783,2784,35,2318,2319,2310,2309,1,2786,2787,2782,2783,35,2319,2320,2311,2310,1,2787,2788,2781,2782,35,2320,2321,2312,2311,1,2788,2789,2780,2781,35,2321,2322,2313,2312,1,2789,2790,2779,2780,35,2322,2323,2314,2313,1,2790,2791,2778,2779,35,2323,2316,2307,2314,1,2791,1984,2013,2778,35,2316,2323,2332,2325,1,1984,2791,2792,1964,35,2323,2322,2331,2332,1,2791,2790,2793,2792,35,2322,2321,2330,2331,1,2790,2789,2794,2793,35,2321,2320,2329,2330,1,2789,2788,2795,2794,35,2320,2319,2328,2329,1,2788,2787,2796,2795,35,2319,2318,2327,2328,1,2787,2786,2797,2796,35,2318,2317,2326,2327,1,2786,2785,2798,2797,35,2317,2315,2324,2326,1,2785,1850,1840,2798,35,2333,2335,2326,2324,1,1839,2799,2798,1840,35,2335,2336,2327,2326,1,2799,2800,2797,2798,35,2336,2337,2328,2327,1,2800,2801,2796,2797,35,2337,2338,2329,2328,1,2801,2802,2795,2796,35,2338,2339,2330,2329,1,2802,2803,2794,2795,35,2339,2340,2331,2330,1,2803,2804,2793,2794,35,2340,2341,2332,2331,1,2804,2805,2792,2793,35,2341,2334,2325,2332,1,2805,1927,1964,2792,35,2334,2341,2350,2343,1,1927,2805,2806,1913,35,2341,2340,2349,2350,1,2805,2804,2807,2806,35,2340,2339,2348,2349,1,2804,2803,2808,2807,35,2339,2338,2347,2348,1,2803,2802,2809,2808,35,2338,2337,2346,2347,1,2802,2801,2810,2809,35,2337,2336,2345,2346,1,2801,2800,2811,2810,35,2336,2335,2344,2345,1,2800,2799,2812,2811,35,2335,2333,2342,2344,1,2799,1839,1847,2812,35,2343,2350,2359,2352,1,1913,2806,2813,1895,35,2350,2349,2358,2359,1,2806,2807,2814,2813,35,2349,2348,2357,2358,1,2807,2808,2815,2814,35,2348,2347,2356,2357,1,2808,2809,2816,2815,35,2347,2346,2355,2356,1,2809,2810,2817,2816,35,2346,2345,2354,2355,1,2810,2811,2818,2817,35,2345,2344,2353,2354,1,2811,2812,2819,2818,35,2344,2342,2351,2353,1,2812,1847,1845,2819,35,2360,2362,2353,2351,1,1843,2820,2819,1845,35,2362,2363,2354,2353,1,2820,2821,2818,2819,35,2363,2364,2355,2354,1,2821,2822,2817,2818,35,2364,2365,2356,2355,1,2822,2823,2816,2817,35,2365,2366,2357,2356,1,2823,2824,2815,2816,35,2366,2367,2358,2357,1,2824,2825,2814,2815,35,2367,2368,2359,2358,1,2825,2826,2813,2814,35,2368,2361,2352,2359,1,2826,1855,1895,2813,35,2361,2368,2377,2370,1,1855,2826,1322,324,35,2368,2367,2376,2377,1,2826,2825,1323,1322,35,2367,2366,2375,2376,1,2825,2824,1324,1323,35,2366,2365,2374,2375,1,2824,2823,1325,1324,35,2365,2364,2373,2374,1,2823,2822,1326,1325,35,2364,2363,2372,2373,1,2822,2821,1327,1326,35,2363,2362,2371,2372,1,2821,2820,1328,1327,35,2362,2360,2369,2371,1,2820,1843,308,1328,35,2460,2467,2395,2388,1,1767,2668,2827,2036,35,2467,2466,2394,2395,1,2668,2666,2828,2827,35,2466,2465,2393,2394,1,2666,2664,2829,2828,35,2465,2464,2392,2393,1,2664,2662,2830,2829,35,2464,2463,2391,2392,1,2662,2660,2831,2830,35,2463,2462,2390,2391,1,2660,2658,2832,2831,35,2462,2461,2389,2390,1,2658,2656,2833,2832,35,2461,2459,2387,2389,1,2656,1812,2014,2833,35,2396,2398,2389,2387,1,2028,2834,2833,2014,35,2398,2399,2390,2389,1,2834,2835,2832,2833,35,2399,2400,2391,2390,1,2835,2836,2831,2832,35,2400,2401,2392,2391,1,2836,2837,2830,2831,35,2401,2402,2393,2392,1,2837,2838,2829,2830,35,2402,2403,2394,2393,1,2838,2839,2828,2829,35,2403,2404,2395,2394,1,2839,2840,2827,2828,35,2404,2397,2388,2395,1,2840,2037,2036,2827,35,2397,2404,2413,2406,1,2037,2840,2841,2038,35,2404,2403,2412,2413,1,2840,2839,2842,2841,35,2403,2402,2411,2412,1,2839,2838,2843,2842,35,2402,2401,2410,2411,1,2838,2837,2844,2843,35,2401,2400,2409,2410,1,2837,2836,2845,2844,35,2400,2399,2408,2409,1,2836,2835,2846,2845,35,2399,2398,2407,2408,1,2835,2834,2847,2846,35,2398,2396,2405,2407,1,2834,2028,2030,2847,35,2414,2416,2407,2405,1,2017,2848,2847,2030,35,2416,2417,2408,2407,1,2848,2849,2846,2847,35,2417,2418,2409,2408,1,2849,2850,2845,2846,35,2418,2419,2410,2409,1,2850,2851,2844,2845,35,2419,2420,2411,2410,1,2851,2852,2843,2844,35,2420,2421,2412,2411,1,2852,2853,2842,2843,35,2421,2422,2413,2412,1,2853,2854,2841,2842,35,2422,2415,2406,2413,1,2854,2040,2038,2841,35,2415,2422,2431,2424,1,2040,2854,2855,2041,35,2422,2421,2430,2431,1,2854,2853,2856,2855,35,2421,2420,2429,2430,1,2853,2852,2857,2856,35,2420,2419,2428,2429,1,2852,2851,2858,2857,35,2419,2418,2427,2428,1,2851,2850,2859,2858,35,2418,2417,2426,2427,1,2850,2849,2860,2859,35,2417,2416,2425,2426,1,2849,2848,2861,2860,35,2416,2414,2423,2425,1,2848,2017,2016,2861,35,2424,2431,2440,2433,1,2041,2855,2862,2032,35,2431,2430,2439,2440,1,2855,2856,2863,2862,35,2430,2429,2438,2439,1,2856,2857,2864,2863,35,2429,2428,2437,2438,1,2857,2858,2865,2864,35,2428,2427,2436,2437,1,2858,2859,2866,2865,35,2427,2426,2435,2436,1,2859,2860,2867,2866,35,2426,2425,2434,2435,1,2860,2861,2868,2867,35,2425,2423,2432,2434,1,2861,2016,2022,2868,35,2441,2443,2434,2432,1,2020,2869,2868,2022,35,2443,2444,2435,2434,1,2869,2870,2867,2868,35,2444,2445,2436,2435,1,2870,2871,2866,2867,35,2445,2446,2437,2436,1,2871,2872,2865,2866,35,2446,2447,2438,2437,1,2872,2873,2864,2865,35,2447,2448,2439,2438,1,2873,2874,2863,2864,35,2448,2449,2440,2439,1,2874,2875,2862,2863,35,2449,2442,2433,2440,1,2875,2033,2032,2862,35,2442,2449,2458,2451,1,2033,2875,1378,525,35,2449,2448,2457,2458,1,2875,2874,1379,1378,35,2448,2447,2456,2457,1,2874,2873,1380,1379,35,2447,2446,2455,2456,1,2873,2872,1381,1380,35,2446,2445,2454,2455,1,2872,2871,1382,1381,35,2445,2444,2453,2454,1,2871,2870,1383,1382,35,2444,2443,2452,2453,1,2870,2869,1384,1383,35,2443,2441,2450,2452,1,2869,2020,509,1384,35,2545,2547,2564,2555,0,2056,2876,2418,2063,35,2547,2548,2563,2564,0,2876,2877,2446,2418,35,2548,2549,2562,2563,0,2877,2878,2463,2446,35,2549,2550,2561,2562,0,2878,2879,2417,2463,35,2550,2551,2560,2561,0,2879,2880,2415,2417,35,2551,2552,2559,2560,1,2880,2881,2413,2415,35,2552,2553,2558,2559,1,2881,2882,2411,2413,35,2553,2546,2554,2558,1,2882,2066,1849,2411,35,2631,2633,2578,2557,1,1990,2883,2441,1851,35,2633,2634,2577,2578,1,2883,2884,2439,2441,35,2634,2635,2576,2577,1,2884,2885,2437,2439,35,2635,2636,2575,2576,0,2885,2886,2435,2437,35,2636,2637,2574,2575,0,2886,2887,2433,2435,35,2637,2638,2573,2574,0,2887,2888,2431,2433,35,2638,2639,2572,2573,0,2888,2889,2429,2431,35,2639,2632,2556,2572,0,2889,2060,2059,2429,35,2640,2642,2478,2469,0,2024,2890,2345,2025,35,2642,2643,2477,2478,0,2890,2891,2373,2345,35,2643,2644,2476,2477,0,2891,2892,2390,2373,35,2644,2645,2475,2476,0,2892,2893,2344,2390,35,2645,2646,2474,2475,0,2893,2894,2342,2344,35,2646,2647,2473,2474,1,2894,2895,2340,2342,35,2647,2648,2472,2473,1,2895,2896,2338,2340,35,2648,2641,2468,2472,1,2896,2035,2034,2338,35,2650,2657,2633,2631,1,1717,2746,2883,1990,35,2657,2656,2634,2633,1,2746,2745,2884,2883,35,2656,2655,2635,2634,1,2745,2744,2885,2884,35,2655,2654,2636,2635,0,2744,2743,2886,2885,35,2654,2653,2637,2636,0,2743,2742,2887,2886,35,2653,2652,2638,2637,0,2742,2741,2888,2887,35,2652,2651,2639,2638,0,2741,2740,2889,2888,35,2651,2649,2632,2639,0,2740,1821,2060,2889,35,2659,2666,2642,2640,0,1822,2753,2890,2024,35,2666,2665,2643,2642,0,2753,2752,2891,2890,35,2665,2664,2644,2643,0,2752,2751,2892,2891,35,2664,2663,2645,2644,0,2751,2750,2893,2892,35,2663,2662,2646,2645,0,2750,2749,2894,2893,35,2662,2661,2647,2646,1,2749,2748,2895,2894,35,2661,2660,2648,2647,1,2748,2747,2896,2895,35,2660,2658,2641,2648,1,2747,1768,2035,2896,35,2546,2553,2492,2471,1,2066,2882,2368,2039,35,2553,2552,2491,2492,1,2882,2881,2366,2368,35,2552,2551,2490,2491,1,2881,2880,2364,2366,35,2551,2550,2489,2490,0,2880,2879,2362,2364,35,2550,2549,2488,2489,0,2879,2878,2360,2362,35,2549,2548,2487,2488,0,2878,2877,2358,2360,35,2548,2547,2486,2487,0,2877,2876,2356,2358,35,2547,2545,2470,2486,0,2876,2056,2055,2356,35,2668,2677,2485,2470,0,2058,2488,2354,2055,35,2677,2678,2484,2485,0,2488,2490,2378,2354,35,2678,2679,2483,2484,0,2490,2492,2395,2378,35,2679,2680,2482,2483,0,2492,2494,2353,2395,35,2680,2681,2481,2482,0,2494,2529,2351,2353,35,2681,2682,2480,2481,0,2529,2514,2349,2351,35,2682,2683,2479,2480,0,2514,2495,2347,2349,35,2683,2669,2469,2479,0,2495,2026,2025,2347,35,2555,2565,2744,2730,0,2063,2420,2553,2057,35,2565,2566,2743,2744,0,2420,2422,2572,2553,35,2566,2567,2742,2743,0,2422,2424,2587,2572,35,2567,2568,2741,2742,0,2424,2426,2552,2587,35,2568,2569,2740,2741,0,2426,2468,2550,2552,35,2569,2570,2739,2740,0,2468,2451,2548,2550,35,2570,2571,2738,2739,0,2451,2427,2546,2548,35,2571,2556,2729,2738,0,2427,2059,2062,2546,35,2789,2791,2690,2667,0,2065,2897,2477,2068,35,2791,2792,2689,2690,0,2897,2898,2504,2477,35,2792,2793,2688,2689,0,2898,2899,2519,2504,35,2793,2794,2687,2688,0,2899,2900,2503,2519,35,2794,2795,2686,2687,0,2900,2901,2501,2503,35,2795,2796,2685,2686,0,2901,2902,2499,2501,35,2796,2797,2684,2685,0,2902,2833,2497,2499,35,2797,2790,2669,2684,0,2833,2027,2026,2497,35,2799,2806,2791,2789,0,1830,2668,2897,2065,35,2806,2805,2792,2791,0,2668,2666,2898,2897,35,2805,2804,2793,2792,0,2666,2763,2899,2898,35,2804,2803,2794,2793,0,2763,2762,2900,2899,35,2803,2802,2795,2794,0,2762,2761,2901,2900,35,2802,2801,2796,2795,0,2761,2658,2902,2901,35,2801,2800,2797,2796,0,2658,2760,2833,2902,35,2800,2798,2790,2797,0,2760,1823,2027,2833,35,2730,2745,2676,2668,0,2057,2555,2486,2058,35,2745,2746,2675,2676,0,2555,2557,2509,2486,35,2746,2747,2674,2675,0,2557,2559,2524,2509,35,2747,2748,2673,2674,0,2559,2561,2485,2524,35,2748,2749,2672,2673,0,2561,2577,2483,2485,35,2749,2750,2671,2672,0,2577,2562,2481,2483,35,2750,2751,2670,2671,0,2562,2535,2479,2481,35,2751,2728,2667,2670,0,2535,2067,2068,2479,35,2808,2815,2824,2817,0,1820,2776,2903,2061,35,2815,2814,2823,2824,0,2776,2774,2904,2903,35,2814,2813,2822,2823,0,2774,2772,2905,2904,35,2813,2812,2821,2822,0,2772,2770,2906,2905,35,2812,2811,2820,2821,0,2770,2768,2907,2906,35,2811,2810,2819,2820,0,2768,2766,2908,2907,35,2810,2809,2818,2819,0,2766,2764,2909,2908,35,2809,2807,2816,2818,0,2764,1831,2064,2909,35,2817,2824,2737,2729,0,2061,2903,2544,2062,35,2824,2823,2736,2737,0,2903,2904,2567,2544,35,2823,2822,2735,2736,0,2904,2905,2582,2567,35,2822,2821,2734,2735,0,2905,2906,2543,2582,35,2821,2820,2733,2734,0,2906,2907,2541,2543,35,2820,2819,2732,2733,0,2907,2908,2539,2541,35,2819,2818,2731,2732,0,2908,2909,2537,2539,35,2818,2816,2728,2731,0,2909,2064,2067,2537,35,2960,1820,1652,2889,0,2054,2009,1755,1813,35,2825,2827,5901,5894,0,1563,2910,2911,1560,35,2827,2828,5900,5901,0,2910,2912,2913,2911,35,2828,2829,5899,5900,0,2912,2914,2915,2913,35,2829,2830,5898,5899,0,2914,2916,2917,2915,35,2830,2831,5897,5898,0,2916,2918,2919,2917,35,2831,2832,5896,5897,0,2918,2920,2921,2919,35,2832,2833,5895,5896,0,2920,2922,2923,2921,35,2833,2826,5893,5895,0,2922,1809,2924,2923,35,2826,2833,2842,2835,0,1809,2922,2925,1810,35,2833,2832,2841,2842,0,2922,2920,2926,2925,35,2832,2831,2840,2841,0,2920,2918,2927,2926,35,2831,2830,2839,2840,0,2918,2916,2928,2927,35,2830,2829,2838,2839,0,2916,2914,2929,2928,35,2829,2828,2837,2838,0,2914,2912,2930,2929,35,2828,2827,2836,2837,0,2912,2910,2931,2930,35,2827,2825,2834,2836,0,2910,1563,1623,2931,35,2843,2845,2836,2834,0,1641,2932,2931,1623,35,2845,2846,2837,2836,0,2932,2933,2930,2931,35,2846,2847,2838,2837,0,2933,2934,2929,2930,35,2847,2848,2839,2838,0,2934,2935,2928,2929,35,2848,2849,2840,2839,0,2935,2936,2927,2928,35,2849,2850,2841,2840,0,2936,2937,2926,2927,35,2850,2851,2842,2841,0,2937,2938,2925,2926,35,2851,2844,2835,2842,0,2938,1811,1810,2925,35,2852,2854,2845,2843,0,1655,2939,2932,1641,35,2854,2855,2846,2845,0,2939,2940,2933,2932,35,2855,2856,2847,2846,0,2940,2941,2934,2933,35,2856,2857,2848,2847,0,2941,2942,2935,2934,35,2857,2858,2849,2848,0,2942,2943,2936,2935,35,2858,2859,2850,2849,0,2943,2944,2937,2936,35,2859,2860,2851,2850,0,2944,2945,2938,2937,35,2860,2853,2844,2851,0,2945,1807,1811,2938,35,2853,2860,2869,2862,0,1807,2945,2946,1808,35,2860,2859,2868,2869,0,2945,2944,2947,2946,35,2859,2858,2867,2868,0,2944,2943,2948,2947,35,2858,2857,2866,2867,0,2943,2942,2949,2948,35,2857,2856,2865,2866,0,2942,2941,2950,2949,35,2856,2855,2864,2865,0,2941,2940,2951,2950,35,2855,2854,2863,2864,0,2940,2939,2952,2951,35,2854,2852,2861,2863,0,2939,1655,1692,2952,35,2870,2872,2863,2861,0,1712,2953,2952,1692,35,2872,2873,2864,2863,0,2953,2954,2951,2952,35,2873,2874,2865,2864,0,2954,2955,2950,2951,35,2874,2875,2866,2865,0,2955,2956,2949,2950,35,2875,2876,2867,2866,0,2956,2957,2948,2949,35,2876,2877,2868,2867,0,2957,2958,2947,2948,35,2877,2878,2869,2868,0,2958,2959,2946,2947,35,2878,2871,2862,2869,0,2959,1805,1808,2946,35,2871,2878,2887,2880,0,1805,2959,2960,1806,35,2878,2877,2886,2887,0,2959,2958,2961,2960,35,2877,2876,2885,2886,0,2958,2957,2962,2961,35,2876,2875,2884,2885,0,2957,2956,2963,2962,35,2875,2874,2883,2884,0,2956,2955,2964,2963,35,2874,2873,2882,2883,0,2955,2954,2965,2964,35,2873,2872,2881,2882,0,2954,2953,2966,2965,35,2872,2870,2879,2881,0,2953,1712,1741,2966,35,2888,2890,2881,2879,0,1763,2967,2966,1741,35,2890,2891,2882,2881,0,2967,2968,2965,2966,35,2891,2892,2883,2882,0,2968,2969,2964,2965,35,2892,2893,2884,2883,0,2969,2970,2963,2964,35,2893,2894,2885,2884,0,2970,2971,2962,2963,35,2894,2895,2886,2885,0,2971,2972,2961,2962,35,2895,2896,2887,2886,0,2972,2973,2960,2961,35,2896,2889,2880,2887,0,2973,1813,1806,2960,35,2906,2908,2905,2898,0,1838,2974,1483,300,35,2908,2909,2904,2905,0,2974,2975,1485,1483,35,2909,2910,2903,2904,0,2975,2976,1487,1485,35,2910,2911,2902,2903,0,2976,2977,1489,1487,35,2911,2912,2901,2902,0,2977,2978,1491,1489,35,2912,2913,2900,2901,0,2978,2979,1493,1491,35,2913,2914,2899,2900,0,2979,2980,1495,1493,35,2914,2907,2897,2899,0,2980,1854,323,1495,35,2907,2914,2923,2916,0,1854,2980,2981,1894,35,2914,2913,2922,2923,0,2980,2979,2982,2981,35,2913,2912,2921,2922,0,2979,2978,2983,2982,35,2912,2911,2920,2921,0,2978,2977,2984,2983,35,2911,2910,2919,2920,0,2977,2976,2985,2984,35,2910,2909,2918,2919,0,2976,2975,2986,2985,35,2909,2908,2917,2918,0,2975,2974,2987,2986,35,2908,2906,2915,2917,0,2974,1838,2051,2987,35,2924,2926,2917,2915,0,2052,2988,2987,2051,35,2926,2927,2918,2917,0,2988,2989,2986,2987,35,2927,2928,2919,2918,0,2989,2990,2985,2986,35,2928,2929,2920,2919,0,2990,2991,2984,2985,35,2929,2930,2921,2920,0,2991,2992,2983,2984,35,2930,2931,2922,2921,0,2992,2993,2982,2983,35,2931,2932,2923,2922,0,2993,2994,2981,2982,35,2932,2925,2916,2923,0,2994,1912,1894,2981,35,2933,2935,2926,2924,0,2049,2995,2988,2052,35,2935,2936,2927,2926,0,2995,2996,2989,2988,35,2936,2937,2928,2927,0,2996,2997,2990,2989,35,2937,2938,2929,2928,0,2997,2998,2991,2990,35,2938,2939,2930,2929,0,2998,2999,2992,2991,35,2939,2940,2931,2930,0,2999,3e3,2993,2992,35,2940,2941,2932,2931,0,3e3,3001,2994,2993,35,2941,2934,2925,2932,0,3001,1926,1912,2994,35,2934,2941,2950,2943,0,1926,3001,3002,1963,35,2941,2940,2949,2950,0,3001,3e3,3003,3002,35,2940,2939,2948,2949,0,3e3,2999,3004,3003,35,2939,2938,2947,2948,0,2999,2998,3005,3004,35,2938,2937,2946,2947,0,2998,2997,3006,3005,35,2937,2936,2945,2946,0,2997,2996,3007,3006,35,2936,2935,2944,2945,0,2996,2995,3008,3007,35,2935,2933,2942,2944,0,2995,2049,2050,3008,35,2951,2953,2944,2942,0,2053,3009,3008,2050,35,2953,2954,2945,2944,0,3009,3010,3007,3008,35,2954,2955,2946,2945,0,3010,3011,3006,3007,35,2955,2956,2947,2946,0,3011,3012,3005,3006,35,2956,2957,2948,2947,0,3012,3013,3004,3005,35,2957,2958,2949,2948,0,3013,3014,3003,3004,35,2958,2959,2950,2949,0,3014,3015,3002,3003,35,2959,2952,2943,2950,0,3015,1983,1963,3002,35,2952,2959,2968,2961,0,1983,3015,3016,2012,35,2959,2958,2967,2968,0,3015,3014,3017,3016,35,2958,2957,2966,2967,0,3014,3013,3018,3017,35,2957,2956,2965,2966,0,3013,3012,3019,3018,35,2956,2955,2964,2965,0,3012,3011,3020,3019,35,2955,2954,2963,2964,0,3011,3010,3021,3020,35,2954,2953,2962,2963,0,3010,3009,3022,3021,35,2953,2951,2960,2962,0,3009,2053,2054,3022,35,2889,2896,2962,2960,0,1813,2973,3022,2054,35,2896,2895,2963,2962,0,2973,2972,3021,3022,35,2895,2894,2964,2963,0,2972,2971,3020,3021,35,2894,2893,2965,2964,0,2971,2970,3019,3020,35,2893,2892,2966,2965,0,2970,2969,3018,3019,35,2892,2891,2967,2966,0,2969,2968,3017,3018,35,2891,2890,2968,2967,0,2968,2967,3016,3017,35,2890,2888,2961,2968,0,2967,1763,2012,3016,35,5893,2826,1478,4500,0,2924,1809,1601,1600,34,2140,2146,2147,0,2209,2214,2208,34,2074,2073,2136,1,1540,1555,2211,34,2138,2140,2146,1,2210,2209,2214,34,2138,2074,2136,1,2210,1540,2211,34,2138,2146,2144,1,2210,2214,2213,34,2138,2142,2074,1,2210,2212,1540,34,2138,2144,2142,1,2210,2213,2212,34,1988,1987,2050,1,1787,1789,2138,34,2052,2054,2060,1,2137,2136,2141,34,2052,1988,2050,1,2137,1787,2138,34,2052,2060,2058,1,2137,2141,2140,34,2052,2056,1988,1,2137,2139,1787,34,2052,2058,2056,1,2137,2140,2139,34,2543,2534,2532,1,2407,2405,2404,34,2530,2468,2471,1,2403,2034,2039,34,2530,2543,2532,1,2403,2407,2404,34,2530,2471,2539,1,2403,2039,2409,34,2530,2541,2543,1,2403,2408,2407,34,2530,2539,2541,1,2403,2409,2408,35,3380,3603,3678,3371,1,3023,3024,3025,3026,35,3398,3155,3156,3389,1,3027,3028,3029,3030,35,3434,3170,3161,3425,1,8,11,3031,3032,35,3425,3161,3162,3416,1,3032,3031,3033,3034,35,3407,3165,3155,3398,1,3035,3036,3028,3027,34,3389,3603,3380,1,3030,3024,3023,34,3156,3602,3603,1,3029,3037,3024,34,3389,3156,3603,1,3030,3029,3024,35,2973,2994,2993,2972,0,17,3038,3039,18,35,4337,3433,3424,4345,1,21,24,3040,3041,35,2980,3001,3e3,2979,0,25,3042,3043,26,35,2970,2991,2990,2969,0,31,3044,3045,32,35,2987,3008,3007,2986,0,33,3046,3047,34,35,2977,2998,2997,2976,0,37,3048,3049,38,35,2984,3005,3004,2983,0,41,3050,3051,42,35,3416,3162,3165,3407,1,3034,3033,3036,3035,35,2974,2995,2994,2973,0,45,3052,3038,17,35,2981,3002,3001,2980,0,47,3053,3042,25,35,2971,2992,2991,2970,0,49,3054,3044,31,35,2988,3009,3008,2987,0,51,3055,3046,33,35,2978,2999,2998,2977,0,53,3056,3048,37,35,2985,3006,3005,2984,0,55,3057,3050,41,35,2975,2996,2995,2974,0,57,3058,3052,45,35,2982,3003,3002,2981,0,59,3059,3053,47,35,2972,2993,2992,2971,0,18,3039,3054,49,35,2989,3010,3009,2988,0,61,3060,3055,51,35,2979,3e3,2999,2978,0,26,3043,3056,53,35,2986,3007,3006,2985,0,34,3047,3057,55,35,2976,2997,2996,2975,0,38,3049,3058,57,35,2983,3004,3003,2982,0,42,3051,3059,59,35,2995,3016,3015,2994,0,3052,3061,3062,3038,35,3002,3023,3022,3001,0,3053,3063,3064,3042,35,2992,3013,3012,2991,0,3054,3065,3066,3044,35,3009,3030,3029,3008,0,3055,3067,3068,3046,35,2999,3020,3019,2998,0,3056,3069,3070,3048,35,3006,3027,3026,3005,0,3057,3071,3072,3050,35,2996,3017,3016,2995,0,3058,3073,3061,3052,35,3003,3024,3023,3002,0,3059,3074,3063,3053,35,3010,3031,3030,3009,0,3060,3075,3067,3055,35,2993,3014,3013,2992,0,3039,3076,3065,3054,35,3e3,3021,3020,2999,0,3043,3077,3069,3056,35,3007,3028,3027,3006,0,3047,3078,3071,3057,35,2997,3018,3017,2996,0,3049,3079,3073,3058,35,3004,3025,3024,3003,0,3051,3080,3074,3059,35,2994,3015,3014,2993,0,3038,3062,3076,3039,35,4345,3424,3415,4354,1,3041,3040,3081,3082,35,3001,3022,3021,3e3,0,3042,3064,3077,3043,35,2991,3012,3011,2990,0,3044,3066,3083,3045,35,3008,3029,3028,3007,0,3046,3068,3078,3047,35,2998,3019,3018,2997,0,3048,3070,3079,3049,35,3005,3026,3025,3004,0,3050,3072,3080,3051,35,3017,3038,3037,3016,0,3073,3084,3085,3061,35,3024,3045,3044,3023,0,3074,3086,3087,3063,35,3031,3052,3051,3030,0,3075,3088,3089,3067,35,3014,3035,3034,3013,0,3076,3090,3091,3065,35,3021,3042,3041,3020,0,3077,3092,3093,3069,35,3028,3049,3048,3027,0,3078,3094,3095,3071,35,3018,3039,3038,3017,0,3079,3096,3084,3073,35,3025,3046,3045,3024,0,3080,3097,3086,3074,35,3015,3036,3035,3014,0,3062,3098,3090,3076,35,4354,3415,3406,4363,1,3082,3081,3099,3100,35,3022,3043,3042,3021,0,3064,3101,3092,3077,35,3029,3050,3049,3028,0,3068,3102,3094,3078,35,3012,3033,3032,3011,0,3066,3103,3104,3083,35,3019,3040,3039,3018,0,3070,3105,3096,3079,35,3026,3047,3046,3025,0,3072,3106,3097,3080,35,3016,3037,3036,3015,0,3061,3085,3098,3062,35,3023,3044,3043,3022,0,3063,3087,3101,3064,35,3013,3034,3033,3012,0,3065,3091,3103,3066,35,3030,3051,3050,3029,0,3067,3089,3102,3068,35,3020,3041,3040,3019,0,3069,3093,3105,3070,35,3027,3048,3047,3026,0,3071,3095,3106,3072,35,3039,3060,3059,3038,0,3096,3107,3108,3084,35,3046,3067,3066,3045,0,3097,3109,3110,3086,35,3036,3057,3056,3035,0,3098,3111,3112,3090,35,4363,3406,3397,4372,1,3100,3099,3113,3114,35,3043,3064,3063,3042,0,3101,3115,3116,3092,35,3050,3071,3070,3049,0,3102,3117,3118,3094,35,3033,3054,3053,3032,0,3103,3119,3120,3104,35,3040,3061,3060,3039,0,3105,3121,3107,3096,35,3047,3068,3067,3046,0,3106,3122,3109,3097,35,3037,3058,3057,3036,0,3085,3123,3111,3098,35,3044,3065,3064,3043,0,3087,3124,3115,3101,35,3034,3055,3054,3033,0,3091,3125,3119,3103,35,3051,3072,3071,3050,0,3089,3126,3117,3102,35,3041,3062,3061,3040,0,3093,3127,3121,3105,35,3048,3069,3068,3047,0,3095,3128,3122,3106,35,3038,3059,3058,3037,0,3084,3108,3123,3085,35,3045,3066,3065,3044,0,3086,3110,3124,3087,35,3052,3073,3072,3051,0,3088,3129,3126,3089,35,3035,3056,3055,3034,0,3090,3112,3125,3091,35,3042,3063,3062,3041,0,3092,3116,3127,3093,35,3049,3070,3069,3048,0,3094,3118,3128,3095,35,3061,3082,3081,3060,0,3121,3130,3131,3107,35,3068,3089,3088,3067,0,3122,3132,3133,3109,35,3058,3079,3078,3057,0,3123,3134,3135,3111,35,3065,3086,3085,3064,0,3124,3136,3137,3115,35,3055,3076,3075,3054,0,3125,3138,3139,3119,35,3072,3093,3092,3071,0,3126,3140,3141,3117,35,3062,3083,3082,3061,0,3127,3142,3130,3121,35,3069,3090,3089,3068,0,3128,3143,3132,3122,35,3059,3080,3079,3058,0,3108,3144,3134,3123,35,3066,3087,3086,3065,0,3110,3145,3136,3124,35,3056,3077,3076,3055,0,3112,3146,3138,3125,35,3073,3094,3093,3072,0,3129,3147,3140,3126,35,3063,3084,3083,3062,0,3116,3148,3142,3127,35,3070,3091,3090,3069,0,3118,3149,3143,3128,35,3060,3081,3080,3059,0,3107,3131,3144,3108,35,3067,3088,3087,3066,0,3109,3133,3145,3110,35,3057,3078,3077,3056,0,3111,3135,3146,3112,35,4372,3397,3388,4381,1,3114,3113,3150,3151,35,3064,3085,3084,3063,0,3115,3137,3148,3116,35,3071,3092,3091,3070,0,3117,3141,3149,3118,35,3054,3075,3074,3053,0,3119,3139,3152,3120,35,3083,3104,3103,3082,0,3142,3153,3154,3130,35,3090,3111,3110,3089,0,3143,3155,3156,3132,35,3080,3101,3100,3079,0,3144,3157,3158,3134,35,3087,3108,3107,3086,0,3145,3159,3160,3136,35,3077,3098,3097,3076,0,3146,3161,3162,3138,35,3094,3115,3114,3093,0,3147,3163,3164,3140,35,3084,3105,3104,3083,0,3148,3165,3153,3142,35,3091,3112,3111,3090,0,3149,3166,3155,3143,35,3081,3102,3101,3080,0,3131,3167,3157,3144,35,3088,3109,3108,3087,0,3133,3168,3159,3145,35,3078,3099,3098,3077,0,3135,3169,3161,3146,35,4381,3388,3379,4390,1,3151,3150,3170,3171,35,3085,3106,3105,3084,0,3137,3172,3165,3148,35,3075,3096,3095,3074,0,3139,3173,3174,3152,35,3092,3113,3112,3091,0,3141,3175,3166,3149,35,3082,3103,3102,3081,0,3130,3154,3167,3131,35,3089,3110,3109,3088,0,3132,3156,3168,3133,35,3079,3100,3099,3078,0,3134,3158,3169,3135,35,3371,3678,4161,3898,1,3026,3025,3176,3177,35,3086,3107,3106,3085,0,3136,3160,3172,3137,35,3076,3097,3096,3075,0,3138,3162,3173,3139,35,3093,3114,3113,3092,0,3140,3164,3175,3141,35,3113,3134,3133,3112,0,3175,3178,3179,3166,35,3096,3117,3116,3095,0,3173,3180,3181,3174,35,3103,3124,3123,3102,0,3154,3182,3183,3167,35,3110,3131,3130,3109,0,3156,3184,3185,3168,35,3100,3121,3120,3099,0,3158,3186,3187,3169,35,3107,3128,3127,3106,0,3160,3188,3189,3172,35,3097,3118,3117,3096,0,3162,3190,3180,3173,35,3114,3135,3134,3113,0,3164,3191,3178,3175,35,3104,3125,3124,3103,0,3153,3192,3182,3154,35,3111,3132,3131,3110,0,3155,3193,3184,3156,35,3101,3122,3121,3100,0,3157,3194,3186,3158,35,3108,3129,3128,3107,0,3159,3195,3188,3160,35,3115,3136,3135,3114,0,3163,3196,3191,3164,35,3098,3119,3118,3097,0,3161,3197,3190,3162,35,3105,3126,3125,3104,0,3165,3198,3192,3153,35,3112,3133,3132,3111,0,3166,3179,3193,3155,35,3102,3123,3122,3101,0,3167,3183,3194,3157,35,3109,3130,3129,3108,0,3168,3185,3195,3159,35,3099,3120,3119,3098,0,3169,3187,3197,3161,35,4390,3379,3370,4399,1,3171,3170,3199,3200,35,3106,3127,3126,3105,0,3172,3189,3198,3165,34,2969,2990,4907,0,32,3045,203,34,2990,3011,4907,0,3045,3083,203,34,3011,3032,4907,0,3083,3104,203,34,3032,3053,4907,0,3104,3120,203,34,3053,3074,4907,0,3120,3152,203,34,3074,3095,4907,0,3152,3174,203,34,3095,3116,4907,0,3174,3181,203,35,3118,3172,3171,3117,0,3190,3201,3202,3180,35,3135,3188,3187,3134,0,3191,3203,3204,3178,35,3125,3178,3177,3124,0,3192,3205,3206,3182,35,3132,3185,3184,3131,0,3193,3207,3208,3184,35,3122,3175,3338,3121,0,3194,3209,3210,3186,35,3129,3182,3181,3128,0,3195,3211,3212,3188,35,3119,3173,3172,3118,0,3197,3213,3201,3190,35,3136,3189,3188,3135,0,3196,3214,3203,3191,35,3126,3179,3178,3125,0,3198,3215,3205,3192,34,3116,3337,4907,0,3181,3216,203,35,3133,3186,3185,3132,0,3179,3217,3207,3193,35,3123,3176,3175,3122,0,3183,3218,3209,3194,35,3130,3183,3182,3129,0,3185,3219,3211,3195,35,3120,3174,3173,3119,0,3187,3220,3213,3197,35,4399,3370,3899,4408,1,3200,3199,3221,3222,35,3127,3180,3179,3126,0,3189,3223,3215,3198,35,3134,3187,3186,3133,0,3178,3204,3217,3179,35,3117,3171,3337,3116,0,3180,3202,3216,3181,35,3124,3177,3176,3123,0,3182,3206,3218,3183,35,3131,3184,3183,3130,0,3184,3208,3219,3185,35,3121,3338,3174,3120,0,3186,3210,3220,3187,35,3128,3181,3180,3127,0,3188,3212,3223,3189,35,3686,3442,3971,4169,1,3224,3225,3226,3227,35,3470,3140,3139,3461,1,3228,3229,3230,3231,35,3497,3143,3142,3488,1,3232,3233,3234,3235,35,3488,3142,3141,3479,1,3235,3234,3236,3237,35,3506,3144,3143,3497,1,241,242,3233,3232,35,3479,3141,3140,3470,1,3237,3236,3229,3228,35,3452,3138,3137,3443,1,3238,3239,3240,3241,35,3461,3139,3138,3452,1,3231,3230,3239,3238,35,3169,3505,3496,3159,1,11,248,3242,3031,35,3154,3158,3517,3591,1,3029,3029,3243,3244,35,3516,3451,3442,3686,1,3245,3246,3225,3224,34,3158,3516,3517,1,3029,3245,3243,34,3460,3451,3516,1,3247,3246,3245,34,3158,3460,3516,1,3029,3247,3245,35,3153,3469,3460,3158,1,3028,3248,3247,3029,35,3167,3478,3469,3153,1,3036,3249,3248,3028,35,3164,3487,3478,3167,1,3033,3250,3249,3036,35,3159,3496,3487,3164,1,3031,3242,3250,3033,35,3141,3149,3148,3140,1,3236,3251,3252,3229,35,3142,3150,3149,3141,1,3234,3253,3251,3236,35,3143,3151,3150,3142,1,3233,3254,3253,3234,35,3144,3152,3151,3143,1,242,261,3254,3233,35,3137,3145,3354,3346,1,3240,3255,3256,3257,35,3138,3146,3145,3137,1,3239,3258,3255,3240,35,3139,3147,3146,3138,1,3230,3259,3258,3239,35,3140,3148,3147,3139,1,3229,3252,3259,3230,35,4391,4400,3136,3115,0,3260,3261,3196,3163,35,4373,4382,3094,3073,0,3262,3263,3147,3129,35,3165,3160,3157,3155,1,3036,3036,3028,3028,35,3162,3163,3160,3165,1,3033,3033,3036,3036,35,4346,4355,3031,3010,0,3264,3265,3075,3060,35,3161,3166,3163,3162,1,3031,3031,3033,3033,35,3170,3168,3166,3161,1,11,11,3031,3031,35,4355,4364,3052,3031,0,3265,3266,3088,3075,35,3443,3137,3346,3970,1,3241,3240,3257,3267,35,4364,4373,3073,3052,0,3266,3262,3129,3088,35,4400,4409,3189,3136,0,3261,3268,3214,3196,35,4382,4391,3115,3094,0,3263,3260,3163,3147,35,3168,3169,3159,3166,1,11,11,3031,3031,35,3166,3159,3164,3163,1,3031,3031,3033,3033,35,3163,3164,3167,3160,1,3033,3033,3036,3036,35,3160,3167,3153,3157,1,3036,3036,3028,3028,35,3157,3153,3158,3154,1,3028,3028,3029,3029,35,3514,3696,3756,3592,0,3269,3270,3271,3272,35,3156,3154,3591,3602,1,3029,3029,3244,3037,35,3677,3826,4319,4160,0,3273,3274,3275,3276,35,4170,4309,3817,3687,0,3277,3278,3279,3280,35,3600,3757,3826,3677,0,3281,3282,3274,3273,35,3155,3157,3154,3156,1,3028,3028,3029,3029,34,3152,4908,3151,1,261,290,3254,34,3150,3151,4908,1,3253,3254,290,34,3150,4908,3149,1,3253,290,3251,34,3149,4908,3148,1,3251,290,3252,34,3147,3148,4908,1,3259,3252,290,34,3147,4908,3146,1,3259,290,3258,34,3145,3146,4908,1,3255,3258,290,34,3145,4908,3354,1,3255,290,3256,35,3827,3818,4310,4318,0,3283,3284,3226,3285,35,3687,3817,3695,3515,0,3280,3279,3286,3287,35,3758,3697,3818,3827,0,3288,3289,3284,3283,34,3592,3756,3601,0,3272,3271,3290,35,5975,4721,3210,4417,0,3291,3292,3293,3294,35,3862,3853,3358,3357,1,3295,3296,3297,3298,35,5437,3889,3363,4906,1,3299,3300,3301,3302,35,3889,3880,3364,3363,1,3300,3303,3304,3301,35,3871,3862,3357,3367,1,3305,3295,3298,3306,34,3853,4065,3358,1,3296,3307,3297,34,3844,4068,4065,1,3308,3309,3307,34,3853,3844,4065,1,3296,3308,3307,35,4705,4704,3193,3194,0,3310,3311,3312,3313,35,5974,4418,3890,5438,1,3314,3315,3316,3317,35,4712,4711,3200,3201,0,3318,3319,3320,3321,35,4702,4701,3190,3191,0,3322,3323,3324,3325,35,4719,4718,3207,3208,0,3326,3327,3328,3329,35,4709,4708,3197,3198,0,3330,3331,3332,3333,35,4716,4715,3204,3205,0,3334,3335,3336,3337,35,3880,3871,3367,3364,1,3303,3305,3306,3304,35,4706,4705,3194,3195,0,3338,3310,3313,3339,35,4713,4712,3201,3202,0,3340,3318,3321,3341,35,4703,4702,3191,3192,0,3342,3322,3325,3343,35,4720,4719,3208,3209,0,3344,3326,3329,3345,35,4710,4709,3198,3199,0,3346,3330,3333,3347,35,4717,4716,3205,3206,0,3348,3334,3337,3349,35,4707,4706,3195,3196,0,3350,3338,3339,3351,35,4714,4713,3202,3203,0,3352,3340,3341,3353,35,4704,4703,3192,3193,0,3311,3342,3343,3312,35,4721,4720,3209,3210,0,3292,3344,3345,3293,35,4711,4710,3199,3200,0,3319,3346,3347,3320,35,4718,4717,3206,3207,0,3327,3348,3349,3328,35,4708,4707,3196,3197,0,3331,3350,3351,3332,35,4715,4714,3203,3204,0,3335,3352,3353,3336,35,3195,3194,3215,3216,0,3339,3313,3354,3355,35,3202,3201,3222,3223,0,3341,3321,3356,3357,35,3192,3191,3212,3213,0,3343,3325,3358,3359,35,3209,3208,3229,3230,0,3345,3329,3360,3361,35,3199,3198,3219,3220,0,3347,3333,3362,3363,35,3206,3205,3226,3227,0,3349,3337,3364,3365,35,3196,3195,3216,3217,0,3351,3339,3355,3366,35,3203,3202,3223,3224,0,3353,3341,3357,3367,35,3210,3209,3230,3231,0,3293,3345,3361,3368,35,3193,3192,3213,3214,0,3312,3343,3359,3369,35,3200,3199,3220,3221,0,3320,3347,3363,3370,35,3207,3206,3227,3228,0,3328,3349,3365,3371,35,3197,3196,3217,3218,0,3332,3351,3366,3372,35,3204,3203,3224,3225,0,3336,3353,3367,3373,35,3194,3193,3214,3215,0,3313,3312,3369,3354,35,4418,4427,3881,3890,1,3315,3374,3375,3316,35,3201,3200,3221,3222,0,3321,3320,3370,3356,35,3191,3190,3211,3212,0,3325,3324,3376,3358,35,3208,3207,3228,3229,0,3329,3328,3371,3360,35,3198,3197,3218,3219,0,3333,3332,3372,3362,35,3205,3204,3225,3226,0,3337,3336,3373,3364,35,3217,3216,3237,3238,0,3366,3355,3377,3378,35,3224,3223,3244,3245,0,3367,3357,3379,3380,35,3231,3230,3251,3252,0,3368,3361,3381,3382,35,3214,3213,3234,3235,0,3369,3359,3383,3384,35,3221,3220,3241,3242,0,3370,3363,3385,3386,35,3228,3227,3248,3249,0,3371,3365,3387,3388,35,3218,3217,3238,3239,0,3372,3366,3378,3389,35,3225,3224,3245,3246,0,3373,3367,3380,3390,35,3215,3214,3235,3236,0,3354,3369,3384,3391,35,4427,4436,3872,3881,1,3374,3392,3393,3375,35,3222,3221,3242,3243,0,3356,3370,3386,3394,35,3229,3228,3249,3250,0,3360,3371,3388,3395,35,3212,3211,3232,3233,0,3358,3376,3396,3397,35,3219,3218,3239,3240,0,3362,3372,3389,3398,35,3226,3225,3246,3247,0,3364,3373,3390,3399,35,3216,3215,3236,3237,0,3355,3354,3391,3377,35,3223,3222,3243,3244,0,3357,3356,3394,3379,35,3213,3212,3233,3234,0,3359,3358,3397,3383,35,3230,3229,3250,3251,0,3361,3360,3395,3381,35,3220,3219,3240,3241,0,3363,3362,3398,3385,35,3227,3226,3247,3248,0,3365,3364,3399,3387,35,3239,3238,3259,3260,0,3389,3378,3400,3401,35,3246,3245,3266,3267,0,3390,3380,3402,3403,35,3236,3235,3256,3257,0,3391,3384,3404,3405,35,4436,4445,3863,3872,1,3392,3406,3407,3393,35,3243,3242,3263,3264,0,3394,3386,3408,3409,35,3250,3249,3270,3271,0,3395,3388,3410,3411,35,3233,3232,3253,3254,0,3397,3396,3412,3413,35,3240,3239,3260,3261,0,3398,3389,3401,3414,35,3247,3246,3267,3268,0,3399,3390,3403,3415,35,3237,3236,3257,3258,0,3377,3391,3405,3416,35,3244,3243,3264,3265,0,3379,3394,3409,3417,35,3234,3233,3254,3255,0,3383,3397,3413,3418,35,3251,3250,3271,3272,0,3381,3395,3411,3419,35,3241,3240,3261,3262,0,3385,3398,3414,3420,35,3248,3247,3268,3269,0,3387,3399,3415,3421,35,3238,3237,3258,3259,0,3378,3377,3416,3400,35,3245,3244,3265,3266,0,3380,3379,3417,3402,35,3252,3251,3272,3273,0,3382,3381,3419,3422,35,3235,3234,3255,3256,0,3384,3383,3418,3404,35,3242,3241,3262,3263,0,3386,3385,3420,3408,35,3249,3248,3269,3270,0,3388,3387,3421,3410,35,3261,3260,3281,3282,0,3414,3401,3423,3424,35,3268,3267,3288,3289,0,3415,3403,3425,3426,35,3258,3257,3278,3279,0,3416,3405,3427,3428,35,3265,3264,3285,3286,0,3417,3409,3429,3430,35,3255,3254,3275,3276,0,3418,3413,3431,3432,35,3272,3271,3292,3293,0,3419,3411,3433,3434,35,3262,3261,3282,3283,0,3420,3414,3424,3435,35,3269,3268,3289,3290,0,3421,3415,3426,3436,35,3259,3258,3279,3280,0,3400,3416,3428,3437,35,3266,3265,3286,3287,0,3402,3417,3430,3438,35,3256,3255,3276,3277,0,3404,3418,3432,3439,35,3273,3272,3293,3294,0,3422,3419,3434,3440,35,3263,3262,3283,3284,0,3408,3420,3435,3441,35,3270,3269,3290,3291,0,3410,3421,3436,3442,35,3260,3259,3280,3281,0,3401,3400,3437,3423,35,3267,3266,3287,3288,0,3403,3402,3438,3425,35,3257,3256,3277,3278,0,3405,3404,3439,3427,35,4445,4454,3854,3863,1,3406,3443,3444,3407,35,3264,3263,3284,3285,0,3409,3408,3441,3429,35,3271,3270,3291,3292,0,3411,3410,3442,3433,35,3254,3253,3274,3275,0,3413,3412,3445,3431,35,3283,3282,3303,3304,0,3435,3424,3446,3447,35,3290,3289,3310,3311,0,3436,3426,3448,3449,35,3280,3279,3300,3301,0,3437,3428,3450,3451,35,3287,3286,3307,3308,0,3438,3430,3452,3453,35,3277,3276,3297,3298,0,3439,3432,3454,3455,35,3294,3293,3314,3315,0,3440,3434,3456,3457,35,3284,3283,3304,3305,0,3441,3435,3447,3458,35,3291,3290,3311,3312,0,3442,3436,3449,3459,35,3281,3280,3301,3302,0,3423,3437,3451,3460,35,3288,3287,3308,3309,0,3425,3438,3453,3461,35,3278,3277,3298,3299,0,3427,3439,3455,3462,35,4454,4463,3845,3854,1,3443,3463,3464,3444,35,3285,3284,3305,3306,0,3429,3441,3458,3465,35,3275,3274,3295,3296,0,3431,3445,3466,3467,35,3292,3291,3312,3313,0,3433,3442,3459,3468,35,3282,3281,3302,3303,0,3424,3423,3460,3446,35,3289,3288,3309,3310,0,3426,3425,3461,3448,35,3279,3278,3299,3300,0,3428,3427,3462,3450,35,3844,3835,4142,4068,1,3308,3469,3470,3309,35,3286,3285,3306,3307,0,3430,3429,3465,3452,35,3276,3275,3296,3297,0,3432,3431,3467,3454,35,3293,3292,3313,3314,0,3434,3433,3468,3456,35,3313,3312,3333,3334,0,3468,3459,3471,3472,35,3296,3295,3316,3317,0,3467,3466,3473,3474,35,3303,3302,3323,3324,0,3446,3460,3475,3476,35,3310,3309,3330,3331,0,3448,3461,3477,3478,35,3300,3299,3320,3321,0,3450,3462,3479,3480,35,3307,3306,3327,3328,0,3452,3465,3481,3482,35,3297,3296,3317,3318,0,3454,3467,3474,3483,35,3314,3313,3334,3335,0,3456,3468,3472,3484,35,3304,3303,3324,3325,0,3447,3446,3476,3485,35,3311,3310,3331,3332,0,3449,3448,3478,3486,35,3301,3300,3321,3322,0,3451,3450,3480,3487,35,3308,3307,3328,3329,0,3453,3452,3482,3488,35,3315,3314,3335,3336,0,3457,3456,3484,3489,35,3298,3297,3318,3319,0,3455,3454,3483,3490,35,3305,3304,3325,3326,0,3458,3447,3485,3491,35,3312,3311,3332,3333,0,3459,3449,3486,3471,35,3302,3301,3322,3323,0,3460,3451,3487,3475,35,3309,3308,3329,3330,0,3461,3453,3488,3477,35,3299,3298,3319,3320,0,3462,3455,3490,3479,35,4463,4472,3836,3845,1,3463,3492,3493,3464,35,3306,3305,3326,3327,0,3465,3458,3491,3481,34,4701,4907,3190,0,3323,203,3324,34,3190,4907,3211,0,3324,203,3376,34,3211,4907,3232,0,3376,203,3396,34,3232,4907,3253,0,3396,203,3412,34,3253,4907,3274,0,3412,203,3445,34,3274,4907,3295,0,3445,203,3466,34,3295,4907,3316,0,3466,203,3473,35,3318,3317,3171,3172,0,3483,3474,3202,3201,35,3335,3334,3187,3188,0,3484,3472,3204,3203,35,3325,3324,3177,3178,0,3485,3476,3206,3205,35,3332,3331,3184,3185,0,3486,3478,3208,3207,35,3322,3321,3338,3175,0,3487,3480,3210,3209,35,3329,3328,3181,3182,0,3488,3482,3212,3211,35,3319,3318,3172,3173,0,3490,3483,3201,3213,35,3336,3335,3188,3189,0,3489,3484,3203,3214,35,3326,3325,3178,3179,0,3491,3485,3205,3215,34,3316,4907,3337,0,3473,203,3216,35,3333,3332,3185,3186,0,3471,3486,3207,3217,35,3323,3322,3175,3176,0,3475,3487,3209,3218,35,3330,3329,3182,3183,0,3477,3488,3211,3219,35,3320,3319,3173,3174,0,3479,3490,3213,3220,35,4472,4408,3899,3836,1,3492,3222,3221,3493,35,3327,3326,3179,3180,0,3481,3491,3215,3223,35,3334,3333,3186,3187,0,3472,3471,3217,3204,35,3317,3316,3337,3171,0,3474,3473,3216,3202,35,3324,3323,3176,3177,0,3476,3475,3218,3206,35,3331,3330,3183,3184,0,3478,3477,3219,3208,35,3321,3320,3174,3338,0,3480,3479,3220,3210,35,3328,3327,3180,3181,0,3482,3481,3223,3212,35,3907,3970,3346,3339,1,3494,3267,3257,3495,35,3943,3934,3342,3343,1,3496,3497,3498,3499,35,5518,3961,3345,4878,1,3500,3501,3502,3503,35,3961,3952,3344,3345,1,3501,3504,3505,3502,35,4151,3980,4180,4301,0,3506,3507,3508,3509,35,3952,3943,3343,3344,1,3504,3496,3499,3505,35,3916,3907,3339,3340,1,3510,3494,3495,3511,35,3934,3925,3341,3342,1,3497,3512,3513,3498,35,3361,3366,3953,3962,1,3301,3304,3514,3515,35,4905,3361,3962,5519,1,3302,3301,3515,3516,35,3925,3916,3340,3341,1,3512,3510,3511,3513,35,3979,4152,3908,3917,1,3517,3518,3519,3520,34,3360,3917,3926,1,3297,3520,3521,34,3982,3979,3917,1,3522,3517,3520,34,3360,3982,3917,1,3297,3522,3520,35,3355,3360,3926,3935,1,3298,3297,3521,3523,35,3369,3355,3935,3944,1,3306,3298,3523,3524,35,3366,3369,3944,3953,1,3304,3306,3524,3514,35,3343,3342,3350,3351,1,3499,3498,3525,3526,35,3344,3343,3351,3352,1,3505,3499,3526,3527,35,3345,3344,3352,3353,1,3502,3505,3527,3528,35,4878,3345,3353,4887,1,3503,3502,3528,3529,35,3339,3346,3354,3347,1,3495,3257,3256,3530,35,3340,3339,3347,3348,1,3511,3495,3530,3531,35,3341,3340,3348,3349,1,3513,3511,3531,3532,35,3342,3341,3349,3350,1,3498,3513,3532,3525,35,3835,3898,4161,4142,1,3469,3177,3176,3470,35,4444,3273,3294,4453,0,3533,3422,3440,3534,35,3367,3357,3359,3362,1,3306,3298,3298,3306,35,3364,3367,3362,3365,1,3304,3306,3306,3304,35,4417,3210,3231,4426,0,3294,3293,3368,3535,35,3363,3364,3365,3368,1,3301,3304,3304,3301,35,4906,3363,3368,4904,1,3302,3301,3301,3302,35,4426,3231,3252,4435,0,3535,3368,3382,3536,35,4152,4169,3971,3908,1,3518,3227,3226,3519,35,4435,3252,3273,4444,0,3536,3382,3422,3533,35,4462,3315,3336,4471,0,3537,3457,3489,3538,35,4453,3294,3315,4462,0,3534,3440,3457,3537,35,4904,3368,3361,4905,1,3302,3301,3301,3302,35,3368,3365,3366,3361,1,3301,3304,3304,3301,35,3365,3362,3369,3366,1,3304,3306,3306,3304,35,3362,3359,3355,3369,1,3306,3298,3298,3306,35,3359,3356,3360,3355,1,3298,3297,3297,3298,35,3981,4056,4241,4179,0,3539,3540,3541,3542,35,4067,4143,4328,4240,0,3543,3544,3545,3546,35,4143,4160,4319,4328,0,3544,3276,3275,3545,35,4170,4151,4301,4309,0,3277,3506,3509,3278,34,4056,4066,4241,0,3540,3547,3541,35,3357,3358,3356,3359,1,3298,3297,3297,3298,34,4887,3353,4908,1,3529,3528,290,34,3352,4908,3353,1,3527,290,3528,34,3352,3351,4908,1,3527,3526,290,34,3351,3350,4908,1,3526,3525,290,34,3349,4908,3350,1,3532,290,3525,34,3349,3348,4908,1,3532,3531,290,34,3347,4908,3348,1,3530,290,3531,34,3347,3354,4908,1,3530,3256,290,35,4327,4318,4310,4300,0,3548,3285,3226,3549,35,3358,4065,4057,3356,1,3297,3307,3550,3297,35,4239,4327,4300,4178,0,3551,3548,3549,3552,35,3356,4057,3982,3360,1,3297,3550,3522,3297,35,3514,3538,3539,3518,0,3269,3553,3554,3555,35,3518,3539,3540,3519,0,3555,3554,3556,3557,35,3519,3540,3541,3520,0,3557,3556,3558,3559,35,3520,3541,3575,3521,0,3559,3558,3560,3561,35,3515,3524,3557,3525,0,3287,3562,3563,3564,35,3525,3557,3558,3526,0,3564,3563,3565,3566,35,3526,3558,3559,3527,0,3566,3565,3567,3568,35,3527,3559,3578,3528,0,3568,3567,3569,3570,35,3528,3578,3566,3529,0,3570,3569,3571,3572,35,3529,3566,3567,3530,1,3572,3571,3573,3574,35,3530,3567,3568,3531,1,3574,3573,3575,3576,34,3531,3568,3516,1,3576,3575,3245,34,3517,3548,3532,1,3243,3577,3578,35,3532,3548,3549,3533,1,3578,3577,3579,3580,35,3533,3549,3550,3534,1,3580,3579,3581,3582,35,3534,3550,3584,3535,0,3582,3581,3583,3584,35,3538,3537,3542,3539,0,3553,3585,3586,3554,35,3539,3542,3543,3540,0,3554,3586,3587,3556,35,3540,3543,3544,3541,0,3556,3587,3588,3558,35,3541,3544,3576,3575,0,3558,3588,3589,3560,35,3524,3523,3560,3557,0,3562,3590,3591,3563,35,3557,3560,3561,3558,0,3563,3591,3592,3565,35,3558,3561,3562,3559,0,3565,3592,3593,3567,35,3559,3562,3580,3578,0,3567,3593,3594,3569,35,3578,3580,3569,3566,0,3569,3594,3595,3571,35,3566,3569,3570,3567,1,3571,3595,3596,3573,35,3567,3570,3571,3568,1,3573,3596,3597,3575,34,3568,3571,3516,1,3575,3597,3245,34,3517,3551,3548,1,3243,3598,3577,35,3548,3551,3552,3549,1,3577,3598,3599,3579,35,3549,3552,3553,3550,1,3579,3599,3600,3581,35,3550,3553,3586,3584,0,3581,3600,3601,3583,35,3537,3536,3545,3542,0,3585,3602,3603,3586,35,3542,3545,3546,3543,0,3586,3603,3604,3587,35,3543,3546,3547,3544,0,3587,3604,3605,3588,35,3544,3547,3577,3576,0,3588,3605,3606,3589,35,3523,3522,3563,3560,0,3590,3607,3608,3591,35,3560,3563,3564,3561,0,3591,3608,3609,3592,35,3561,3564,3565,3562,0,3592,3609,3610,3593,35,3562,3565,3582,3580,0,3593,3610,3611,3594,35,3580,3582,3572,3569,0,3594,3611,3612,3595,35,3569,3572,3573,3570,1,3595,3612,3613,3596,35,3570,3573,3574,3571,1,3596,3613,3614,3597,34,3571,3574,3516,1,3597,3614,3245,34,3517,3554,3551,1,3243,3615,3598,35,3551,3554,3555,3552,1,3598,3615,3616,3599,35,3552,3555,3556,3553,1,3599,3616,3617,3600,35,3553,3556,3588,3586,0,3600,3617,3618,3601,35,3536,3535,3584,3545,0,3602,3584,3583,3603,35,3545,3584,3586,3546,0,3603,3583,3601,3604,35,3546,3586,3588,3547,0,3604,3601,3618,3605,35,3547,3588,3590,3577,0,3605,3618,3619,3606,35,3522,3521,3575,3563,0,3607,3561,3560,3608,35,3563,3575,3576,3564,0,3608,3560,3589,3609,35,3564,3576,3577,3565,0,3609,3589,3606,3610,35,3565,3577,3590,3582,0,3610,3606,3619,3611,35,3582,3590,3583,3572,0,3611,3619,3620,3612,35,3572,3583,3581,3573,1,3612,3620,3621,3613,35,3573,3581,3579,3574,1,3613,3621,3622,3614,34,3574,3579,3516,1,3614,3622,3245,34,3517,3585,3554,1,3243,3623,3615,35,3554,3585,3587,3555,1,3615,3623,3624,3616,35,3555,3587,3589,3556,1,3616,3624,3625,3617,35,3556,3589,3590,3588,0,3617,3625,3619,3618,34,3590,3589,3583,0,3619,3625,3620,35,3600,3624,3625,3604,0,3281,3626,3627,3628,35,3604,3625,3626,3605,0,3628,3627,3629,3630,35,3605,3626,3627,3606,0,3630,3629,3631,3632,35,3606,3627,3661,3607,0,3632,3631,3633,3634,35,3601,3610,3643,3611,0,3290,3635,3636,3637,35,3611,3643,3644,3612,0,3637,3636,3638,3639,35,3612,3644,3645,3613,0,3639,3638,3640,3641,35,3613,3645,3664,3614,0,3641,3640,3642,3643,35,3614,3664,3652,3615,0,3643,3642,3644,3645,35,3615,3652,3653,3616,1,3645,3644,3646,3647,35,3616,3653,3654,3617,1,3647,3646,3648,3649,34,3617,3654,3602,1,3649,3648,3037,34,3603,3634,3618,1,3024,3650,3651,35,3618,3634,3635,3619,1,3651,3650,3652,3653,35,3619,3635,3636,3620,1,3653,3652,3654,3655,35,3620,3636,3670,3621,0,3655,3654,3656,3657,35,3624,3623,3628,3625,0,3626,3658,3659,3627,35,3625,3628,3629,3626,0,3627,3659,3660,3629,35,3626,3629,3630,3627,0,3629,3660,3661,3631,35,3627,3630,3662,3661,0,3631,3661,3662,3633,35,3610,3609,3646,3643,0,3635,3663,3664,3636,35,3643,3646,3647,3644,0,3636,3664,3665,3638,35,3644,3647,3648,3645,0,3638,3665,3666,3640,35,3645,3648,3666,3664,0,3640,3666,3667,3642,35,3664,3666,3655,3652,0,3642,3667,3668,3644,35,3652,3655,3656,3653,1,3644,3668,3669,3646,35,3653,3656,3657,3654,1,3646,3669,3670,3648,34,3654,3657,3602,1,3648,3670,3037,34,3603,3637,3634,1,3024,3671,3650,35,3634,3637,3638,3635,1,3650,3671,3672,3652,35,3635,3638,3639,3636,1,3652,3672,3673,3654,35,3636,3639,3672,3670,0,3654,3673,3674,3656,35,3623,3622,3631,3628,0,3658,3675,3676,3659,35,3628,3631,3632,3629,0,3659,3676,3677,3660,35,3629,3632,3633,3630,0,3660,3677,3678,3661,35,3630,3633,3663,3662,0,3661,3678,3679,3662,35,3609,3608,3649,3646,0,3663,3680,3681,3664,35,3646,3649,3650,3647,0,3664,3681,3682,3665,35,3647,3650,3651,3648,0,3665,3682,3683,3666,35,3648,3651,3668,3666,0,3666,3683,3684,3667,35,3666,3668,3658,3655,0,3667,3684,3685,3668,35,3655,3658,3659,3656,1,3668,3685,3686,3669,35,3656,3659,3660,3657,1,3669,3686,3687,3670,34,3657,3660,3602,1,3670,3687,3037,34,3603,3640,3637,1,3024,3688,3671,35,3637,3640,3641,3638,1,3671,3688,3689,3672,35,3638,3641,3642,3639,1,3672,3689,3690,3673,35,3639,3642,3674,3672,0,3673,3690,3691,3674,35,3622,3621,3670,3631,0,3675,3657,3656,3676,35,3631,3670,3672,3632,0,3676,3656,3674,3677,35,3632,3672,3674,3633,0,3677,3674,3691,3678,35,3633,3674,3676,3663,0,3678,3691,3692,3679,35,3608,3607,3661,3649,0,3680,3634,3633,3681,35,3649,3661,3662,3650,0,3681,3633,3662,3682,35,3650,3662,3663,3651,0,3682,3662,3679,3683,35,3651,3663,3676,3668,0,3683,3679,3692,3684,35,3668,3676,3669,3658,0,3684,3692,3693,3685,35,3658,3669,3667,3659,1,3685,3693,3694,3686,35,3659,3667,3665,3660,1,3686,3694,3695,3687,34,3660,3665,3602,1,3687,3695,3037,34,3603,3671,3640,1,3024,3696,3688,35,3640,3671,3673,3641,1,3688,3696,3697,3689,35,3641,3673,3675,3642,1,3689,3697,3698,3690,35,3642,3675,3676,3674,0,3690,3698,3692,3691,34,4140,4131,4129,1,3699,3700,3701,34,4127,4065,4068,1,3702,3307,3309,34,4127,4140,4129,1,3702,3699,3701,34,4127,4068,4136,1,3702,3309,3703,34,4127,4138,4140,1,3702,3704,3699,34,4127,4136,4138,1,3702,3703,3704,35,3695,3718,3719,3698,0,3286,3705,3706,3707,35,3698,3719,3720,3699,0,3707,3706,3708,3709,35,3699,3720,3721,3700,0,3709,3708,3710,3711,35,3700,3721,3746,3701,0,3711,3710,3712,3713,35,3696,3704,3728,3705,0,3270,3714,3715,3716,35,3705,3728,3729,3706,0,3716,3715,3717,3718,35,3706,3729,3730,3707,0,3718,3717,3719,3720,35,3707,3730,3749,3708,0,3720,3719,3721,3722,35,3697,3711,3737,3712,0,3289,3723,3724,3725,35,3712,3737,3738,3713,0,3725,3724,3726,3727,35,3713,3738,3739,3714,0,3727,3726,3728,3729,35,3714,3739,3752,3715,0,3729,3728,3730,3731,35,3718,3717,3722,3719,0,3705,3732,3733,3706,35,3719,3722,3723,3720,0,3706,3733,3734,3708,35,3720,3723,3724,3721,0,3708,3734,3735,3710,35,3721,3724,3747,3746,0,3710,3735,3736,3712,35,3704,3703,3731,3728,0,3714,3737,3738,3715,35,3728,3731,3732,3729,0,3715,3738,3739,3717,35,3729,3732,3733,3730,0,3717,3739,3740,3719,35,3730,3733,3750,3749,0,3719,3740,3741,3721,35,3711,3710,3740,3737,0,3723,3742,3743,3724,35,3737,3740,3741,3738,0,3724,3743,3744,3726,35,3738,3741,3742,3739,0,3726,3744,3745,3728,35,3739,3742,3753,3752,0,3728,3745,3746,3730,35,3717,3716,3725,3722,0,3732,3747,3748,3733,35,3722,3725,3726,3723,0,3733,3748,3749,3734,35,3723,3726,3727,3724,0,3734,3749,3750,3735,35,3724,3727,3748,3747,0,3735,3750,3751,3736,35,3703,3702,3734,3731,0,3737,3752,3753,3738,35,3731,3734,3735,3732,0,3738,3753,3754,3739,35,3732,3735,3736,3733,0,3739,3754,3755,3740,35,3733,3736,3751,3750,0,3740,3755,3756,3741,35,3710,3709,3743,3740,0,3742,3757,3758,3743,35,3740,3743,3744,3741,0,3743,3758,3759,3744,35,3741,3744,3745,3742,0,3744,3759,3760,3745,35,3742,3745,3754,3753,0,3745,3760,3761,3746,35,3716,3715,3752,3725,0,3747,3731,3730,3748,35,3725,3752,3753,3726,0,3748,3730,3746,3749,35,3726,3753,3754,3727,0,3749,3746,3761,3750,35,3727,3754,3755,3748,0,3750,3761,3762,3751,35,3702,3701,3746,3734,0,3752,3713,3712,3753,35,3734,3746,3747,3735,0,3753,3712,3736,3754,35,3735,3747,3748,3736,0,3754,3736,3751,3755,35,3736,3748,3755,3751,0,3755,3751,3762,3756,35,3709,3708,3749,3743,0,3757,3722,3721,3758,35,3743,3749,3750,3744,0,3758,3721,3741,3759,35,3744,3750,3751,3745,0,3759,3741,3756,3760,35,3745,3751,3755,3754,0,3760,3756,3762,3761,35,3756,3779,3780,3759,0,3271,3763,3764,3765,35,3759,3780,3781,3760,0,3765,3764,3766,3767,35,3760,3781,3782,3761,0,3767,3766,3768,3769,35,3761,3782,3807,3762,0,3769,3768,3770,3771,35,3757,3765,3789,3766,0,3282,3772,3773,3774,35,3766,3789,3790,3767,0,3774,3773,3775,3776,35,3767,3790,3791,3768,0,3776,3775,3777,3778,35,3768,3791,3810,3769,0,3778,3777,3779,3780,35,3758,3772,3798,3773,0,3288,3781,3782,3783,35,3773,3798,3799,3774,0,3783,3782,3784,3785,35,3774,3799,3800,3775,0,3785,3784,3786,3787,35,3775,3800,3813,3776,0,3787,3786,3788,3789,35,3779,3778,3783,3780,0,3763,3790,3791,3764,35,3780,3783,3784,3781,0,3764,3791,3792,3766,35,3781,3784,3785,3782,0,3766,3792,3793,3768,35,3782,3785,3808,3807,0,3768,3793,3794,3770,35,3765,3764,3792,3789,0,3772,3795,3796,3773,35,3789,3792,3793,3790,0,3773,3796,3797,3775,35,3790,3793,3794,3791,0,3775,3797,3798,3777,35,3791,3794,3811,3810,0,3777,3798,3799,3779,35,3772,3771,3801,3798,0,3781,3800,3801,3782,35,3798,3801,3802,3799,0,3782,3801,3802,3784,35,3799,3802,3803,3800,0,3784,3802,3803,3786,35,3800,3803,3814,3813,0,3786,3803,3804,3788,35,3778,3777,3786,3783,0,3790,3805,3806,3791,35,3783,3786,3787,3784,0,3791,3806,3807,3792,35,3784,3787,3788,3785,0,3792,3807,3808,3793,35,3785,3788,3809,3808,0,3793,3808,3809,3794,35,3764,3763,3795,3792,0,3795,3810,3811,3796,35,3792,3795,3796,3793,0,3796,3811,3812,3797,35,3793,3796,3797,3794,0,3797,3812,3813,3798,35,3794,3797,3812,3811,0,3798,3813,3814,3799,35,3771,3770,3804,3801,0,3800,3815,3816,3801,35,3801,3804,3805,3802,0,3801,3816,3817,3802,35,3802,3805,3806,3803,0,3802,3817,3818,3803,35,3803,3806,3815,3814,0,3803,3818,3819,3804,35,3777,3776,3813,3786,0,3805,3789,3788,3806,35,3786,3813,3814,3787,0,3806,3788,3804,3807,35,3787,3814,3815,3788,0,3807,3804,3819,3808,35,3788,3815,3816,3809,0,3808,3819,3820,3809,35,3763,3762,3807,3795,0,3810,3771,3770,3811,35,3795,3807,3808,3796,0,3811,3770,3794,3812,35,3796,3808,3809,3797,0,3812,3794,3809,3813,35,3797,3809,3816,3812,0,3813,3809,3820,3814,35,3770,3769,3810,3804,0,3815,3780,3779,3816,35,3804,3810,3811,3805,0,3816,3779,3799,3817,35,3805,3811,3812,3806,0,3817,3799,3814,3818,35,3806,3812,3816,3815,0,3818,3814,3820,3819,34,3979,4013,3983,1,3517,3821,3822,35,3983,4013,4014,3984,1,3822,3821,3823,3824,35,3984,4014,4015,3985,1,3824,3823,3825,3826,35,3985,4015,4040,3986,0,3826,3825,3827,3828,35,3980,3989,4004,3990,0,3507,3829,3830,3831,35,3990,4004,4005,3991,0,3831,3830,3832,3833,35,3991,4005,4006,3992,0,3833,3832,3834,3835,35,3992,4006,4046,3993,0,3835,3834,3836,3837,35,3981,3996,4022,3997,0,3539,3838,3839,3840,35,3997,4022,4023,3998,0,3840,3839,3841,3842,35,3998,4023,4024,3999,0,3842,3841,3843,3844,35,3999,4024,4049,4e3,0,3844,3843,3845,3846,35,4e3,4049,4031,4001,0,3846,3845,3847,3848,35,4001,4031,4032,4002,1,3848,3847,3849,3850,35,4002,4032,4033,4003,1,3850,3849,3851,3852,34,4003,4033,3982,1,3852,3851,3522,34,3979,4016,4013,1,3517,3853,3821,35,4013,4016,4017,4014,1,3821,3853,3854,3823,35,4014,4017,4018,4015,1,3823,3854,3855,3825,35,4015,4018,4042,4040,0,3825,3855,3856,3827,35,3989,3988,4007,4004,0,3829,3857,3858,3830,35,4004,4007,4008,4005,0,3830,3858,3859,3832,35,4005,4008,4009,4006,0,3832,3859,3860,3834,35,4006,4009,4047,4046,0,3834,3860,3861,3836,35,3996,3995,4025,4022,0,3838,3862,3863,3839,35,4022,4025,4026,4023,0,3839,3863,3864,3841,35,4023,4026,4027,4024,0,3841,3864,3865,3843,35,4024,4027,4051,4049,0,3843,3865,3866,3845,35,4049,4051,4034,4031,0,3845,3866,3867,3847,35,4031,4034,4035,4032,1,3847,3867,3868,3849,35,4032,4035,4036,4033,1,3849,3868,3869,3851,34,4033,4036,3982,1,3851,3869,3522,34,3979,4019,4016,1,3517,3870,3853,35,4016,4019,4020,4017,1,3853,3870,3871,3854,35,4017,4020,4021,4018,1,3854,3871,3872,3855,35,4018,4021,4044,4042,0,3855,3872,3873,3856,35,3988,3987,4010,4007,0,3857,3874,3875,3858,35,4007,4010,4011,4008,0,3858,3875,3876,3859,35,4008,4011,4012,4009,0,3859,3876,3877,3860,35,4009,4012,4048,4047,0,3860,3877,3878,3861,35,3995,3994,4028,4025,0,3862,3879,3880,3863,35,4025,4028,4029,4026,0,3863,3880,3881,3864,35,4026,4029,4030,4027,0,3864,3881,3882,3865,35,4027,4030,4053,4051,0,3865,3882,3883,3866,35,4051,4053,4037,4034,0,3866,3883,3884,3867,35,4034,4037,4038,4035,1,3867,3884,3885,3868,35,4035,4038,4039,4036,1,3868,3885,3886,3869,34,4036,4039,3982,1,3869,3886,3522,34,3979,4041,4019,1,3517,3887,3870,35,4019,4041,4043,4020,1,3870,3887,3888,3871,35,4020,4043,4045,4021,1,3871,3888,3889,3872,35,4021,4045,4055,4044,0,3872,3889,3890,3873,35,3987,3986,4040,4010,0,3874,3828,3827,3875,35,4010,4040,4042,4011,0,3875,3827,3856,3876,35,4011,4042,4044,4012,0,3876,3856,3873,3877,35,4012,4044,4055,4048,0,3877,3873,3890,3878,35,3994,3993,4046,4028,0,3879,3837,3836,3880,35,4028,4046,4047,4029,0,3880,3836,3861,3881,35,4029,4047,4048,4030,0,3881,3861,3878,3882,35,4030,4048,4055,4053,0,3882,3878,3890,3883,35,4053,4055,4054,4037,0,3883,3890,3891,3884,35,4037,4054,4052,4038,1,3884,3891,3892,3885,35,4038,4052,4050,4039,1,3885,3892,3893,3886,34,4039,4050,3982,1,3886,3893,3522,34,4055,4045,4054,0,3890,3889,3891,34,4065,4099,4069,1,3307,3894,3895,35,4069,4099,4100,4070,1,3895,3894,3896,3897,35,4070,4100,4101,4071,1,3897,3896,3898,3899,35,4071,4101,4126,4072,0,3899,3898,3900,3901,35,4066,4075,4090,4076,0,3547,3902,3903,3904,35,4076,4090,4091,4077,0,3904,3903,3905,3906,35,4077,4091,4092,4078,0,3906,3905,3907,3908,35,4078,4092,4132,4079,0,3908,3907,3909,3910,35,4067,4082,4108,4083,0,3543,3911,3912,3913,35,4083,4108,4109,4084,0,3913,3912,3914,3915,35,4084,4109,4110,4085,0,3915,3914,3916,3917,35,4085,4110,4135,4086,0,3917,3916,3918,3919,35,4086,4135,4117,4087,0,3919,3918,3920,3921,35,4087,4117,4118,4088,1,3921,3920,3922,3923,35,4088,4118,4119,4089,1,3923,3922,3924,3925,34,4089,4119,4068,1,3925,3924,3309,34,4065,4102,4099,1,3307,3926,3894,35,4099,4102,4103,4100,1,3894,3926,3927,3896,35,4100,4103,4104,4101,1,3896,3927,3928,3898,35,4101,4104,4128,4126,0,3898,3928,3929,3900,35,4075,4074,4093,4090,0,3902,3930,3931,3903,35,4090,4093,4094,4091,0,3903,3931,3932,3905,35,4091,4094,4095,4092,0,3905,3932,3933,3907,35,4092,4095,4133,4132,0,3907,3933,3934,3909,35,4082,4081,4111,4108,0,3911,3935,3936,3912,35,4108,4111,4112,4109,0,3912,3936,3937,3914,35,4109,4112,4113,4110,0,3914,3937,3938,3916,35,4110,4113,4137,4135,0,3916,3938,3939,3918,35,4135,4137,4120,4117,0,3918,3939,3940,3920,35,4117,4120,4121,4118,1,3920,3940,3941,3922,35,4118,4121,4122,4119,1,3922,3941,3942,3924,34,4119,4122,4068,1,3924,3942,3309,34,4065,4105,4102,1,3307,3943,3926,35,4102,4105,4106,4103,1,3926,3943,3944,3927,35,4103,4106,4107,4104,1,3927,3944,3945,3928,35,4104,4107,4130,4128,0,3928,3945,3946,3929,35,4074,4073,4096,4093,0,3930,3947,3948,3931,35,4093,4096,4097,4094,0,3931,3948,3949,3932,35,4094,4097,4098,4095,0,3932,3949,3950,3933,35,4095,4098,4134,4133,0,3933,3950,3951,3934,35,4081,4080,4114,4111,0,3935,3952,3953,3936,35,4111,4114,4115,4112,0,3936,3953,3954,3937,35,4112,4115,4116,4113,0,3937,3954,3955,3938,35,4113,4116,4139,4137,0,3938,3955,3956,3939,35,4137,4139,4123,4120,0,3939,3956,3957,3940,35,4120,4123,4124,4121,1,3940,3957,3958,3941,35,4121,4124,4125,4122,1,3941,3958,3959,3942,34,4122,4125,4068,1,3942,3959,3309,34,4065,4127,4105,1,3307,3702,3943,35,4105,4127,4129,4106,1,3943,3702,3701,3944,35,4106,4129,4131,4107,1,3944,3701,3700,3945,35,4107,4131,4141,4130,0,3945,3700,3960,3946,35,4073,4072,4126,4096,0,3947,3901,3900,3948,35,4096,4126,4128,4097,0,3948,3900,3929,3949,35,4097,4128,4130,4098,0,3949,3929,3946,3950,35,4098,4130,4141,4134,0,3950,3946,3960,3951,35,4080,4079,4132,4114,0,3952,3910,3909,3953,35,4114,4132,4133,4115,0,3953,3909,3934,3954,35,4115,4133,4134,4116,0,3954,3934,3951,3955,35,4116,4134,4141,4139,0,3955,3951,3960,3956,35,4139,4141,4140,4123,0,3956,3960,3699,3957,35,4123,4140,4138,4124,1,3957,3699,3704,3958,35,4124,4138,4136,4125,1,3958,3704,3703,3959,34,4125,4136,4068,1,3959,3703,3309,34,4141,4131,4140,0,3960,3700,3699,35,4178,4201,4202,4181,0,3552,3961,3962,3963,35,4181,4202,4203,4182,0,3963,3962,3964,3965,35,4182,4203,4204,4183,0,3965,3964,3966,3967,35,4183,4204,4229,4184,0,3967,3966,3968,3969,35,4179,4187,4211,4188,0,3542,3970,3971,3972,35,4188,4211,4212,4189,0,3972,3971,3973,3974,35,4189,4212,4213,4190,0,3974,3973,3975,3976,35,4190,4213,4232,4191,0,3976,3975,3977,3978,35,4180,4194,4220,4195,0,3508,3979,3980,3981,35,4195,4220,4221,4196,0,3981,3980,3982,3983,35,4196,4221,4222,4197,0,3983,3982,3984,3985,35,4197,4222,4235,4198,0,3985,3984,3986,3987,35,4201,4200,4205,4202,0,3961,3988,3989,3962,35,4202,4205,4206,4203,0,3962,3989,3990,3964,35,4203,4206,4207,4204,0,3964,3990,3991,3966,35,4204,4207,4230,4229,0,3966,3991,3992,3968,35,4187,4186,4214,4211,0,3970,3993,3994,3971,35,4211,4214,4215,4212,0,3971,3994,3995,3973,35,4212,4215,4216,4213,0,3973,3995,3996,3975,35,4213,4216,4233,4232,0,3975,3996,3997,3977,35,4194,4193,4223,4220,0,3979,3998,3999,3980,35,4220,4223,4224,4221,0,3980,3999,4e3,3982,35,4221,4224,4225,4222,0,3982,4e3,4001,3984,35,4222,4225,4236,4235,0,3984,4001,4002,3986,35,4200,4199,4208,4205,0,3988,4003,4004,3989,35,4205,4208,4209,4206,0,3989,4004,4005,3990,35,4206,4209,4210,4207,0,3990,4005,4006,3991,35,4207,4210,4231,4230,0,3991,4006,4007,3992,35,4186,4185,4217,4214,0,3993,4008,4009,3994,35,4214,4217,4218,4215,0,3994,4009,4010,3995,35,4215,4218,4219,4216,0,3995,4010,4011,3996,35,4216,4219,4234,4233,0,3996,4011,4012,3997,35,4193,4192,4226,4223,0,3998,4013,4014,3999,35,4223,4226,4227,4224,0,3999,4014,4015,4e3,35,4224,4227,4228,4225,0,4e3,4015,4016,4001,35,4225,4228,4237,4236,0,4001,4016,4017,4002,35,4199,4198,4235,4208,0,4003,3987,3986,4004,35,4208,4235,4236,4209,0,4004,3986,4002,4005,35,4209,4236,4237,4210,0,4005,4002,4017,4006,35,4210,4237,4238,4231,0,4006,4017,4018,4007,35,4185,4184,4229,4217,0,4008,3969,3968,4009,35,4217,4229,4230,4218,0,4009,3968,3992,4010,35,4218,4230,4231,4219,0,4010,3992,4007,4011,35,4219,4231,4238,4234,0,4011,4007,4018,4012,35,4192,4191,4232,4226,0,4013,3978,3977,4014,35,4226,4232,4233,4227,0,4014,3977,3997,4015,35,4227,4233,4234,4228,0,4015,3997,4012,4016,35,4228,4234,4238,4237,0,4016,4012,4018,4017,35,4239,4262,4263,4242,0,3551,4019,4020,4021,35,4242,4263,4264,4243,0,4021,4020,4022,4023,35,4243,4264,4265,4244,0,4023,4022,4024,4025,35,4244,4265,4290,4245,0,4025,4024,4026,4027,35,4240,4248,4272,4249,0,3546,4028,4029,4030,35,4249,4272,4273,4250,0,4030,4029,4031,4032,35,4250,4273,4274,4251,0,4032,4031,4033,4034,35,4251,4274,4293,4252,0,4034,4033,4035,4036,35,4241,4255,4281,4256,0,3541,4037,4038,4039,35,4256,4281,4282,4257,0,4039,4038,4040,4041,35,4257,4282,4283,4258,0,4041,4040,4042,4043,35,4258,4283,4296,4259,0,4043,4042,4044,4045,35,4262,4261,4266,4263,0,4019,4046,4047,4020,35,4263,4266,4267,4264,0,4020,4047,4048,4022,35,4264,4267,4268,4265,0,4022,4048,4049,4024,35,4265,4268,4291,4290,0,4024,4049,4050,4026,35,4248,4247,4275,4272,0,4028,4051,4052,4029,35,4272,4275,4276,4273,0,4029,4052,4053,4031,35,4273,4276,4277,4274,0,4031,4053,4054,4033,35,4274,4277,4294,4293,0,4033,4054,4055,4035,35,4255,4254,4284,4281,0,4037,4056,4057,4038,35,4281,4284,4285,4282,0,4038,4057,4058,4040,35,4282,4285,4286,4283,0,4040,4058,4059,4042,35,4283,4286,4297,4296,0,4042,4059,4060,4044,35,4261,4260,4269,4266,0,4046,4061,4062,4047,35,4266,4269,4270,4267,0,4047,4062,4063,4048,35,4267,4270,4271,4268,0,4048,4063,4064,4049,35,4268,4271,4292,4291,0,4049,4064,4065,4050,35,4247,4246,4278,4275,0,4051,4066,4067,4052,35,4275,4278,4279,4276,0,4052,4067,4068,4053,35,4276,4279,4280,4277,0,4053,4068,4069,4054,35,4277,4280,4295,4294,0,4054,4069,4070,4055,35,4254,4253,4287,4284,0,4056,4071,4072,4057,35,4284,4287,4288,4285,0,4057,4072,4073,4058,35,4285,4288,4289,4286,0,4058,4073,4074,4059,35,4286,4289,4298,4297,0,4059,4074,4075,4060,35,4260,4259,4296,4269,0,4061,4045,4044,4062,35,4269,4296,4297,4270,0,4062,4044,4060,4063,35,4270,4297,4298,4271,0,4063,4060,4075,4064,35,4271,4298,4299,4292,0,4064,4075,4076,4065,35,4246,4245,4290,4278,0,4066,4027,4026,4067,35,4278,4290,4291,4279,0,4067,4026,4050,4068,35,4279,4291,4292,4280,0,4068,4050,4065,4069,35,4280,4292,4299,4295,0,4069,4065,4076,4070,35,4253,4252,4293,4287,0,4071,4036,4035,4072,35,4287,4293,4294,4288,0,4072,4035,4055,4073,35,4288,4294,4295,4289,0,4073,4055,4070,4074,35,4289,4295,4299,4298,0,4074,4070,4076,4075,35,3898,3900,3378,3371,1,3177,4077,4078,3026,35,3900,3901,3377,3378,1,4077,4079,4080,4078,35,3901,3902,3376,3377,1,4079,4081,4082,4080,35,3902,3903,3375,3376,1,4081,4083,4084,4082,35,3903,3904,3374,3375,1,4083,4085,4086,4084,35,3904,3905,3373,3374,1,4085,4087,4088,4086,35,3905,3906,3372,3373,1,4087,4089,4090,4088,35,3906,3899,3370,3372,1,4089,3221,3199,4090,35,3379,3381,3372,3370,1,3170,4091,4090,3199,35,3381,3382,3373,3372,1,4091,4092,4088,4090,35,3382,3383,3374,3373,1,4092,4093,4086,4088,35,3383,3384,3375,3374,1,4093,4094,4084,4086,35,3384,3385,3376,3375,1,4094,4095,4082,4084,35,3385,3386,3377,3376,1,4095,4096,4080,4082,35,3386,3387,3378,3377,1,4096,4097,4078,4080,35,3387,3380,3371,3378,1,4097,3023,3026,4078,35,3380,3387,3396,3389,1,3023,4097,4098,3030,35,3387,3386,3395,3396,1,4097,4096,4099,4098,35,3386,3385,3394,3395,1,4096,4095,4100,4099,35,3385,3384,3393,3394,1,4095,4094,4101,4100,35,3384,3383,3392,3393,1,4094,4093,4102,4101,35,3383,3382,3391,3392,1,4093,4092,4103,4102,35,3382,3381,3390,3391,1,4092,4091,4104,4103,35,3381,3379,3388,3390,1,4091,3170,3150,4104,35,3397,3399,3390,3388,1,3113,4105,4104,3150,35,3399,3400,3391,3390,1,4105,4106,4103,4104,35,3400,3401,3392,3391,1,4106,4107,4102,4103,35,3401,3402,3393,3392,1,4107,4108,4101,4102,35,3402,3403,3394,3393,1,4108,4109,4100,4101,35,3403,3404,3395,3394,1,4109,4110,4099,4100,35,3404,3405,3396,3395,1,4110,4111,4098,4099,35,3405,3398,3389,3396,1,4111,3027,3030,4098,35,3398,3405,3414,3407,1,3027,4111,4112,3035,35,3405,3404,3413,3414,1,4111,4110,4113,4112,35,3404,3403,3412,3413,1,4110,4109,4114,4113,35,3403,3402,3411,3412,1,4109,4108,4115,4114,35,3402,3401,3410,3411,1,4108,4107,4116,4115,35,3401,3400,3409,3410,1,4107,4106,4117,4116,35,3400,3399,3408,3409,1,4106,4105,4118,4117,35,3399,3397,3406,3408,1,4105,3113,3099,4118,35,3407,3414,3423,3416,1,3035,4112,4119,3034,35,3414,3413,3422,3423,1,4112,4113,4120,4119,35,3413,3412,3421,3422,1,4113,4114,4121,4120,35,3412,3411,3420,3421,1,4114,4115,4122,4121,35,3411,3410,3419,3420,1,4115,4116,4123,4122,35,3410,3409,3418,3419,1,4116,4117,4124,4123,35,3409,3408,3417,3418,1,4117,4118,4125,4124,35,3408,3406,3415,3417,1,4118,3099,3081,4125,35,3424,3426,3417,3415,1,3040,4126,4125,3081,35,3426,3427,3418,3417,1,4126,4127,4124,4125,35,3427,3428,3419,3418,1,4127,4128,4123,4124,35,3428,3429,3420,3419,1,4128,4129,4122,4123,35,3429,3430,3421,3420,1,4129,4130,4121,4122,35,3430,3431,3422,3421,1,4130,4131,4120,4121,35,3431,3432,3423,3422,1,4131,4132,4119,4120,35,3432,3425,3416,3423,1,4132,3032,3034,4119,35,3425,3432,3441,3434,1,3032,4132,1142,8,35,3432,3431,3440,3441,1,4132,4131,1143,1142,35,3431,3430,3439,3440,1,4131,4130,1144,1143,35,3430,3429,3438,3439,1,4130,4129,1145,1144,35,3429,3428,3437,3438,1,4129,4128,1146,1145,35,3428,3427,3436,3437,1,4128,4127,1147,1146,35,3427,3426,3435,3436,1,4127,4126,1148,1147,35,3426,3424,3433,3435,1,4126,3040,24,1148,35,3970,3972,3450,3443,1,3267,4133,4134,3241,35,3972,3973,3449,3450,1,4133,4135,4136,4134,35,3973,3974,3448,3449,1,4135,4137,4138,4136,35,3974,3975,3447,3448,1,4137,4139,4140,4138,35,3975,3976,3446,3447,1,4139,4141,4142,4140,35,3976,3977,3445,3446,1,4141,4143,4144,4142,35,3977,3978,3444,3445,1,4143,4145,4146,4144,35,3978,3971,3442,3444,1,4145,3226,3225,4146,35,3451,3453,3444,3442,1,3246,4147,4146,3225,35,3453,3454,3445,3444,1,4147,4148,4144,4146,35,3454,3455,3446,3445,1,4148,4149,4142,4144,35,3455,3456,3447,3446,1,4149,4150,4140,4142,35,3456,3457,3448,3447,1,4150,4151,4138,4140,35,3457,3458,3449,3448,1,4151,4152,4136,4138,35,3458,3459,3450,3449,1,4152,4153,4134,4136,35,3459,3452,3443,3450,1,4153,3238,3241,4134,35,3452,3459,3468,3461,1,3238,4153,4154,3231,35,3459,3458,3467,3468,1,4153,4152,4155,4154,35,3458,3457,3466,3467,1,4152,4151,4156,4155,35,3457,3456,3465,3466,1,4151,4150,4157,4156,35,3456,3455,3464,3465,1,4150,4149,4158,4157,35,3455,3454,3463,3464,1,4149,4148,4159,4158,35,3454,3453,3462,3463,1,4148,4147,4160,4159,35,3453,3451,3460,3462,1,4147,3246,3247,4160,35,3469,3471,3462,3460,1,3248,4161,4160,3247,35,3471,3472,3463,3462,1,4161,4162,4159,4160,35,3472,3473,3464,3463,1,4162,4163,4158,4159,35,3473,3474,3465,3464,1,4163,4164,4157,4158,35,3474,3475,3466,3465,1,4164,4165,4156,4157,35,3475,3476,3467,3466,1,4165,4166,4155,4156,35,3476,3477,3468,3467,1,4166,4167,4154,4155,35,3477,3470,3461,3468,1,4167,3228,3231,4154,35,3470,3477,3486,3479,1,3228,4167,4168,3237,35,3477,3476,3485,3486,1,4167,4166,4169,4168,35,3476,3475,3484,3485,1,4166,4165,4170,4169,35,3475,3474,3483,3484,1,4165,4164,4171,4170,35,3474,3473,3482,3483,1,4164,4163,4172,4171,35,3473,3472,3481,3482,1,4163,4162,4173,4172,35,3472,3471,3480,3481,1,4162,4161,4174,4173,35,3471,3469,3478,3480,1,4161,3248,3249,4174,35,3479,3486,3495,3488,1,3237,4168,4175,3235,35,3486,3485,3494,3495,1,4168,4169,4176,4175,35,3485,3484,3493,3494,1,4169,4170,4177,4176,35,3484,3483,3492,3493,1,4170,4171,4178,4177,35,3483,3482,3491,3492,1,4171,4172,4179,4178,35,3482,3481,3490,3491,1,4172,4173,4180,4179,35,3481,3480,3489,3490,1,4173,4174,4181,4180,35,3480,3478,3487,3489,1,4174,3249,3250,4181,35,3496,3498,3489,3487,1,3242,4182,4181,3250,35,3498,3499,3490,3489,1,4182,4183,4180,4181,35,3499,3500,3491,3490,1,4183,4184,4179,4180,35,3500,3501,3492,3491,1,4184,4185,4178,4179,35,3501,3502,3493,3492,1,4185,4186,4177,4178,35,3502,3503,3494,3493,1,4186,4187,4176,4177,35,3503,3504,3495,3494,1,4187,4188,4175,4176,35,3504,3497,3488,3495,1,4188,3232,3235,4175,35,3497,3504,3513,3506,1,3232,4188,1205,241,35,3504,3503,3512,3513,1,4188,4187,1206,1205,35,3503,3502,3511,3512,1,4187,4186,1207,1206,35,3502,3501,3510,3511,1,4186,4185,1208,1207,35,3501,3500,3509,3510,1,4185,4184,1209,1208,35,3500,3499,3508,3509,1,4184,4183,1210,1209,35,3499,3498,3507,3508,1,4183,4182,1211,1210,35,3498,3496,3505,3507,1,4182,3242,248,1211,35,3591,3593,3617,3602,1,3244,4189,3649,3037,35,3593,3594,3616,3617,1,4189,4190,3647,3649,35,3594,3595,3615,3616,1,4190,4191,3645,3647,35,3595,3596,3614,3615,0,4191,4192,3643,3645,35,3596,3597,3613,3614,0,4192,4193,3641,3643,35,3597,3598,3612,3613,0,4193,4194,3639,3641,35,3598,3599,3611,3612,0,4194,4195,3637,3639,35,3599,3592,3601,3611,0,4195,3272,3290,3637,35,3677,3679,3624,3600,0,3273,4196,3626,3281,35,3679,3680,3623,3624,0,4196,4197,3658,3626,35,3680,3681,3622,3623,0,4197,4198,3675,3658,35,3681,3682,3621,3622,0,4198,4199,3657,3675,35,3682,3683,3620,3621,0,4199,4200,3655,3657,35,3683,3684,3619,3620,1,4200,4201,3653,3655,35,3684,3685,3618,3619,1,4201,4202,3651,3653,35,3685,3678,3603,3618,1,4202,3025,3024,3651,35,3686,3688,3531,3516,1,3224,4203,3576,3245,35,3688,3689,3530,3531,1,4203,4204,3574,3576,35,3689,3690,3529,3530,1,4204,4205,3572,3574,35,3690,3691,3528,3529,0,4205,4206,3570,3572,35,3691,3692,3527,3528,0,4206,4207,3568,3570,35,3692,3693,3526,3527,0,4207,4208,3566,3568,35,3693,3694,3525,3526,0,4208,4209,3564,3566,35,3694,3687,3515,3525,0,4209,3280,3287,3564,35,4160,4162,3679,3677,0,3276,4210,4196,3273,35,4162,4163,3680,3679,0,4210,4211,4197,4196,35,4163,4164,3681,3680,0,4211,4212,4198,4197,35,4164,4165,3682,3681,0,4212,4213,4199,4198,35,4165,4166,3683,3682,0,4213,4214,4200,4199,35,4166,4167,3684,3683,1,4214,4215,4201,4200,35,4167,4168,3685,3684,1,4215,4216,4202,4201,35,4168,4161,3678,3685,1,4216,3176,3025,4202,35,4169,4171,3688,3686,1,3227,4217,4203,3224,35,4171,4172,3689,3688,1,4217,4218,4204,4203,35,4172,4173,3690,3689,1,4218,4219,4205,4204,35,4173,4174,3691,3690,0,4219,4220,4206,4205,35,4174,4175,3692,3691,0,4220,4221,4207,4206,35,4175,4176,3693,3692,0,4221,4222,4208,4207,35,4176,4177,3694,3693,0,4222,4223,4209,4208,35,4177,4170,3687,3694,0,4223,3277,3280,4209,35,3592,3599,3538,3514,0,3272,4195,3553,3269,35,3599,3598,3537,3538,0,4195,4194,3585,3553,35,3598,3597,3536,3537,0,4194,4193,3602,3585,35,3597,3596,3535,3536,0,4193,4192,3584,3602,35,3596,3595,3534,3535,0,4192,4191,3582,3584,35,3595,3594,3533,3534,1,4191,4190,3580,3582,35,3594,3593,3532,3533,1,4190,4189,3578,3580,35,3593,3591,3517,3532,1,4189,3244,3243,3578,35,3695,3698,3524,3515,0,3286,3707,3562,3287,35,3698,3699,3523,3524,0,3707,3709,3590,3562,35,3699,3700,3522,3523,0,3709,3711,3607,3590,35,3700,3701,3521,3522,0,3711,3713,3561,3607,35,3701,3702,3520,3521,0,3713,3752,3559,3561,35,3702,3703,3519,3520,0,3752,3737,3557,3559,35,3703,3704,3518,3519,0,3737,3714,3555,3557,35,3704,3696,3514,3518,0,3714,3270,3269,3555,35,3600,3604,3765,3757,0,3281,3628,3772,3282,35,3604,3605,3764,3765,0,3628,3630,3795,3772,35,3605,3606,3763,3764,0,3630,3632,3810,3795,35,3606,3607,3762,3763,0,3632,3634,3771,3810,35,3607,3608,3761,3762,0,3634,3680,3769,3771,35,3608,3609,3760,3761,0,3680,3663,3767,3769,35,3609,3610,3759,3760,0,3663,3635,3765,3767,35,3610,3601,3756,3759,0,3635,3290,3271,3765,35,3817,3819,3718,3695,0,3279,4224,3705,3286,35,3819,3820,3717,3718,0,4224,4225,3732,3705,35,3820,3821,3716,3717,0,4225,4226,3747,3732,35,3821,3822,3715,3716,0,4226,4227,3731,3747,35,3822,3823,3714,3715,0,4227,4228,3729,3731,35,3823,3824,3713,3714,0,4228,4229,3727,3729,35,3824,3825,3712,3713,0,4229,4230,3725,3727,35,3825,3818,3697,3712,0,4230,3284,3289,3725,35,4309,4311,3819,3817,0,3278,4133,4224,3279,35,4311,4312,3820,3819,0,4133,4231,4225,4224,35,4312,4313,3821,3820,0,4231,4232,4226,4225,35,4313,4314,3822,3821,0,4232,4139,4227,4226,35,4314,4315,3823,3822,0,4139,4141,4228,4227,35,4315,4316,3824,3823,0,4141,4143,4229,4228,35,4316,4317,3825,3824,0,4143,4233,4230,4229,35,4317,4310,3818,3825,0,4233,3226,3284,4230,35,3758,3773,3711,3697,0,3288,3783,3723,3289,35,3773,3774,3710,3711,0,3783,3785,3742,3723,35,3774,3775,3709,3710,0,3785,3787,3757,3742,35,3775,3776,3708,3709,0,3787,3789,3722,3757,35,3776,3777,3707,3708,0,3789,3805,3720,3722,35,3777,3778,3706,3707,0,3805,3790,3718,3720,35,3778,3779,3705,3706,0,3790,3763,3716,3718,35,3779,3756,3696,3705,0,3763,3271,3270,3716,35,4318,4320,3834,3827,0,3285,4234,4235,3283,35,4320,4321,3833,3834,0,4234,4236,4237,4235,35,4321,4322,3832,3833,0,4236,4238,4239,4237,35,4322,4323,3831,3832,0,4238,4240,4241,4239,35,4323,4324,3830,3831,0,4240,4242,4243,4241,35,4324,4325,3829,3830,0,4242,4244,4245,4243,35,4325,4326,3828,3829,0,4244,4246,4247,4245,35,4326,4319,3826,3828,0,4246,3275,3274,4247,35,3827,3834,3772,3758,0,3283,4235,3781,3288,35,3834,3833,3771,3772,0,4235,4237,3800,3781,35,3833,3832,3770,3771,0,4237,4239,3815,3800,35,3832,3831,3769,3770,0,4239,4241,3780,3815,35,3831,3830,3768,3769,0,4241,4243,3778,3780,35,3830,3829,3767,3768,0,4243,4245,3776,3778,35,3829,3828,3766,3767,0,4245,4247,3774,3776,35,3828,3826,3757,3766,0,4247,3274,3282,3774,35,3899,3906,3843,3836,1,3221,4089,4248,3493,35,3906,3905,3842,3843,1,4089,4087,4249,4248,35,3905,3904,3841,3842,1,4087,4085,4250,4249,35,3904,3903,3840,3841,1,4085,4083,4251,4250,35,3903,3902,3839,3840,1,4083,4081,4252,4251,35,3902,3901,3838,3839,1,4081,4079,4253,4252,35,3901,3900,3837,3838,1,4079,4077,4254,4253,35,3900,3898,3835,3837,1,4077,3177,3469,4254,35,3844,3846,3837,3835,1,3308,4255,4254,3469,35,3846,3847,3838,3837,1,4255,4256,4253,4254,35,3847,3848,3839,3838,1,4256,4257,4252,4253,35,3848,3849,3840,3839,1,4257,4258,4251,4252,35,3849,3850,3841,3840,1,4258,4259,4250,4251,35,3850,3851,3842,3841,1,4259,4260,4249,4250,35,3851,3852,3843,3842,1,4260,4261,4248,4249,35,3852,3845,3836,3843,1,4261,3464,3493,4248,35,3845,3852,3861,3854,1,3464,4261,4262,3444,35,3852,3851,3860,3861,1,4261,4260,4263,4262,35,3851,3850,3859,3860,1,4260,4259,4264,4263,35,3850,3849,3858,3859,1,4259,4258,4265,4264,35,3849,3848,3857,3858,1,4258,4257,4266,4265,35,3848,3847,3856,3857,1,4257,4256,4267,4266,35,3847,3846,3855,3856,1,4256,4255,4268,4267,35,3846,3844,3853,3855,1,4255,3308,3296,4268,35,3862,3864,3855,3853,1,3295,4269,4268,3296,35,3864,3865,3856,3855,1,4269,4270,4267,4268,35,3865,3866,3857,3856,1,4270,4271,4266,4267,35,3866,3867,3858,3857,1,4271,4272,4265,4266,35,3867,3868,3859,3858,1,4272,4273,4264,4265,35,3868,3869,3860,3859,1,4273,4274,4263,4264,35,3869,3870,3861,3860,1,4274,4275,4262,4263,35,3870,3863,3854,3861,1,4275,3407,3444,4262,35,3863,3870,3879,3872,1,3407,4275,4276,3393,35,3870,3869,3878,3879,1,4275,4274,4277,4276,35,3869,3868,3877,3878,1,4274,4273,4278,4277,35,3868,3867,3876,3877,1,4273,4272,4279,4278,35,3867,3866,3875,3876,1,4272,4271,4280,4279,35,3866,3865,3874,3875,1,4271,4270,4281,4280,35,3865,3864,3873,3874,1,4270,4269,4282,4281,35,3864,3862,3871,3873,1,4269,3295,3305,4282,35,3872,3879,3888,3881,1,3393,4276,4283,3375,35,3879,3878,3887,3888,1,4276,4277,4284,4283,35,3878,3877,3886,3887,1,4277,4278,4285,4284,35,3877,3876,3885,3886,1,4278,4279,4286,4285,35,3876,3875,3884,3885,1,4279,4280,4287,4286,35,3875,3874,3883,3884,1,4280,4281,4288,4287,35,3874,3873,3882,3883,1,4281,4282,4289,4288,35,3873,3871,3880,3882,1,4282,3305,3303,4289,35,3889,3891,3882,3880,1,3300,4290,4289,3303,35,3891,3892,3883,3882,1,4290,4291,4288,4289,35,3892,3893,3884,3883,1,4291,4292,4287,4288,35,3893,3894,3885,3884,1,4292,4293,4286,4287,35,3894,3895,3886,3885,1,4293,4294,4285,4286,35,3895,3896,3887,3886,1,4294,4295,4284,4285,35,3896,3897,3888,3887,1,4295,4296,4283,4284,35,3897,3890,3881,3888,1,4296,3316,3375,4283,35,3890,3897,5445,5438,1,3316,4296,4297,3317,35,3897,3896,5444,5445,1,4296,4295,4298,4297,35,3896,3895,5443,5444,1,4295,4294,4299,4298,35,3895,3894,5442,5443,1,4294,4293,4300,4299,35,3894,3893,5441,5442,1,4293,4292,4301,4300,35,3893,3892,5440,5441,1,4292,4291,4302,4301,35,3892,3891,5439,5440,1,4291,4290,4303,4302,35,3891,3889,5437,5439,1,4290,3300,3299,4303,35,3971,3978,3915,3908,1,3226,4145,4304,3519,35,3978,3977,3914,3915,1,4145,4143,4305,4304,35,3977,3976,3913,3914,1,4143,4141,4306,4305,35,3976,3975,3912,3913,1,4141,4139,4307,4306,35,3975,3974,3911,3912,1,4139,4137,4308,4307,35,3974,3973,3910,3911,1,4137,4135,4309,4308,35,3973,3972,3909,3910,1,4135,4133,4310,4309,35,3972,3970,3907,3909,1,4133,3267,3494,4310,35,3916,3918,3909,3907,1,3510,4311,4310,3494,35,3918,3919,3910,3909,1,4311,4312,4309,4310,35,3919,3920,3911,3910,1,4312,4313,4308,4309,35,3920,3921,3912,3911,1,4313,4314,4307,4308,35,3921,3922,3913,3912,1,4314,4315,4306,4307,35,3922,3923,3914,3913,1,4315,4316,4305,4306,35,3923,3924,3915,3914,1,4316,4317,4304,4305,35,3924,3917,3908,3915,1,4317,3520,3519,4304,35,3917,3924,3933,3926,1,3520,4317,4318,3521,35,3924,3923,3932,3933,1,4317,4316,4319,4318,35,3923,3922,3931,3932,1,4316,4315,4320,4319,35,3922,3921,3930,3931,1,4315,4314,4321,4320,35,3921,3920,3929,3930,1,4314,4313,4322,4321,35,3920,3919,3928,3929,1,4313,4312,4323,4322,35,3919,3918,3927,3928,1,4312,4311,4324,4323,35,3918,3916,3925,3927,1,4311,3510,3512,4324,35,3934,3936,3927,3925,1,3497,4325,4324,3512,35,3936,3937,3928,3927,1,4325,4326,4323,4324,35,3937,3938,3929,3928,1,4326,4327,4322,4323,35,3938,3939,3930,3929,1,4327,4328,4321,4322,35,3939,3940,3931,3930,1,4328,4329,4320,4321,35,3940,3941,3932,3931,1,4329,4330,4319,4320,35,3941,3942,3933,3932,1,4330,4331,4318,4319,35,3942,3935,3926,3933,1,4331,3523,3521,4318,35,3935,3942,3951,3944,1,3523,4331,4332,3524,35,3942,3941,3950,3951,1,4331,4330,4333,4332,35,3941,3940,3949,3950,1,4330,4329,4334,4333,35,3940,3939,3948,3949,1,4329,4328,4335,4334,35,3939,3938,3947,3948,1,4328,4327,4336,4335,35,3938,3937,3946,3947,1,4327,4326,4337,4336,35,3937,3936,3945,3946,1,4326,4325,4338,4337,35,3936,3934,3943,3945,1,4325,3497,3496,4338,35,3944,3951,3960,3953,1,3524,4332,4339,3514,35,3951,3950,3959,3960,1,4332,4333,4340,4339,35,3950,3949,3958,3959,1,4333,4334,4341,4340,35,3949,3948,3957,3958,1,4334,4335,4342,4341,35,3948,3947,3956,3957,1,4335,4336,4343,4342,35,3947,3946,3955,3956,1,4336,4337,4344,4343,35,3946,3945,3954,3955,1,4337,4338,4345,4344,35,3945,3943,3952,3954,1,4338,3496,3504,4345,35,3961,3963,3954,3952,1,3501,4346,4345,3504,35,3963,3964,3955,3954,1,4346,4347,4344,4345,35,3964,3965,3956,3955,1,4347,4348,4343,4344,35,3965,3966,3957,3956,1,4348,4349,4342,4343,35,3966,3967,3958,3957,1,4349,4350,4341,4342,35,3967,3968,3959,3958,1,4350,4351,4340,4341,35,3968,3969,3960,3959,1,4351,4352,4339,4340,35,3969,3962,3953,3960,1,4352,3515,3514,4339,35,3962,3969,5526,5519,1,3515,4352,4353,3516,35,3969,3968,5525,5526,1,4352,4351,4354,4353,35,3968,3967,5524,5525,1,4351,4350,4355,4354,35,3967,3966,5523,5524,1,4350,4349,4356,4355,35,3966,3965,5522,5523,1,4349,4348,4357,4356,35,3965,3964,5521,5522,1,4348,4347,4358,4357,35,3964,3963,5520,5521,1,4347,4346,4359,4358,35,3963,3961,5518,5520,1,4346,3501,3500,4359,35,4056,4058,4075,4066,0,3540,4360,3902,3547,35,4058,4059,4074,4075,0,4360,4361,3930,3902,35,4059,4060,4073,4074,0,4361,4362,3947,3930,35,4060,4061,4072,4073,0,4362,4363,3901,3947,35,4061,4062,4071,4072,0,4363,4364,3899,3901,35,4062,4063,4070,4071,1,4364,4365,3897,3899,35,4063,4064,4069,4070,1,4365,4366,3895,3897,35,4064,4057,4065,4069,1,4366,3550,3307,3895,35,4142,4144,4089,4068,1,3470,4367,3925,3309,35,4144,4145,4088,4089,1,4367,4368,3923,3925,35,4145,4146,4087,4088,1,4368,4369,3921,3923,35,4146,4147,4086,4087,0,4369,4370,3919,3921,35,4147,4148,4085,4086,0,4370,4371,3917,3919,35,4148,4149,4084,4085,0,4371,4372,3915,3917,35,4149,4150,4083,4084,0,4372,4373,3913,3915,35,4150,4143,4067,4083,0,4373,3544,3543,3913,35,4151,4153,3989,3980,0,3506,4374,3829,3507,35,4153,4154,3988,3989,0,4374,4375,3857,3829,35,4154,4155,3987,3988,0,4375,4376,3874,3857,35,4155,4156,3986,3987,0,4376,4377,3828,3874,35,4156,4157,3985,3986,0,4377,4378,3826,3828,35,4157,4158,3984,3985,1,4378,4379,3824,3826,35,4158,4159,3983,3984,1,4379,4380,3822,3824,35,4159,4152,3979,3983,1,4380,3518,3517,3822,35,4161,4168,4144,4142,1,3176,4216,4367,3470,35,4168,4167,4145,4144,1,4216,4215,4368,4367,35,4167,4166,4146,4145,1,4215,4214,4369,4368,35,4166,4165,4147,4146,0,4214,4213,4370,4369,35,4165,4164,4148,4147,0,4213,4212,4371,4370,35,4164,4163,4149,4148,0,4212,4211,4372,4371,35,4163,4162,4150,4149,0,4211,4210,4373,4372,35,4162,4160,4143,4150,0,4210,3276,3544,4373,35,4170,4177,4153,4151,0,3277,4223,4374,3506,35,4177,4176,4154,4153,0,4223,4222,4375,4374,35,4176,4175,4155,4154,0,4222,4221,4376,4375,35,4175,4174,4156,4155,0,4221,4220,4377,4376,35,4174,4173,4157,4156,0,4220,4219,4378,4377,35,4173,4172,4158,4157,1,4219,4218,4379,4378,35,4172,4171,4159,4158,1,4218,4217,4380,4379,35,4171,4169,4152,4159,1,4217,3227,3518,4380,35,4057,4064,4003,3982,1,3550,4366,3852,3522,35,4064,4063,4002,4003,1,4366,4365,3850,3852,35,4063,4062,4001,4002,1,4365,4364,3848,3850,35,4062,4061,4e3,4001,0,4364,4363,3846,3848,35,4061,4060,3999,4ee3,4650,4651,1,4712,4713,4714,4715,35,5036,5027,4653,4654,1,4716,4717,4718,4719,35,5027,5018,4652,4653,1,4717,4720,4721,4718,35,5045,5036,4654,4655,1,1779,4716,4719,1780,35,5018,5009,4651,4652,1,4720,4712,4715,4721,35,4991,4982,4648,4649,1,4722,4723,4724,4725,35,5e3,4991,4649,4650,1,4713,4722,4725,4714,35,4680,4670,5035,5044,1,1548,4516,4726,1785,35,4665,5130,5056,4669,1,4513,4727,4728,4513,35,5055,5225,4981,4990,1,4729,4708,4711,4730,34,4669,4990,4999,1,4513,4730,4731,34,5056,5055,4990,1,4728,4729,4730,34,4669,5056,4990,1,4513,4728,4730,35,4664,4669,4999,5008,1,4514,4513,4731,4732,35,4678,4664,5008,5017,1,4520,4514,4732,4733,35,4675,4678,5017,5026,1,4518,4520,4733,4734,35,4670,4675,5026,5035,1,4516,4518,4734,4726,35,4652,4651,4659,4660,1,4721,4715,4735,4736,35,4653,4652,4660,4661,1,4718,4721,4736,4737,35,4654,4653,4661,4662,1,4719,4718,4737,4738,35,4655,4654,4662,4663,1,1780,4719,4738,1799,35,4648,4879,4888,4656,1,4724,4739,4740,4741,35,4649,4648,4656,4657,1,4725,4724,4741,4742,35,4650,4649,4657,4658,1,4714,4725,4742,4743,35,4651,4650,4658,4659,1,4715,4714,4743,4735,35,5948,4626,4647,5957,0,4744,4648,4680,4745,35,5930,4584,4605,5939,0,4746,4613,4631,4747,35,4676,4666,4668,4671,1,4520,4514,4514,4520,35,4673,4676,4671,4674,1,4518,4520,4520,4518,35,5903,4521,4542,5912,0,4748,4544,4559,4749,35,4672,4673,4674,4677,1,4516,4518,4518,4516,35,4681,4672,4677,4679,1,1548,4516,4516,1548,35,5912,4542,4563,5921,0,4749,4559,4573,4750,35,4982,5527,4879,4648,1,4723,4751,4739,4724,35,5921,4563,4584,5930,0,4750,4573,4613,4746,35,5957,4647,4700,5966,0,4745,4680,4698,4752,35,5939,4605,4626,5948,0,4747,4631,4648,4744,35,4679,4677,4670,4680,1,1548,4516,4516,1548,35,4677,4674,4675,4670,1,4516,4518,4518,4516,35,4674,4671,4678,4675,1,4518,4520,4520,4518,35,4671,4668,4664,4678,1,4520,4514,4514,4520,35,4668,4665,4669,4664,1,4514,4513,4513,4514,35,5053,5131,5295,5235,0,4753,4754,4755,4756,35,4667,5141,5130,4665,1,4513,4521,4727,4513,35,5216,5717,5876,5365,0,4757,4758,4759,4760,35,5727,5226,5356,5866,0,4761,4762,4763,4764,35,5139,5216,5365,5296,0,4765,4757,4760,4766,35,4666,4667,4665,4668,1,4514,4513,4513,4514,34,4663,4662,4908,1,1799,4738,290,34,4661,4908,4662,1,4737,290,4738,34,4661,4660,4908,1,4737,4736,290,34,4660,4659,4908,1,4736,4735,290,34,4658,4908,4659,1,4743,290,4735,34,4658,4657,4908,1,4743,4742,290,34,4656,4908,4657,1,4741,290,4742,34,4656,4888,4908,1,4741,4740,290,35,5366,5875,5867,5357,0,4767,4768,4769,4770,35,5226,5054,5234,5356,0,4762,4771,4772,4763,35,5297,5366,5357,5236,0,4773,4767,4770,4774,34,5131,5140,5295,0,4754,4775,4755,35,5975,5983,4742,4721,0,3291,4776,4777,3292,35,5401,4891,4892,5392,1,4778,4779,4780,4781,35,5437,4906,4897,5428,1,3299,3302,4782,4783,35,5428,4897,4898,5419,1,4783,4782,4784,4785,35,5410,4901,4891,5401,1,4786,4787,4779,4778,34,5392,5625,5383,1,4781,4788,4789,34,4892,5622,5625,1,4780,4790,4788,34,5392,4892,5625,1,4781,4780,4788,35,4705,4726,4725,4704,0,3310,4791,4792,3311,35,5974,5438,5429,5984,1,3314,3317,4793,4794,35,4712,4733,4732,4711,0,3318,4795,4796,3319,35,4702,4723,4722,4701,0,3322,4797,4798,3323,35,4719,4740,4739,4718,0,3326,4799,4800,3327,35,4709,4730,4729,4708,0,3330,4801,4802,3331,35,4716,4737,4736,4715,0,3334,4803,4804,3335,35,5419,4898,4901,5410,1,4785,4784,4787,4786,35,4706,4727,4726,4705,0,3338,4805,4791,3310,35,4713,4734,4733,4712,0,3340,4806,4795,3318,35,4703,4724,4723,4702,0,3342,4807,4797,3322,35,4720,4741,4740,4719,0,3344,4808,4799,3326,35,4710,4731,4730,4709,0,3346,4809,4801,3330,35,4717,4738,4737,4716,0,3348,4810,4803,3334,35,4707,4728,4727,4706,0,3350,4811,4805,3338,35,4714,4735,4734,4713,0,3352,4812,4806,3340,35,4704,4725,4724,4703,0,3311,4792,4807,3342,35,4721,4742,4741,4720,0,3292,4777,4808,3344,35,4711,4732,4731,4710,0,3319,4796,4809,3346,35,4718,4739,4738,4717,0,3327,4800,4810,3348,35,4708,4729,4728,4707,0,3331,4802,4811,3350,35,4715,4736,4735,4714,0,3335,4804,4812,3352,35,4727,4748,4747,4726,0,4805,4813,4814,4791,35,4734,4755,4754,4733,0,4806,4815,4816,4795,35,4724,4745,4744,4723,0,4807,4817,4818,4797,35,4741,4762,4761,4740,0,4808,4819,4820,4799,35,4731,4752,4751,4730,0,4809,4821,4822,4801,35,4738,4759,4758,4737,0,4810,4823,4824,4803,35,4728,4749,4748,4727,0,4811,4825,4813,4805,35,4735,4756,4755,4734,0,4812,4826,4815,4806,35,4742,4763,4762,4741,0,4777,4827,4819,4808,35,4725,4746,4745,4724,0,4792,4828,4817,4807,35,4732,4753,4752,4731,0,4796,4829,4821,4809,35,4739,4760,4759,4738,0,4800,4830,4823,4810,35,4729,4750,4749,4728,0,4802,4831,4825,4811,35,4736,4757,4756,4735,0,4804,4832,4826,4812,35,4726,4747,4746,4725,0,4791,4814,4828,4792,35,5984,5429,5420,5993,1,4794,4793,4833,4834,35,4733,4754,4753,4732,0,4795,4816,4829,4796,35,4723,4744,4743,4722,0,4797,4818,4835,4798,35,4740,4761,4760,4739,0,4799,4820,4830,4800,35,4730,4751,4750,4729,0,4801,4822,4831,4802,35,4737,4758,4757,4736,0,4803,4824,4832,4804,35,4749,4770,4769,4748,0,4825,4836,4837,4813,35,4756,4777,4776,4755,0,4826,4838,4839,4815,35,4763,4784,4783,4762,0,4827,4840,4841,4819,35,4746,4767,4766,4745,0,4828,4842,4843,4817,35,4753,4774,4773,4752,0,4829,4844,4845,4821,35,4760,4781,4780,4759,0,4830,4846,4847,4823,35,4750,4771,4770,4749,0,4831,4848,4836,4825,35,4757,4778,4777,4756,0,4832,4849,4838,4826,35,4747,4768,4767,4746,0,4814,4850,4842,4828,35,5993,5420,5411,6002,1,4834,4833,4851,4852,35,4754,4775,4774,4753,0,4816,4853,4844,4829,35,4761,4782,4781,4760,0,4820,4854,4846,4830,35,4744,4765,4764,4743,0,4818,4855,4856,4835,35,4751,4772,4771,4750,0,4822,4857,4848,4831,35,4758,4779,4778,4757,0,4824,4858,4849,4832,35,4748,4769,4768,4747,0,4813,4837,4850,4814,35,4755,4776,4775,4754,0,4815,4839,4853,4816,35,4745,4766,4765,4744,0,4817,4843,4855,4818,35,4762,4783,4782,4761,0,4819,4841,4854,4820,35,4752,4773,4772,4751,0,4821,4845,4857,4822,35,4759,4780,4779,4758,0,4823,4847,4858,4824,35,4771,4792,4791,4770,0,4848,4859,4860,4836,35,4778,4799,4798,4777,0,4849,4861,4862,4838,35,4768,4789,4788,4767,0,4850,4863,4864,4842,35,6002,5411,5402,6011,1,4852,4851,4865,4866,35,4775,4796,4795,4774,0,4853,4867,4868,4844,35,4782,4803,4802,4781,0,4854,4869,4870,4846,35,4765,4786,4785,4764,0,4855,4871,4872,4856,35,4772,4793,4792,4771,0,4857,4873,4859,4848,35,4779,4800,4799,4778,0,4858,4874,4861,4849,35,4769,4790,4789,4768,0,4837,4875,4863,4850,35,4776,4797,4796,4775,0,4839,4876,4867,4853,35,4766,4787,4786,4765,0,4843,4877,4871,4855,35,4783,4804,4803,4782,0,4841,4878,4869,4854,35,4773,4794,4793,4772,0,4845,4879,4873,4857,35,4780,4801,4800,4779,0,4847,4880,4874,4858,35,4770,4791,4790,4769,0,4836,4860,4875,4837,35,4777,4798,4797,4776,0,4838,4862,4876,4839,35,4784,4805,4804,4783,0,4840,4881,4878,4841,35,4767,4788,4787,4766,0,4842,4864,4877,4843,35,4774,4795,4794,4773,0,4844,4868,4879,4845,35,4781,4802,4801,4780,0,4846,4870,4880,4847,35,4793,4814,4813,4792,0,4873,4882,4883,4859,35,4800,4821,4820,4799,0,4874,4884,4885,4861,35,4790,4811,4810,4789,0,4875,4886,4887,4863,35,4797,4818,4817,4796,0,4876,4888,4889,4867,35,4787,4808,4807,4786,0,4877,4890,4891,4871,35,4804,4825,4824,4803,0,4878,4892,4893,4869,35,4794,4815,4814,4793,0,4879,4894,4882,4873,35,4801,4822,4821,4800,0,4880,4895,4884,4874,35,4791,4812,4811,4790,0,4860,4896,4886,4875,35,4798,4819,4818,4797,0,4862,4897,4888,4876,35,4788,4809,4808,4787,0,4864,4898,4890,4877,35,4805,4826,4825,4804,0,4881,4899,4892,4878,35,4795,4816,4815,4794,0,4868,4900,4894,4879,35,4802,4823,4822,4801,0,4870,4901,4895,4880,35,4792,4813,4812,4791,0,4859,4883,4896,4860,35,4799,4820,4819,4798,0,4861,4885,4897,4862,35,4789,4810,4809,4788,0,4863,4887,4898,4864,35,6011,5402,5393,6020,1,4866,4865,4902,4903,35,4796,4817,4816,4795,0,4867,4889,4900,4868,35,4803,4824,4823,4802,0,4869,4893,4901,4870,35,4786,4807,4806,4785,0,4871,4891,4904,4872,35,4815,4836,4835,4814,0,4894,4905,4906,4882,35,4822,4843,4842,4821,0,4895,4907,4908,4884,35,4812,4833,4832,4811,0,4896,4909,4910,4886,35,4819,4840,4839,4818,0,4897,4911,4912,4888,35,4809,4830,4829,4808,0,4898,4913,4914,4890,35,4826,4847,4846,4825,0,4899,4915,4916,4892,35,4816,4837,4836,4815,0,4900,4917,4905,4894,35,4823,4844,4843,4822,0,4901,4918,4907,4895,35,4813,4834,4833,4812,0,4883,4919,4909,4896,35,4820,4841,4840,4819,0,4885,4920,4911,4897,35,4810,4831,4830,4809,0,4887,4921,4913,4898,35,6020,5393,5384,6029,1,4903,4902,4922,4923,35,4817,4838,4837,4816,0,4889,4924,4917,4900,35,4807,4828,4827,4806,0,4891,4925,4926,4904,35,4824,4845,4844,4823,0,4893,4927,4918,4901,35,4814,4835,4834,4813,0,4882,4906,4919,4883,35,4821,4842,4841,4820,0,4884,4908,4920,4885,35,4811,4832,4831,4810,0,4886,4910,4921,4887,35,5383,5625,5699,5374,1,4789,4788,4928,4929,35,4818,4839,4838,4817,0,4888,4912,4924,4889,35,4808,4829,4828,4807,0,4890,4914,4925,4891,35,4825,4846,4845,4824,0,4892,4916,4927,4893,35,4845,4866,4865,4844,0,4927,4930,4931,4918,35,4828,4849,4848,4827,0,4925,4932,4933,4926,35,4835,4856,4855,4834,0,4906,4934,4935,4919,35,4842,4863,4862,4841,0,4908,4936,4937,4920,35,4832,4853,4852,4831,0,4910,4938,4939,4921,35,4839,4860,4859,4838,0,4912,4940,4941,4924,35,4829,4850,4849,4828,0,4914,4942,4932,4925,35,4846,4867,4866,4845,0,4916,4943,4930,4927,35,4836,4857,4856,4835,0,4905,4944,4934,4906,35,4843,4864,4863,4842,0,4907,4945,4936,4908,35,4833,4854,4853,4832,0,4909,4946,4938,4910,35,4840,4861,4860,4839,0,4911,4947,4940,4912,35,4847,4868,4867,4846,0,4915,4948,4943,4916,35,4830,4851,4850,4829,0,4913,4949,4942,4914,35,4837,4858,4857,4836,0,4917,4950,4944,4905,35,4844,4865,4864,4843,0,4918,4931,4945,4907,35,4834,4855,4854,4833,0,4919,4935,4946,4909,35,4841,4862,4861,4840,0,4920,4937,4947,4911,35,4831,4852,4851,4830,0,4921,4939,4949,4913,35,6029,5384,5375,6038,1,4923,4922,4951,4952,35,4838,4859,4858,4837,0,4924,4941,4950,4917,34,4701,4722,4907,0,3323,4798,203,34,4722,4743,4907,0,4798,4835,203,34,4743,4764,4907,0,4835,4856,203,34,4764,4785,4907,0,4856,4872,203,34,4785,4806,4907,0,4872,4904,203,34,4806,4827,4907,0,4904,4926,203,34,4827,4848,4907,0,4926,4933,203,35,4850,4683,4682,4849,0,4942,4686,4685,4932,35,4867,4699,4698,4866,0,4943,4688,4687,4930,35,4857,4689,4688,4856,0,4944,4690,4689,4934,35,4864,4696,4695,4863,0,4945,4692,4691,4936,35,4854,4686,4870,4853,0,4946,4694,4693,4938,35,4861,4693,4692,4860,0,4947,4696,4695,4940,35,4851,4684,4683,4850,0,4949,4697,4686,4942,35,4868,4700,4699,4867,0,4948,4698,4688,4943,35,4858,4690,4689,4857,0,4950,4699,4690,4944,34,4848,4869,4907,0,4933,4700,203,35,4865,4697,4696,4864,0,4931,4701,4692,4945,35,4855,4687,4686,4854,0,4935,4702,4694,4946,35,4862,4694,4693,4861,0,4937,4703,4696,4947,35,4852,4685,4684,4851,0,4939,4704,4697,4949,35,6038,5375,5447,5965,1,4952,4951,4706,4705,35,4859,4691,4690,4858,0,4941,4707,4699,4950,35,4866,4698,4697,4865,0,4930,4687,4701,4931,35,4849,4682,4869,4848,0,4932,4685,4700,4933,35,4856,4688,4687,4855,0,4934,4689,4702,4935,35,4863,4695,4694,4862,0,4936,4691,4703,4937,35,4853,4870,4685,4852,0,4938,4693,4704,4939,35,4860,4692,4691,4859,0,4940,4695,4707,4941,35,5455,4871,4879,5527,1,4953,4954,4739,4751,35,5491,4875,4874,5482,1,4955,4956,4957,4958,35,5518,4878,4877,5509,1,3500,3503,4959,4960,35,5509,4877,4876,5500,1,4960,4959,4961,4962,35,5708,5858,5737,5537,0,4963,4964,4965,4966,35,5500,4876,4875,5491,1,4962,4961,4956,4955,35,5464,4872,4871,5455,1,4967,4968,4954,4953,35,5482,4874,4873,5473,1,4958,4957,4969,4970,35,4895,5510,5501,4900,1,4782,4971,4972,4784,35,4905,5519,5510,4895,1,3302,3516,4971,4782,35,5473,4873,4872,5464,1,4970,4969,4968,4967,35,5536,5465,5456,5709,1,4973,4974,4975,4976,34,4894,5536,5539,1,4780,4973,4977,34,5474,5465,5536,1,4978,4974,4973,34,4894,5474,5536,1,4780,4978,4973,35,4889,5483,5474,4894,1,4779,4979,4978,4780,35,4903,5492,5483,4889,1,4787,4980,4979,4779,35,4900,5501,5492,4903,1,4784,4972,4980,4787,35,4875,4884,4883,4874,1,4956,4981,4982,4957,35,4876,4885,4884,4875,1,4961,4983,4981,4956,35,4877,4886,4885,4876,1,4959,4984,4983,4961,35,4878,4887,4886,4877,1,3503,3529,4984,4959,35,4871,4880,4888,4879,1,4954,4985,4740,4739,35,4872,4881,4880,4871,1,4968,4986,4985,4954,35,4873,4882,4881,4872,1,4969,4987,4986,4968,35,4874,4883,4882,4873,1,4957,4982,4987,4969,35,5374,5699,5718,5446,1,4929,4928,4661,4660,35,6010,6019,4826,4805,0,4988,4989,4899,4881,35,4901,4896,4893,4891,1,4787,4787,4779,4779,35,4898,4899,4896,4901,1,4784,4784,4787,4787,35,5983,5992,4763,4742,0,4776,4990,4827,4777,35,4897,4902,4899,4898,1,4782,4782,4784,4784,35,4906,4904,4902,4897,1,3302,3302,4782,4782,35,5992,6001,4784,4763,0,4990,4991,4840,4827,35,5709,5456,5528,5726,1,4976,4975,4710,4709,35,6001,6010,4805,4784,0,4991,4988,4881,4840,35,6028,6037,4868,4847,0,4992,4993,4948,4915,35,6019,6028,4847,4826,0,4989,4992,4915,4899,35,4904,4905,4895,4902,1,3302,3302,4782,4782,35,4902,4895,4900,4899,1,4782,4782,4784,4784,35,4899,4900,4903,4896,1,4784,4784,4787,4787,35,4896,4903,4889,4893,1,4787,4787,4779,4779,35,4893,4889,4894,4890,1,4779,4779,4780,4780,35,5538,5736,5798,5613,0,4994,4995,4996,4997,35,5624,5797,5885,5700,0,4998,4999,5e3,5001,35,5700,5885,5876,5717,0,5001,5e3,4759,4758,35,5727,5866,5858,5708,0,4761,4764,4964,4963,34,5613,5798,5623,0,4997,4996,5002,35,4891,4893,4890,4892,1,4779,4779,4780,4780,34,4887,4908,4886,1,3529,290,4984,34,4885,4886,4908,1,4983,4984,290,34,4885,4908,4884,1,4983,290,4981,34,4884,4908,4883,1,4981,290,4982,34,4882,4883,4908,1,4987,4982,290,34,4882,4908,4881,1,4987,290,4986,34,4880,4881,4908,1,4985,4986,290,34,4880,4908,4888,1,4985,290,4740,35,5884,5857,5867,5875,0,5003,5004,4769,4768,35,4892,4890,5614,5622,1,4780,4780,5005,4790,35,5796,5735,5857,5884,0,5006,5007,5004,5003,35,4890,4894,5539,5614,1,4780,4780,4977,5005,35,5053,5057,5078,5077,0,4753,5008,5009,5010,35,5057,5058,5079,5078,0,5008,5011,5012,5009,35,5058,5059,5080,5079,0,5011,5013,5014,5012,35,5059,5060,5114,5080,0,5013,5015,5016,5014,35,5054,5064,5096,5063,0,4771,5017,5018,5019,35,5064,5065,5097,5096,0,5017,5020,5021,5018,35,5065,5066,5098,5097,0,5020,5022,5023,5021,35,5066,5067,5117,5098,0,5022,5024,5025,5023,35,5067,5068,5105,5117,0,5024,5026,5027,5025,35,5068,5069,5106,5105,1,5026,5028,5029,5027,35,5069,5070,5107,5106,1,5028,5030,5031,5029,34,5070,5055,5107,1,5030,4729,5031,34,5056,5071,5087,1,4728,5032,5033,35,5071,5072,5088,5087,1,5032,5034,5035,5033,35,5072,5073,5089,5088,1,5034,5036,5037,5035,35,5073,5074,5123,5089,0,5036,5038,5039,5037,35,5077,5078,5081,5076,0,5010,5009,5040,5041,35,5078,5079,5082,5081,0,5009,5012,5042,5040,35,5079,5080,5083,5082,0,5012,5014,5043,5042,35,5080,5114,5115,5083,0,5014,5016,5044,5043,35,5063,5096,5099,5062,0,5019,5018,5045,5046,35,5096,5097,5100,5099,0,5018,5021,5047,5045,35,5097,5098,5101,5100,0,5021,5023,5048,5047,35,5098,5117,5119,5101,0,5023,5025,5049,5048,35,5117,5105,5108,5119,0,5025,5027,5050,5049,35,5105,5106,5109,5108,1,5027,5029,5051,5050,35,5106,5107,5110,5109,1,5029,5031,5052,5051,34,5107,5055,5110,1,5031,4729,5052,34,5056,5087,5090,1,4728,5033,5053,35,5087,5088,5091,5090,1,5033,5035,5054,5053,35,5088,5089,5092,5091,1,5035,5037,5055,5054,35,5089,5123,5125,5092,0,5037,5039,5056,5055,35,5076,5081,5084,5075,0,5041,5040,5057,5058,35,5081,5082,5085,5084,0,5040,5042,5059,5057,35,5082,5083,5086,5085,0,5042,5043,5060,5059,35,5083,5115,5116,5086,0,5043,5044,5061,5060,35,5062,5099,5102,5061,0,5046,5045,5062,5063,35,5099,5100,5103,5102,0,5045,5047,5064,5062,35,5100,5101,5104,5103,0,5047,5048,5065,5064,35,5101,5119,5121,5104,0,5048,5049,5066,5065,35,5119,5108,5111,5121,0,5049,5050,5067,5066,35,5108,5109,5112,5111,1,5050,5051,5068,5067,35,5109,5110,5113,5112,1,5051,5052,5069,5068,34,5110,5055,5113,1,5052,4729,5069,34,5056,5090,5093,1,4728,5053,5070,35,5090,5091,5094,5093,1,5053,5054,5071,5070,35,5091,5092,5095,5094,1,5054,5055,5072,5071,35,5092,5125,5127,5095,0,5055,5056,5073,5072,35,5075,5084,5123,5074,0,5058,5057,5039,5038,35,5084,5085,5125,5123,0,5057,5059,5056,5039,35,5085,5086,5127,5125,0,5059,5060,5073,5056,35,5086,5116,5129,5127,0,5060,5061,5074,5073,35,5061,5102,5114,5060,0,5063,5062,5016,5015,35,5102,5103,5115,5114,0,5062,5064,5044,5016,35,5103,5104,5116,5115,0,5064,5065,5061,5044,35,5104,5121,5129,5116,0,5065,5066,5074,5061,35,5121,5111,5122,5129,0,5066,5067,5075,5074,35,5111,5112,5120,5122,1,5067,5068,5076,5075,35,5112,5113,5118,5120,1,5068,5069,5077,5076,34,5113,5055,5118,1,5069,4729,5077,34,5056,5093,5124,1,4728,5070,5078,35,5093,5094,5126,5124,1,5070,5071,5079,5078,35,5094,5095,5128,5126,1,5071,5072,5080,5079,35,5095,5127,5129,5128,0,5072,5073,5074,5080,34,5129,5122,5128,0,5074,5075,5080,35,5139,5143,5164,5163,0,4765,5081,5082,5083,35,5143,5144,5165,5164,0,5081,5084,5085,5082,35,5144,5145,5166,5165,0,5084,5086,5087,5085,35,5145,5146,5200,5166,0,5086,5088,5089,5087,35,5140,5150,5182,5149,0,4775,5090,5091,5092,35,5150,5151,5183,5182,0,5090,5093,5094,5091,35,5151,5152,5184,5183,0,5093,5095,5096,5094,35,5152,5153,5203,5184,0,5095,5097,5098,5096,35,5153,5154,5191,5203,0,5097,5099,5100,5098,35,5154,5155,5192,5191,1,5099,5101,5102,5100,35,5155,5156,5193,5192,1,5101,5103,5104,5102,34,5156,5141,5193,1,5103,4521,5104,34,5142,5157,5173,1,4510,5105,5106,35,5157,5158,5174,5173,1,5105,5107,5108,5106,35,5158,5159,5175,5174,1,5107,5109,5110,5108,35,5159,5160,5209,5175,0,5109,5111,5112,5110,35,5163,5164,5167,5162,0,5083,5082,5113,5114,35,5164,5165,5168,5167,0,5082,5085,5115,5113,35,5165,5166,5169,5168,0,5085,5087,5116,5115,35,5166,5200,5201,5169,0,5087,5089,5117,5116,35,5149,5182,5185,5148,0,5092,5091,5118,5119,35,5182,5183,5186,5185,0,5091,5094,5120,5118,35,5183,5184,5187,5186,0,5094,5096,5121,5120,35,5184,5203,5205,5187,0,5096,5098,5122,5121,35,5203,5191,5194,5205,0,5098,5100,5123,5122,35,5191,5192,5195,5194,1,5100,5102,5124,5123,35,5192,5193,5196,5195,1,5102,5104,5125,5124,34,5193,5141,5196,1,5104,4521,5125,34,5142,5173,5176,1,4510,5106,5126,35,5173,5174,5177,5176,1,5106,5108,5127,5126,35,5174,5175,5178,5177,1,5108,5110,5128,5127,35,5175,5209,5211,5178,0,5110,5112,5129,5128,35,5162,5167,5170,5161,0,5114,5113,5130,5131,35,5167,5168,5171,5170,0,5113,5115,5132,5130,35,5168,5169,5172,5171,0,5115,5116,5133,5132,35,5169,5201,5202,5172,0,5116,5117,5134,5133,35,5148,5185,5188,5147,0,5119,5118,5135,5136,35,5185,5186,5189,5188,0,5118,5120,5137,5135,35,5186,5187,5190,5189,0,5120,5121,5138,5137,35,5187,5205,5207,5190,0,5121,5122,5139,5138,35,5205,5194,5197,5207,0,5122,5123,5140,5139,35,5194,5195,5198,5197,1,5123,5124,5141,5140,35,5195,5196,5199,5198,1,5124,5125,5142,5141,34,5196,5141,5199,1,5125,4521,5142,34,5142,5176,5179,1,4510,5126,5143,35,5176,5177,5180,5179,1,5126,5127,5144,5143,35,5177,5178,5181,5180,1,5127,5128,5145,5144,35,5178,5211,5213,5181,0,5128,5129,5146,5145,35,5161,5170,5209,5160,0,5131,5130,5112,5111,35,5170,5171,5211,5209,0,5130,5132,5129,5112,35,5171,5172,5213,5211,0,5132,5133,5146,5129,35,5172,5202,5215,5213,0,5133,5134,5147,5146,35,5147,5188,5200,5146,0,5136,5135,5089,5088,35,5188,5189,5201,5200,0,5135,5137,5117,5089,35,5189,5190,5202,5201,0,5137,5138,5134,5117,35,5190,5207,5215,5202,0,5138,5139,5147,5134,35,5207,5197,5208,5215,0,5139,5140,5148,5147,35,5197,5198,5206,5208,1,5140,5141,5149,5148,35,5198,5199,5204,5206,1,5141,5142,5150,5149,34,5199,5141,5204,1,5142,4521,5150,34,5142,5179,5210,1,4510,5143,5151,35,5179,5180,5212,5210,1,5143,5144,5152,5151,35,5180,5181,5214,5212,1,5144,5145,5153,5152,35,5181,5213,5215,5214,0,5145,5146,5147,5153,34,5684,5625,5622,1,5154,4788,4790,34,5688,5697,5695,1,5155,5156,5157,34,5684,5693,5625,1,5154,5158,4788,34,5688,5695,5693,1,5155,5157,5158,34,5684,5686,5693,1,5154,5159,5158,34,5686,5688,5693,1,5159,5155,5158,35,5234,5237,5258,5257,0,4772,5160,5161,5162,35,5237,5238,5259,5258,0,5160,5163,5164,5161,35,5238,5239,5260,5259,0,5163,5165,5166,5164,35,5239,5240,5285,5260,0,5165,5167,5168,5166,35,5235,5244,5267,5243,0,4756,5169,5170,5171,35,5244,5245,5268,5267,0,5169,5172,5173,5170,35,5245,5246,5269,5268,0,5172,5174,5175,5173,35,5246,5247,5288,5269,0,5174,5176,5177,5175,35,5236,5251,5276,5250,0,4774,5178,5179,5180,35,5251,5252,5277,5276,0,5178,5181,5182,5179,35,5252,5253,5278,5277,0,5181,5183,5184,5182,35,5253,5254,5291,5278,0,5183,5185,5186,5184,35,5257,5258,5261,5256,0,5162,5161,5187,5188,35,5258,5259,5262,5261,0,5161,5164,5189,5187,35,5259,5260,5263,5262,0,5164,5166,5190,5189,35,5260,5285,5286,5263,0,5166,5168,5191,5190,35,5243,5267,5270,5242,0,5171,5170,5192,5193,35,5267,5268,5271,5270,0,5170,5173,5194,5192,35,5268,5269,5272,5271,0,5173,5175,5195,5194,35,5269,5288,5289,5272,0,5175,5177,5196,5195,35,5250,5276,5279,5249,0,5180,5179,5197,5198,35,5276,5277,5280,5279,0,5179,5182,5199,5197,35,5277,5278,5281,5280,0,5182,5184,5200,5199,35,5278,5291,5292,5281,0,5184,5186,5201,5200,35,5256,5261,5264,5255,0,5188,5187,5202,5203,35,5261,5262,5265,5264,0,5187,5189,5204,5202,35,5262,5263,5266,5265,0,5189,5190,5205,5204,35,5263,5286,5287,5266,0,5190,5191,5206,5205,35,5242,5270,5273,5241,0,5193,5192,5207,5208,35,5270,5271,5274,5273,0,5192,5194,5209,5207,35,5271,5272,5275,5274,0,5194,5195,5210,5209,35,5272,5289,5290,5275,0,5195,5196,5211,5210,35,5249,5279,5282,5248,0,5198,5197,5212,5213,35,5279,5280,5283,5282,0,5197,5199,5214,5212,35,5280,5281,5284,5283,0,5199,5200,5215,5214,35,5281,5292,5293,5284,0,5200,5201,5216,5215,35,5255,5264,5291,5254,0,5203,5202,5186,5185,35,5264,5265,5292,5291,0,5202,5204,5201,5186,35,5265,5266,5293,5292,0,5204,5205,5216,5201,35,5266,5287,5294,5293,0,5205,5206,5217,5216,35,5241,5273,5285,5240,0,5208,5207,5168,5167,35,5273,5274,5286,5285,0,5207,5209,5191,5168,35,5274,5275,5287,5286,0,5209,5210,5206,5191,35,5275,5290,5294,5287,0,5210,5211,5217,5206,35,5248,5282,5288,5247,0,5213,5212,5177,5176,35,5282,5283,5289,5288,0,5212,5214,5196,5177,35,5283,5284,5290,5289,0,5214,5215,5211,5196,35,5284,5293,5294,5290,0,5215,5216,5217,5211,35,5295,5298,5319,5318,0,4755,5218,5219,5220,35,5298,5299,5320,5319,0,5218,5221,5222,5219,35,5299,5300,5321,5320,0,5221,5223,5224,5222,35,5300,5301,5346,5321,0,5223,5225,5226,5224,35,5296,5305,5328,5304,0,4766,5227,5228,5229,35,5305,5306,5329,5328,0,5227,5230,5231,5228,35,5306,5307,5330,5329,0,5230,5232,5233,5231,35,5307,5308,5349,5330,0,5232,5234,5235,5233,35,5297,5312,5337,5311,0,4773,5236,5237,5238,35,5312,5313,5338,5337,0,5236,5239,5240,5237,35,5313,5314,5339,5338,0,5239,5241,5242,5240,35,5314,5315,5352,5339,0,5241,5243,5244,5242,35,5318,5319,5322,5317,0,5220,5219,5245,5246,35,5319,5320,5323,5322,0,5219,5222,5247,5245,35,5320,5321,5324,5323,0,5222,5224,5248,5247,35,5321,5346,5347,5324,0,5224,5226,5249,5248,35,5304,5328,5331,5303,0,5229,5228,5250,5251,35,5328,5329,5332,5331,0,5228,5231,5252,5250,35,5329,5330,5333,5332,0,5231,5233,5253,5252,35,5330,5349,5350,5333,0,5233,5235,5254,5253,35,5311,5337,5340,5310,0,5238,5237,5255,5256,35,5337,5338,5341,5340,0,5237,5240,5257,5255,35,5338,5339,5342,5341,0,5240,5242,5258,5257,35,5339,5352,5353,5342,0,5242,5244,5259,5258,35,5317,5322,5325,5316,0,5246,5245,5260,5261,35,5322,5323,5326,5325,0,5245,5247,5262,5260,35,5323,5324,5327,5326,0,5247,5248,5263,5262,35,5324,5347,5348,5327,0,5248,5249,5264,5263,35,5303,5331,5334,5302,0,5251,5250,5265,5266,35,5331,5332,5335,5334,0,5250,5252,5267,5265,35,5332,5333,5336,5335,0,5252,5253,5268,5267,35,5333,5350,5351,5336,0,5253,5254,5269,5268,35,5310,5340,5343,5309,0,5256,5255,5270,5271,35,5340,5341,5344,5343,0,5255,5257,5272,5270,35,5341,5342,5345,5344,0,5257,5258,5273,5272,35,5342,5353,5354,5345,0,5258,5259,5274,5273,35,5316,5325,5352,5315,0,5261,5260,5244,5243,35,5325,5326,5353,5352,0,5260,5262,5259,5244,35,5326,5327,5354,5353,0,5262,5263,5274,5259,35,5327,5348,5355,5354,0,5263,5264,5275,5274,35,5302,5334,5346,5301,0,5266,5265,5226,5225,35,5334,5335,5347,5346,0,5265,5267,5249,5226,35,5335,5336,5348,5347,0,5267,5268,5264,5249,35,5336,5351,5355,5348,0,5268,5269,5275,5264,35,5309,5343,5349,5308,0,5271,5270,5235,5234,35,5343,5344,5350,5349,0,5270,5272,5254,5235,35,5344,5345,5351,5350,0,5272,5273,5269,5254,35,5345,5354,5355,5351,0,5273,5274,5275,5269,34,5536,5540,5570,1,4973,5276,5277,35,5540,5541,5571,5570,1,5276,5278,5279,5277,35,5541,5542,5572,5571,1,5278,5280,5281,5279,35,5542,5543,5597,5572,0,5280,5282,5283,5281,35,5537,5547,5561,5546,0,4966,5284,5285,5286,35,5547,5548,5562,5561,0,5284,5287,5288,5285,35,5548,5549,5563,5562,0,5287,5289,5290,5288,35,5549,5550,5603,5563,0,5289,5291,5292,5290,35,5538,5554,5579,5553,0,4994,5293,5294,5295,35,5554,5555,5580,5579,0,5293,5296,5297,5294,35,5555,5556,5581,5580,0,5296,5298,5299,5297,35,5556,5557,5606,5581,0,5298,5300,5301,5299,35,5557,5558,5588,5606,0,5300,5302,5303,5301,35,5558,5559,5589,5588,1,5302,5304,5305,5303,35,5559,5560,5590,5589,1,5304,5306,5307,5305,34,5560,5539,5590,1,5306,4977,5307,34,5536,5570,5573,1,4973,5277,5308,35,5570,5571,5574,5573,1,5277,5279,5309,5308,35,5571,5572,5575,5574,1,5279,5281,5310,5309,35,5572,5597,5599,5575,0,5281,5283,5311,5310,35,5546,5561,5564,5545,0,5286,5285,5312,5313,35,5561,5562,5565,5564,0,5285,5288,5314,5312,35,5562,5563,5566,5565,0,5288,5290,5315,5314,35,5563,5603,5604,5566,0,5290,5292,5316,5315,35,5553,5579,5582,5552,0,5295,5294,5317,5318,35,5579,5580,5583,5582,0,5294,5297,5319,5317,35,5580,5581,5584,5583,0,5297,5299,5320,5319,35,5581,5606,5608,5584,0,5299,5301,5321,5320,35,5606,5588,5591,5608,0,5301,5303,5322,5321,35,5588,5589,5592,5591,1,5303,5305,5323,5322,35,5589,5590,5593,5592,1,5305,5307,5324,5323,34,5590,5539,5593,1,5307,4977,5324,34,5536,5573,5576,1,4973,5308,5325,35,5573,5574,5577,5576,1,5308,5309,5326,5325,35,5574,5575,5578,5577,1,5309,5310,5327,5326,35,5575,5599,5601,5578,0,5310,5311,5328,5327,35,5545,5564,5567,5544,0,5313,5312,5329,5330,35,5564,5565,5568,5567,0,5312,5314,5331,5329,35,5565,5566,5569,5568,0,5314,5315,5332,5331,35,5566,5604,5605,5569,0,5315,5316,5333,5332,35,5552,5582,5585,5551,0,5318,5317,5334,5335,35,5582,5583,5586,5585,0,5317,5319,5336,5334,35,5583,5584,5587,5586,0,5319,5320,5337,5336,35,5584,5608,5610,5587,0,5320,5321,5338,5337,35,5608,5591,5594,5610,0,5321,5322,5339,5338,35,5591,5592,5595,5594,1,5322,5323,5340,5339,35,5592,5593,5596,5595,1,5323,5324,5341,5340,34,5593,5539,5596,1,5324,4977,5341,34,5536,5576,5598,1,4973,5325,5342,35,5576,5577,5600,5598,1,5325,5326,5343,5342,35,5577,5578,5602,5600,1,5326,5327,5344,5343,35,5578,5601,5612,5602,0,5327,5328,5345,5344,35,5544,5567,5597,5543,0,5330,5329,5283,5282,35,5567,5568,5599,5597,0,5329,5331,5311,5283,35,5568,5569,5601,5599,0,5331,5332,5328,5311,35,5569,5605,5612,5601,0,5332,5333,5345,5328,35,5551,5585,5603,5550,0,5335,5334,5292,5291,35,5585,5586,5604,5603,0,5334,5336,5316,5292,35,5586,5587,5605,5604,0,5336,5337,5333,5316,35,5587,5610,5612,5605,0,5337,5338,5345,5333,35,5610,5594,5611,5612,0,5338,5339,5346,5345,35,5594,5595,5609,5611,1,5339,5340,5347,5346,35,5595,5596,5607,5609,1,5340,5341,5348,5347,34,5596,5539,5607,1,5341,4977,5348,34,5612,5611,5602,0,5345,5346,5344,34,5622,5626,5656,1,4790,5349,5350,35,5626,5627,5657,5656,1,5349,5351,5352,5350,35,5627,5628,5658,5657,1,5351,5353,5354,5352,35,5628,5629,5683,5658,0,5353,5355,5356,5354,35,5623,5633,5647,5632,0,5002,5357,5358,5359,35,5633,5634,5648,5647,0,5357,5360,5361,5358,35,5634,5635,5649,5648,0,5360,5362,5363,5361,35,5635,5636,5689,5649,0,5362,5364,5365,5363,35,5624,5640,5665,5639,0,4998,5366,5367,5368,35,5640,5641,5666,5665,0,5366,5369,5370,5367,35,5641,5642,5667,5666,0,5369,5371,5372,5370,35,5642,5643,5692,5667,0,5371,5373,5374,5372,35,5643,5644,5674,5692,0,5373,5375,5376,5374,35,5644,5645,5675,5674,1,5375,5377,5378,5376,35,5645,5646,5676,5675,1,5377,5379,5380,5378,34,5646,5625,5676,1,5379,4788,5380,34,5622,5656,5659,1,4790,5350,5381,35,5656,5657,5660,5659,1,5350,5352,5382,5381,35,5657,5658,5661,5660,1,5352,5354,5383,5382,35,5658,5683,5685,5661,0,5354,5356,5384,5383,35,5632,5647,5650,5631,0,5359,5358,5385,5386,35,5647,5648,5651,5650,0,5358,5361,5387,5385,35,5648,5649,5652,5651,0,5361,5363,5388,5387,35,5649,5689,5690,5652,0,5363,5365,5389,5388,35,5639,5665,5668,5638,0,5368,5367,5390,5391,35,5665,5666,5669,5668,0,5367,5370,5392,5390,35,5666,5667,5670,5669,0,5370,5372,5393,5392,35,5667,5692,5694,5670,0,5372,5374,5394,5393,35,5692,5674,5677,5694,0,5374,5376,5395,5394,35,5674,5675,5678,5677,1,5376,5378,5396,5395,35,5675,5676,5679,5678,1,5378,5380,5397,5396,34,5676,5625,5679,1,5380,4788,5397,34,5622,5659,5662,1,4790,5381,5398,35,5659,5660,5663,5662,1,5381,5382,5399,5398,35,5660,5661,5664,5663,1,5382,5383,5400,5399,35,5661,5685,5687,5664,0,5383,5384,5401,5400,35,5631,5650,5653,5630,0,5386,5385,5402,5403,35,5650,5651,5654,5653,0,5385,5387,5404,5402,35,5651,5652,5655,5654,0,5387,5388,5405,5404,35,5652,5690,5691,5655,0,5388,5389,5406,5405,35,5638,5668,5671,5637,0,5391,5390,5407,5408,35,5668,5669,5672,5671,0,5390,5392,5409,5407,35,5669,5670,5673,5672,0,5392,5393,5410,5409,35,5670,5694,5696,5673,0,5393,5394,5411,5410,35,5694,5677,5680,5696,0,5394,5395,5412,5411,35,5677,5678,5681,5680,1,5395,5396,5413,5412,35,5678,5679,5682,5681,1,5396,5397,5414,5413,34,5679,5625,5682,1,5397,4788,5414,34,5622,5662,5684,1,4790,5398,5154,35,5662,5663,5686,5684,1,5398,5399,5159,5154,35,5663,5664,5688,5686,1,5399,5400,5155,5159,35,5664,5687,5698,5688,0,5400,5401,5415,5155,35,5630,5653,5683,5629,0,5403,5402,5356,5355,35,5653,5654,5685,5683,0,5402,5404,5384,5356,35,5654,5655,5687,5685,0,5404,5405,5401,5384,35,5655,5691,5698,5687,0,5405,5406,5415,5401,35,5637,5671,5689,5636,0,5408,5407,5365,5364,35,5671,5672,5690,5689,0,5407,5409,5389,5365,35,5672,5673,5691,5690,0,5409,5410,5406,5389,35,5673,5696,5698,5691,0,5410,5411,5415,5406,35,5696,5680,5697,5698,0,5411,5412,5156,5415,35,5680,5681,5695,5697,1,5412,5413,5157,5156,35,5681,5682,5693,5695,1,5413,5414,5158,5157,34,5682,5625,5693,1,5414,4788,5158,34,5698,5697,5688,0,5415,5156,5155,35,5735,5738,5759,5758,0,5007,5416,5417,5418,35,5738,5739,5760,5759,0,5416,5419,5420,5417,35,5739,5740,5761,5760,0,5419,5421,5422,5420,35,5740,5741,5786,5761,0,5421,5423,5424,5422,35,5736,5745,5768,5744,0,4995,5425,5426,5427,35,5745,5746,5769,5768,0,5425,5428,5429,5426,35,5746,5747,5770,5769,0,5428,5430,5431,5429,35,5747,5748,5789,5770,0,5430,5432,5433,5431,35,5737,5752,5777,5751,0,4965,5434,5435,5436,35,5752,5753,5778,5777,0,5434,5437,5438,5435,35,5753,5754,5779,5778,0,5437,5439,5440,5438,35,5754,5755,5792,5779,0,5439,5441,5442,5440,35,5758,5759,5762,5757,0,5418,5417,5443,5444,35,5759,5760,5763,5762,0,5417,5420,5445,5443,35,5760,5761,5764,5763,0,5420,5422,5446,5445,35,5761,5786,5787,5764,0,5422,5424,5447,5446,35,5744,5768,5771,5743,0,5427,5426,5448,5449,35,5768,5769,5772,5771,0,5426,5429,5450,5448,35,5769,5770,5773,5772,0,5429,5431,5451,5450,35,5770,5789,5790,5773,0,5431,5433,5452,5451,35,5751,5777,5780,5750,0,5436,5435,5453,5454,35,5777,5778,5781,5780,0,5435,5438,5455,5453,35,5778,5779,5782,5781,0,5438,5440,5456,5455,35,5779,5792,5793,5782,0,5440,5442,5457,5456,35,5757,5762,5765,5756,0,5444,5443,5458,5459,35,5762,5763,5766,5765,0,5443,5445,5460,5458,35,5763,5764,5767,5766,0,5445,5446,5461,5460,35,5764,5787,5788,5767,0,5446,5447,5462,5461,35,5743,5771,5774,5742,0,5449,5448,5463,5464,35,5771,5772,5775,5774,0,5448,5450,5465,5463,35,5772,5773,5776,5775,0,5450,5451,5466,5465,35,5773,5790,5791,5776,0,5451,5452,5467,5466,35,5750,5780,5783,5749,0,5454,5453,5468,5469,35,5780,5781,5784,5783,0,5453,5455,5470,5468,35,5781,5782,5785,5784,0,5455,5456,5471,5470,35,5782,5793,5794,5785,0,5456,5457,5472,5471,35,5756,5765,5792,5755,0,5459,5458,5442,5441,35,5765,5766,5793,5792,0,5458,5460,5457,5442,35,5766,5767,5794,5793,0,5460,5461,5472,5457,35,5767,5788,5795,5794,0,5461,5462,5473,5472,35,5742,5774,5786,5741,0,5464,5463,5424,5423,35,5774,5775,5787,5786,0,5463,5465,5447,5424,35,5775,5776,5788,5787,0,5465,5466,5462,5447,35,5776,5791,5795,5788,0,5466,5467,5473,5462,35,5749,5783,5789,5748,0,5469,5468,5433,5432,35,5783,5784,5790,5789,0,5468,5470,5452,5433,35,5784,5785,5791,5790,0,5470,5471,5467,5452,35,5785,5794,5795,5791,0,5471,5472,5473,5467,35,5796,5799,5820,5819,0,5006,5474,5475,5476,35,5799,5800,5821,5820,0,5474,5477,5478,5475,35,5800,5801,5822,5821,0,5477,5479,5480,5478,35,5801,5802,5847,5822,0,5479,5481,5482,5480,35,5797,5806,5829,5805,0,4999,5483,5484,5485,35,5806,5807,5830,5829,0,5483,5486,5487,5484,35,5807,5808,5831,5830,0,5486,5488,5489,5487,35,5808,5809,5850,5831,0,5488,5490,5491,5489,35,5798,5813,5838,5812,0,4996,5492,5493,5494,35,5813,5814,5839,5838,0,5492,5495,5496,5493,35,5814,5815,5840,5839,0,5495,5497,5498,5496,35,5815,5816,5853,5840,0,5497,5499,5500,5498,35,5819,5820,5823,5818,0,5476,5475,5501,5502,35,5820,5821,5824,5823,0,5475,5478,5503,5501,35,5821,5822,5825,5824,0,5478,5480,5504,5503,35,5822,5847,5848,5825,0,5480,5482,5505,5504,35,5805,5829,5832,5804,0,5485,5484,5506,5507,35,5829,5830,5833,5832,0,5484,5487,5508,5506,35,5830,5831,5834,5833,0,5487,5489,5509,5508,35,5831,5850,5851,5834,0,5489,5491,5510,5509,35,5812,5838,5841,5811,0,5494,5493,5511,5512,35,5838,5839,5842,5841,0,5493,5496,5513,5511,35,5839,5840,5843,5842,0,5496,5498,5514,5513,35,5840,5853,5854,5843,0,5498,5500,5515,5514,35,5818,5823,5826,5817,0,5502,5501,5516,5517,35,5823,5824,5827,5826,0,5501,5503,5518,5516,35,5824,5825,5828,5827,0,5503,5504,5519,5518,35,5825,5848,5849,5828,0,5504,5505,5520,5519,35,5804,5832,5835,5803,0,5507,5506,5521,5522,35,5832,5833,5836,5835,0,5506,5508,5523,5521,35,5833,5834,5837,5836,0,5508,5509,5524,5523,35,5834,5851,5852,5837,0,5509,5510,5525,5524,35,5811,5841,5844,5810,0,5512,5511,5526,5527,35,5841,5842,5845,5844,0,5511,5513,5528,5526,35,5842,5843,5846,5845,0,5513,5514,5529,5528,35,5843,5854,5855,5846,0,5514,5515,5530,5529,35,5817,5826,5853,5816,0,5517,5516,5500,5499,35,5826,5827,5854,5853,0,5516,5518,5515,5500,35,5827,5828,5855,5854,0,5518,5519,5530,5515,35,5828,5849,5856,5855,0,5519,5520,5531,5530,35,5803,5835,5847,5802,0,5522,5521,5482,5481,35,5835,5836,5848,5847,0,5521,5523,5505,5482,35,5836,5837,5849,5848,0,5523,5524,5520,5505,35,5837,5852,5856,5849,0,5524,5525,5531,5520,35,5810,5844,5850,5809,0,5527,5526,5491,5490,35,5844,5845,5851,5850,0,5526,5528,5510,5491,35,5845,5846,5852,5851,0,5528,5529,5525,5510,35,5846,5855,5856,5852,0,5529,5530,5531,5525,35,5446,4910,4917,5448,1,4660,4508,5532,5533,35,5448,4917,4916,5449,1,5533,5532,5534,5535,35,5449,4916,4915,5450,1,5535,5534,5536,5537,35,5450,4915,4914,5451,1,5537,5536,5538,5539,35,5451,4914,4913,5452,1,5539,5538,5540,5541,35,5452,4913,4912,5453,1,5541,5540,5542,5543,35,5453,4912,4911,5454,1,5543,5542,5544,5545,35,5454,4911,4909,5447,1,5545,5544,4684,4706,35,4918,4909,4911,4920,1,4655,4684,5544,5546,35,4920,4911,4912,4921,1,5546,5544,5542,5547,35,4921,4912,4913,4922,1,5547,5542,5540,5548,35,4922,4913,4914,4923,1,5548,5540,5538,5549,35,4923,4914,4915,4924,1,5549,5538,5536,5550,35,4924,4915,4916,4925,1,5550,5536,5534,5551,35,4925,4916,4917,4926,1,5551,5534,5532,5552,35,4926,4917,4910,4919,1,5552,5532,4508,4507,35,4919,4928,4935,4926,1,4507,4512,5553,5552,35,4926,4935,4934,4925,1,5552,5553,5554,5551,35,4925,4934,4933,4924,1,5551,5554,5555,5550,35,4924,4933,4932,4923,1,5550,5555,5556,5549,35,4923,4932,4931,4922,1,5549,5556,5557,5548,35,4922,4931,4930,4921,1,5548,5557,5558,5547,35,4921,4930,4929,4920,1,5547,5558,5559,5546,35,4920,4929,4927,4918,1,5546,5559,4635,4655,35,4936,4927,4929,4938,1,4598,4635,5559,5560,35,4938,4929,4930,4939,1,5560,5559,5558,5561,35,4939,4930,4931,4940,1,5561,5558,5557,5562,35,4940,4931,4932,4941,1,5562,5557,5556,5563,35,4941,4932,4933,4942,1,5563,5556,5555,5564,35,4942,4933,4934,4943,1,5564,5555,5554,5565,35,4943,4934,4935,4944,1,5565,5554,5553,5566,35,4944,4935,4928,4937,1,5566,5553,4512,4511,35,4937,4946,4953,4944,1,4511,4519,5567,5566,35,4944,4953,4952,4943,1,5566,5567,5568,5565,35,4943,4952,4951,4942,1,5565,5568,5569,5564,35,4942,4951,4950,4941,1,5564,5569,5570,5563,35,4941,4950,4949,4940,1,5563,5570,5571,5562,35,4940,4949,4948,4939,1,5562,5571,5572,5561,35,4939,4948,4947,4938,1,5561,5572,5573,5560,35,4938,4947,4945,4936,1,5560,5573,4584,4598,35,4946,4955,4962,4953,1,4519,4517,5574,5567,35,4953,4962,4961,4952,1,5567,5574,5575,5568,35,4952,4961,4960,4951,1,5568,5575,5576,5569,35,4951,4960,4959,4950,1,5569,5576,5577,5570,35,4950,4959,4958,4949,1,5570,5577,5578,5571,35,4949,4958,4957,4948,1,5571,5578,5579,5572,35,4948,4957,4956,4947,1,5572,5579,5580,5573,35,4947,4956,4954,4945,1,5573,5580,4566,4584,35,4963,4954,4956,4965,1,4525,4566,5580,5581,35,4965,4956,4957,4966,1,5581,5580,5579,5582,35,4966,4957,4958,4967,1,5582,5579,5578,5583,35,4967,4958,4959,4968,1,5583,5578,5577,5584,35,4968,4959,4960,4969,1,5584,5577,5576,5585,35,4969,4960,4961,4970,1,5585,5576,5575,5586,35,4970,4961,4962,4971,1,5586,5575,5574,5587,35,4971,4962,4955,4964,1,5587,5574,4517,4515,35,4964,4973,4980,4971,1,4515,1547,2649,5587,35,4971,4980,4979,4970,1,5587,2649,2650,5586,35,4970,4979,4978,4969,1,5586,2650,2651,5585,35,4969,4978,4977,4968,1,5585,2651,2652,5584,35,4968,4977,4976,4967,1,5584,2652,2653,5583,35,4967,4976,4975,4966,1,5583,2653,2654,5582,35,4966,4975,4974,4965,1,5582,2654,2655,5581,35,4965,4974,4972,4963,1,5581,2655,1561,4525,35,5527,4982,4989,5529,1,4751,4723,5588,5589,35,5529,4989,4988,5530,1,5589,5588,5590,5591,35,5530,4988,4987,5531,1,5591,5590,5592,5593,35,5531,4987,4986,5532,1,5593,5592,5594,5595,35,5532,4986,4985,5533,1,5595,5594,5596,5597,35,5533,4985,4984,5534,1,5597,5596,5598,5599,35,5534,4984,4983,5535,1,5599,5598,5600,5601,35,5535,4983,4981,5528,1,5601,5600,4711,4710,35,4990,4981,4983,4992,1,4730,4711,5600,5602,35,4992,4983,4984,4993,1,5602,5600,5598,5603,35,4993,4984,4985,4994,1,5603,5598,5596,5604,35,4994,4985,4986,4995,1,5604,5596,5594,5605,35,4995,4986,4987,4996,1,5605,5594,5592,5606,35,4996,4987,4988,4997,1,5606,5592,5590,5607,35,4997,4988,4989,4998,1,5607,5590,5588,5608,35,4998,4989,4982,4991,1,5608,5588,4723,4722,35,4991,5e3,5007,4998,1,4722,4713,5609,5608,35,4998,5007,5006,4997,1,5608,5609,5610,5607,35,4997,5006,5005,4996,1,5607,5610,5611,5606,35,4996,5005,5004,4995,1,5606,5611,5612,5605,35,4995,5004,5003,4994,1,5605,5612,5613,5604,35,4994,5003,5002,4993,1,5604,5613,5614,5603,35,4993,5002,5001,4992,1,5603,5614,5615,5602,35,4992,5001,4999,4990,1,5602,5615,4731,4730,35,5008,4999,5001,5010,1,4732,4731,5615,5616,35,5010,5001,5002,5011,1,5616,5615,5614,5617,35,5011,5002,5003,5012,1,5617,5614,5613,5618,35,5012,5003,5004,5013,1,5618,5613,5612,5619,35,5013,5004,5005,5014,1,5619,5612,5611,5620,35,5014,5005,5006,5015,1,5620,5611,5610,5621,35,5015,5006,5007,5016,1,5621,5610,5609,5622,35,5016,5007,5ee3,5832,5705,35,5883,5892,5891,5882,0,5705,5832,5833,5703,35,5882,5891,5890,5881,0,5703,5833,5834,5701,35,5881,5890,5889,5880,0,5701,5834,5835,5699,35,5880,5889,5888,5879,0,5699,5835,5836,5697,35,5879,5888,5887,5878,0,5697,5836,5837,5695,35,5878,5887,5886,5877,0,5695,5837,5838,5693,35,5877,5886,5884,5875,0,5693,5838,5003,4768,35,5885,5797,5805,5892,0,5e3,4999,5485,5832,35,5892,5805,5804,5891,0,5832,5485,5507,5833,35,5891,5804,5803,5890,0,5833,5507,5522,5834,35,5890,5803,5802,5889,0,5834,5522,5481,5835,35,5889,5802,5801,5888,0,5835,5481,5479,5836,35,5888,5801,5800,5887,0,5836,5479,5477,5837,35,5887,5800,5799,5886,0,5837,5477,5474,5838,35,5886,5799,5796,5884,0,5838,5474,5006,5003,35,6037,5966,4700,4868,0,4993,4752,4698,4948,35,5902,5894,5901,5904,0,4524,1560,2911,5839,35,5904,5901,5900,5905,0,5839,2911,2913,5840,35,5905,5900,5899,5906,0,5840,2913,2915,5841,35,5906,5899,5898,5907,0,5841,2915,2917,5842,35,5907,5898,5897,5908,0,5842,2917,2919,5843,35,5908,5897,5896,5909,0,5843,2919,2921,5844,35,5909,5896,5895,5910,0,5844,2921,2923,5845,35,5910,5895,5893,5903,0,5845,2923,2924,4748,35,5903,5912,5919,5910,0,4748,4749,5846,5845,35,5910,5919,5918,5909,0,5845,5846,5847,5844,35,5909,5918,5917,5908,0,5844,5847,5848,5843,35,5908,5917,5916,5907,0,5843,5848,5849,5842,35,5907,5916,5915,5906,0,5842,5849,5850,5841,35,5906,5915,5914,5905,0,5841,5850,5851,5840,35,5905,5914,5913,5904,0,5840,5851,5852,5839,35,5904,5913,5911,5902,0,5839,5852,4565,4524,35,5920,5911,5913,5922,0,4583,4565,5852,5853,35,5922,5913,5914,5923,0,5853,5852,5851,5854,35,5923,5914,5915,5924,0,5854,5851,5850,5855,35,5924,5915,5916,5925,0,5855,5850,5849,5856,35,5925,5916,5917,5926,0,5856,5849,5848,5857,35,5926,5917,5918,5927,0,5857,5848,5847,5858,35,5927,5918,5919,5928,0,5858,5847,5846,5859,35,5928,5919,5912,5921,0,5859,5846,4749,4750,35,5929,5920,5922,5931,0,4597,4583,5853,5860,35,5931,5922,5923,5932,0,5860,5853,5854,5861,35,5932,5923,5924,5933,0,5861,5854,5855,5862,35,5933,5924,5925,5934,0,5862,5855,5856,5863,35,5934,5925,5926,5935,0,5863,5856,5857,5864,35,5935,5926,5927,5936,0,5864,5857,5858,5865,35,5936,5927,5928,5937,0,5865,5858,5859,5866,35,5937,5928,5921,5930,0,5866,5859,4750,4746,35,5930,5939,5946,5937,0,4746,4747,5867,5866,35,5937,5946,5945,5936,0,5866,5867,5868,5865,35,5936,5945,5944,5935,0,5865,5868,5869,5864,35,5935,5944,5943,5934,0,5864,5869,5870,5863,35,5934,5943,5942,5933,0,5863,5870,5871,5862,35,5933,5942,5941,5932,0,5862,5871,5872,5861,35,5932,5941,5940,5931,0,5861,5872,5873,5860,35,5931,5940,5938,5929,0,5860,5873,4634,4597,35,5947,5938,5940,5949,0,4654,4634,5873,5874,35,5949,5940,5941,5950,0,5874,5873,5872,5875,35,5950,5941,5942,5951,0,5875,5872,5871,5876,35,5951,5942,5943,5952,0,5876,5871,5870,5877,35,5952,5943,5944,5953,0,5877,5870,5869,5878,35,5953,5944,5945,5954,0,5878,5869,5868,5879,35,5954,5945,5946,5955,0,5879,5868,5867,5880,35,5955,5946,5939,5948,0,5880,5867,4747,4744,35,5948,5957,5964,5955,0,4744,4745,5881,5880,35,5955,5964,5963,5954,0,5880,5881,5882,5879,35,5954,5963,5962,5953,0,5879,5882,5883,5878,35,5953,5962,5961,5952,0,5878,5883,5884,5877,35,5952,5961,5960,5951,0,5877,5884,5885,5876,35,5951,5960,5959,5950,0,5876,5885,5886,5875,35,5950,5959,5958,5949,0,5875,5886,5887,5874,35,5949,5958,5956,5947,0,5874,5887,4683,4654,35,5965,5956,5958,5967,0,4705,4683,5887,5888,35,5967,5958,5959,5968,0,5888,5887,5886,5889,35,5968,5959,5960,5969,0,5889,5886,5885,5890,35,5969,5960,5961,5970,0,5890,5885,5884,5891,35,5970,5961,5962,5971,0,5891,5884,5883,5892,35,5971,5962,5963,5972,0,5892,5883,5882,5893,35,5972,5963,5964,5973,0,5893,5882,5881,5894,35,5973,5964,5957,5966,0,5894,5881,4745,4752,35,5983,5975,5982,5985,0,4776,3291,4452,5895,35,5985,5982,5981,5986,0,5895,4452,4454,5896,35,5986,5981,5980,5987,0,5896,4454,4456,5897,35,5987,5980,5979,5988,0,5897,4456,4458,5898,35,5988,5979,5978,5989,0,5898,4458,4460,5899,35,5989,5978,5977,5990,0,5899,4460,4462,5900,35,5990,5977,5976,5991,0,5900,4462,4464,5901,35,5991,5976,5974,5984,0,5901,4464,3314,4794,35,5984,5993,6e3,5991,0,4794,4834,5902,5901,35,5991,6e3,5999,5990,0,5901,5902,5903,5900,35,5990,5999,5998,5989,0,5900,5903,5904,5899,35,5989,5998,5997,5988,0,5899,5904,5905,5898,35,5988,5997,5996,5987,0,5898,5905,5906,5897,35,5987,5996,5995,5986,0,5897,5906,5907,5896,35,5986,5995,5994,5985,0,5896,5907,5908,5895,35,5985,5994,5992,5983,0,5895,5908,4990,4776,35,6001,5992,5994,6003,0,4991,4990,5908,5909,35,6003,5994,5995,6004,0,5909,5908,5907,5910,35,6004,5995,5996,6005,0,5910,5907,5906,5911,35,6005,5996,5997,6006,0,5911,5906,5905,5912,35,6006,5997,5998,6007,0,5912,5905,5904,5913,35,6007,5998,5999,6008,0,5913,5904,5903,5914,35,6008,5999,6e3,6009,0,5914,5903,5902,5915,35,6009,6e3,5993,6002,0,5915,5902,4834,4852,35,6010,6001,6003,6012,0,4988,4991,5909,5916,35,6012,6003,6004,6013,0,5916,5909,5910,5917,35,6013,6004,6005,6014,0,5917,5910,5911,5918,35,6014,6005,6006,6015,0,5918,5911,5912,5919,35,6015,6006,6007,6016,0,5919,5912,5913,5920,35,6016,6007,6008,6017,0,5920,5913,5914,5921,35,6017,6008,6009,6018,0,5921,5914,5915,5922,35,6018,6009,6002,6011,0,5922,5915,4852,4866,35,6011,6020,6027,6018,0,4866,4903,5923,5922,35,6018,6027,6026,6017,0,5922,5923,5924,5921,35,6017,6026,6025,6016,0,5921,5924,5925,5920,35,6016,6025,6024,6015,0,5920,5925,5926,5919,35,6015,6024,6023,6014,0,5919,5926,5927,5918,35,6014,6023,6022,6013,0,5918,5927,5928,5917,35,6013,6022,6021,6012,0,5917,5928,5929,5916,35,6012,6021,6019,6010,0,5916,5929,4989,4988,35,6028,6019,6021,6030,0,4992,4989,5929,5930,35,6030,6021,6022,6031,0,5930,5929,5928,5931,35,6031,6022,6023,6032,0,5931,5928,5927,5932,35,6032,6023,6024,6033,0,5932,5927,5926,5933,35,6033,6024,6025,6034,0,5933,5926,5925,5934,35,6034,6025,6026,6035,0,5934,5925,5924,5935,35,6035,6026,6027,6036,0,5935,5924,5923,5936,35,6036,6027,6020,6029,0,5936,5923,4903,4923,35,6029,6038,6045,6036,0,4923,4952,5937,5936,35,6036,6045,6044,6035,0,5936,5937,5938,5935,35,6035,6044,6043,6034,0,5935,5938,5939,5934,35,6034,6043,6042,6033,0,5934,5939,5940,5933,35,6033,6042,6041,6032,0,5933,5940,5941,5932,35,6032,6041,6040,6031,0,5932,5941,5942,5931,35,6031,6040,6039,6030,0,5931,5942,5943,5930,35,6030,6039,6037,6028,0,5930,5943,4993,4992,35,5966,6037,6039,5973,0,4752,4993,5943,5894,35,5973,6039,6040,5972,0,5894,5943,5942,5893,35,5972,6040,6041,5971,0,5893,5942,5941,5892,35,5971,6041,6042,5970,0,5892,5941,5940,5891,35,5970,6042,6043,5969,0,5891,5940,5939,5890,35,5969,6043,6044,5968,0,5890,5939,5938,5889,35,5968,6044,6045,5967,0,5889,5938,5937,5888,35,5967,6045,6038,5965,0,5888,5937,4952,4705,35,5893,4500,4521,5903,0,2924,1600,4544,4748,34,5208,5215,5214,0,5148,5147,5153,34,5206,5214,5208,1,5149,5153,5148,34,5141,5142,5210,1,4521,4510,5151,34,5206,5212,5214,1,5149,5152,5153,34,5141,5210,5212,1,4521,5151,5152,34,5206,5204,5212,1,5149,5150,5152,34,5204,5141,5212,1,5150,4521,5152,34,5120,5128,5122,1,5076,5080,5075,34,5055,5056,5124,1,4729,4728,5078,34,5120,5126,5128,1,5076,5079,5080,34,5055,5124,5126,1,4729,5078,5079,34,5120,5118,5126,1,5076,5077,5079,34,5118,5055,5126,1,5077,4729,5079,34,5598,5539,5536,1,5342,4977,4973,34,5602,5611,5609,1,5344,5346,5347,34,5598,5607,5539,1,5342,5348,4977,34,5602,5609,5607,1,5344,5347,5348,34,5598,5600,5607,1,5342,5343,5348,34,5600,5602,5607,1,5343,5344,5348]
},man:{metadata:{version:3,generator:"io_three",vertices:84,uvs:0,faces:160,type:"Geometry",normals:42},vertices:[0,-.075,0,.180902,.063195,.131431,-.069097,.063195,.212662,-.223607,.063196,-0,-.069097,.063195,-.212662,.180902,.063195,-.131431,.069097,.286805,.212662,-.180902,.286805,.131431,-.180902,.286805,-.131431,.069097,.286805,-.212662,.223607,.286804,-0,0,.425,-0,-.040614,-.037664,.124999,.106331,-.037664,.077253,.065717,.043566,.202253,.212662,.043566,-0,.106331,-.037664,-.077253,-.131432,-.037663,0,-.172047,.043566,.124999,-.040614,-.037664,-.124999,-.172047,.043566,-.124999,.065717,.043566,-.202253,.237764,.175,.077253,.237764,.175,-.077253,0,.175,.25,.146946,.175,.202254,-.237764,.175,.077253,-.146946,.175,.202254,-.146946,.175,-.202254,-.237764,.175,-.077253,.146946,.175,-.202254,0,.175,-.25,.172047,.306434,.124999,-.065717,.306434,.202253,-.212662,.306434,-0,-.065717,.306434,-.202253,.172047,.306434,-.124999,.040614,.387664,.124999,.131432,.387663,-0,-.106331,.387664,.077253,-.106331,.387664,-.077253,.040614,.387664,-.124999,0,-.425,0,.180902,-.286805,.131431,-.069097,-.286805,.212662,-.223607,-.286804,0,-.069097,-.286805,-.212662,.180902,-.286805,-.131431,.069097,-.063195,.212662,-.180902,-.063195,.131431,-.180902,-.063195,-.131431,.069097,-.063195,-.212662,.223607,-.063196,0,0,.075,-0,-.040614,-.387664,.124999,.106331,-.387664,.077253,.065717,-.306434,.202253,.212662,-.306434,0,.106331,-.387664,-.077253,-.131432,-.387663,0,-.172047,-.306434,.124999,-.040614,-.387664,-.124999,-.172047,-.306434,-.124999,.065717,-.306434,-.202253,.237764,-.175,.077253,.237764,-.175,-.077253,0,-.175,.25,.146946,-.175,.202254,-.237764,-.175,.077253,-.146946,-.175,.202254,-.146946,-.175,-.202254,-.237764,-.175,-.077253,.146946,-.175,-.202254,0,-.175,-.25,.172047,-.043566,.124999,-.065717,-.043566,.202253,-.212662,-.043566,0,-.065717,-.043566,-.202253,.172047,-.043566,-.124999,.040614,.037664,.124999,.131432,.037663,-0,-.106331,.037664,.077253,-.106331,.037664,-.077253,.040614,.037664,-.124999],uvs:[],name:"Icosphere.001Geometry.1",faces:[32,0,13,12,0,1,2,32,1,13,15,3,1,4,32,0,12,17,0,2,5,32,0,17,19,0,5,6,32,0,19,16,0,6,7,32,1,15,22,3,4,8,32,2,14,24,9,10,11,32,3,18,26,12,13,14,32,4,20,28,15,16,17,32,5,21,30,18,19,20,32,1,22,25,3,8,21,32,2,24,27,9,11,22,32,3,26,29,12,14,23,32,4,28,31,15,17,24,32,5,30,23,18,20,25,32,6,32,37,26,27,28,32,7,33,39,29,30,31,32,8,34,40,32,33,34,32,9,35,41,35,36,37,32,10,36,38,38,39,40,32,38,41,11,40,37,41,32,38,36,41,40,39,37,32,36,9,41,39,35,37,32,41,40,11,37,34,41,32,41,35,40,37,36,34,32,35,8,40,36,32,34,32,40,39,11,34,31,41,32,40,34,39,34,33,31,32,34,7,39,33,29,31,32,39,37,11,31,28,41,32,39,33,37,31,30,28,32,33,6,37,30,26,28,32,37,38,11,28,40,41,32,37,32,38,28,27,40,32,32,10,38,27,38,40,32,23,36,10,25,39,38,32,23,30,36,25,20,39,32,30,9,36,20,35,39,32,31,35,9,24,36,35,32,31,28,35,24,17,36,32,28,8,35,17,32,36,32,29,34,8,23,33,32,32,29,26,34,23,14,33,32,26,7,34,14,29,33,32,27,33,7,22,30,29,32,27,24,33,22,11,30,32,24,6,33,11,26,30,32,25,32,6,21,27,26,32,25,22,32,21,8,27,32,22,10,32,8,38,27,32,30,31,9,20,24,35,32,30,21,31,20,19,24,32,21,4,31,19,15,24,32,28,29,8,17,23,32,32,28,20,29,17,16,23,32,20,3,29,16,12,23,32,26,27,7,14,22,29,32,26,18,27,14,13,22,32,18,2,27,13,9,22,32,24,25,6,11,21,26,32,24,14,25,11,10,21,32,14,1,25,10,3,21,32,22,23,10,8,25,38,32,22,15,23,8,4,25,32,15,5,23,4,18,25,32,16,21,5,7,19,18,32,16,19,21,7,6,19,32,19,4,21,6,15,19,32,19,20,4,6,16,15,32,19,17,20,6,5,16,32,17,3,20,5,12,16,32,17,18,3,5,13,12,32,17,12,18,5,2,13,32,12,2,18,2,9,13,32,15,16,5,4,7,18,32,15,13,16,4,1,7,32,13,0,16,1,0,7,32,12,14,2,2,10,9,32,12,13,14,2,1,10,32,13,1,14,1,3,10,32,42,55,54,0,1,2,32,43,55,57,3,1,4,32,42,54,59,0,2,5,32,42,59,61,0,5,6,32,42,61,58,0,6,7,32,43,57,64,3,4,8,32,44,56,66,9,10,11,32,45,60,68,12,13,14,32,46,62,70,15,16,17,32,47,63,72,18,19,20,32,43,64,67,3,8,21,32,44,66,69,9,11,22,32,45,68,71,12,14,23,32,46,70,73,15,17,24,32,47,72,65,18,20,25,32,48,74,79,26,27,28,32,49,75,81,29,30,31,32,50,76,82,32,33,34,32,51,77,83,35,36,37,32,52,78,80,38,39,40,32,80,83,53,40,37,41,32,80,78,83,40,39,37,32,78,51,83,39,35,37,32,83,82,53,37,34,41,32,83,77,82,37,36,34,32,77,50,82,36,32,34,32,82,81,53,34,31,41,32,82,76,81,34,33,31,32,76,49,81,33,29,31,32,81,79,53,31,28,41,32,81,75,79,31,30,28,32,75,48,79,30,26,28,32,79,80,53,28,40,41,32,79,74,80,28,27,40,32,74,52,80,27,38,40,32,65,78,52,25,39,38,32,65,72,78,25,20,39,32,72,51,78,20,35,39,32,73,77,51,24,36,35,32,73,70,77,24,17,36,32,70,50,77,17,32,36,32,71,76,50,23,33,32,32,71,68,76,23,14,33,32,68,49,76,14,29,33,32,69,75,49,22,30,29,32,69,66,75,22,11,30,32,66,48,75,11,26,30,32,67,74,48,21,27,26,32,67,64,74,21,8,27,32,64,52,74,8,38,27,32,72,73,51,20,24,35,32,72,63,73,20,19,24,32,63,46,73,19,15,24,32,70,71,50,17,23,32,32,70,62,71,17,16,23,32,62,45,71,16,12,23,32,68,69,49,14,22,29,32,68,60,69,14,13,22,32,60,44,69,13,9,22,32,66,67,48,11,21,26,32,66,56,67,11,10,21,32,56,43,67,10,3,21,32,64,65,52,8,25,38,32,64,57,65,8,4,25,32,57,47,65,4,18,25,32,58,63,47,7,19,18,32,58,61,63,7,6,19,32,61,46,63,6,15,19,32,61,62,46,6,16,15,32,61,59,62,6,5,16,32,59,45,62,5,12,16,32,59,60,45,5,13,12,32,59,54,60,5,2,13,32,54,44,60,2,9,13,32,57,58,47,4,7,18,32,57,55,58,4,1,7,32,55,42,58,1,0,7,32,54,56,44,2,10,9,32,54,55,56,2,1,10,32,55,43,56,1,3,10],normals:[0,-1,0,.425306,-.850642,.309,-.16245,-.850642,.499985,.723594,-.447188,.525712,.850642,-.525712,0,-.525712,-.850642,0,-.16245,-.850642,-.499985,.425306,-.850642,-.309,.951048,0,.309,-.276376,-.447218,.850642,.262856,-.525712,.808985,0,0,1,-.894406,-.447188,0,-.688162,-.525712,.499985,-.951048,0,.309,-.276376,-.447218,-.850642,-.688162,-.525712,-.499985,-.587756,0,-.809015,.723594,-.447188,-.525712,.262856,-.525712,-.808985,.587756,0,-.809015,.587756,0,.809015,-.587756,0,.809015,-.951048,0,-.309,0,0,-1,.951048,0,-.309,.276376,.447218,.850642,.688162,.525712,.499985,.16245,.850642,.499985,-.723594,.447188,.525712,-.262856,.525712,.808985,-.425306,.850642,.309,-.723594,.447188,-.525712,-.850642,.525712,0,-.425306,.850642,-.309,.276376,.447218,-.850642,-.262856,.525712,-.808985,.16245,.850642,-.499985,.894406,.447188,0,.688162,.525712,-.499985,.525712,.850642,0,0,1,0]},empty:{metadata:{version:3,generator:"io_three",vertices:4,uvs:0,faces:1,type:"Geometry",normals:2},vertices:[1,0,0,0,0,-0,1,1,0,0,1,-0],uvs:[],name:"CubeGeometry.4",faces:[33,1,0,2,3,0,1,1,1],normals:[0,0,.999969,0,0,1]},solid:{metadata:{version:3,generator:"io_three",vertices:8,uvs:0,faces:6,type:"Geometry",normals:8},vertices:[1,0,0,1,0,1,-0,0,1,0,0,-0,1,1,0,1,1,1,-0,1,1,0,1,-0],uvs:[],name:"CubeGeometry.2",faces:[33,0,1,2,3,0,1,2,3,33,4,7,6,5,4,5,6,7,33,0,4,5,1,0,4,7,1,33,1,5,6,2,1,7,6,2,33,2,6,7,3,2,6,5,3,33,4,0,3,7,4,0,3,5],normals:[.577349,-.577349,-.577349,.577349,-.577349,.577349,-.577349,-.577349,.577349,-.577349,-.577349,-.577349,.577349,.577349,-.577349,-.577349,.577349,-.577349,-.577349,.577349,.577349,.577349,.577349,.577349]}}},{}],20:[function(e,t,n){"use strict";var r=e("bezier-easing"),i=function(e,t){const n=7;var i=r(0,0,1,1),a=r(.25,.25,.5,2.5),o=0,s=1,u=!1,h=!1,c=!0,l=function(){c?(c=!1,t()):(c=!0,e())},p=function(){return!u&&!h};this.reset=function(){s=1,o=0,c=!0,h=u=!1},this.isMan=function(){return c},this.getScale=function(){return s||1e-5},this.go=function(){p()&&(u=!0)},this.update=function(){u&&(s=i.get(o/n),o-=1,0>o&&(u=!1,h=!0,o=0,l())),h&&(s=a.get(o/n),o+=1,o>n&&(h=!1,o=n))}};t.exports=i},{"bezier-easing":2}],21:[function(e,t,n){"use strict";var r=e("jquery"),i=e("util"),a=e("events").EventEmitter,o=e("./engine/input"),s=function(){var e=this,t=new o({keys:{up:38,down:40,select:13}});a.call(this);var n=function(){var e=r("<div/>").css({position:"fixed",backgroundColor:"black",height:"100%",width:"100%",margin:0,padding:0});return r("body").append(e),e}(),i=function(){var t=r("<button>").css({position:"fixed",bottom:"100px",left:"50%"}).click(function(){e.emit("title.playbutton.click")}).text("Play");return r("body").append(t),t}(),s=function(t){t.select&&e.emit("title.playbutton.click")};this.fadeFromBlack=function(){n.css({opacity:1}),n.stop().animate({opacity:0},600)},this.showTitle=function(){i.show(),t.removeListener("input.move",s),t.on("input.move",s)},this.hideTitle=function(){i.hide()},this.update=function(e){t.update(e)}};i.inherits(s,a),t.exports=s},{"./engine/input":14,events:3,jquery:8,util:7}],22:[function(e,t,n){"use strict";var r=e("three"),i=e("./engine/thrust"),a=e("./engine/entity"),o=e("./morph");const s=10,u=5,h=50,c=new r.Vector3(0,50,0),l=10,p=50,f=1500,d=100,m=.25,g=[{x:0,y:.175,z:0,r:m,rs:.0625},{x:0,y:-.175,z:0,r:m,rs:.0625}];var v=function(){var e,t=new a(g),n=!1,r={left:!1,right:!1,jump:!1,morph:!1,reset:function(){this.left=this.right=this.jump=this.morph=!1}},m=function(){t.setRotation()},v=function(){const e=.75;var n=t.velocity();n.length()<e?t.setRotation():t.setRotation(-Math.atan2(n.x,n.y))},y=new o(m,v),b=function(e,n){y.isMan()?(r.left?n.x-=p:r.right&&(n.x+=p),r.jump?n.y+=f:n.y-=d):(r.left?e.z+=h:r.right&&(e.z-=h),i(n,t.rotation(),c))},x=function(e,t){y.isMan()?(t.z=0,e.x=e.x<0?Math.max(e.x,-10):Math.min(e.x,l),e.y=e.y<0?Math.max(e.y,-10):Math.min(e.y,l),r.left||r.right?(r.left&&e.x>0||r.right&&e.x<0)&&(e.x*=.75):e.x*=.8):(t.z=t.z<0?Math.max(t.z,-5):Math.min(t.z,u),r.left||r.right||(t.z*=.9),e.length()>s&&(e.normalize(),e.multiplyScalar(s)))},w=function(e){r.left=e.left,r.right=e.right,r.jump=e.jump,!r.morph&&e.morph&&y.go(),r.morph=e.morph};this.update=function(n,r){e.update(n),y.update(),t.update(r,b,x)},this.getScale=function(){return y.getScale()},this.isDead=function(){return n},this.kill=function(){n=!0,e.removeListener("input.move",w)},this.set=function(i){n=!1,r.reset(),y.reset(),e=i.input,e.removeAllListeners("input.move"),e.on("input.move",w),t.reset(i.spawn.x,i.spawn.y)},this.position=t.position,this.rotation=t.rotation,this.getPoints=t.getPoints,this.handleCollision=t.handleCollision,this.isMan=y.isMan};t.exports=v},{"./engine/entity":13,"./engine/thrust":18,"./morph":20,three:10}],23:[function(e,t,n){"use strict";var r=e("underscore"),i=e("./engine/input"),a=e("./player"),o=e("./storage");t.exports=function(){var e,t,t=new i({keys:{left:37,right:39,jump:38,morph:67}}),n=[],s=0,u=!0,h=function(){n.push({spawn:e[s],input:t})},c=function(){s+=1,s>=e.length&&(s=0)};return{init:function(t){e=t},reset:function(){n=[],s=0},reload:function(){n=o.replays(),s=0},getCurrentPlayer:function(){return s},save:function(){u||o.replays(n)},next:function(){u||(n[s].input=new i({replay:t.serialize()}),t.reset()),c(),n[s]?u||(n[s].input=t):h()},setDemoMode:function(e){u=e},getPlayers:function(){var e,t,i=[];return function(){return t=[],0===n.length&&h(),r.each(n,function(n){i.length<=t.length?(e=new a,i.push(e)):e=i[t.length],e.set(n),t.push(e)}),t}}()}}()},{"./engine/input":14,"./player":22,"./storage":25,underscore:11}],24:[function(e,t,n){"use strict";var r=e("underscore"),i=e("three"),a=function(){var t=e("bezier-easing"),n=t(.585,0,.94,.805),r=t(.105,.51,.56,1),a=new i.Vector2,o=6,s=new i.Vector2,u=new i.Vector2,h=new i.Vector2,c=new i.Vector2,l={set:function(e,t){s.set(e,t),u.set(14,14),h.set(u.x+o,u.y+o),c.set(s.x-u.x-o,s.y-u.y-o)},get:function(e){return a.set(e.x,e.y),a.x<h.x&&(a.x=u.x+n.get(a.x/h.x)*o),a.x>c.x&&(a.x=c.x+r.get((a.x-c.x)/h.x)*o),a.y<h.y&&(a.y=u.y+n.get(a.y/h.y)*o),a.y>c.y&&(a.y=c.y+r.get((a.y-c.y)/h.y)*o),a}};return l.set(64,53),l}();const o=26;var s=function(){var e=new i.Scene,t=new i.PerspectiveCamera(45,window.innerWidth/window.innerHeight,17,o),n=new i.AmbientLight(16777215),s=new i.WebGLRenderer;t.position.set(0,0,o),t.updateProjectionMatrix(),e.add(t),e.add(n),s.setSize(window.innerWidth,window.innerHeight),s.setClearColor(4079166,1),document.body.appendChild(s.domElement),this.render=function(){s.render(e,t)},this.add=function(t){e.add(t)},this.follow=function(e){var n;return function(e){n=a.get(e),t.position.set(n.x,n.y,o)}}(),this.remove=function(t){e.remove(t)},this.clear=function(){var t=r.clone(e.children);r.each(t,function(t){e.remove(t)})}};t.exports=s},{"bezier-easing":2,three:10,underscore:11}],25:[function(e,t,n){"use strict";var r=[{spawn:{x:1.5,y:21},input:'{"28":{"left":false,"right":true,"jump":false,"morph":false},"82":{"left":false,"right":true,"jump":true,"morph":false},"94":{"left":false,"right":true,"jump":false,"morph":false},"380":{"left":false,"right":true,"jump":true,"morph":false},"404":{"left":false,"right":false,"jump":true,"morph":false},"415":{"left":true,"right":false,"jump":true,"morph":false},"429":{"left":false,"right":false,"jump":true,"morph":false},"443":{"left":true,"right":false,"jump":true,"morph":false},"448":{"left":false,"right":false,"jump":true,"morph":false},"459":{"left":true,"right":false,"jump":true,"morph":false},"476":{"left":false,"right":false,"jump":true,"morph":false},"484":{"left":true,"right":false,"jump":true,"morph":false},"503":{"left":false,"right":false,"jump":true,"morph":false},"511":{"left":true,"right":false,"jump":true,"morph":false},"523":{"left":false,"right":false,"jump":true,"morph":false},"538":{"left":true,"right":false,"jump":true,"morph":false},"632":{"left":false,"right":false,"jump":true,"morph":false},"673":{"left":true,"right":false,"jump":true,"morph":false},"686":{"left":false,"right":false,"jump":false,"morph":false},"695":{"left":false,"right":true,"jump":false,"morph":false},"723":{"left":false,"right":false,"jump":false,"morph":false},"749":{"left":true,"right":false,"jump":false,"morph":false},"756":{"left":false,"right":false,"jump":false,"morph":false},"765":{"left":true,"right":false,"jump":false,"morph":false},"809":{"left":true,"right":false,"jump":true,"morph":false},"816":{"left":true,"right":false,"jump":false,"morph":false},"825":{"left":true,"right":false,"jump":true,"morph":false},"828":{"left":true,"right":false,"jump":false,"morph":false},"837":{"left":true,"right":false,"jump":true,"morph":false},"840":{"left":true,"right":false,"jump":false,"morph":false},"913":{"left":true,"right":false,"jump":true,"morph":false},"930":{"left":true,"right":false,"jump":false,"morph":false},"937":{"left":true,"right":false,"jump":true,"morph":false},"944":{"left":true,"right":false,"jump":false,"morph":false},"965":{"left":false,"right":false,"jump":false,"morph":false}}'},{spawn:{x:2.5,y:21},input:'{"52":{"left":false,"right":true,"jump":false,"morph":false},"59":{"left":false,"right":false,"jump":false,"morph":false},"82":{"left":false,"right":true,"jump":false,"morph":false},"90":{"left":false,"right":false,"jump":false,"morph":false},"101":{"left":false,"right":true,"jump":false,"morph":false},"110":{"left":false,"right":false,"jump":false,"morph":false},"125":{"left":false,"right":true,"jump":false,"morph":false},"134":{"left":false,"right":false,"jump":false,"morph":false},"160":{"left":false,"right":false,"jump":true,"morph":false},"196":{"left":false,"right":false,"jump":false,"morph":false},"214":{"left":false,"right":true,"jump":false,"morph":false},"222":{"left":false,"right":false,"jump":false,"morph":false},"245":{"left":false,"right":false,"jump":true,"morph":false},"261":{"left":true,"right":false,"jump":true,"morph":false},"268":{"left":false,"right":false,"jump":true,"morph":false}}'},{spawn:{x:3.5,y:21},input:'{"6":{"left":false,"right":false,"jump":false,"morph":false},"112":{"left":false,"right":false,"jump":true,"morph":false},"118":{"left":true,"right":false,"jump":true,"morph":false},"126":{"left":false,"right":false,"jump":true,"morph":false},"148":{"left":false,"right":true,"jump":true,"morph":false},"175":{"left":false,"right":true,"jump":false,"morph":false},"186":{"left":false,"right":true,"jump":true,"morph":false},"196":{"left":false,"right":true,"jump":false,"morph":false},"205":{"left":false,"right":false,"jump":false,"morph":false},"977":{"left":true,"right":false,"jump":false,"morph":false}}'}],i=e("underscore"),a=e("./engine/input");t.exports=function(){var e=function(e,t){if(e&&t)localStorage.setItem(e,JSON.stringify(t));else{if(e&&!t)return JSON.parse(localStorage.getItem(e));console.error("Key was undefined while using local storage.")}};return{replays:function(t){var n,o;return t?(n=[],i.each(t,function(e){n.push({spawn:e.spawn,input:e.input.serialize()})}),e("replays",n)):(n=e("replays",n),n||(n=r),o=[],i.each(n,function(e){o.push({spawn:e.spawn,input:new a({replay:e.input})})}),o)},test:function(t){return e("test",t)},error:function(){return e()}}}()},{"./engine/input":14,underscore:11}],26:[function(e,t,n){"use strict";var r=e("underscore"),i=e("util"),a=e("events").EventEmitter,o=function(){const t=e("./assets"),n=e("./scene"),i=e("./engine/map");e("./engine/line");var o,s=this,u=new n,h=new i,c=[],l=[];a.call(this);var p=function(e,t,n){2===n&&(u.remove(e.avatar.man),u.remove(e.avatar.missile),r.every(l,function(e){return e.position.x===t.x&&e.position.y===t.y?(u.remove(e),h.removeBlock(t.x,t.y),l=r.without(l,e),!1):!0}),e.isDead()||(e.kill(),e===o&&s.emit("world.player.killed")))};this.update=function(e,t){r.each(c,function(n){n.isDead()||(n.update(e,t),h.handleCollides(n,1),h.checkCollides(n,2,p))})},this.render=function(e){r.each(c,function(e){e.avatar.missile.visible=e.avatar.man.visible=!1,e.isMan()?(e.avatar.man.visible=!0,e.avatar.man.position.copy(e.position()),e.avatar.man.scale.set(e.getScale(),e.getScale(),e.getScale())):(e.avatar.missile.visible=!0,e.avatar.missile.rotation.set(0,1.5*e.rotation().z,e.rotation().z,"ZYX"),e.avatar.missile.position.copy(e.position()),e.avatar.missile.scale.set(e.getScale(),e.getScale(),e.getScale()))}),o&&u.follow(o.position()),u.render()},this.clear=function(){c=[],l=[],h.clear(),u.clear()},this.addPlayer=function(e,n){c.push(e),e.avatar||(e.avatar={}),e.avatar.man=t.model.man(),e.avatar.missile=t.model.missile(),u.add(e.avatar.man),u.add(e.avatar.missile),n&&(o=e)},this.addBlocks=function(e){h.addBlocks(e),r.each(e,function(e,n){r.each(e,function(e,r){var i;1===e?i=t.model.cubeSolid():2===e?(i=t.model.cubeTarget(),l.push(i)):i=t.model.cubeEmpty(),i.position.set(r,n,0),u.add(i)})})},this.isComplete=function(){return 0===l.length}};i.inherits(o,a),t.exports=o},{"./assets":12,"./engine/line":15,"./engine/map":17,"./scene":24,events:3,underscore:11,util:7}]},{},[1]);